(function(root) {

function expose_libsodium(exports) {
    "use strict";
    var Module = exports;
    var Module;
    if (typeof Module === 'undefined') {
      Module = {};
    }
    var root = Module;
    if (typeof root['sodium'] !== 'object') {
      if (typeof global === 'object') {
        root = global;
      } else if (typeof window === 'object') {
        root = window;
      }
    }
    if (typeof root['sodium'] === 'object' && typeof root['sodium']['totalMemory'] === 'number') {
      Module['TOTAL_MEMORY'] = root['sodium']['totalMemory'];
    }
    var _Module = Module;
    Module.ready = new Promise(function(resolve, reject) {
      var Module = _Module;
      Module.onAbort = reject;
      Module.print = function(what) {
        typeof(console) !== 'undefined' && console.log(what);
      }
      Module.printErr = function(what) {
        typeof(console) !== 'undefined' && console.warn(what);
      }
      Module.onRuntimeInitialized = function() {
        try {
          /* Test arbitrary wasm function */
          Module._crypto_secretbox_keybytes();
          resolve();
        } catch (err) {
          reject(err);
        }
      };
      Module.useBackupModule = function() {
        return new Promise(function(resolve, reject) {
          var Module = {};
          Module.onAbort = reject;

          Module.onRuntimeInitialized = function() {
            Object.keys(_Module).forEach(function(k) {
              if (k !== 'getRandomValue') {
                delete _Module[k];
              }
            });
            Object.keys(Module).forEach(function(k) {
              _Module[k] = Module[k];
            });
            resolve();
          };

          var Module=typeof Module!=="undefined"?Module:{};var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}var arguments_=[];var thisProgram="./this.program";var quit_=function(status,toThrow){throw toThrow};var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;ENVIRONMENT_IS_WEB=typeof window==="object";ENVIRONMENT_IS_WORKER=typeof importScripts==="function";ENVIRONMENT_IS_NODE=typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string";ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;var scriptDirectory="";function locateFile(path){if(Module["locateFile"]){return Module["locateFile"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;var nodeFS;var nodePath;if(ENVIRONMENT_IS_NODE){if(ENVIRONMENT_IS_WORKER){scriptDirectory=require("path").dirname(scriptDirectory)+"/"}else{scriptDirectory=__dirname+"/"}read_=function shell_read(filename,binary){var ret=tryParseAsDataURI(filename);if(ret){return binary?ret:ret.toString()}if(!nodeFS)nodeFS=require("fs");if(!nodePath)nodePath=require("path");filename=nodePath["normalize"](filename);return nodeFS["readFileSync"](filename,binary?null:"utf8")};readBinary=function readBinary(filename){var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};if(process["argv"].length>1){thisProgram=process["argv"][1].replace(/\\/g,"/")}arguments_=process["argv"].slice(2);if(typeof module!=="undefined"){module["exports"]=Module}quit_=function(status){process["exit"](status)};Module["inspect"]=function(){return"[Emscripten Module object]"}}else if(ENVIRONMENT_IS_SHELL){if(typeof read!="undefined"){read_=function shell_read(f){var data=tryParseAsDataURI(f);if(data){return intArrayToString(data)}return read(f)}}readBinary=function readBinary(f){var data;data=tryParseAsDataURI(f);if(data){return data}if(typeof readbuffer==="function"){return new Uint8Array(readbuffer(f))}data=read(f,"binary");assert(typeof data==="object");return data};if(typeof scriptArgs!="undefined"){arguments_=scriptArgs}else if(typeof arguments!="undefined"){arguments_=arguments}if(typeof quit==="function"){quit_=function(status){quit(status)}}if(typeof print!=="undefined"){if(typeof console==="undefined")console={};console.log=print;console.warn=console.error=typeof printErr!=="undefined"?printErr:print}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=="undefined"&&document.currentScript){scriptDirectory=document.currentScript.src}if(scriptDirectory.indexOf("blob:")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.lastIndexOf("/")+1)}else{scriptDirectory=""}{read_=function(url){try{var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.send(null);return xhr.responseText}catch(err){var data=tryParseAsDataURI(url);if(data){return intArrayToString(data)}throw err}};if(ENVIRONMENT_IS_WORKER){readBinary=function(url){try{var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.responseType="arraybuffer";xhr.send(null);return new Uint8Array(xhr.response)}catch(err){var data=tryParseAsDataURI(url);if(data){return data}throw err}}}readAsync=function(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open("GET",url,true);xhr.responseType="arraybuffer";xhr.onload=function(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}var data=tryParseAsDataURI(url);if(data){onload(data.buffer);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=function(title){document.title=title}}else{}var out=Module["print"]||console.log.bind(console);var err=Module["printErr"]||console.warn.bind(console);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=null;if(Module["arguments"])arguments_=Module["arguments"];if(Module["thisProgram"])thisProgram=Module["thisProgram"];if(Module["quit"])quit_=Module["quit"];var wasmBinary;if(Module["wasmBinary"])wasmBinary=Module["wasmBinary"];var noExitRuntime=Module["noExitRuntime"]||true;var WebAssembly={Memory:function(opts){this.buffer=new ArrayBuffer(opts["initial"]*65536)},Module:function(binary){},Instance:function(module,info){this.exports=(
// EMSCRIPTEN_START_ASM
function instantiate(ha){function e(f){f.grow=function(b){var a=this.length;this.length=this.length+b;return a};f.set=function(c,d){this[c]=d};f.get=function(c){return this[c]};return f}var g;var h=new Uint8Array(123);for(var c=25;c>=0;--c){h[48+c]=52+c;h[65+c]=c;h[97+c]=26+c}h[43]=62;h[47]=63;function n(o,p,q){var i,j,c=0,k=p,l=q.length,m=p+(l*3>>2)-(q[l-2]=="=")-(q[l-1]=="=");for(;c<l;c+=4){i=h[q.charCodeAt(c+1)];j=h[q.charCodeAt(c+2)];o[k++]=h[q.charCodeAt(c)]<<2|i>>4;if(k<m)o[k++]=i<<4|j>>2;if(k<m)o[k++]=j<<6|h[q.charCodeAt(c+3)]}}function r(s){n(g,1024,"Li8wMTIzNDU2Nzg5QUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5egBqcwByYW5kb21ieXRlcwBiNjRfcG9zIDw9IGI2NF9sZW4AY3J5cHRvX2dlbmVyaWNoYXNoX2JsYWtlMmJfZmluYWwAJGFyZ29uMmkAJGFyZ29uMmlkAHJhbmRvbWJ5dGVzL3JhbmRvbWJ5dGVzLmMAc29kaXVtL2NvZGVjcy5jAGNyeXB0b19nZW5lcmljaGFzaC9ibGFrZTJiL3JlZi9ibGFrZTJiLXJlZi5jAGNyeXB0b19nZW5lcmljaGFzaC9ibGFrZTJiL3JlZi9nZW5lcmljaGFzaF9ibGFrZTJiLmMAeDI1NTE5Ymxha2UyYgBidWZfbGVuIDw9IFNJWkVfTUFYAG91dGxlbiA8PSBVSU5UOF9NQVgAUy0+YnVmbGVuIDw9IEJMQUtFMkJfQkxPQ0tCWVRFUwAkYXJnb24yaSR2PQAkYXJnb24yaWQkdj0ALHQ9ACxwPQAkbT0AY3VydmUyNTUxOQBlZDI1NTE5ADEuMC4xOABobWFjc2hhNTEyMjU2AGN1cnZlMjU1MTl4c2Fsc2EyMHBvbHkxMzA1AHNvZGl1bV9iaW4yYmFzZTY0AHNpcGhhc2gyNABzaGE1MTIAeHNhbHNhMjAAJGFyZ29uMmkkACRhcmdvbjJpZCQAJDckAExpYnNvZGl1bURSRw==");n(g,1600,"Av8ABGQAIAAABP//BgABAAEAAQD//wH/Af//////Af8B/wH/Af8B/wH/Af8B//////8K/yAA//8D/wH/BP8eAAABBf//////YwAACGMA6AMCAAAA//////8AAAAB/wH//////////////w==");n(g,1721,"BA==");n(g,1734,"Af8B//////8AASAABACAAAAI//8B/wH/////////Af8G/wf/CP8J//////+8ArwCAQD//wEAAQD//wAA//////////8=");n(g,1818,"FA==");n(g,1850,"//8BAAr///////////8B/wH/AAAAAAAAAf8B/wH/");n(g,1898,"Af8AAAAAAAAB/wH/AQAAAAEAAAAB//////8AAAAAAf///wAAAAD/////////////KAAK//////8BAAr/////AP//////////");n(g,2070,"Af8B////AQAK/////////////////wr//////w==");n(g,2112,"CMm882fmCWo7p8qEha5nuyv4lP5y82488TYdXzr1T6XRguatf1IOUR9sPiuMaAWba71B+6vZgx95IX4TGc3gW7Z4Wf+FctMAvW4V/w8KagApwAEAmOh5/7w8oP+Zcc7/ALfi/rQNSP8AAAAAAAAAALCgDv7TyYb/nhiPAH9pNQBgDL0Ap9f7/59MgP5qZeH/HvwEAJIMrg==");n(g,2272,"WfGy/grlpv973Sr+HhTUAFKAAwAw0fMAd3lA/zLjnP8AbsUBZxuQ");n(g,2320,"hTuMAb3xJP/4JcMBYNw3ALdMPv/DQj0AMkykAeGkTP9MPaP/dT4fAFGRQP92QQ4AonPW/waKLgB85vT/CoqPADQawgC49EwAgY8pAb70E/97qnr/YoFEAHnVkwBWZR7/oWebAIxZQ//v5b4BQwu1AMbwif7uRbz/Q5fuABMqbP/lVXEBMkSH/xFqCQAyZwH/UAGoASOYHv8QqLkBOFno/2XS/AAp+kcAzKpP/w4u7/9QTe8AvdZL/xGN+QAmUEz/vlV1AFbkqgCc2NABw8+k/5ZCTP+v4RD/jVBiAUzb8gDGonIALtqYAJsr8f6boGj/M7ulAAIRrwBCVKAB9zoeACNBNf5F7L8ALYb1AaN73QAgbhT/NBelALrWRwDpsGAA8u82ATlZigBTAFT/iKBkAFyOeP5ofL4AtbE+//opVQCYgioBYPz2AJeXP/7vhT4AIDicAC2nvf+OhbMBg1bTALuzlv76qg7/0qNOACU0lwBjTRoA7pzV/9XA0QFJLlQAFEEpATbOTwDJg5L+qm8Y/7EhMv6rJsv/Tvd0ANHdmQCFgLIBOiwZAMknOwG9E/wAMeXSAXW7dQC1s7gBAHLbADBekwD1KTgAfQ3M/vStdwAs3SD+VOoUAPmgxgHsfur/L2Oo/qrimf9ms9gA4o16/3pCmf629YYA4+QZAdY56//YrTj/tefSAHeAnf+BX4j/bn4zAAKpt/8HgmL+RbBe/3QE4wHZ8pH/yq0fAWkBJ/8ur0UA5C86/9fgRf7POEX/EP6L/xfP1P/KFH7/X9Vg/wmwIQDIBc//8SqA/iMhwP/45cQBgRF4APtnl/8HNHD/jDhC/yji9f/ZRiX+rNYJ/0hDhgGSwNb/LCZwAES4S//OWvsAleuNALWqOgB09O8AXJ0CAGatYgDpiWABfzHLAAWblAAXlAn/03oMACKGGv/bzIgAhggp/+BTK/5VGfcAbX8A/qmIMADud9v/563VAM4S/v4Iugf/fgkHAW8qSABvNOz+YD+NAJO/f/7NTsD/DmrtAbvbTACv87v+aVmtAFUZWQGi85QAAnbR/iGeCQCLoy7/XUYoAGwqjv5v/I7/m9+QADPlp/9J/Jv/XnQM/5ig2v+c7iX/s+rP/8UAs/+apI0A4cRoAAojGf7R1PL/Yf3e/rhl5QDeEn8BpIiH/x7PjP6SYfMAgcAa/slUIf9vCk7/k1Gy/wQEGACh7tf/Bo0hADXXDv8ptdD/54udALPL3f//uXEAveKs/3FC1v/KPi3/ZkAI/06uEP6FdUT/");n(g,3312,"AQ==");n(g,3344,"JuiVj8KyJ7BFw/SJ8u+Y8NXfrAXTxjM5sTgCiG1T/AXHF2pwPU3YT7o8C3YNEGcPKiBT+iw5zMZOx/13kqwDeuz///////////////////////////////////////9/7f///////////////////////////////////////3/u////////////////////////////////////////f+3T9VwaYxJY1pz3ot753hQ=");n(g,3535,"");n(g,34556,"AQAAAAZtBw==");n(g,34608,"dsFfAGVwAv9Q/KH+8mrG/4UGsgDk33AA3+5V/jPzGgA+K4v+y0EK");n(g,34656,"M03tAJGqVv82JjP/8YBl/yl5Sv/sTpsAqZdp/pwpSADCZq//zqJl/wAAAAAAAAAAGy57ARKo/f/Tr5f+w9tgADh2vv7+0fX/mWR+/uiBFf81uPL/x6Td");n(g,34784,"AQ==");n(g,34816,"4Ot6fDtBuK4WVuP68Z/EatoJjeucMrH9hmIFFl9JuABfnJW8o1CMJLHQsVWcg+9bBERcxFgcjobYIk7d0J8RV+z///////////////////////////////////////9/7f///////////////////////////////////////3/u////////////////////////////////////////fw==");n(g,34992,"7dP1XBpjEljWnPei3vneFA==");n(g,35023,"EAjJvPNn5glqO6fKhIWuZ7sr+JT+cvNuPPE2HV869U+l0YLmrX9SDlEfbD4rjGgFm2u9Qfur2YMfeSF+ExnN4FsirijXmC+KQs1l7yORRDdxLztN7M/7wLW824mBpdu16Ti1SPNbwlY5GdAFtvER8VmbTxmvpII/khiBbdrVXhyrQgIDo5iqB9i+b3BFAVuDEoyy5E6+hTEk4rT/1cN9DFVviXvydF2+crGWFjv+sd6ANRLHJacG3JuUJmnPdPGbwdJK8Z7BaZvk4yVPOIZHvu+11YyLxp3BD2WcrHfMoQwkdQIrWW8s6S2D5KZuqoR0StT7Qb3cqbBctVMRg9qI+Xar32buUlE+mBAytC1txjGoPyH7mMgnA7DkDu++x39Zv8KPqD3zC+DGJacKk0eRp9VvggPgUWPKBnBuDgpnKSkU/C/SRoUKtycmySZcOCEbLu0qxFr8bSxN37OVnRMNOFPeY6+LVHMKZaiydzy7Cmp25q7tRy7JwoE7NYIUhSxykmQD8Uyh6L+iATBCvEtmGqiRl/jQcItLwjC+VAajUWzHGFLv1hnoktEQqWVVJAaZ1iogcVeFNQ70uNG7MnCgahDI0NK4FsGkGVOrQVEIbDcemeuO30x3SCeoSJvhtbywNGNaycWzDBw5y4pB40qq2E5z42N3T8qcW6O4stbzby5o/LLvXe6Cj3RgLxdDb2OleHKr8KEUeMiE7DlkGggCx4woHmMj+v++kOm9gt7rbFCkFXnGsvej+b4rU3Lj8nhxxpxhJurOPifKB8LAIce4htEe6+DN1n3a6njRbu5/T331um8Xcqpn8AammMiixX1jCq4N+b4EmD8RG0ccEzULcRuEfQQj9XfbKJMkx0B7q8oyvL7JFQq+njxMDRCcxGcdQ7ZCPsu+1MVMKn5l/Jwpf1ns+tY6q2/LXxdYR0qMGURsgA==");n(g,35872,"U2lnRWQyNTUxOSBubyBFZDI1NTE5IGNvbGxpc2lvbnMB");n(g,35952,"Z+YJaoWuZ7ty8248OvVPpX9SDlGMaAWbq9mDHxnN4FuYL4pCkUQ3cc/7wLWl27XpW8JWOfER8Vmkgj+S1V4cq5iqB9gBW4MSvoUxJMN9DFV0Xb5y/rHegKcG3Jt08ZvBwWmb5IZHvu/GncEPzKEMJG8s6S2qhHRK3KmwXNqI+XZSUT6YbcYxqMgnA7DHf1m/8wvgxkeRp9VRY8oGZykpFIUKtyc4IRsu/G0sTRMNOFNUcwpluwpqdi7JwoGFLHKSoei/oktmGqhwi0vCo1FsxxnoktEkBpnWhTUO9HCgahAWwaQZCGw3Hkx3SCe1vLA0swwcOUqq2E5Pypxb828uaO6Cj3RvY6V4FHjIhAgCx4z6/76Q62xQpPej+b7yeHHGgA==");n(g,36320,"cJNQAAAAAQABAAAAAgAAAAMAAAAEAAAABQAAAAYAAAAHAAAACAAAAAkAAAAKAAAACwAAAAwAAAAN")}function fa(ga){var t=ga.a;var u=t.buffer;t.grow=da;var v=new Int8Array(u);var w=new Int16Array(u);var x=new Int32Array(u);var y=new Uint8Array(u);var z=new Uint16Array(u);var A=new Uint32Array(u);var B=new Float32Array(u);var C=new Float64Array(u);var D=Math.imul;var E=Math.fround;var F=Math.abs;var G=Math.clz32;var H=Math.min;var I=Math.max;var J=Math.floor;var K=Math.ceil;var L=Math.trunc;var M=Math.sqrt;var N=ga.abort;var O=NaN;var P=Infinity;var Q=ga.b;var R=ga.c;var S=ga.d;var T=ga.e;var U=ga.f;var V=5280624;var W=0;var X=0;var Y=0;
// EMSCRIPTEN_START_FUNCS
function Wc(a,b){var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,w=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,W=0,X=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0;P=V-256|0;V=P;while(1){M=S<<3;O=M+(P+128|0)|0;M=b+M|0;aa=y[M+4|0]|y[M+5|0]<<8|(y[M+6|0]<<16|y[M+7|0]<<24);x[O>>2]=y[M|0]|y[M+1|0]<<8|(y[M+2|0]<<16|y[M+3|0]<<24);x[O+4>>2]=aa;S=S+1|0;if((S|0)!=16){continue}break}B=za(P,a,64);b=B;M=x[b>>2];S=x[b+4>>2];c=M;aa=x[b+32>>2];P=x[b+128>>2];M=aa+P|0;W=x[b+36>>2];b=W+x[b+132>>2]|0;b=M>>>0<P>>>0?b+1|0:b;P=M;M=c+M|0;b=b+S|0;b=M>>>0<P>>>0?b+1|0:b;S=M;M=a- -64|0;P=b;K=ia(S^(y[M|0]|y[M+1|0]<<8|(y[M+2|0]<<16|y[M+3|0]<<24))^-1377402159,b^(y[M+4|0]|y[M+5|0]<<8|(y[M+6|0]<<16|y[M+7|0]<<24))^1359893119,32);b=Y;M=b;b=b+1779033703|0;O=K-205731576|0;b=O>>>0<4089235720?b+1|0:b;c=aa^O;aa=b;w=ia(c,W^b,24);b=Y;z=b;R=M;pa=x[B+140>>2];g=pa;c=K;b=b+P|0;K=w+S|0;b=K>>>0<S>>>0?b+1|0:b;M=x[B+136>>2];S=M+K|0;b=b+g|0;e=S;q=K>>>0>e>>>0?b+1|0:b;c=ia(c^e,q^R,16);S=O+c|0;G=Y;b=aa+G|0;o=S;P=O>>>0>o>>>0?b+1|0:b;g=ia(o^w,P^z,63);h=Y;O=x[B+12>>2];w=x[B+144>>2];aa=x[B+40>>2];W=aa;S=w+W|0;Q=x[B+148>>2];R=x[B+44>>2];b=Q+R|0;b=S>>>0<W>>>0?b+1|0:b;W=S;S=S+x[B+8>>2]|0;b=b+O|0;b=S>>>0<W>>>0?b+1|0:b;K=ia(S^(y[a+72|0]|y[a+73|0]<<8|(y[a+74|0]<<16|y[a+75|0]<<24))^725511199,(y[a+76|0]|y[a+77|0]<<8|(y[a+78|0]<<16|y[a+79|0]<<24))^b^-1694144372,32);O=K-2067093701|0;d=O^aa;aa=Y;z=aa-((K>>>0<2067093701)+1150833018|0)|0;R=ia(d,R^z,24);i=x[B+156>>2];d=R;W=Y;b=b+W|0;R=R+S|0;b=R>>>0<S>>>0?b+1|0:b;S=R+x[B+152>>2]|0;b=b+i|0;n=S;r=R>>>0>n>>>0?b+1|0:b;ja=ia(n^K,r^aa,16);S=O+ja|0;t=Y;b=z+t|0;ma=S;O=O>>>0>S>>>0?b+1|0:b;K=ia(d^S,O^W,63);z=Y;aa=x[B+20>>2];C=x[B+160>>2];R=x[B+48>>2];S=C+R|0;da=x[B+164>>2];j=x[B+52>>2];b=da+j|0;b=S>>>0<R>>>0?b+1|0:b;W=S;S=S+x[B+16>>2]|0;b=b+aa|0;ga=S;S=S>>>0<W>>>0?b+1|0:b;k=ia(ga^(y[a+80|0]|y[a+81|0]<<8|(y[a+82|0]<<16|y[a+83|0]<<24))^-79577749,S^(y[a+84|0]|y[a+85|0]<<8|(y[a+86|0]<<16|y[a+87|0]<<24))^528734635,32);b=Y;aa=b;b=b+1013904242|0;W=k-23791573|0;b=W>>>0<4271175723?b+1|0:b;d=R^W;R=b;b=ia(d,j^b,24);i=aa;qa=x[B+172>>2];J=qa;d=b;f=k;k=b;ga=b+ga|0;j=Y;b=j+S|0;b=k>>>0>ga>>>0?b+1|0:b;aa=x[B+168>>2];k=ga;S=aa+k|0;b=b+J|0;p=S;J=k>>>0>p>>>0?b+1|0:b;X=ia(f^p,J^i,16);S=W+X|0;F=Y;b=R+F|0;s=S;R=s>>>0<W>>>0?b+1|0:b;j=ia(d^s,R^j,63);i=Y;k=x[B+28>>2];S=x[B+176>>2];ga=x[B+56>>2];m=ga;W=S+m|0;na=x[B+180>>2];l=x[B+60>>2];b=na+l|0;b=m>>>0>W>>>0?b+1|0:b;m=W;W=m+x[B+24>>2]|0;b=b+k|0;A=W;b=m>>>0>A>>>0?b+1|0:b;D=ia(A^(y[a+88|0]|y[a+89|0]<<8|(y[a+90|0]<<16|y[a+91|0]<<24))^327033209,b^(y[a+92|0]|y[a+93|0]<<8|(y[a+94|0]<<16|y[a+95|0]<<24))^1541459225,32);k=D;d=k+1595750129|0;f=d^ga;W=Y;ga=W-((k>>>0<2699217167)+1521486533|0)|0;k=ia(f,l^ga,24);l=ga;u=W;ga=x[B+188>>2];E=ga;f=k;H=d;m=Y;b=m+b|0;A=k+A|0;b=A>>>0<k>>>0?b+1|0:b;W=x[B+184>>2];k=W+A|0;b=b+E|0;T=k;d=u;u=k>>>0<A>>>0?b+1|0:b;d=ia(k^D,d^u,16);k=H+d|0;b=l;l=Y;b=b+l|0;b=k>>>0<d>>>0?b+1|0:b;A=k;D=m;m=b;f=ia(f^k,D^b,63);k=Y;D=z;N=x[B+196>>2];E=N;H=K;L=s;b=z+q|0;e=e+K|0;b=e>>>0<K>>>0?b+1|0:b;Z=x[B+192>>2];z=e;K=Z+e|0;b=b+E|0;e=K;K=z>>>0>e>>>0?b+1|0:b;s=ia(e^d,K^l,32);q=s;z=L+q|0;b=R;R=Y;b=b+R|0;b=z>>>0<q>>>0?b+1|0:b;q=b;b=ia(H^z,b^D,24);la=x[B+204>>2];E=la;H=b;d=s;l=e;e=b;s=l+b|0;l=Y;b=l+K|0;b=e>>>0>s>>>0?b+1|0:b;D=x[B+200>>2];e=s;K=D+e|0;b=b+E|0;ba=K;e=e>>>0>K>>>0?b+1|0:b;ka=ia(d^K,e^R,16);R=z+ka|0;s=Y;b=q+s|0;d=R;q=l;l=z>>>0>d>>>0?b+1|0:b;E=ia(H^d,q^l,63);q=Y;R=i;ha=x[B+212>>2];H=ha;L=j;I=c;b=i+r|0;z=j+n|0;b=z>>>0<j>>>0?b+1|0:b;K=x[B+208>>2];j=z;z=K+j|0;b=b+H|0;c=z;j=j>>>0>c>>>0?b+1|0:b;n=ia(I^c,j^G,32);i=A+n|0;z=Y;b=m+z|0;b=i>>>0<A>>>0?b+1|0:b;R=ia(L^i,b^R,24);G=b;r=z;U=x[B+220>>2];H=U;L=R;I=i;i=Y;b=i+j|0;m=c+R|0;b=m>>>0<R>>>0?b+1|0:b;z=x[B+216>>2];j=m;R=z+j|0;b=b+H|0;m=R;A=j>>>0>m>>>0?b+1|0:b;r=ia(m^n,A^r,16);j=r;R=I+j|0;c=Y;b=c+G|0;fa=R;j=j>>>0>R>>>0?b+1|0:b;H=ia(L^R,j^i,63);i=Y;G=k;ra=x[B+228>>2];n=ra;L=f;b=k+J|0;f=f+p|0;b=f>>>0<p>>>0?b+1|0:b;R=x[B+224>>2];k=R+f|0;b=b+n|0;J=k;k=k>>>0<f>>>0?b+1|0:b;f=ia(J^ja,k^t,32);p=o+f|0;t=Y;b=t+P|0;b=p>>>0<f>>>0?b+1|0:b;o=p;P=ia(L^p,b^G,24);p=b;L=x[B+236>>2];n=P;G=Y;b=G+k|0;J=J+P|0;b=J>>>0<P>>>0?b+1|0:b;$=x[B+232>>2];k=J;P=$+k|0;b=b+L|0;J=P;P=t;t=k>>>0>J>>>0?b+1|0:b;ea=ia(J^f,P^t,16);k=ea;P=k+o|0;b=p;p=Y;b=b+p|0;f=P;o=k>>>0>f>>>0?b+1|0:b;k=ia(n^f,o^G,63);G=Y;n=h;ja=x[B+244>>2];I=ja;_=g;ca=ma;b=h+u|0;ma=g+T|0;b=ma>>>0<g>>>0?b+1|0:b;P=x[B+240>>2];h=ma;g=P+h|0;b=b+I|0;b=g>>>0<h>>>0?b+1|0:b;h=b;X=ia(g^X,b^F,32);u=X;F=ca+u|0;b=O;O=Y;b=b+O|0;T=F;b=u>>>0>F>>>0?b+1|0:b;n=ia(_^F,b^n,24);ca=Y;_=ca;F=b;u=O;ma=x[B+252>>2];oa=n;b=h+ca|0;n=g+n|0;b=n>>>0<g>>>0?b+1|0:b;O=x[B+248>>2];h=n;g=O+h|0;b=b+ma|0;n=g;I=u;u=g>>>0<h>>>0?b+1|0:b;I=ia(g^X,I^u,16);h=I;g=h+T|0;b=F;F=Y;b=b+F|0;ca=g;g=g>>>0<h>>>0?b+1|0:b;X=ia(oa^ca,g^_,63);b=Y;_=b;h=b;oa=r;r=P;T=r+ba|0;b=e+ja|0;b=r>>>0>T>>>0?b+1|0:b;e=T;r=e+X|0;b=b+h|0;h=r;r=e>>>0>h>>>0?b+1|0:b;T=ia(oa^h,r^c,32);c=f+T|0;e=Y;b=o+e|0;b=c>>>0<f>>>0?b+1|0:b;f=b;X=ia(X^c,_^b,24);ba=X;b=Y;_=b;o=b;sa=X;b=r+ha|0;X=h+K|0;b=X>>>0<h>>>0?b+1|0:b;r=X;h=ba+r|0;b=b+o|0;ba=h;o=e;e=h>>>0<r>>>0?b+1|0:b;oa=ia(h^T,o^e,16);h=c+oa|0;o=Y;b=f+o|0;b=h>>>0<c>>>0?b+1|0:b;c=h;f=b;X=ia(sa^c,b^_,63);r=Y;T=E;h=q;b=da+h|0;E=C+E|0;b=E>>>0<C>>>0?b+1|0:b;q=m+E|0;b=b+A|0;b=q>>>0<m>>>0?b+1|0:b;C=b;A=ia(q^ea,b^p,32);m=A;p=m+ca|0;b=g;g=Y;b=b+g|0;b=p>>>0<m>>>0?b+1|0:b;m=h;h=b;E=ia(T^p,m^b,24);b=Y;da=b;m=b;T=A;b=C+N|0;A=q+Z|0;b=A>>>0<q>>>0?b+1|0:b;C=A;q=C+E|0;b=b+m|0;b=q>>>0<C>>>0?b+1|0:b;C=q;m=b;ea=ia(T^q,b^g,16);g=p+ea|0;A=Y;b=h+A|0;ca=g;h=g>>>0<p>>>0?b+1|0:b;E=ia(g^E,h^da,63);g=Y;q=i;b=i+la|0;p=D+H|0;b=p>>>0<D>>>0?b+1|0:b;i=p+J|0;b=b+t|0;D=i;i=i>>>0<J>>>0?b+1|0:b;F=ia(D^I,i^F,32);p=d+F|0;t=Y;b=l+t|0;b=d>>>0>p>>>0?b+1|0:b;d=q;q=b;l=ia(p^H,d^b,24);d=l;b=Y;H=b;J=b;T=F;F=O;l=F+D|0;b=i+ma|0;b=l>>>0<F>>>0?b+1|0:b;i=d+l|0;b=b+J|0;I=i;F=t;t=i>>>0<l>>>0?b+1|0:b;_=ia(T^i,F^t,16);i=p+_|0;J=Y;b=q+J|0;D=i;i=i>>>0<p>>>0?b+1|0:b;H=ia(D^d,i^H,63);q=Y;d=k;p=G;b=p+L|0;F=k+$|0;b=F>>>0<k>>>0?b+1|0:b;k=n+F|0;b=b+u|0;F=k;k=k>>>0<n>>>0?b+1|0:b;l=ia(F^ka,k^s,32);G=l+fa|0;b=j;j=Y;b=b+j|0;b=G>>>0<l>>>0?b+1|0:b;u=G;s=ia(d^u,b^p,24);d=s;G=Y;n=G;p=b;T=u;u=l;b=F;F=S;l=b+F|0;b=k+na|0;b=l>>>0<F>>>0?b+1|0:b;k=l+d|0;b=b+G|0;b=k>>>0<l>>>0?b+1|0:b;F=k;l=b;u=ia(u^k,b^j,16);k=u;j=T+k|0;G=Y;b=G+p|0;d=j;k=d>>>0<k>>>0?b+1|0:b;T=ia(s^d,k^n,63);j=Y;p=g;s=D;n=u;u=M;D=u+ba|0;b=e+pa|0;b=u>>>0>D>>>0?b+1|0:b;u=D+E|0;b=b+g|0;g=u;e=G;G=g>>>0<D>>>0?b+1|0:b;D=ia(n^g,e^G,32);e=D;u=s+e|0;b=i;i=Y;b=b+i|0;b=e>>>0>u>>>0?b+1|0:b;e=u;s=ia(e^E,b^p,24);n=s;p=Y;E=p;u=b;ba=D;b=G+ra|0;D=g+R|0;b=D>>>0<g>>>0?b+1|0:b;G=D;g=G+s|0;b=b+p|0;p=g;D=g>>>0<G>>>0?b+1|0:b;ka=ia(ba^g,D^i,16);i=ka;g=i+e|0;b=u;u=Y;b=b+u|0;e=g;s=g>>>0<i>>>0?b+1|0:b;da=ia(g^n,s^E,63);i=Y;fa=x[B+132>>2];n=fa;E=d;g=q;b=m+g|0;G=C+H|0;b=G>>>0<C>>>0?b+1|0:b;d=x[B+128>>2];q=d+G|0;b=b+n|0;b=q>>>0<G>>>0?b+1|0:b;G=b;m=ia(q^oa,b^o,32);C=E+m|0;b=k;k=Y;b=b+k|0;b=C>>>0<m>>>0?b+1|0:b;o=C;n=ia(C^H,b^g,24);E=n;g=Y;H=g;C=b;ba=m;b=G+Q|0;m=w+q|0;b=m>>>0<q>>>0?b+1|0:b;G=m;q=m+n|0;b=b+g|0;m=q;g=k;k=m>>>0<G>>>0?b+1|0:b;g=ia(ba^m,g^k,16);q=g+o|0;b=C;C=Y;b=b+C|0;o=q;n=q>>>0<g>>>0?b+1|0:b;la=ia(q^E,n^H,63);q=Y;G=j;b=t+U|0;H=z+I|0;b=H>>>0<z>>>0?b+1|0:b;E=H;t=E+T|0;b=b+j|0;b=t>>>0<E>>>0?b+1|0:b;E=t;j=b;H=ia(t^ea,b^A,32);A=c+H|0;t=Y;b=f+t|0;b=c>>>0>A>>>0?b+1|0:b;c=A;f=ia(c^T,b^G,24);T=f;G=Y;ba=G;A=b;I=c;c=W;f=c+E|0;b=j+ga|0;b=c>>>0>f>>>0?b+1|0:b;c=f;j=T+c|0;b=b+G|0;b=c>>>0>j>>>0?b+1|0:b;c=j;f=t;t=b;ea=ia(c^H,f^b,16);f=ea;G=I+f|0;j=Y;b=j+A|0;A=G;b=f>>>0>A>>>0?b+1|0:b;T=ia(A^T,b^ba,63);G=Y;E=b;H=g;I=X;g=aa;X=g+X|0;f=r;b=qa+f|0;b=g>>>0>X>>>0?b+1|0:b;g=F+X|0;b=b+l|0;r=g;l=J;J=g>>>0<F>>>0?b+1|0:b;l=ia(g^_,l^J,32);F=l+ca|0;g=Y;b=g+h|0;ba=F;b=F>>>0<l>>>0?b+1|0:b;f=ia(I^F,b^f,24);ca=Y;_=ca;h=b;F=g;X=x[B+156>>2];ca=f;I=l;b=J+_|0;l=f+r|0;b=l>>>0<r>>>0?b+1|0:b;g=x[B+152>>2];r=g+l|0;b=b+X|0;b=r>>>0<l>>>0?b+1|0:b;J=r;f=F;F=b;I=ia(I^r,f^b,16);l=I;r=l+ba|0;b=h;h=Y;b=b+h|0;b=l>>>0>r>>>0?b+1|0:b;l=r;f=b;ba=ia(ca^l,b^_,63);b=Y;ca=b;r=b;_=A;b=D+U|0;A=p+z|0;b=A>>>0<p>>>0?b+1|0:b;p=A+ba|0;b=b+r|0;r=p;D=C;C=p>>>0<A>>>0?b+1|0:b;H=ia(p^H,D^C,32);D=H;A=_+D|0;p=Y;b=p+E|0;b=A>>>0<D>>>0?b+1|0:b;D=b;ba=ia(ba^A,ca^b,24);ca=ba;b=Y;_=b;E=b;oa=H;b=C+N|0;H=r+Z|0;b=H>>>0<r>>>0?b+1|0:b;C=H;r=C+ba|0;b=b+E|0;b=r>>>0<C>>>0?b+1|0:b;C=r;E=p;p=b;ba=ia(oa^r,E^b,16);r=A+ba|0;E=Y;b=D+E|0;b=r>>>0<A>>>0?b+1|0:b;A=r;D=b;Z=ia(r^ca,b^_,63);r=Y;H=i;_=da;b=i+ra|0;da=R+da|0;i=m+da|0;b=k+(R>>>0>da>>>0?b+1|0:b)|0;N=i;k=j;j=i>>>0<m>>>0?b+1|0:b;da=ia(i^ea,k^j,32);k=l+da|0;i=Y;b=f+i|0;b=k>>>0<l>>>0?b+1|0:b;m=b;f=ia(_^k,b^H,24);H=f;b=Y;ea=b;l=b;b=j+fa|0;f=d+N|0;b=f>>>0<d>>>0?b+1|0:b;d=f;j=H+d|0;b=b+l|0;N=j;l=j>>>0<d>>>0?b+1|0:b;da=ia(j^da,l^i,16);j=k+da|0;d=Y;b=m+d|0;fa=j;k=j>>>0<k>>>0?b+1|0:b;f=ia(j^H,k^ea,63);j=Y;i=q;b=qa+i|0;m=aa;H=m+la|0;q=c+H|0;b=t+(m>>>0>H>>>0?b+1|0:b)|0;b=c>>>0>q>>>0?b+1|0:b;c=q;m=h;h=b;H=ia(c^I,m^b,32);t=e+H|0;q=Y;b=s+q|0;b=e>>>0>t>>>0?b+1|0:b;e=i;i=b;e=ia(t^la,e^b,24);b=Y;la=b;m=b;_=e;e=w;s=e+c|0;b=h+Q|0;b=e>>>0>s>>>0?b+1|0:b;e=s;h=_+e|0;b=b+m|0;ea=h;m=h>>>0<e>>>0?b+1|0:b;I=ia(h^H,m^q,16);h=t+I|0;e=Y;b=i+e|0;H=h;q=h>>>0<t>>>0?b+1|0:b;s=ia(_^h,q^la,63);h=Y;i=G;b=ma+i|0;t=O;c=t+T|0;G=J+c|0;b=F+(c>>>0<t>>>0?b+1|0:b)|0;b=G>>>0<J>>>0?b+1|0:b;t=b;c=ia(G^ka,b^u,32);F=o+c|0;J=Y;b=n+J|0;b=o>>>0>F>>>0?b+1|0:b;u=i;i=b;o=ia(F^T,u^b,24);n=o;b=Y;T=b;u=b;_=c;b=t+L|0;c=G+$|0;b=c>>>0<G>>>0?b+1|0:b;G=c+n|0;b=b+u|0;u=G;n=J;J=c>>>0>u>>>0?b+1|0:b;c=ia(_^u,n^J,16);G=F+c|0;t=Y;b=i+t|0;n=G;G=n>>>0<F>>>0?b+1|0:b;o=ia(o^n,G^T,63);i=Y;F=j;T=f;_=c;b=p+ha|0;c=C+K|0;b=c>>>0<C>>>0?b+1|0:b;p=c;C=c+f|0;b=b+j|0;c=C;j=p>>>0>c>>>0?b+1|0:b;f=ia(_^c,j^t,32);t=f+H|0;b=q;q=Y;b=b+q|0;b=t>>>0<f>>>0?b+1|0:b;C=b;F=ia(T^t,b^F,24);H=F;b=Y;T=b;p=b;F=P;c=F+c|0;b=j+ja|0;b=c>>>0<F>>>0?b+1|0:b;j=H+c|0;b=b+p|0;la=j;p=j>>>0<c>>>0?b+1|0:b;ka=ia(j^f,p^q,16);j=t+ka|0;F=Y;b=C+F|0;ca=j;j=j>>>0<t>>>0?b+1|0:b;H=ia(ca^H,j^T,63);q=Y;t=h;f=s;b=l+X|0;s=g+N|0;b=s>>>0<g>>>0?b+1|0:b;l=s;C=f+l|0;b=b+h|0;b=l>>>0>C>>>0?b+1|0:b;l=C;h=b;s=ia(l^ba,b^E,32);c=s;C=c+n|0;b=G;G=Y;b=b+G|0;b=c>>>0>C>>>0?b+1|0:b;c=C;f=ia(f^c,b^t,24);n=f;t=Y;C=b;E=c;c=s;b=l;l=S;s=b+l|0;b=h+na|0;b=l>>>0>s>>>0?b+1|0:b;l=s;h=l+f|0;b=b+t|0;b=h>>>0<l>>>0?b+1|0:b;l=h;s=b;c=ia(c^h,b^G,16);h=E+c|0;f=Y;b=f+C|0;ba=h;h=h>>>0<c>>>0?b+1|0:b;G=ia(ba^n,h^t,63);t=Y;C=i;E=o;o=W;n=o+ea|0;b=m+ga|0;b=n>>>0<o>>>0?b+1|0:b;m=E+n|0;b=b+i|0;b=m>>>0<n>>>0?b+1|0:b;o=m;i=b;n=ia(m^da,b^d,32);d=A+n|0;m=Y;b=D+m|0;D=d;b=d>>>0<A>>>0?b+1|0:b;d=ia(E^d,b^C,24);E=d;C=Y;N=C;A=b;T=D;D=M;d=D+o|0;b=i+pa|0;b=d>>>0<D>>>0?b+1|0:b;i=E+d|0;b=b+C|0;b=i>>>0<d>>>0?b+1|0:b;D=i;d=m;m=b;ea=ia(i^n,d^b,16);C=ea;i=T+C|0;b=A;A=Y;b=b+A|0;b=i>>>0<C>>>0?b+1|0:b;E=ia(i^E,b^N,63);C=Y;N=x[B+204>>2];o=i;n=b;d=r;b=J+d|0;i=u+Z|0;b=i>>>0<u>>>0?b+1|0:b;T=x[B+200>>2];r=i;i=T+i|0;b=b+N|0;b=i>>>0<r>>>0?b+1|0:b;r=b;u=ia(i^I,b^e,32);e=u;J=e+fa|0;b=k;k=Y;b=b+k|0;b=e>>>0>J>>>0?b+1|0:b;e=J;d=ia(e^Z,b^d,24);fa=Y;I=fa;J=b;Z=x[B+164>>2];_=e;fa=u;b=r+I|0;u=i+d|0;b=u>>>0<i>>>0?b+1|0:b;da=x[B+160>>2];r=u;i=da+r|0;b=b+Z|0;u=i;e=i>>>0<r>>>0?b+1|0:b;fa=ia(fa^i,e^k,16);k=fa;i=_+k|0;b=J;J=Y;b=b+J|0;_=i;i=i>>>0<k>>>0?b+1|0:b;d=ia(d^_,i^I,63);b=Y;I=b;k=b;oa=c;r=W;c=r+la|0;b=p+ga|0;b=c>>>0<r>>>0?b+1|0:b;r=c+d|0;b=b+k|0;k=r;r=c>>>0>k>>>0?b+1|0:b;f=ia(oa^k,r^f,32);c=o+f|0;p=Y;b=p+n|0;b=c>>>0<f>>>0?b+1|0:b;o=c;n=ia(d^c,b^I,24);d=Y;I=d;c=b;la=o;oa=f;b=r+N|0;f=k+T|0;b=f>>>0<k>>>0?b+1|0:b;k=f+n|0;b=b+d|0;o=k;d=p;p=k>>>0<f>>>0?b+1|0:b;oa=ia(oa^k,d^p,16);r=oa;k=la+r|0;d=Y;b=d+c|0;sa=k;k=k>>>0<r>>>0?b+1|0:b;la=ia(sa^n,k^I,63);r=Y;c=q;b=X+c|0;f=g+H|0;b=f>>>0<g>>>0?b+1|0:b;g=f+l|0;b=b+s|0;s=g;g=g>>>0<l>>>0?b+1|0:b;f=ia(s^ea,g^A,32);q=f+_|0;b=i;i=Y;b=b+i|0;b=f>>>0>q>>>0?b+1|0:b;l=b;c=ia(q^H,b^c,24);n=c;b=Y;H=b;A=b;b=s;s=M;c=b+s|0;b=g+pa|0;b=c>>>0<s>>>0?b+1|0:b;g=n+c|0;b=b+A|0;X=g;A=g>>>0<c>>>0?b+1|0:b;ea=ia(g^f,A^i,16);g=q+ea|0;s=Y;b=l+s|0;I=g;i=g>>>0<q>>>0?b+1|0:b;c=ia(g^n,i^H,63);g=Y;f=G;q=t;b=q+L|0;l=G+$|0;b=l>>>0<G>>>0?b+1|0:b;G=l+D|0;b=b+m|0;b=G>>>0<D>>>0?b+1|0:b;t=b;m=ia(G^fa,b^J,32);l=m;J=l+ca|0;b=j;j=Y;b=b+j|0;b=l>>>0>J>>>0?b+1|0:b;l=J;D=ia(f^l,b^q,24);f=D;q=Y;n=q;J=b;H=l;L=m;b=t+ra|0;m=G+R|0;b=m>>>0<G>>>0?b+1|0:b;t=m;G=m+f|0;b=b+q|0;m=G;l=t>>>0>m>>>0?b+1|0:b;fa=ia(L^m,l^j,16);q=fa;j=H+q|0;b=J;J=Y;b=b+J|0;f=j;q=f>>>0<q>>>0?b+1|0:b;n=ia(D^f,q^n,63);j=Y;G=C;b=C+U|0;D=z+E|0;b=D>>>0<z>>>0?b+1|0:b;t=u+D|0;b=b+e|0;b=t>>>0<u>>>0?b+1|0:b;u=t;t=b;D=ia(u^ka,b^F,32);F=D;C=F+ba|0;b=h;h=Y;b=b+h|0;b=C>>>0<F>>>0?b+1|0:b;e=G;G=b;e=ia(C^E,e^b,24);E=e;b=Y;H=b;F=b;L=D;b=u;u=P;D=b+u|0;b=t+ja|0;b=u>>>0>D>>>0?b+1|0:b;u=D;t=u+e|0;b=b+F|0;F=t;u=t>>>0<u>>>0?b+1|0:b;e=ia(L^t,u^h,16);h=C+e|0;t=Y;b=G+t|0;b=h>>>0<C>>>0?b+1|0:b;C=h;D=b;E=ia(h^E,b^H,63);h=Y;G=g;H=c;L=e;e=w;c=e+o|0;b=p+Q|0;b=c>>>0<e>>>0?b+1|0:b;p=H+c|0;b=b+g|0;b=c>>>0>p>>>0?b+1|0:b;g=b;e=ia(L^p,b^t,32);c=e;t=c+f|0;b=q;q=Y;b=b+q|0;b=c>>>0>t>>>0?b+1|0:b;c=t;f=ia(H^c,b^G,24);o=f;G=Y;t=b;H=e;b=p;p=S;e=b+p|0;b=g+na|0;b=e>>>0<p>>>0?b+1|0:b;g=e+f|0;b=b+G|0;b=g>>>0<e>>>0?b+1|0:b;p=g;e=b;ka=ia(H^g,b^q,16);q=ka;g=q+c|0;c=Y;b=c+t|0;f=g;t=g^o;o=g>>>0<q>>>0?b+1|0:b;L=ia(t,o^G,63);G=Y;g=j;q=aa;t=q+X|0;b=A+qa|0;b=q>>>0>t>>>0?b+1|0:b;q=t+n|0;b=b+g|0;A=q;j=q>>>0<t>>>0?b+1|0:b;d=ia(q^oa,j^d,32);t=C+d|0;q=Y;b=D+q|0;b=t>>>0<C>>>0?b+1|0:b;C=t;D=ia(t^n,b^g,24);n=D;g=Y;H=g;t=b;X=C;C=K;A=C+A|0;b=j+ha|0;b=C>>>0>A>>>0?b+1|0:b;C=A;j=A+n|0;b=b+g|0;A=j;D=j>>>0<C>>>0?b+1|0:b;j=ia(j^d,D^q,16);g=X+j|0;C=Y;b=C+t|0;ca=g;q=g>>>0<j>>>0?b+1|0:b;$=ia(g^n,q^H,63);t=Y;g=h;H=E;b=l+Z|0;d=m+da|0;b=d>>>0<m>>>0?b+1|0:b;m=d+E|0;b=b+g|0;h=m;m=d>>>0>h>>>0?b+1|0:b;n=ia(h^ea,m^s,32);s=n;l=s+sa|0;b=k;k=Y;b=b+k|0;E=l;b=l>>>0<s>>>0?b+1|0:b;d=ia(H^l,b^g,24);g=Y;l=g;s=b;X=x[B+132>>2];H=d;b=m+g|0;d=h+d|0;b=d>>>0<h>>>0?b+1|0:b;g=x[B+128>>2];h=g+d|0;b=b+X|0;b=h>>>0<d>>>0?b+1|0:b;m=h;d=b;ea=ia(h^n,b^k,16);k=ea;h=k+E|0;b=s;s=Y;b=b+s|0;b=h>>>0<k>>>0?b+1|0:b;ba=ia(H^h,b^l,63);k=Y;n=h;E=b;H=j;j=O;h=j+la|0;l=r;b=ma+l|0;b=h>>>0<j>>>0?b+1|0:b;j=h+F|0;b=b+u|0;h=j;r=h>>>0<F>>>0?b+1|0:b;F=ia(h^fa,r^J,32);u=F;J=u+I|0;j=Y;b=j+i|0;b=u>>>0>J>>>0?b+1|0:b;u=J;l=ia(u^la,b^l,24);I=Y;_=I;i=b;J=j;la=x[B+196>>2];fa=F;b=r+I|0;F=h+l|0;b=F>>>0<h>>>0?b+1|0:b;j=x[B+192>>2];r=F;h=j+r|0;b=b+la|0;F=h;I=J;J=h>>>0<r>>>0?b+1|0:b;fa=ia(fa^h,I^J,16);r=fa;h=r+u|0;b=i;i=Y;b=b+i|0;I=h;h=h>>>0<r>>>0?b+1|0:b;l=ia(l^I,h^_,63);b=Y;_=b;r=b;b=e+N|0;u=p+T|0;b=u>>>0<p>>>0?b+1|0:b;p=u+l|0;b=b+r|0;b=p>>>0<u>>>0?b+1|0:b;u=p;r=b;e=ia(p^H,b^C,32);p=n+e|0;C=Y;b=C+E|0;b=p>>>0<e>>>0?b+1|0:b;n=p;E=ia(l^p,b^_,24);p=Y;N=p;l=b;H=e;b=r+X|0;e=g+u|0;b=e>>>0<g>>>0?b+1|0:b;r=e+E|0;b=b+p|0;T=r;p=r>>>0<e>>>0?b+1|0:b;_=ia(H^r,p^C,16);C=_;r=C+n|0;b=l;l=Y;b=b+l|0;u=r;e=r>>>0<C>>>0?b+1|0:b;N=ia(r^E,e^N,63);C=Y;r=G;b=qa+r|0;n=aa;E=n+L|0;G=A+E|0;b=D+(n>>>0>E>>>0?b+1|0:b)|0;b=G>>>0<A>>>0?b+1|0:b;A=b;n=ia(G^ea,b^s,32);s=n;D=s+I|0;b=h;h=Y;b=b+h|0;b=s>>>0>D>>>0?b+1|0:b;s=r;r=b;E=ia(D^L,s^b,24);b=Y;L=b;s=b;H=n;b=A+ga|0;n=G+W|0;b=n>>>0<G>>>0?b+1|0:b;A=n;G=A+E|0;b=b+s|0;b=G>>>0<A>>>0?b+1|0:b;A=G;s=b;ea=ia(H^A,b^h,16);h=D+ea|0;n=Y;b=r+n|0;I=h;G=h>>>0<D>>>0?b+1|0:b;E=ia(h^E,G^L,63);h=Y;r=t;b=t+Q|0;H=w+$|0;t=m+H|0;b=d+(w>>>0>H>>>0?b+1|0:b)|0;b=m>>>0>t>>>0?b+1|0:b;d=i;i=b;H=ia(t^fa,d^b,32);D=f+H|0;m=Y;b=o+m|0;b=f>>>0>D>>>0?b+1|0:b;d=r;r=b;f=ia(D^$,d^b,24);o=f;b=Y;d=b;b=i+Z|0;f=t+da|0;b=f>>>0<t>>>0?b+1|0:b;i=o+f|0;b=b+d|0;Z=i;t=i>>>0<f>>>0?b+1|0:b;da=ia(i^H,t^m,16);i=D+da|0;m=Y;b=r+m|0;$=i;r=i>>>0<D>>>0?b+1|0:b;f=ia(i^o,r^d,63);i=Y;D=k;b=k+ha|0;d=K;o=d+ba|0;k=F+o|0;b=J+(d>>>0>o>>>0?b+1|0:b)|0;d=k;k=d>>>0<F>>>0?b+1|0:b;c=ia(d^ka,k^c,32);J=c+ca|0;b=q;q=Y;b=b+q|0;o=J;b=c>>>0>o>>>0?b+1|0:b;D=ia(o^ba,b^D,24);H=D;J=Y;L=J;F=b;D=O;d=D+d|0;b=k+ma|0;b=d>>>0<D>>>0?b+1|0:b;k=H+d|0;b=b+J|0;J=k;D=k>>>0<d>>>0?b+1|0:b;c=ia(k^c,D^q,16);k=c+o|0;b=F;F=Y;b=b+F|0;ba=k;q=k>>>0<c>>>0?b+1|0:b;H=ia(k^H,q^L,63);k=Y;d=h;L=E;fa=c;c=P;o=c+T|0;b=p+ja|0;b=c>>>0>o>>>0?b+1|0:b;c=o;p=c+E|0;b=b+d|0;b=c>>>0>p>>>0?b+1|0:b;c=p;h=b;o=ia(fa^c,b^F,32);F=o;p=F+$|0;b=r;r=Y;b=b+r|0;E=p;b=p>>>0<F>>>0?b+1|0:b;d=ia(L^p,b^d,24);L=d;p=Y;$=p;F=b;d=M;c=d+c|0;b=h+pa|0;b=c>>>0<d>>>0?b+1|0:b;h=L+c|0;b=b+p|0;ka=h;d=r;r=h>>>0<c>>>0?b+1|0:b;fa=ia(h^o,d^r,16);d=fa;h=d+E|0;p=Y;b=p+F|0;F=h;d=h>>>0<d>>>0?b+1|0:b;L=ia(h^L,d^$,63);h=Y;c=i;E=f;b=s+U|0;f=z+A|0;b=f>>>0<A>>>0?b+1|0:b;s=f;A=E+f|0;b=b+c|0;f=A;i=f>>>0<s>>>0?b+1|0:b;o=ia(f^_,i^l,32);A=o;l=A+ba|0;b=q;q=Y;b=b+q|0;b=l>>>0<A>>>0?b+1|0:b;A=b;c=ia(E^l,b^c,24);E=c;b=Y;$=b;s=b;c=R;f=c+f|0;b=i+ra|0;b=c>>>0>f>>>0?b+1|0:b;c=f;i=E+c|0;b=b+s|0;s=i;c=i>>>0<c>>>0?b+1|0:b;q=ia(i^o,c^q,16);i=l+q|0;f=Y;b=A+f|0;b=i>>>0<l>>>0?b+1|0:b;l=i;A=b;$=ia(i^E,b^$,63);i=Y;o=k;T=H;E=S;H=E+Z|0;b=t+na|0;b=E>>>0>H>>>0?b+1|0:b;E=H;t=T+E|0;b=b+k|0;b=t>>>0<E>>>0?b+1|0:b;E=t;k=b;H=ia(t^ea,b^n,32);n=u+H|0;t=Y;b=e+t|0;b=n>>>0<u>>>0?b+1|0:b;u=n;e=b;n=ia(T^u,b^o,24);Z=n;b=Y;T=b;o=b;b=k+la|0;E=j+E|0;b=E>>>0<j>>>0?b+1|0:b;n=E;k=Z+n|0;b=b+o|0;o=k;E=t;t=k>>>0<n>>>0?b+1|0:b;ba=ia(k^H,E^t,16);k=u+ba|0;n=Y;b=e+n|0;b=k>>>0<u>>>0?b+1|0:b;u=k;Z=ia(k^Z,b^T,63);k=Y;ea=x[B+156>>2];T=ea;E=b;_=N;e=C;b=D+e|0;N=J+N|0;b=N>>>0<J>>>0?b+1|0:b;H=x[B+152>>2];J=N;C=H+J|0;b=b+T|0;b=C>>>0<J>>>0?b+1|0:b;J=b;D=ia(C^da,b^m,32);m=D+I|0;b=G;G=Y;b=b+G|0;b=m>>>0<D>>>0?b+1|0:b;N=m;e=ia(_^m,b^e,24);T=e;da=Y;I=da;m=b;ca=x[B+236>>2];_=ca;ca=N;N=D;b=J+I|0;e=e+C|0;b=e>>>0<C>>>0?b+1|0:b;D=x[B+232>>2];C=D+e|0;b=b+_|0;b=C>>>0<e>>>0?b+1|0:b;e=G;G=b;da=ia(N^C,e^b,16);N=da;e=ca+N|0;J=Y;b=J+m|0;m=e;e=e>>>0<N>>>0?b+1|0:b;T=ia(m^T,e^I,63);b=Y;I=b;N=b;ca=q;b=r+Q|0;q=w+ka|0;b=q>>>0<w>>>0?b+1|0:b;w=q+T|0;b=b+N|0;N=w;w=w>>>0<q>>>0?b+1|0:b;f=ia(ca^N,w^f,32);r=u+f|0;q=Y;b=q+E|0;E=r;b=r>>>0<f>>>0?b+1|0:b;Q=ia(T^r,I^b,24);r=Y;ka=r;u=b;T=E;I=f;f=R;E=f+N|0;b=w+ra|0;b=f>>>0>E>>>0?b+1|0:b;f=E;w=f+Q|0;b=b+r|0;r=w;f=f>>>0>r>>>0?b+1|0:b;I=ia(I^r,f^q,16);q=I;w=T+q|0;b=u;u=Y;b=b+u|0;E=w;N=w>>>0<q>>>0?b+1|0:b;T=ia(w^Q,N^ka,63);q=Y;w=h;ca=L;b=h+na|0;L=S+L|0;h=s+L|0;b=c+(S>>>0>L>>>0?b+1|0:b)|0;Q=h;h=h>>>0<s>>>0?b+1|0:b;n=ia(Q^ba,h^n,32);c=m+n|0;s=Y;b=e+s|0;b=c>>>0<m>>>0?b+1|0:b;m=c;e=w;w=b;c=ia(ca^c,e^b,24);L=c;b=Y;ba=b;e=b;ca=c;ka=n;c=K;n=c+Q|0;b=h+ha|0;b=c>>>0>n>>>0?b+1|0:b;c=n;h=L+c|0;b=b+e|0;L=h;e=h>>>0<c>>>0?b+1|0:b;ka=ia(ka^h,e^s,16);h=m+ka|0;s=Y;b=w+s|0;b=h>>>0<m>>>0?b+1|0:b;m=h;c=b;n=ia(ca^h,b^ba,63);h=Y;w=i;b=i+X|0;Q=g+$|0;b=Q>>>0<g>>>0?b+1|0:b;g=o+Q|0;b=b+t|0;b=g>>>0<o>>>0?b+1|0:b;o=g;g=b;Q=ia(o^da,b^J,32);t=F+Q|0;i=Y;b=d+i|0;b=t>>>0<F>>>0?b+1|0:b;d=w;w=b;F=ia(t^$,d^b,24);d=F;b=Y;$=b;J=b;b=g+U|0;F=z+o|0;b=F>>>0<z>>>0?b+1|0:b;g=F;z=d+g|0;b=b+J|0;o=z;F=i;i=g>>>0>z>>>0?b+1|0:b;Q=ia(z^Q,F^i,16);z=t+Q|0;J=Y;b=w+J|0;U=z;g=z>>>0<t>>>0?b+1|0:b;F=ia(z^d,g^$,63);w=Y;z=k;b=k+la|0;t=j+Z|0;b=t>>>0<j>>>0?b+1|0:b;j=t+C|0;b=b+G|0;b=j>>>0<C>>>0?b+1|0:b;C=j;j=b;p=ia(C^fa,b^p,32);G=l+p|0;k=Y;b=A+k|0;b=l>>>0>G>>>0?b+1|0:b;d=z;z=b;l=ia(G^Z,d^b,24);A=l;b=Y;d=b;b=j+ea|0;C=C+H|0;b=C>>>0<H>>>0?b+1|0:b;j=C+l|0;b=b+d|0;t=j;l=k;k=j>>>0<C>>>0?b+1|0:b;p=ia(j^p,l^k,16);j=G+p|0;C=Y;b=z+C|0;l=j;j=j>>>0<G>>>0?b+1|0:b;d=ia(l^A,j^d,63);z=Y;G=h;A=x[B+164>>2];H=p;b=h+f|0;p=r+n|0;b=p>>>0<r>>>0?b+1|0:b;r=p;h=p+x[B+160>>2]|0;b=b+A|0;p=h;h=h>>>0<r>>>0?b+1|0:b;A=ia(H^p,h^C,32);C=A;r=C+U|0;b=g;g=Y;b=b+g|0;b=r>>>0<C>>>0?b+1|0:b;f=G;G=b;f=ia(r^n,f^b,24);b=Y;H=b;C=b;b=h+_|0;p=p+D|0;b=p>>>0<D>>>0?b+1|0:b;h=p+f|0;b=b+C|0;U=h;h=h>>>0<p>>>0?b+1|0:b;$=ia(U^A,h^g,16);g=r+$|0;C=Y;b=G+C|0;G=g;r=g>>>0<r>>>0?b+1|0:b;n=ia(g^f,r^H,63);g=Y;p=w;f=F;D=l;F=W;l=F+L|0;b=e+ga|0;b=l>>>0<F>>>0?b+1|0:b;F=f+l|0;b=b+p|0;A=F;w=l>>>0>A>>>0?b+1|0:b;u=ia(A^I,w^u,32);l=u;F=D+l|0;b=j;j=Y;b=b+j|0;b=l>>>0>F>>>0?b+1|0:b;e=p;p=b;D=ia(f^F,e^b,24);e=D;b=Y;f=b;D=u;u=aa;A=u+A|0;b=w+qa|0;b=u>>>0>A>>>0?b+1|0:b;w=A+e|0;b=b+f|0;l=w;u=l>>>0<A>>>0?b+1|0:b;A=ia(D^l,u^j,16);w=F+A|0;D=Y;b=p+D|0;p=w;F=p>>>0<F>>>0?b+1|0:b;H=ia(p^e,F^f,63);w=Y;j=z;L=d;e=O;d=e+o|0;b=i+ma|0;b=e>>>0>d>>>0?b+1|0:b;e=d;i=L+d|0;b=b+j|0;d=i;z=d>>>0<e>>>0?b+1|0:b;f=ia(d^ka,z^s,32);e=E+f|0;i=Y;b=N+i|0;b=e>>>0<E>>>0?b+1|0:b;s=j;j=b;o=ia(L^e,s^b,24);b=Y;N=b;s=b;E=f;b=d;d=P;f=b+d|0;b=z+ja|0;b=d>>>0>f>>>0?b+1|0:b;d=f;z=d+o|0;b=b+s|0;b=d>>>0>z>>>0?b+1|0:b;s=b;L=ia(E^z,b^i,16);i=e+L|0;d=Y;b=j+d|0;b=i>>>0<e>>>0?b+1|0:b;E=ia(i^o,b^N,63);j=Y;f=b;e=q;b=pa+e|0;o=M;N=o+T|0;q=t+N|0;b=k+(o>>>0>N>>>0?b+1|0:b)|0;o=q;k=q>>>0<t>>>0?b+1|0:b;N=ia(q^Q,k^J,32);t=m+N|0;q=Y;b=c+q|0;b=m>>>0>t>>>0?b+1|0:b;J=b;b=ia(t^T,b^e,24);c=Y;Z=x[B+204>>2];Q=b;m=b;e=b+o|0;b=c+k|0;b=e>>>0<m>>>0?b+1|0:b;k=e+x[B+200>>2]|0;b=b+Z|0;b=k>>>0<e>>>0?b+1|0:b;e=q;q=b;Z=ia(k^N,e^b,16);e=t+Z|0;m=Y;b=J+m|0;b=e>>>0<t>>>0?b+1|0:b;t=e;J=b;c=ia(Q^e,b^c,63);b=Y;e=b;o=i;Q=A;i=R;A=i+U|0;b=h+ra|0;b=i>>>0>A>>>0?b+1|0:b;i=A;h=i+c|0;b=b+e|0;N=h;h=h>>>0<i>>>0?b+1|0:b;Q=ia(Q^N,h^D,32);D=Q;A=o+D|0;i=Y;b=i+f|0;b=A>>>0<D>>>0?b+1|0:b;D=b;c=ia(c^A,e^b,24);b=Y;o=b;e=b;I=c;c=aa;f=c+N|0;b=h+qa|0;b=c>>>0>f>>>0?b+1|0:b;c=f;h=I+c|0;b=b+e|0;e=h;c=e>>>0<c>>>0?b+1|0:b;Q=ia(e^Q,c^i,16);h=A+Q|0;f=Y;b=D+f|0;b=h>>>0<A>>>0?b+1|0:b;A=h;D=b;h=ia(I^h,b^o,63);i=Y;o=g;I=n;b=g+pa|0;n=M;N=I+n|0;g=l+N|0;b=u+(n>>>0>N>>>0?b+1|0:b)|0;n=g;g=g>>>0<l>>>0?b+1|0:b;d=ia(n^L,g^d,32);u=t+d|0;l=Y;b=J+l|0;b=t>>>0>u>>>0?b+1|0:b;t=u;J=b;o=ia(I^t,b^o,24);N=o;b=Y;U=b;u=b;I=o;L=d;d=O;o=d+n|0;b=g+ma|0;b=d>>>0>o>>>0?b+1|0:b;d=o;g=N+d|0;b=b+u|0;N=g;u=l;l=g>>>0<d>>>0?b+1|0:b;L=ia(L^g,u^l,16);g=t+L|0;u=Y;b=J+u|0;b=g>>>0<t>>>0?b+1|0:b;t=g;J=b;n=ia(I^g,b^U,63);g=Y;I=H;d=w;b=ja+d|0;o=P;H=o+H|0;w=z+H|0;b=s+(o>>>0>H>>>0?b+1|0:b)|0;s=w;w=z>>>0>s>>>0?b+1|0:b;o=ia(s^Z,w^m,32);m=G+o|0;z=Y;b=r+z|0;b=m>>>0<G>>>0?b+1|0:b;G=m;r=b;b=ia(I^m,b^d,24);U=x[B+236>>2];I=b;d=s;s=b;d=d+b|0;m=Y;b=m+w|0;b=d>>>0<s>>>0?b+1|0:b;w=d+x[B+232>>2]|0;b=b+U|0;b=w>>>0<d>>>0?b+1|0:b;s=w;d=b;U=ia(s^o,b^z,16);w=G+U|0;o=Y;b=r+o|0;H=w;z=w>>>0<G>>>0?b+1|0:b;m=ia(I^w,z^m,63);w=Y;G=j;Z=x[B+164>>2];I=E;b=j+q|0;r=k+E|0;b=r>>>0<k>>>0?b+1|0:b;k=r;j=k+x[B+160>>2]|0;b=b+Z|0;E=j;j=j>>>0<k>>>0?b+1|0:b;C=ia(E^$,j^C,32);q=p+C|0;k=Y;b=F+k|0;b=p>>>0>q>>>0?b+1|0:b;F=G;G=b;p=ia(I^q,F^b,24);F=p;b=Y;$=b;r=b;I=C;C=K;p=C+E|0;b=j+ha|0;b=p>>>0<C>>>0?b+1|0:b;j=F+p|0;b=b+r|0;Z=j;r=k;k=j>>>0<p>>>0?b+1|0:b;p=ia(I^j,r^k,16);j=q+p|0;r=Y;b=G+r|0;b=j>>>0<q>>>0?b+1|0:b;q=j;G=b;E=ia(j^F,b^$,63);j=Y;C=g;F=x[B+132>>2];I=p;b=g+c|0;p=e+n|0;b=p>>>0<e>>>0?b+1|0:b;g=p+x[B+128>>2]|0;b=b+F|0;F=g;g=g>>>0<p>>>0?b+1|0:b;e=ia(I^F,g^r,32);r=e+H|0;b=z;z=Y;b=b+z|0;b=e>>>0>r>>>0?b+1|0:b;c=C;C=b;c=ia(r^n,c^b,24);b=Y;H=b;p=b;n=e;b=F;F=W;e=b+F|0;b=g+ga|0;b=e>>>0<F>>>0?b+1|0:b;g=e+c|0;b=b+p|0;$=g;p=g>>>0<e>>>0?b+1|0:b;X=ia(n^g,p^z,16);z=r+X|0;F=Y;b=C+F|0;b=z>>>0<r>>>0?b+1|0:b;r=z;C=b;n=ia(r^c,b^H,63);z=Y;g=w;H=m;m=S;e=m+N|0;b=l+na|0;b=e>>>0<m>>>0?b+1|0:b;l=e;m=H+e|0;b=b+g|0;e=m;w=l>>>0>e>>>0?b+1|0:b;c=ia(e^Q,w^f,32);l=q+c|0;m=Y;b=G+m|0;b=l>>>0<q>>>0?b+1|0:b;q=l;f=g;g=b;b=ia(H^l,f^b,24);H=x[B+156>>2];f=b;l=b;e=b+e|0;G=Y;b=G+w|0;b=e>>>0<l>>>0?b+1|0:b;w=e+x[B+152>>2]|0;b=b+H|0;b=e>>>0>w>>>0?b+1|0:b;l=w;e=m;m=b;N=ia(l^c,e^b,16);w=q+N|0;e=Y;b=g+e|0;b=w>>>0<q>>>0?b+1|0:b;q=w;c=G;G=b;H=ia(f^q,c^b,63);g=Y;w=j;f=x[B+204>>2];b=j+d|0;c=s+E|0;b=c>>>0<s>>>0?b+1|0:b;j=c+x[B+200>>2]|0;b=b+f|0;b=j>>>0<c>>>0?b+1|0:b;c=u;u=b;c=ia(j^L,c^b,32);d=A+c|0;s=Y;b=D+s|0;b=d>>>0<A>>>0?b+1|0:b;A=d;f=w;w=b;d=ia(d^E,f^b,24);b=Y;f=b;E=x[B+148>>2];L=d;b=b+u|0;d=j+d|0;b=d>>>0<j>>>0?b+1|0:b;j=d+x[B+144>>2]|0;b=b+E|0;b=j>>>0<d>>>0?b+1|0:b;u=j;d=s;s=b;Q=ia(j^c,d^b,16);j=A+Q|0;d=Y;b=w+d|0;b=j>>>0<A>>>0?b+1|0:b;A=j;D=b;E=ia(L^j,f^b,63);j=Y;w=i;f=x[B+196>>2];L=h;b=i+k|0;c=h+Z|0;b=c>>>0<h>>>0?b+1|0:b;i=c;h=c+x[B+192>>2]|0;b=b+f|0;c=h;h=c>>>0<i>>>0?b+1|0:b;f=ia(c^U,h^o,32);k=t+f|0;i=Y;b=J+i|0;b=k>>>0<t>>>0?b+1|0:b;w=ia(L^k,b^w,24);t=b;U=x[B+220>>2];L=U;o=w;I=k;k=Y;b=k+h|0;c=c+w|0;b=c>>>0<w>>>0?b+1|0:b;J=x[B+216>>2];h=c;w=J+c|0;b=b+L|0;c=w;w=c^f;f=h>>>0>c>>>0?b+1|0:b;L=ia(w,f^i,16);h=L;w=I+h|0;b=t;t=Y;b=b+t|0;b=h>>>0>w>>>0?b+1|0:b;h=k;k=b;b=ia(o^w,h^b,63);T=x[B+236>>2];I=b;i=b;o=b+$|0;h=Y;b=h+p|0;b=i>>>0>o>>>0?b+1|0:b;p=o;i=p+x[B+232>>2]|0;b=b+T|0;o=i;i=i>>>0<p>>>0?b+1|0:b;N=ia(o^N,i^e,32);e=A+N|0;p=Y;b=D+p|0;b=e>>>0<A>>>0?b+1|0:b;A=e;D=h;h=b;b=ia(I^e,D^b,24);I=N;e=b;o=b+o|0;D=Y;b=D+i|0;i=o+J|0;b=U+(e>>>0>o>>>0?b+1|0:b)|0;N=i;o=p;p=i>>>0<J>>>0?b+1|0:b;U=ia(I^i,o^p,16);i=A+U|0;J=Y;b=h+J|0;b=i>>>0<A>>>0?b+1|0:b;A=i;h=D;D=b;h=ia(e^i,h^b,63);i=Y;I=n;e=z;b=ga+e|0;o=W;n=o+n|0;z=l+n|0;b=m+(n>>>0<o>>>0?b+1|0:b)|0;o=z;z=l>>>0>z>>>0?b+1|0:b;d=ia(o^Q,z^d,32);l=w+d|0;m=Y;b=k+m|0;b=l>>>0<w>>>0?b+1|0:b;w=l;k=b;e=ia(I^l,b^e,24);n=e;b=Y;Q=b;l=b;I=d;e=P;d=e+o|0;b=z+ja|0;b=e>>>0>d>>>0?b+1|0:b;e=d;z=n+e|0;b=b+l|0;$=z;d=m;m=e>>>0>z>>>0?b+1|0:b;Z=ia(I^z,d^m,16);z=w+Z|0;l=Y;b=k+l|0;k=z;e=k>>>0<w>>>0?b+1|0:b;o=ia(k^n,e^Q,63);w=Y;z=g;b=g+ra|0;d=R;n=d+H|0;g=u+n|0;b=s+(d>>>0>n>>>0?b+1|0:b)|0;s=g;g=g>>>0<u>>>0?b+1|0:b;d=ia(s^L,g^t,32);u=r+d|0;t=Y;b=C+t|0;b=r>>>0>u>>>0?b+1|0:b;r=u;u=z;z=b;u=ia(r^H,u^b,24);n=u;b=Y;H=b;C=b;u=M;s=u+s|0;b=g+pa|0;b=u>>>0>s>>>0?b+1|0:b;g=n+s|0;b=b+C|0;C=g;u=t;t=g>>>0<s>>>0?b+1|0:b;Q=ia(g^d,u^t,16);g=r+Q|0;u=Y;b=z+u|0;b=g>>>0<r>>>0?b+1|0:b;r=g;s=b;n=ia(g^n,b^H,63);z=Y;H=x[B+156>>2];g=j;b=f+g|0;d=c+E|0;b=d>>>0<c>>>0?b+1|0:b;j=d+x[B+152>>2]|0;b=b+H|0;b=j>>>0<d>>>0?b+1|0:b;c=F;F=b;f=ia(j^X,c^b,32);c=q+f|0;d=Y;b=G+d|0;b=c>>>0<q>>>0?b+1|0:b;q=c;G=g;g=b;c=ia(c^E,G^b,24);b=Y;E=b;H=x[B+204>>2];I=c;b=F+b|0;c=c+j|0;b=c>>>0<j>>>0?b+1|0:b;j=c+x[B+200>>2]|0;b=b+H|0;L=j;F=j>>>0<c>>>0?b+1|0:b;c=ia(j^f,F^d,16);d=q+c|0;j=Y;b=g+j|0;b=d>>>0<q>>>0?b+1|0:b;q=d;G=b;E=ia(I^d,E^b,63);g=Y;d=w;H=c;c=aa;f=c+N|0;b=p+qa|0;b=c>>>0>f>>>0?b+1|0:b;c=f;p=c+o|0;b=b+d|0;w=p;f=j;j=c>>>0>p>>>0?b+1|0:b;f=ia(H^p,f^j,32);c=r+f|0;p=Y;b=s+p|0;b=c>>>0<r>>>0?b+1|0:b;r=c;s=b;c=ia(c^o,b^d,24);b=Y;d=b;H=x[B+132>>2];o=c;b=j+b|0;c=c+w|0;b=c>>>0<w>>>0?b+1|0:b;w=c+x[B+128>>2]|0;b=b+H|0;N=w;j=p;p=c>>>0>w>>>0?b+1|0:b;X=ia(w^f,j^p,16);w=r+X|0;c=Y;b=s+c|0;b=w>>>0<r>>>0?b+1|0:b;r=w;s=b;H=ia(o^r,b^d,63);w=Y;j=z;d=O;f=d+$|0;b=m+ma|0;b=d>>>0>f>>>0?b+1|0:b;d=f;m=d+n|0;b=b+j|0;b=d>>>0>m>>>0?b+1|0:b;d=m;z=b;f=ia(d^U,b^J,32);m=q+f|0;J=Y;b=G+J|0;b=q>>>0>m>>>0?b+1|0:b;q=m;o=j;j=b;b=ia(m^n,o^b,24);n=x[B+164>>2];o=b;m=b;d=b+d|0;G=Y;b=G+z|0;b=d>>>0<m>>>0?b+1|0:b;z=d+x[B+160>>2]|0;b=b+n|0;b=z>>>0<d>>>0?b+1|0:b;m=z;d=J;J=b;d=ia(m^f,d^b,16);z=q+d|0;f=Y;b=j+f|0;b=z>>>0<q>>>0?b+1|0:b;q=z;j=G;G=b;z=ia(o^q,j^b,63);j=Y;o=g;U=x[B+196>>2];I=E;b=g+t|0;n=C+E|0;b=n>>>0<C>>>0?b+1|0:b;t=n;g=t+x[B+192>>2]|0;b=b+U|0;n=g;g=g>>>0<t>>>0?b+1|0:b;E=ia(n^Z,g^l,32);C=A+E|0;t=Y;b=D+t|0;b=C>>>0<A>>>0?b+1|0:b;l=b;D=ia(I^C,b^o,24);b=Y;U=b;A=b;I=D;D=S;o=D+n|0;b=g+na|0;b=o>>>0<D>>>0?b+1|0:b;D=o;g=I+D|0;b=b+A|0;$=g;o=t;t=g>>>0<D>>>0?b+1|0:b;Z=ia(g^E,o^t,16);g=C+Z|0;A=Y;b=l+A|0;b=g>>>0<C>>>0?b+1|0:b;C=g;o=ia(I^g,b^U,63);g=Y;l=i;E=x[B+148>>2];D=b;I=h;b=i+F|0;n=h+L|0;b=n>>>0<h>>>0?b+1|0:b;i=n;h=i+x[B+144>>2]|0;b=b+E|0;n=h;h=h>>>0<i>>>0?b+1|0:b;u=ia(n^Q,h^u,32);F=k+u|0;i=Y;b=e+i|0;b=k>>>0>F>>>0?b+1|0:b;k=F;F=b;e=ia(I^k,b^l,24);E=e;b=Y;Q=b;l=b;L=u;u=K;e=u+n|0;b=h+ha|0;b=e>>>0<u>>>0?b+1|0:b;h=E+e|0;b=b+l|0;l=h;u=h>>>0<e>>>0?b+1|0:b;U=ia(L^h,u^i,16);h=k+U|0;i=Y;b=F+i|0;b=h>>>0<k>>>0?b+1|0:b;k=h;F=b;e=ia(h^E,b^Q,63);b=Y;n=b;h=b;E=C;Q=d;C=S;d=C+N|0;b=p+na|0;b=d>>>0<C>>>0?b+1|0:b;p=d;C=d+e|0;b=b+h|0;d=C;h=p>>>0>d>>>0?b+1|0:b;f=ia(Q^d,h^f,32);p=E+f|0;C=Y;b=C+D|0;b=p>>>0<f>>>0?b+1|0:b;D=b;n=ia(e^p,n^b,24);b=Y;N=b;e=b;E=f;b=d;d=O;f=b+d|0;b=h+ma|0;b=d>>>0>f>>>0?b+1|0:b;d=f;h=d+n|0;b=b+e|0;Q=h;e=C;C=h>>>0<d>>>0?b+1|0:b;L=ia(E^h,e^C,16);h=p+L|0;e=Y;b=D+e|0;b=h>>>0<p>>>0?b+1|0:b;p=h;D=b;E=ia(h^n,b^N,63);h=Y;d=w;b=ja+d|0;f=P;n=f+H|0;w=m+n|0;b=J+(f>>>0>n>>>0?b+1|0:b)|0;f=w;w=f>>>0<m>>>0?b+1|0:b;A=ia(f^Z,w^A,32);m=k+A|0;J=Y;b=F+J|0;b=k>>>0>m>>>0?b+1|0:b;k=m;F=b;b=ia(k^H,b^d,24);H=x[B+204>>2];n=b;N=A;A=b;d=b+f|0;m=Y;b=m+w|0;b=d>>>0<A>>>0?b+1|0:b;w=d+x[B+200>>2]|0;b=b+H|0;H=w;f=J;J=w>>>0<d>>>0?b+1|0:b;N=ia(N^w,f^J,16);w=k+N|0;A=Y;b=F+A|0;F=w;d=m;m=k>>>0>w>>>0?b+1|0:b;f=ia(n^w,d^m,63);w=Y;k=j;n=x[B+220>>2];I=z;b=j+t|0;d=z+$|0;b=d>>>0<z>>>0?b+1|0:b;z=d+x[B+216>>2]|0;b=b+n|0;t=z;z=d>>>0>t>>>0?b+1|0:b;d=ia(t^U,z^i,32);i=r+d|0;j=Y;b=s+j|0;b=i>>>0<r>>>0?b+1|0:b;s=k;k=b;b=ia(I^i,s^b,24);U=x[B+156>>2];n=b;s=t;t=b;s=s+b|0;r=Y;b=r+z|0;b=t>>>0>s>>>0?b+1|0:b;t=s;z=t+x[B+152>>2]|0;b=b+U|0;U=z;t=z>>>0<t>>>0?b+1|0:b;$=ia(z^d,t^j,16);z=i+$|0;s=Y;b=k+s|0;k=z;d=r;r=i>>>0>k>>>0?b+1|0:b;j=ia(n^k,d^r,63);i=Y;z=g;n=x[B+132>>2];b=g+u|0;d=l+o|0;b=d>>>0<l>>>0?b+1|0:b;g=d+x[B+128>>2]|0;b=b+n|0;b=g>>>0<d>>>0?b+1|0:b;l=b;c=ia(g^X,b^c,32);d=q+c|0;u=Y;b=G+u|0;b=d>>>0<q>>>0?b+1|0:b;q=d;n=z;z=b;d=ia(d^o,n^b,24);b=Y;o=b;n=x[B+196>>2];I=d;b=l+b|0;d=g+d|0;b=d>>>0<g>>>0?b+1|0:b;g=d+x[B+192>>2]|0;b=b+n|0;b=g>>>0<d>>>0?b+1|0:b;l=g;d=u;u=b;c=ia(g^c,d^b,16);d=q+c|0;g=Y;b=z+g|0;b=d>>>0<q>>>0?b+1|0:b;q=d;G=b;n=ia(I^d,o^b,63);z=Y;d=w;I=f;o=c;c=R;f=c+Q|0;b=C+ra|0;b=c>>>0>f>>>0?b+1|0:b;c=f;C=I+c|0;b=b+d|0;w=C;f=g;g=c>>>0>C>>>0?b+1|0:b;f=ia(o^C,f^g,32);c=k+f|0;C=Y;b=r+C|0;o=c;b=c>>>0<k>>>0?b+1|0:b;c=ia(I^c,b^d,24);r=b;Z=x[B+148>>2];X=Z;Q=c;k=Y;b=g+k|0;c=c+w|0;b=c>>>0<w>>>0?b+1|0:b;d=x[B+144>>2];w=d+c|0;b=b+X|0;X=w;w=c>>>0>w>>>0?b+1|0:b;T=ia(X^f,w^C,16);C=T;g=C+o|0;b=r;r=Y;b=b+r|0;b=g>>>0<C>>>0?b+1|0:b;C=g;c=b;g=ia(Q^g,b^k,63);k=Y;f=i;Q=x[B+236>>2];I=j;b=f+J|0;o=j+H|0;b=o>>>0<j>>>0?b+1|0:b;i=o;j=i+x[B+232>>2]|0;b=b+Q|0;o=j;j=i>>>0>j>>>0?b+1|0:b;e=ia(o^L,j^e,32);J=q+e|0;i=Y;b=G+i|0;b=q>>>0>J>>>0?b+1|0:b;q=J;G=b;f=ia(I^q,b^f,24);H=f;b=Y;Q=b;J=b;I=e;e=W;f=e+o|0;b=j+ga|0;b=e>>>0>f>>>0?b+1|0:b;e=f;j=H+e|0;b=b+J|0;L=j;J=j>>>0<e>>>0?b+1|0:b;e=ia(I^j,J^i,16);j=q+e|0;f=Y;b=G+f|0;G=j;o=j>>>0<q>>>0?b+1|0:b;H=ia(j^H,o^Q,63);j=Y;i=z;Q=n;q=M;n=q+U|0;b=t+pa|0;b=q>>>0>n>>>0?b+1|0:b;t=n;q=Q+t|0;b=b+i|0;z=q;q=q>>>0<t>>>0?b+1|0:b;n=ia(z^N,q^A,32);A=p+n|0;t=Y;b=D+t|0;b=p>>>0>A>>>0?b+1|0:b;D=ia(Q^A,b^i,24);p=b;U=x[B+164>>2];Q=U;N=D;I=A;i=Y;b=q+i|0;D=z+D|0;b=D>>>0<z>>>0?b+1|0:b;A=x[B+160>>2];q=D;z=A+q|0;b=b+Q|0;b=z>>>0<q>>>0?b+1|0:b;D=t;t=b;da=ia(z^n,D^b,16);D=da;q=I+D|0;b=p;p=Y;b=b+p|0;b=q>>>0<D>>>0?b+1|0:b;D=b;N=ia(N^q,b^i,63);i=Y;n=h;I=E;b=h+ha|0;E=K;Q=I+E|0;h=l+Q|0;b=u+(E>>>0>Q>>>0?b+1|0:b)|0;E=h;h=h>>>0<l>>>0?b+1|0:b;s=ia(E^$,h^s,32);u=F+s|0;l=Y;b=m+l|0;b=u>>>0<F>>>0?b+1|0:b;F=u;m=b;n=ia(I^F,b^n,24);Q=n;b=Y;$=b;u=b;I=s;s=aa;n=s+E|0;b=h+qa|0;b=n>>>0<s>>>0?b+1|0:b;h=Q+n|0;b=b+u|0;u=h;s=l;l=h>>>0<n>>>0?b+1|0:b;E=ia(I^h,s^l,16);h=F+E|0;s=Y;b=m+s|0;b=h>>>0<F>>>0?b+1|0:b;F=h;m=b;n=ia(h^Q,b^$,63);b=Y;Q=b;h=b;I=e;b=w+ha|0;e=K+X|0;b=e>>>0<K>>>0?b+1|0:b;w=e;K=e+n|0;b=b+h|0;e=K;w=w>>>0>e>>>0?b+1|0:b;f=ia(I^e,w^f,32);K=q+f|0;h=Y;b=D+h|0;ha=K;b=q>>>0>K>>>0?b+1|0:b;K=ia(n^K,Q^b,24);D=b;I=K;q=Y;b=q+w|0;e=e+K|0;b=e>>>0<K>>>0?b+1|0:b;K=e+d|0;b=b+Z|0;n=K;e=d>>>0>n>>>0?b+1|0:b;Q=ia(n^f,e^h,16);w=Q;K=w+ha|0;b=D;D=Y;b=b+D|0;ha=K;w=w>>>0>K>>>0?b+1|0:b;h=ia(I^K,w^q,63);q=Y;K=k;f=x[B+196>>2];I=g;b=k+J|0;d=g+L|0;b=d>>>0<g>>>0?b+1|0:b;k=d;g=d+x[B+192>>2]|0;b=b+f|0;d=g;g=d>>>0<k>>>0?b+1|0:b;f=ia(d^da,g^p,32);p=F+f|0;k=Y;b=m+k|0;b=p>>>0<F>>>0?b+1|0:b;m=K;K=b;b=ia(I^p,m^b,24);I=b;F=b;m=b+d|0;J=Y;b=J+g|0;g=m+A|0;b=U+(m>>>0<F>>>0?b+1|0:b)|0;U=g;d=k;k=g>>>0<A>>>0?b+1|0:b;L=ia(g^f,d^k,16);g=p+L|0;F=Y;b=K+F|0;b=g>>>0<p>>>0?b+1|0:b;p=g;d=J;J=b;d=ia(I^g,d^b,63);K=Y;g=j;b=ga+g|0;m=W;A=m+H|0;j=z+A|0;b=t+(m>>>0>A>>>0?b+1|0:b)|0;m=j;z=j>>>0<z>>>0?b+1|0:b;A=ia(j^E,z^s,32);t=C+A|0;j=Y;b=c+j|0;b=t>>>0<C>>>0?b+1|0:b;c=g;g=b;s=ia(t^H,c^b,24);c=s;b=Y;f=b;s=A;b=m;m=S;A=b+m|0;b=z+na|0;b=m>>>0>A>>>0?b+1|0:b;m=A;z=m+c|0;b=b+f|0;C=z;m=z>>>0<m>>>0?b+1|0:b;E=ia(s^z,m^j,16);z=t+E|0;A=Y;b=g+A|0;H=z;z=z>>>0<t>>>0?b+1|0:b;g=ia(H^c,z^f,63);j=Y;t=i;b=i+pa|0;s=M;c=s+N|0;i=u+c|0;b=l+(c>>>0<s>>>0?b+1|0:b)|0;b=i>>>0<u>>>0?b+1|0:b;u=i;i=b;s=ia(u^T,b^r,32);l=G+s|0;r=Y;b=o+r|0;b=l>>>0<G>>>0?b+1|0:b;G=l;c=t;t=b;c=ia(l^N,c^b,24);b=Y;o=b;l=b;f=s;b=u;u=aa;s=b+u|0;b=i+qa|0;b=u>>>0>s>>>0?b+1|0:b;i=s+c|0;b=b+l|0;N=i;u=r;r=i>>>0<s>>>0?b+1|0:b;s=ia(f^i,u^r,16);i=G+s|0;l=Y;b=t+l|0;b=i>>>0<G>>>0?b+1|0:b;G=i;t=b;f=ia(i^c,b^o,63);i=Y;u=K;c=d;o=s;s=O;d=s+n|0;b=e+ma|0;b=d>>>0<s>>>0?b+1|0:b;e=c+d|0;b=b+u|0;b=e>>>0<d>>>0?b+1|0:b;s=e;K=b;d=ia(o^e,b^l,32);l=d+H|0;b=z;z=Y;b=b+z|0;b=d>>>0>l>>>0?b+1|0:b;e=u;u=b;b=ia(c^l,e^b,24);o=x[B+220>>2];c=b;H=d;e=s;s=b;d=e+b|0;e=Y;b=e+K|0;b=d>>>0<s>>>0?b+1|0:b;K=d+x[B+216>>2]|0;b=b+o|0;n=K;s=d>>>0>n>>>0?b+1|0:b;H=ia(H^n,s^z,16);K=l+H|0;d=Y;b=u+d|0;b=l>>>0>K>>>0?b+1|0:b;l=K;u=b;K=ia(c^l,b^e,63);z=Y;e=j;o=x[B+204>>2];I=g;b=e+k|0;c=g+U|0;b=c>>>0<g>>>0?b+1|0:b;j=c;g=c+x[B+200>>2]|0;b=b+o|0;c=g;g=c>>>0<j>>>0?b+1|0:b;D=ia(c^Q,g^D,32);k=G+D|0;j=Y;b=t+j|0;b=k>>>0<G>>>0?b+1|0:b;G=b;e=ia(I^k,b^e,24);o=e;b=Y;Q=b;t=b;I=D;D=P;e=D+c|0;b=g+ja|0;b=e>>>0<D>>>0?b+1|0:b;g=o+e|0;b=b+t|0;U=g;t=g>>>0<e>>>0?b+1|0:b;$=ia(I^g,t^j,16);g=k+$|0;D=Y;b=G+D|0;b=g>>>0<k>>>0?b+1|0:b;k=g;G=b;g=ia(g^o,b^Q,63);j=Y;e=i;Q=x[B+156>>2];o=Q;I=f;b=e+m|0;f=f+C|0;b=f>>>0<C>>>0?b+1|0:b;c=x[B+152>>2];C=f;i=c+f|0;b=b+o|0;f=i;i=f>>>0<C>>>0?b+1|0:b;o=ia(f^L,i^F,32);C=o+ha|0;b=w;w=Y;b=b+w|0;b=C>>>0<o>>>0?b+1|0:b;F=b;e=ia(I^C,b^e,24);ha=e;b=Y;L=b;m=b;I=e;e=R;f=e+f|0;b=i+ra|0;b=e>>>0>f>>>0?b+1|0:b;e=f;i=ha+e|0;b=b+m|0;ha=i;m=i>>>0<e>>>0?b+1|0:b;Z=ia(i^o,m^w,16);w=C+Z|0;i=Y;b=F+i|0;b=w>>>0<C>>>0?b+1|0:b;C=w;F=b;o=ia(I^w,b^L,63);w=Y;L=x[B+236>>2];I=h;e=q;b=e+r|0;f=h+N|0;b=f>>>0<h>>>0?b+1|0:b;q=f;h=f+x[B+232>>2]|0;b=b+L|0;f=h;q=f>>>0<q>>>0?b+1|0:b;A=ia(f^E,q^A,32);h=p+A|0;r=Y;b=J+r|0;E=h;b=h>>>0<p>>>0?b+1|0:b;h=ia(I^h,b^e,24);J=b;L=x[B+132>>2];N=h;I=E;E=A;p=Y;b=p+q|0;e=h+f|0;b=e>>>0<h>>>0?b+1|0:b;A=x[B+128>>2];h=A+e|0;b=b+L|0;b=h>>>0<e>>>0?b+1|0:b;q=h;e=r;r=b;E=ia(E^h,e^b,16);e=E;h=I+e|0;b=J;J=Y;b=b+J|0;b=h>>>0<e>>>0?b+1|0:b;e=h;h=p;p=b;b=ia(N^e,h^b,63);N=b;f=b;n=b+n|0;h=Y;b=h+s|0;s=n+A|0;b=L+(f>>>0>n>>>0?b+1|0:b)|0;f=s;A=A>>>0>f>>>0?b+1|0:b;n=ia(f^$,A^D,32);s=C+n|0;D=Y;b=F+D|0;b=C>>>0>s>>>0?b+1|0:b;C=s;s=h;h=b;s=ia(N^C,s^b,24);N=s;b=Y;L=b;F=b;I=s;s=M;f=s+f|0;b=A+pa|0;b=f>>>0<s>>>0?b+1|0:b;A=N+f|0;b=b+F|0;N=A;F=A>>>0<f>>>0?b+1|0:b;$=ia(A^n,F^D,16);D=C+$|0;A=Y;b=h+A|0;b=C>>>0>D>>>0?b+1|0:b;C=D;D=b;n=ia(I^C,b^L,63);h=Y;s=z;L=x[B+148>>2];I=K;b=z+t|0;f=K+U|0;b=f>>>0<K>>>0?b+1|0:b;z=f;K=f+x[B+144>>2]|0;b=b+L|0;f=K;K=z>>>0>f>>>0?b+1|0:b;U=ia(f^Z,K^i,32);i=e+U|0;z=Y;b=p+z|0;b=i>>>0<e>>>0?b+1|0:b;t=b;b=ia(I^i,b^s,24);L=b;e=b;s=b+f|0;p=Y;b=p+K|0;K=c+s|0;b=Q+(e>>>0>s>>>0?b+1|0:b)|0;Q=K;e=c>>>0>K>>>0?b+1|0:b;U=ia(K^U,e^z,16);K=i+U|0;s=Y;b=t+s|0;t=K;c=p;p=i>>>0>t>>>0?b+1|0:b;z=ia(L^t,c^p,63);i=Y;K=j;f=x[B+164>>2];L=g;b=j+m|0;c=g+ha|0;b=c>>>0<g>>>0?b+1|0:b;j=c;g=c+x[B+160>>2]|0;b=b+f|0;c=g;g=c>>>0<j>>>0?b+1|0:b;f=ia(c^E,g^J,32);J=l+f|0;j=Y;b=u+j|0;b=l>>>0>J>>>0?b+1|0:b;u=K;K=b;l=ia(L^J,u^b,24);b=Y;E=b;m=b;I=l;l=aa;u=l+c|0;b=g+qa|0;b=l>>>0>u>>>0?b+1|0:b;l=u;g=I+l|0;b=b+m|0;ha=g;m=g>>>0<l>>>0?b+1|0:b;L=ia(g^f,m^j,16);g=J+L|0;l=Y;b=K+l|0;b=g>>>0<J>>>0?b+1|0:b;J=g;u=b;g=ia(I^g,b^E,63);j=Y;K=w;b=w+na|0;c=S;f=c+o|0;w=q+f|0;b=r+(c>>>0>f>>>0?b+1|0:b)|0;c=w;w=c>>>0<q>>>0?b+1|0:b;d=ia(c^H,w^d,32);r=k+d|0;q=Y;b=G+q|0;b=k>>>0>r>>>0?b+1|0:b;k=r;f=K;K=b;r=ia(k^o,f^b,24);f=r;b=Y;o=b;E=d;r=W;d=r+c|0;b=w+ga|0;b=d>>>0<r>>>0?b+1|0:b;w=f+d|0;b=b+o|0;G=w;c=q;q=w>>>0<d>>>0?b+1|0:b;d=ia(E^w,c^q,16);w=k+d|0;r=Y;b=K+r|0;c=w;w=k>>>0>c>>>0?b+1|0:b;o=ia(c^f,w^o,63);K=Y;k=i;f=x[B+196>>2];E=z;H=d;b=i+F|0;d=z+N|0;b=d>>>0<z>>>0?b+1|0:b;z=d+x[B+192>>2]|0;b=b+f|0;F=z;z=d>>>0>z>>>0?b+1|0:b;d=ia(H^F,z^r,32);r=J+d|0;i=Y;b=u+i|0;b=r>>>0<J>>>0?b+1|0:b;f=k;k=b;b=ia(E^r,f^b,24);E=x[B+204>>2];f=b;u=F;F=b;u=u+b|0;J=Y;b=J+z|0;b=u>>>0<F>>>0?b+1|0:b;z=u+x[B+200>>2]|0;b=b+E|0;H=z;F=z>>>0<u>>>0?b+1|0:b;N=ia(z^d,F^i,16);z=r+N|0;u=Y;b=k+u|0;k=z;r=k>>>0<r>>>0?b+1|0:b;z=ia(f^k,r^J,63);i=Y;J=j;Z=x[B+212>>2];f=Z;E=g;I=c;b=j+e|0;c=g+Q|0;b=c>>>0<g>>>0?b+1|0:b;d=x[B+208>>2];g=d+c|0;b=b+f|0;e=g;g=g>>>0<c>>>0?b+1|0:b;c=ia(e^$,g^A,32);j=I+c|0;b=w;w=Y;b=b+w|0;b=j>>>0<c>>>0?b+1|0:b;f=J;J=b;b=ia(E^j,f^b,24);E=x[B+220>>2];I=b;f=c;c=e;e=b;c=c+b|0;A=Y;b=A+g|0;b=c>>>0<e>>>0?b+1|0:b;g=c+x[B+216>>2]|0;b=b+E|0;Q=g;e=g>>>0<c>>>0?b+1|0:b;c=ia(f^g,e^w,16);w=j+c|0;f=Y;b=J+f|0;J=w;g=A;A=j>>>0>w>>>0?b+1|0:b;w=ia(I^w,g^A,63);g=Y;j=K;I=o;o=R;E=o+ha|0;b=m+ra|0;b=o>>>0>E>>>0?b+1|0:b;o=E;m=I+o|0;b=b+j|0;K=m;m=m>>>0<o>>>0?b+1|0:b;E=ia(K^U,m^s,32);o=C+E|0;s=Y;b=D+s|0;b=C>>>0>o>>>0?b+1|0:b;C=o;o=j;j=b;o=ia(I^C,o^b,24);b=Y;D=b;U=x[B+236>>2];I=o;b=m+b|0;o=o+K|0;b=o>>>0<K>>>0?b+1|0:b;m=o;K=m+x[B+232>>2]|0;b=b+U|0;ha=K;m=m>>>0>K>>>0?b+1|0:b;U=ia(K^E,m^s,16);K=C+U|0;s=Y;b=j+s|0;j=K;C=C>>>0>j>>>0?b+1|0:b;E=ia(I^j,C^D,63);K=Y;D=h;I=n;b=h+ja|0;o=P;n=o+n|0;h=G+n|0;b=q+(n>>>0<o>>>0?b+1|0:b)|0;o=h;h=h>>>0<G>>>0?b+1|0:b;l=ia(o^L,h^l,32);G=t+l|0;q=Y;b=p+q|0;b=t>>>0>G>>>0?b+1|0:b;t=b;D=ia(I^G,b^D,24);n=D;b=Y;L=b;p=b;I=l;l=O;D=l+o|0;b=h+ma|0;b=l>>>0>D>>>0?b+1|0:b;l=D;h=n+l|0;b=b+p|0;p=h;o=q;q=h>>>0<l>>>0?b+1|0:b;o=ia(I^h,o^q,16);h=G+o|0;l=Y;b=t+l|0;b=h>>>0<G>>>0?b+1|0:b;G=h;t=b;D=ia(h^n,b^L,63);b=Y;n=b;h=b;L=c;b=F+ja|0;c=H+P|0;b=c>>>0<P>>>0?b+1|0:b;F=c;P=c+D|0;b=b+h|0;c=P;P=F>>>0>c>>>0?b+1|0:b;f=ia(L^c,P^f,32);F=j+f|0;h=Y;b=C+h|0;b=j>>>0>F>>>0?b+1|0:b;j=F;C=b;b=ia(D^j,n^b,24);H=b;n=f;D=b;c=b+c|0;F=Y;b=F+P|0;P=c+d|0;b=Z+(c>>>0<D>>>0?b+1|0:b)|0;f=P;D=d>>>0>f>>>0?b+1|0:b;n=ia(n^f,D^h,16);P=j+n|0;d=Y;b=C+d|0;C=P;c=F;F=j>>>0>C>>>0?b+1|0:b;j=ia(H^C,c^F,63);h=Y;P=i;H=x[B+164>>2];L=z;b=i+e|0;c=z+Q|0;b=c>>>0<z>>>0?b+1|0:b;i=c;z=c+x[B+160>>2]|0;b=b+H|0;c=z;z=i>>>0>c>>>0?b+1|0:b;s=ia(c^U,z^s,32);e=G+s|0;i=Y;b=t+i|0;b=e>>>0<G>>>0?b+1|0:b;G=e;t=P;P=b;b=ia(L^e,t^b,24);Q=x[B+196>>2];L=b;H=s;e=b;s=b+c|0;t=Y;b=t+z|0;b=e>>>0>s>>>0?b+1|0:b;e=s;z=e+x[B+192>>2]|0;b=b+Q|0;c=z;s=i;i=e>>>0>c>>>0?b+1|0:b;H=ia(H^c,s^i,16);z=G+H|0;Q=Y;b=P+Q|0;b=z>>>0<G>>>0?b+1|0:b;G=z;e=t;t=b;e=ia(L^z,e^b,63);P=Y;z=g;ja=x[B+204>>2];L=w;b=g+m|0;s=w+ha|0;b=s>>>0<w>>>0?b+1|0:b;g=s;w=g+x[B+200>>2]|0;b=b+ja|0;s=w;w=g>>>0>w>>>0?b+1|0:b;l=ia(s^o,w^l,32);m=k+l|0;g=Y;b=r+g|0;b=k>>>0>m>>>0?b+1|0:b;k=m;m=z;z=b;m=ia(L^k,m^b,24);o=m;b=Y;ja=b;r=b;L=m;b=w+ma|0;m=s+O|0;b=m>>>0<O>>>0?b+1|0:b;O=o+m|0;b=b+r|0;s=O;o=g;g=m>>>0>s>>>0?b+1|0:b;o=ia(s^l,o^g,16);O=k+o|0;r=Y;b=z+r|0;b=k>>>0>O>>>0?b+1|0:b;k=O;m=b;O=ia(L^k,b^ja,63);w=Y;ja=x[B+236>>2];z=K;b=q+z|0;l=p+E|0;b=l>>>0<p>>>0?b+1|0:b;q=l;K=l+x[B+232>>2]|0;b=b+ja|0;l=K;K=q>>>0>l>>>0?b+1|0:b;u=ia(l^N,K^u,32);p=J+u|0;q=Y;b=A+q|0;b=p>>>0<J>>>0?b+1|0:b;A=z;z=b;A=ia(p^E,A^b,24);b=Y;N=b;J=b;b=K+na|0;l=l+S|0;b=l>>>0<S>>>0?b+1|0:b;S=l+A|0;b=b+J|0;J=S;E=q;q=l>>>0>J>>>0?b+1|0:b;E=ia(J^u,E^q,16);S=p+E|0;na=Y;b=z+na|0;b=p>>>0>S>>>0?b+1|0:b;p=S;l=b;K=ia(A^p,b^N,63);z=Y;u=P;b=D+pa|0;A=f+M|0;b=A>>>0<M>>>0?b+1|0:b;M=A+e|0;b=b+u|0;b=A>>>0>M>>>0?b+1|0:b;A=M;u=R+A|0;M=b;b=ra+b|0;b=u>>>0<R>>>0?b+1|0:b;R=b;f=u;u=ia(A^E,M^na,32);M=k+u|0;A=Y;b=m+A|0;m=M;M=k>>>0>m>>>0?b+1|0:b;D=ia(m^e,M^P,24);k=D;P=f+k|0;e=Y;b=e+R|0;b=k>>>0>P>>>0?b+1|0:b;k=P;x[B>>2]=k;x[B+4>>2]=b;S=b;b=ia(k^u,b^A,16);P=Y;u=P;x[B+120>>2]=b;x[B+124>>2]=u;R=b;m=b+m|0;b=u+M|0;x[B+80>>2]=m;b=m>>>0<R>>>0?b+1|0:b;x[B+84>>2]=b;ta=B,ua=ia(D^m,b^e,63),x[ta+40>>2]=ua;x[B+44>>2]=Y;M=w;m=x[B+132>>2];e=O;b=i+w|0;R=c+O|0;b=R>>>0<O>>>0?b+1|0:b;O=R+x[B+128>>2]|0;b=b+m|0;b=O>>>0<R>>>0?b+1|0:b;R=b;i=ia(O^n,b^d,32);w=p+i|0;m=Y;b=l+m|0;b=p>>>0>w>>>0?b+1|0:b;p=w;c=M;M=b;l=ia(e^p,c^b,24);w=l+O|0;u=Y;b=R+u|0;b=w>>>0<O>>>0?b+1|0:b;R=x[B+144>>2];O=R+w|0;b=x[B+148>>2]+b|0;b=O>>>0<R>>>0?b+1|0:b;x[B+8>>2]=O;x[B+12>>2]=b;b=ia(i^O,b^m,16);P=Y;w=P;x[B+96>>2]=b;x[B+100>>2]=w;O=b;R=b+p|0;b=w+M|0;M=R;x[B+88>>2]=M;b=O>>>0>M>>>0?b+1|0:b;x[B+92>>2]=b;ta=B,ua=ia(l^M,b^u,63),x[ta+48>>2]=ua;x[B+52>>2]=Y;R=x[B+220>>2];c=W;b=g+z|0;O=s+K|0;b=O>>>0<K>>>0?b+1|0:b;P=O+x[B+216>>2]|0;b=b+R|0;b=P>>>0<O>>>0?b+1|0:b;W=P;R=P;O=c+P|0;P=b;b=b+ga|0;b=O>>>0<R>>>0?b+1|0:b;R=O;O=b;c=R;e=K;R=ia(H^W,P^Q,32);P=C+R|0;K=Y;b=F+K|0;w=P;P=C>>>0>w>>>0?b+1|0:b;z=ia(e^w,P^z,24);g=z;W=c+g|0;i=Y;b=i+O|0;O=W;x[B+16>>2]=O;b=g>>>0>O>>>0?b+1|0:b;x[B+20>>2]=b;b=ia(O^R,b^K,16);M=Y;x[B+104>>2]=b;x[B+108>>2]=M;O=b;W=b+w|0;b=P+M|0;P=W;x[B+64>>2]=P;b=O>>>0>P>>>0?b+1|0:b;x[B+68>>2]=b;ta=B,ua=ia(g^P,b^i,63),x[ta+56>>2]=ua;x[B+60>>2]=Y;b=h+qa|0;O=j+aa|0;b=O>>>0<j>>>0?b+1|0:b;O=J+O|0;b=b+q|0;b=J>>>0>O>>>0?b+1|0:b;aa=b;K=ia(O^o,b^r,32);W=G+K|0;w=Y;b=t+w|0;b=G>>>0>W>>>0?b+1|0:b;M=b;z=ia(W^j,h^b,24);R=z+O|0;g=Y;b=aa+g|0;b=O>>>0>R>>>0?b+1|0:b;aa=x[B+152>>2];O=aa+R|0;b=x[B+156>>2]+b|0;b=O>>>0<aa>>>0?b+1|0:b;x[B+24>>2]=O;x[B+28>>2]=b;b=ia(K^O,b^w,16);x[B+112>>2]=b;aa=Y;x[B+116>>2]=aa;O=b+W|0;b=M+aa|0;M=O;x[B+72>>2]=M;b=M>>>0<W>>>0?b+1|0:b;x[B+76>>2]=b;ta=B,ua=ia(z^M,b^g,63),x[ta+32>>2]=ua;x[B+36>>2]=Y;b=x[B+68>>2]^((y[a+4|0]|y[a+5|0]<<8|(y[a+6|0]<<16|y[a+7|0]<<24))^S);M=x[B+64>>2]^((y[a|0]|y[a+1|0]<<8|(y[a+2|0]<<16|y[a+3|0]<<24))^k);v[a|0]=M;v[a+1|0]=M>>>8;v[a+2|0]=M>>>16;v[a+3|0]=M>>>24;v[a+4|0]=b;v[a+5|0]=b>>>8;v[a+6|0]=b>>>16;v[a+7|0]=b>>>24;S=1;while(1){M=S<<3;b=M+a|0;M=B+M|0;P=M;O=x[M>>2]^(y[b|0]|y[b+1|0]<<8|(y[b+2|0]<<16|y[b+3|0]<<24));M=M- -64|0;aa=x[M>>2];M=x[M+4>>2]^(x[P+4>>2]^(y[b+4|0]|y[b+5|0]<<8|(y[b+6|0]<<16|y[b+7|0]<<24)));P=O^aa;v[b|0]=P;v[b+1|0]=P>>>8;v[b+2|0]=P>>>16;v[b+3|0]=P>>>24;v[b+4|0]=M;v[b+5|0]=M>>>8;v[b+6|0]=M>>>16;v[b+7|0]=M>>>24;S=S+1|0;if((S|0)!=8){continue}break}V=B+256|0}function pf(a,b,c,d,e,f,g){var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,w=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,W=0,X=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,pa=0,qa=0,ra=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0;p=V-560|0;V=p;hd(p+352|0,g);Qb(p+288|0,f,32,0);Na(p+352|0,p+320|0,32,0);Na(p+352|0,c,d,e);_a(p+352|0,p+224|0);m=f;l=y[m+32|0]|y[m+33|0]<<8|(y[m+34|0]<<16|y[m+35|0]<<24);k=y[m+36|0]|y[m+37|0]<<8|(y[m+38|0]<<16|y[m+39|0]<<24);j=y[m+40|0]|y[m+41|0]<<8|(y[m+42|0]<<16|y[m+43|0]<<24);h=y[m+44|0]|y[m+45|0]<<8|(y[m+46|0]<<16|y[m+47|0]<<24);i=y[m+48|0]|y[m+49|0]<<8|(y[m+50|0]<<16|y[m+51|0]<<24);f=y[m+52|0]|y[m+53|0]<<8|(y[m+54|0]<<16|y[m+55|0]<<24);n=y[m+60|0]|y[m+61|0]<<8|(y[m+62|0]<<16|y[m+63|0]<<24);m=y[m+56|0]|y[m+57|0]<<8|(y[m+58|0]<<16|y[m+59|0]<<24);v[a+56|0]=m;v[a+57|0]=m>>>8;v[a+58|0]=m>>>16;v[a+59|0]=m>>>24;v[a+60|0]=n;v[a+61|0]=n>>>8;v[a+62|0]=n>>>16;v[a+63|0]=n>>>24;v[a+48|0]=i;v[a+49|0]=i>>>8;v[a+50|0]=i>>>16;v[a+51|0]=i>>>24;v[a+52|0]=f;v[a+53|0]=f>>>8;v[a+54|0]=f>>>16;v[a+55|0]=f>>>24;v[a+40|0]=j;v[a+41|0]=j>>>8;v[a+42|0]=j>>>16;v[a+43|0]=j>>>24;v[a+44|0]=h;v[a+45|0]=h>>>8;v[a+46|0]=h>>>16;v[a+47|0]=h>>>24;f=a+32|0;i=f;v[i|0]=l;v[i+1|0]=l>>>8;v[i+2|0]=l>>>16;v[i+3|0]=l>>>24;v[i+4|0]=k;v[i+5|0]=k>>>8;v[i+6|0]=k>>>16;v[i+7|0]=k>>>24;Eb(p+224|0);Yb(p,p+224|0);mb(a,p);hd(p+352|0,g);Na(p+352|0,a,64,0);Na(p+352|0,c,d,e);_a(p+352|0,p+160|0);Eb(p+160|0);v[p+288|0]=y[p+288|0]&248;v[p+319|0]=y[p+319|0]&63|64;a=p+160|0;Ja=sa(a);z=y[a+2|0]|y[a+3|0]<<8|(y[a+4|0]<<16|y[a+5|0]<<24);na=sa(a+5|0);ia=Y;t=y[a+7|0]|y[a+8|0]<<8|(y[a+9|0]<<16|y[a+10|0]<<24);A=y[a+10|0]|y[a+11|0]<<8|(y[a+12|0]<<16|y[a+13|0]<<24);ja=sa(a+13|0);q=Y;u=y[a+15|0]|y[a+16|0]<<8|(y[a+17|0]<<16|y[a+18|0]<<24);Pa=sa(a+18|0);B=Y;ka=sa(a+21|0);j=y[a+23|0]|y[a+24|0]<<8|(y[a+25|0]<<16|y[a+26|0]<<24);m=sa(a+26|0);g=Y;e=y[a+28|0]|y[a+29|0]<<8|(y[a+30|0]<<16|y[a+31|0]<<24);a=p+288|0;Fa=sa(a);w=y[a+2|0]|y[a+3|0]<<8|(y[a+4|0]<<16|y[a+5|0]<<24);Va=sa(a+5|0);o=Y;s=y[a+7|0]|y[a+8|0]<<8|(y[a+9|0]<<16|y[a+10|0]<<24);r=y[a+10|0]|y[a+11|0]<<8|(y[a+12|0]<<16|y[a+13|0]<<24);Wa=sa(a+13|0);n=Y;h=y[a+15|0]|y[a+16|0]<<8|(y[a+17|0]<<16|y[a+18|0]<<24);Qa=sa(a+18|0);i=Y;Ka=sa(a+21|0);d=y[a+23|0]|y[a+24|0]<<8|(y[a+25|0]<<16|y[a+26|0]<<24);l=sa(a+26|0);c=Y;a=y[a+28|0]|y[a+29|0]<<8|(y[a+30|0]<<16|y[a+31|0]<<24);la=p+224|0;ob=sa(la);k=la;pb=y[k+2|0]|y[k+3|0]<<8|(y[k+4|0]<<16|y[k+5|0]<<24);qb=sa(k+5|0);rb=Y;Ga=y[k+7|0]|y[k+8|0]<<8|(y[k+9|0]<<16|y[k+10|0]<<24);Da=y[k+10|0]|y[k+11|0]<<8|(y[k+12|0]<<16|y[k+13|0]<<24);La=sa(k+13|0);pa=Y;Ea=y[k+15|0]|y[k+16|0]<<8|(y[k+17|0]<<16|y[k+18|0]<<24);eb=sa(k+18|0);J=Y;H=sa(k+21|0);K=a>>>7|0;L=((g&3)<<30|m>>>2)&2097151;a=Fj(K,0,L,0);k=Y;g=a;M=((c&3)<<30|l>>>2)&2097151;N=e>>>7|0;a=Fj(M,0,N,0);e=g+a|0;c=Y+k|0;k=e;e=a>>>0>e>>>0?c+1|0:c;a=Fj(L,qa,M,ra);g=Y;O=d>>>5&2097151;c=Fj(O,0,N,0);d=c+a|0;a=Y+g|0;a=c>>>0>d>>>0?a+1|0:a;c=a;P=j>>>5&2097151;a=Fj(K,0,P,0);d=a+d|0;c=Y+c|0;j=d;c=a>>>0>d>>>0?c+1|0:c;E=c;a=d;c=c-((a>>>0<4293918720)-1|0)|0;F=a- -1048576|0;C=c;d=c>>21;c=(c&2097151)<<11|F>>>21;g=c+k|0;a=d+e|0;e=g;a=c>>>0>e>>>0?a+1|0:a;m=a;a=e;D=m-((a>>>0<4293918720)-1|0)|0;G=a- -1048576|0;a=Fj(K,0,N,0);Ha=a- -1048576|0;Ia=Y;c=Ia-((a>>>0<4293918720)-1|0)|0;l=D;d=l>>21;D=Ha&-2097152;g=a-D|0;fb=g+((l&2097151)<<11|G>>>21)|0;a=(Ia-((a>>>0<D>>>0)+c|0)|0)+d|0;Ma=fb;a=g>>>0>Ma>>>0?a+1|0:a;Xa=a;k=Fj(Ma,a,-683901,-1);g=Y;a=c>>21;Ya=a;Ra=(c&2097151)<<11|Ha>>>21;a=Fj(Ra,a,136657,0);c=a+k|0;d=Y+g|0;D=c;k=a>>>0>c>>>0?d+1|0:d;Q=((n&1)<<31|Wa>>>1)&2097151;a=Fj(Q,0,L,qa);c=Y;d=a;R=r>>>4&2097151;a=Fj(R,0,N,0);d=d+a|0;c=Y+c|0;c=a>>>0>d>>>0?c+1|0:c;S=h>>>6&2097151;a=Fj(S,0,P,0);d=a+d|0;c=Y+c|0;c=a>>>0>d>>>0?c+1|0:c;a=0;ma=a;g=d;T=Ka&2097151;U=((B&7)<<29|Pa>>>3)&2097151;d=Fj(T,a,U,0);g=g+d|0;a=Y+c|0;a=d>>>0>g>>>0?a+1|0:a;W=((i&7)<<29|Qa>>>3)&2097151;X=ka&2097151;d=Fj(W,0,X,0);g=d+g|0;c=Y+a|0;c=d>>>0>g>>>0?c+1|0:c;Z=u>>>6&2097151;a=Fj(O,0,Z,0);g=a+g|0;d=Y+c|0;d=a>>>0>g>>>0?d+1|0:d;_=((q&1)<<31|ja>>>1)&2097151;c=Fj(M,ra,_,0);g=c+g|0;a=Y+d|0;d=g;c=c>>>0>d>>>0?a+1|0:a;$=A>>>4&2097151;a=Fj(K,0,$,0);d=a+d|0;c=Y+c|0;B=d;g=a>>>0>d>>>0?c+1|0:c;a=Fj(L,qa,R,0);c=Y;d=a;aa=s>>>7&2097151;a=Fj(aa,0,N,0);i=d+a|0;d=Y+c|0;d=a>>>0>i>>>0?d+1|0:d;c=Fj(P,0,Q,ta);i=c+i|0;a=Y+d|0;a=c>>>0>i>>>0?a+1|0:a;d=Fj(S,0,X,ua);i=d+i|0;c=Y+a|0;c=d>>>0>i>>>0?c+1|0:c;a=Fj(T,ma,Z,0);d=a+i|0;c=Y+c|0;c=a>>>0>d>>>0?c+1|0:c;a=d;d=Fj(U,va,W,wa);i=a+d|0;a=Y+c|0;a=d>>>0>i>>>0?a+1|0:a;c=Fj(O,0,_,xa);i=c+i|0;d=Y+a|0;d=c>>>0>i>>>0?d+1|0:d;c=Fj(M,ra,$,0);i=c+i|0;a=Y+d|0;d=i;c=c>>>0>d>>>0?a+1|0:a;ba=t>>>7&2097151;a=Fj(K,0,ba,0);d=a+d|0;c=Y+c|0;r=d;c=a>>>0>d>>>0?c+1|0:c;h=c;a=d;c=c-((a>>>0<4293918720)-1|0)|0;n=a- -1048576|0;i=c;d=c>>21;c=(c&2097151)<<11|n>>>21;s=c+B|0;a=d+g|0;a=c>>>0>s>>>0?a+1|0:a;g=s;d=g;s=d+D|0;c=a;a=a+k|0;a=d>>>0>s>>>0?a+1|0:a;d=s;k=c;c=g;k=k-((c>>>0<4293918720)-1|0)|0;q=c- -1048576|0;c=d;d=q&-2097152;u=c-d|0;g=k;B=a-(g+(c>>>0<d>>>0)|0)|0;a=G&-2097152;c=m-((a>>>0>e>>>0)+l|0)|0;Sa=e-a|0;Za=c;a=Fj(Ra,Ya,-997805,-1);e=a+r|0;d=Y+h|0;d=a>>>0>e>>>0?d+1|0:d;a=e;e=Fj(Ma,Xa,136657,0);h=a+e|0;a=Y+d|0;c=Fj(Sa,c,-683901,-1);d=c+h|0;a=Y+(e>>>0>h>>>0?a+1|0:a)|0;a=c>>>0>d>>>0?a+1|0:a;c=n&-2097152;k=d-c|0;h=a-((c>>>0>d>>>0)+i|0)|0;a=Fj(L,qa,aa,0);d=Y;ca=((o&3)<<30|Va>>>2)&2097151;c=Fj(ca,0,N,0);e=c+a|0;a=Y+d|0;a=c>>>0>e>>>0?a+1|0:a;d=Fj(P,0,R,0);e=d+e|0;c=Y+a|0;c=d>>>0>e>>>0?c+1|0:c;a=Fj(Q,ta,X,ua);e=a+e|0;d=Y+c|0;d=a>>>0>e>>>0?d+1|0:d;c=Fj(S,0,U,va);e=c+e|0;a=Y+d|0;a=c>>>0>e>>>0?a+1|0:a;d=Fj(T,ma,_,xa);e=d+e|0;c=Y+a|0;c=d>>>0>e>>>0?c+1|0:c;d=Fj(W,wa,Z,0);e=d+e|0;a=Y+c|0;a=d>>>0>e>>>0?a+1|0:a;d=Fj(O,0,$,0);e=d+e|0;c=Y+a|0;c=d>>>0>e>>>0?c+1|0:c;a=Fj(M,ra,ba,0);e=a+e|0;d=Y+c|0;d=a>>>0>e>>>0?d+1|0:d;da=((ia&3)<<30|na>>>2)&2097151;c=Fj(K,0,da,0);e=c+e|0;a=Y+d|0;i=e;e=c>>>0>e>>>0?a+1|0:a;a=Fj(L,qa,ca,ya);c=Y;d=a;ea=w>>>5&2097151;a=Fj(ea,0,N,0);d=d+a|0;c=Y+c|0;c=a>>>0>d>>>0?c+1|0:c;a=Fj(P,0,aa,0);l=a+d|0;d=Y+c|0;d=a>>>0>l>>>0?d+1|0:d;c=Fj(R,0,X,ua);l=c+l|0;a=Y+d|0;a=c>>>0>l>>>0?a+1|0:a;c=Fj(Q,ta,U,va);d=c+l|0;a=Y+a|0;a=c>>>0>d>>>0?a+1|0:a;c=d;d=Fj(S,0,Z,0);l=c+d|0;c=Y+a|0;c=d>>>0>l>>>0?c+1|0:c;a=Fj(T,ma,$,0);d=a+l|0;c=Y+c|0;c=a>>>0>d>>>0?c+1|0:c;a=Fj(W,wa,_,xa);l=a+d|0;d=Y+c|0;d=a>>>0>l>>>0?d+1|0:d;c=Fj(O,0,ba,0);l=c+l|0;a=Y+d|0;a=c>>>0>l>>>0?a+1|0:a;c=Fj(M,ra,da,za);d=c+l|0;a=Y+a|0;a=c>>>0>d>>>0?a+1|0:a;c=a;fa=z>>>5&2097151;a=Fj(K,0,fa,0);d=a+d|0;c=Y+c|0;s=d;c=a>>>0>d>>>0?c+1|0:c;Va=c;a=d;d=c-((a>>>0<4293918720)-1|0)|0;fb=a- -1048576|0;Wa=d;a=d>>21;c=(d&2097151)<<11|fb>>>21;d=c+i|0;a=a+e|0;r=d;a=c>>>0>d>>>0?a+1|0:a;Qa=a;a=d;d=Qa-((a>>>0<4293918720)-1|0)|0;na=a- -1048576|0;Ka=d;a=d>>21;d=(d&2097151)<<11|na>>>21;e=d+k|0;c=a+h|0;n=e;c=d>>>0>e>>>0?c+1|0:c;Ia=c;a=e;d=c-((a>>>0<4293918720)-1|0)|0;ja=a- -1048576|0;D=d;a=d>>21;c=(d&2097151)<<11|ja>>>21;d=c+u|0;a=a+B|0;h=d;a=c>>>0>d>>>0?a+1|0:a;G=a;a=d;d=G-((a>>>0<4293918720)-1|0)|0;ka=a- -1048576|0;z=d;m=(d&2097151)<<11|ka>>>21;i=d>>21;a=Fj(L,qa,S,0);c=Y;d=a;a=Fj(N,0,Q,ta);d=d+a|0;c=Y+c|0;c=a>>>0>d>>>0?c+1|0:c;a=Fj(T,ma,X,ua);d=a+d|0;c=Y+c|0;c=a>>>0>d>>>0?c+1|0:c;a=d;d=Fj(P,0,W,wa);e=a+d|0;a=Y+c|0;a=d>>>0>e>>>0?a+1|0:a;c=Fj(O,0,U,va);e=c+e|0;d=Y+a|0;d=c>>>0>e>>>0?d+1|0:d;c=Fj(M,ra,Z,0);e=c+e|0;a=Y+d|0;a=c>>>0>e>>>0?a+1|0:a;d=Fj(K,0,_,xa);e=d+e|0;c=Y+a|0;c=d>>>0>e>>>0?c+1|0:c;d=Fj(Ra,Ya,-683901,-1);k=e+d|0;a=c;c=a+Y|0;c=d>>>0>k>>>0?c+1|0:c;d=k;k=a;a=e;k=k-((a>>>0<4293918720)-1|0)|0;w=a- -1048576|0;a=d;d=w&-2097152;l=a-d|0;e=k;d=c-(e+(a>>>0<d>>>0)|0)|0;a=g>>21;c=(g&2097151)<<11|q>>>21;g=c+l|0;a=a+d|0;a=c>>>0>g>>>0?a+1|0:a;c=g;o=c- -1048576|0;l=a-((c>>>0<4293918720)-1|0)|0;g=l;d=o&-2097152;k=c-d|0;m=k+m|0;d=(a-((c>>>0<d>>>0)+g|0)|0)+i|0;$a=m;d=k>>>0>m>>>0?d+1|0:d;ab=d;l=Fj(m,d,-683901,-1);k=Y;c=Fj(P,0,T,ma);a=Y;d=c;c=Fj(N,0,S,0);d=d+c|0;a=Y+a|0;a=c>>>0>d>>>0?a+1|0:a;c=d;d=Fj(L,qa,W,wa);i=c+d|0;c=Y+a|0;c=d>>>0>i>>>0?c+1|0:c;d=Fj(O,0,X,ua);i=d+i|0;a=Y+c|0;a=d>>>0>i>>>0?a+1|0:a;d=Fj(M,ra,U,va);i=d+i|0;c=Y+a|0;c=d>>>0>i>>>0?c+1|0:c;a=Fj(K,0,Z,0);i=a+i|0;d=Y+c|0;d=a>>>0>i>>>0?d+1|0:d;a=e>>21;c=(e&2097151)<<11|w>>>21;e=c+i|0;a=a+d|0;a=c>>>0>e>>>0?a+1|0:a;c=e;Aa=c- -1048576|0;i=a-((c>>>0<4293918720)-1|0)|0;t=i;d=Aa&-2097152;e=c-d|0;d=(a-((c>>>0<d>>>0)+i|0)|0)+(g>>21)|0;a=(g&2097151)<<11|o>>>21;e=a+e|0;bb=e;d=a>>>0>e>>>0?d+1|0:d;cb=d;c=Fj(e,d,136657,0);d=c+l|0;a=Y+k|0;Pa=d;A=c>>>0>d>>>0?a+1|0:a;c=Fj(X,ua,ea,0);a=Y;d=c;ga=Fa&2097151;c=Fj(ga,0,P,0);d=d+c|0;a=Y+a|0;a=c>>>0>d>>>0?a+1|0:a;c=d;d=Fj(U,va,ca,ya);e=c+d|0;c=Y+a|0;c=d>>>0>e>>>0?c+1|0:c;a=Fj(Z,0,aa,0);e=a+e|0;d=Y+c|0;d=a>>>0>e>>>0?d+1|0:d;c=Fj(R,0,_,xa);e=c+e|0;a=Y+d|0;a=c>>>0>e>>>0?a+1|0:a;d=Fj(Q,ta,$,0);e=d+e|0;c=Y+a|0;c=d>>>0>e>>>0?c+1|0:c;d=Fj(S,0,ba,0);e=d+e|0;a=Y+c|0;a=d>>>0>e>>>0?a+1|0:a;d=Fj(T,ma,fa,0);e=d+e|0;c=Y+a|0;c=d>>>0>e>>>0?c+1|0:c;a=Fj(W,wa,da,za);e=a+e|0;d=Y+c|0;d=a>>>0>e>>>0?d+1|0:d;ha=Ja&2097151;c=Fj(O,0,ha,0);e=c+e|0;a=Y+d|0;a=c>>>0>e>>>0?a+1|0:a;d=(y[la+23|0]|y[la+24|0]<<8|(y[la+25|0]<<16|y[la+26|0]<<24))>>>5&2097151;e=d+e|0;g=e;e=d>>>0>e>>>0?a+1|0:a;a=Fj(U,va,ea,0);c=Y;d=a;a=Fj(X,ua,ga,Ba);d=d+a|0;c=Y+c|0;c=a>>>0>d>>>0?c+1|0:c;a=Fj(Z,0,ca,ya);i=a+d|0;d=Y+c|0;d=a>>>0>i>>>0?d+1|0:d;c=Fj(_,xa,aa,0);i=c+i|0;a=Y+d|0;a=c>>>0>i>>>0?a+1|0:a;c=Fj(R,0,$,0);d=c+i|0;a=Y+a|0;a=c>>>0>d>>>0?a+1|0:a;c=d;d=Fj(Q,ta,ba,0);i=c+d|0;c=Y+a|0;c=d>>>0>i>>>0?c+1|0:c;a=Fj(S,0,da,za);d=a+i|0;c=Y+c|0;c=a>>>0>d>>>0?c+1|0:c;a=Fj(ha,Ca,T,ma);i=a+d|0;d=Y+c|0;d=a>>>0>i>>>0?d+1|0:d;c=Fj(W,wa,fa,0);i=c+i|0;a=Y+d|0;a=c>>>0>i>>>0?a+1|0:a;c=H&2097151;d=c+i|0;i=d;a=c>>>0>d>>>0?a+1|0:a;q=a;a=d;d=q-((a>>>0<4293918720)-1|0)|0;ia=a- -1048576|0;u=d;a=(d&2097151)<<11|ia>>>21;g=a+g|0;d=(d>>>21|0)+e|0;d=a>>>0>g>>>0?d+1|0:d;o=d;a=F&-2097152;Fa=j-a|0;H=E-((a>>>0>j>>>0)+C|0)|0;c=Fj(L,qa,O,0);a=Y;d=c;c=Fj(N,0,T,ma);d=d+c|0;a=Y+a|0;a=c>>>0>d>>>0?a+1|0:a;c=d;d=Fj(M,ra,P,0);e=c+d|0;c=Y+a|0;c=d>>>0>e>>>0?c+1|0:c;a=Fj(K,0,X,ua);e=a+e|0;d=Y+c|0;d=a>>>0>e>>>0?d+1|0:d;k=e;a=Fj(N,0,W,wa);c=Y;e=a;a=Fj(L,qa,T,ma);e=e+a|0;c=Y+c|0;c=a>>>0>e>>>0?c+1|0:c;a=e;e=Fj(O,0,P,0);j=a+e|0;a=Y+c|0;a=e>>>0>j>>>0?a+1|0:a;c=Fj(M,ra,X,ua);e=c+j|0;a=Y+a|0;a=c>>>0>e>>>0?a+1|0:a;c=e;e=Fj(K,0,U,va);j=c+e|0;c=Y+a|0;c=e>>>0>j>>>0?c+1|0:c;e=j;m=c;a=e;j=c-((a>>>0<4293918720)-1|0)|0;E=a- -1048576|0;l=j;a=j>>21;j=(j&2097151)<<11|E>>>21;k=j+k|0;c=a+d|0;d=k;c=j>>>0>d>>>0?c+1|0:c;k=c;a=d;F=c-((a>>>0<4293918720)-1|0)|0;C=a- -1048576|0;j=F;a=j>>21;F=(j&2097151)<<11|C>>>21;Fa=F+Fa|0;c=a+H|0;Oa=Fa;c=F>>>0>Oa>>>0?c+1|0:c;db=c;H=Fj(Oa,c,470296,0);F=Y;c=C&-2097152;a=k-((c>>>0>d>>>0)+j|0)|0;Ta=d-c|0;Ha=a;c=Fj(Sa,Za,666643,0);j=c+H|0;d=Y+F|0;d=c>>>0>j>>>0?d+1|0:d;c=Fj(Ta,a,654183,0);j=c+j|0;a=Y+d|0;k=j;c=c>>>0>j>>>0?a+1|0:a;d=E&-2097152;a=e-d|0;j=m-((d>>>0>e>>>0)+l|0)|0;e=(t&2097151)<<11|Aa>>>21;l=e+a|0;d=(t>>21)+j|0;gb=l;d=e>>>0>l>>>0?d+1|0:d;Ja=d;hb=g- -1048576|0;j=o-((g>>>0<4293918720)-1|0)|0;e=j;a=Fj(l,d,-997805,-1);d=a+k|0;c=Y+c|0;c=a>>>0>d>>>0?c+1|0:c;g=d+g|0;a=c+o|0;a=d>>>0>g>>>0?a+1|0:a;d=g;c=hb&-2097152;H=d-c|0;F=a-((c>>>0>d>>>0)+e|0)|0;a=Fj(Ta,Ha,470296,0);c=Y;d=a;a=Fj(Oa,db,666643,0);g=d+a|0;d=Y+c|0;d=a>>>0>g>>>0?d+1|0:d;c=Fj(l,Ja,654183,0);g=c+g|0;a=Y+d|0;d=g+i|0;c=q+(c>>>0>g>>>0?a+1|0:a)|0;c=d>>>0<i>>>0?c+1|0:c;a=ia&-2097152;o=d-a|0;j=c-((a>>>0>d>>>0)+u|0)|0;c=Fj(Z,0,ea,0);a=Y;d=c;c=Fj(U,va,ga,Ba);d=d+c|0;a=Y+a|0;a=c>>>0>d>>>0?a+1|0:a;c=Fj(_,xa,ca,ya);d=c+d|0;a=Y+a|0;a=c>>>0>d>>>0?a+1|0:a;c=d;d=Fj($,0,aa,0);g=c+d|0;c=Y+a|0;c=d>>>0>g>>>0?c+1|0:c;a=Fj(R,0,ba,0);g=a+g|0;d=Y+c|0;d=a>>>0>g>>>0?d+1|0:d;a=Fj(Q,ta,da,za);g=a+g|0;c=Y+d|0;c=a>>>0>g>>>0?c+1|0:c;d=Fj(S,0,fa,0);g=d+g|0;a=Y+c|0;a=d>>>0>g>>>0?a+1|0:a;c=Fj(ha,Ca,W,wa);d=c+g|0;a=Y+a|0;a=c>>>0>d>>>0?a+1|0:a;c=d;d=((J&7)<<29|eb>>>3)&2097151;g=c+d|0;i=g;g=d>>>0>g>>>0?a+1|0:a;a=Fj(_,xa,ea,0);c=Y;d=a;a=Fj(Z,0,ga,Ba);k=d+a|0;d=Y+c|0;d=a>>>0>k>>>0?d+1|0:d;c=Fj($,0,ca,ya);k=c+k|0;a=Y+d|0;a=c>>>0>k>>>0?a+1|0:a;d=Fj(aa,0,ba,0);k=d+k|0;c=Y+a|0;c=d>>>0>k>>>0?c+1|0:c;d=Fj(R,0,da,za);k=d+k|0;a=Y+c|0;a=d>>>0>k>>>0?a+1|0:a;d=Fj(Q,ta,fa,0);k=d+k|0;c=Y+a|0;c=d>>>0>k>>>0?c+1|0:c;a=Fj(ha,Ca,S,0);k=a+k|0;d=Y+c|0;c=k;a=a>>>0>c>>>0?d+1|0:d;c=Ea>>>6&2097151;d=k+c|0;E=d;a=c>>>0>d>>>0?a+1|0:a;m=a;a=d;d=m-((a>>>0<4293918720)-1|0)|0;C=a- -1048576|0;B=d;a=(d&2097151)<<11|C>>>21;i=a+i|0;d=(d>>>21|0)+g|0;g=i;d=a>>>0>g>>>0?d+1|0:d;l=d;a=g;d=d-((a>>>0<4293918720)-1|0)|0;t=a- -1048576|0;k=d;c=d>>>21|0;d=(d&2097151)<<11|t>>>21;i=d+o|0;a=c+j|0;q=i;a=d>>>0>i>>>0?a+1|0:a;j=a;a=i;d=j-((a>>>0<4293918720)-1|0)|0;u=a- -1048576|0;w=d;a=(d&2097151)<<11|u>>>21;i=a+H|0;d=(d>>21)+F|0;d=a>>>0>i>>>0?d+1|0:d;J=i+Pa|0;c=d;a=c+A|0;a=i>>>0>J>>>0?a+1|0:a;d=J;o=c;c=i;o=o-((c>>>0<4293918720)-1|0)|0;ib=c- -1048576|0;c=d;d=ib&-2097152;jb=c-d|0;i=o;I=a-(i+(c>>>0<d>>>0)|0)|0;a=Fj(bb,cb,-997805,-1);d=a+q|0;c=Y+j|0;Aa=d;o=a>>>0>d>>>0?c+1|0:c;c=Fj(gb,Ja,470296,0);a=Y;d=c;c=Fj(Ta,Ha,666643,0);d=d+c|0;a=Y+a|0;a=c>>>0>d>>>0?a+1|0:a;c=d+g|0;a=a+l|0;a=c>>>0<g>>>0?a+1|0:a;d=c;c=t&-2097152;t=d-c|0;A=a-((c>>>0>d>>>0)+k|0)|0;a=Fj(gb,Ja,666643,0);d=a+E|0;c=Y+m|0;q=d;j=a>>>0>d>>>0?c+1|0:c;c=Fj($,0,ea,0);a=Y;d=c;c=Fj(_,xa,ga,Ba);d=d+c|0;a=Y+a|0;a=c>>>0>d>>>0?a+1|0:a;c=Fj(ba,0,ca,ya);d=c+d|0;a=Y+a|0;a=c>>>0>d>>>0?a+1|0:a;c=d;d=Fj(aa,0,da,za);g=c+d|0;c=Y+a|0;c=d>>>0>g>>>0?c+1|0:c;a=Fj(R,0,fa,0);g=a+g|0;d=Y+c|0;d=a>>>0>g>>>0?d+1|0:d;a=Fj(ha,Ca,Q,ta);g=a+g|0;c=Y+d|0;c=a>>>0>g>>>0?c+1|0:c;d=((pa&1)<<31|La>>>1)&2097151;g=d+g|0;a=c;k=g;g=d>>>0>g>>>0?a+1|0:a;c=Fj(ba,0,ea,0);a=Y;d=c;c=Fj($,0,ga,Ba);d=d+c|0;a=Y+a|0;a=c>>>0>d>>>0?a+1|0:a;c=d;d=Fj(ca,ya,da,za);l=c+d|0;c=Y+a|0;c=d>>>0>l>>>0?c+1|0:c;a=Fj(aa,0,fa,0);d=a+l|0;c=Y+c|0;c=a>>>0>d>>>0?c+1|0:c;a=Fj(ha,Ca,R,0);l=a+d|0;d=Y+c|0;c=l;a=a>>>0>c>>>0?d+1|0:d;c=Da>>>4&2097151;d=l+c|0;m=d;a=c>>>0>d>>>0?a+1|0:a;ia=a;a=d;d=ia-((a>>>0<4293918720)-1|0)|0;eb=a- -1048576|0;Da=d;a=(d&2097151)<<11|eb>>>21;k=a+k|0;d=(d>>>21|0)+g|0;l=k;d=a>>>0>k>>>0?d+1|0:d;pa=d;a=k;d=d-((a>>>0<4293918720)-1|0)|0;Pa=a- -1048576|0;Ea=d;c=d>>>21|0;d=(d&2097151)<<11|Pa>>>21;g=d+q|0;a=c+j|0;c=g;d=d>>>0>c>>>0?a+1|0:a;a=C&-2097152;J=d-((a>>>0>c>>>0)+B|0)|0;k=c-a|0;a=k;d=J-((a>>>0<4293918720)-1|0)|0;Fa=a- -1048576|0;E=d;c=d>>21;a=(d&2097151)<<11|Fa>>>21;d=a+t|0;c=c+A|0;H=d;c=a>>>0>d>>>0?c+1|0:c;C=c;a=d;g=c-((a>>>0<4293918720)-1|0)|0;F=a- -1048576|0;t=g;a=ka&-2097152;d=G-((a>>>0>h>>>0)+z|0)|0;Ua=h-a|0;La=d;c=g>>21;g=(g&2097151)<<11|F>>>21;h=g+Aa|0;a=c+o|0;a=g>>>0>h>>>0?a+1|0:a;g=Fj($a,ab,136657,0);c=u&-2097152;j=g+(h-c|0)|0;c=Y+(a-((c>>>0>h>>>0)+w|0)|0)|0;c=g>>>0>j>>>0?c+1|0:c;d=Fj(Ua,d,-683901,-1);g=d+j|0;a=Y+c|0;j=g;a=d>>>0>g>>>0?a+1|0:a;A=a;a=g;d=A-((a>>>0<4293918720)-1|0)|0;ka=a- -1048576|0;q=d;c=d>>21;a=(d&2097151)<<11|ka>>>21;d=a+jb|0;c=c+I|0;h=d;c=a>>>0>d>>>0?c+1|0:c;u=c;a=d;d=c-((a>>>0<4293918720)-1|0)|0;G=a- -1048576|0;B=d;Aa=(d&2097151)<<11|G>>>21;w=d>>21;c=Fj(P,0,ea,0);a=Y;d=c;c=Fj(L,qa,ga,Ba);d=d+c|0;a=Y+a|0;a=c>>>0>d>>>0?a+1|0:a;c=Fj(X,ua,ca,ya);g=c+d|0;d=Y+a|0;d=c>>>0>g>>>0?d+1|0:d;a=Fj(U,va,aa,0);g=a+g|0;c=Y+d|0;c=a>>>0>g>>>0?c+1|0:c;d=Fj(R,0,Z,0);g=d+g|0;a=Y+c|0;a=d>>>0>g>>>0?a+1|0:a;d=Fj(Q,ta,_,xa);g=d+g|0;c=Y+a|0;c=d>>>0>g>>>0?c+1|0:c;d=Fj(S,0,$,0);g=d+g|0;a=Y+c|0;a=d>>>0>g>>>0?a+1|0:a;c=Fj(T,ma,da,za);g=c+g|0;d=Y+a|0;d=c>>>0>g>>>0?d+1|0:d;a=Fj(W,wa,ba,0);g=a+g|0;c=Y+d|0;c=a>>>0>g>>>0?c+1|0:c;d=Fj(O,0,fa,0);g=d+g|0;a=Y+c|0;a=d>>>0>g>>>0?a+1|0:a;d=Fj(ha,Ca,M,ra);g=d+g|0;c=Y+a|0;c=d>>>0>g>>>0?c+1|0:c;a=sa(la+26|0);d=Y;d=((d&3)<<30|a>>>2)&2097151;g=d+g|0;a=c;z=g;a=d>>>0>g>>>0?a+1|0:a;g=a;a=Fj(Sa,Za,470296,0);c=Y;d=a;a=Fj(Ma,Xa,666643,0);I=d+a|0;d=Y+c|0;d=a>>>0>I>>>0?d+1|0:d;a=Fj(Oa,db,654183,0);I=a+I|0;c=Y+d|0;c=a>>>0>I>>>0?c+1|0:c;a=Fj(Ta,Ha,-997805,-1);d=a+I|0;c=Y+c|0;c=a>>>0>d>>>0?c+1|0:c;a=d;d=Fj(gb,Ja,136657,0);I=a+d|0;a=Y+c|0;a=d>>>0>I>>>0?a+1|0:a;c=I;d=c+z|0;a=a+g|0;a=c>>>0>d>>>0?a+1|0:a;c=d;d=a;a=z;o=g-((a>>>0<4293918720)-1|0)|0;kb=a- -1048576|0;g=o;o=c;c=e>>>21|0;a=(e&2097151)<<11|hb>>>21;e=o+a|0;d=c+d|0;d=a>>>0>e>>>0?d+1|0:d;a=kb&-2097152;c=e-a|0;z=Fj(bb,cb,-683901,-1);I=c+z|0;e=d-((a>>>0>e>>>0)+g|0)|0;a=e+Y|0;a=z>>>0>I>>>0?a+1|0:a;z=I;d=a;a=c;o=e-((a>>>0<4293918720)-1|0)|0;lb=a- -1048576|0;e=o;c=i>>21;a=(i&2097151)<<11|ib>>>21;i=a+z|0;d=c+d|0;d=a>>>0>i>>>0?d+1|0:d;a=lb&-2097152;c=i-a|0;z=c;Aa=c+Aa|0;i=d-((a>>>0>i>>>0)+e|0)|0;a=i+w|0;d=Aa;nb=c- -1048576|0;o=i-((c>>>0<4293918720)-1|0)|0;i=o;c=d;d=nb&-2097152;sb=c-d|0;hb=(z>>>0>c>>>0?a+1|0:a)-((c>>>0<d>>>0)+i|0)|0;a=G&-2097152;ib=h-a|0;jb=u-((a>>>0>h>>>0)+B|0)|0;a=ka&-2097152;I=j-a|0;Aa=A-((a>>>0>j>>>0)+q|0)|0;c=Fj(bb,cb,654183,0);d=c+H|0;a=Y+C|0;a=c>>>0>d>>>0?a+1|0:a;h=d;c=F&-2097152;d=Fj($a,ab,-997805,-1);j=(h-c|0)+d|0;c=Y+(a-((c>>>0>h>>>0)+t|0)|0)|0;c=d>>>0>j>>>0?c+1|0:c;d=Fj(Ua,La,136657,0);h=d+j|0;a=Y+c|0;ka=h;q=d>>>0>h>>>0?a+1|0:a;a=ja&-2097152;G=n-a|0;t=Ia-((a>>>0>n>>>0)+D|0)|0;a=Fj(Ma,Xa,-997805,-1);c=Y;d=a;a=Fj(Ra,Ya,654183,0);d=d+a|0;c=Y+c|0;c=a>>>0>d>>>0?c+1|0:c;a=Fj(Sa,Za,136657,0);d=a+d|0;c=Y+c|0;c=a>>>0>d>>>0?c+1|0:c;a=d;d=Fj(Oa,db,-683901,-1);h=a+d|0;a=Y+c|0;c=h+r|0;d=Qa+(d>>>0>h>>>0?a+1|0:a)|0;d=c>>>0<r>>>0?d+1|0:d;a=na&-2097152;A=c-a|0;r=d-((a>>>0>c>>>0)+Ka|0)|0;a=Fj(Ma,Xa,654183,0);c=Y;d=a;a=Fj(Ra,Ya,470296,0);d=d+a|0;c=Y+c|0;c=a>>>0>d>>>0?c+1|0:c;a=d;d=Fj(Sa,Za,-997805,-1);h=a+d|0;a=Y+c|0;c=h+s|0;d=Va+(d>>>0>h>>>0?a+1|0:a)|0;a=Fj(Oa,db,136657,0);h=a+c|0;c=Y+(c>>>0<s>>>0?d+1|0:d)|0;c=a>>>0>h>>>0?c+1|0:c;d=Fj(Ta,Ha,-683901,-1);h=d+h|0;a=Y+c|0;a=d>>>0>h>>>0?a+1|0:a;d=h;c=fb&-2097152;n=d-c|0;h=a-((c>>>0>d>>>0)+Wa|0)|0;c=Fj(L,qa,ea,0);a=Y;d=c;c=Fj(N,0,ga,Ba);d=d+c|0;a=Y+a|0;a=c>>>0>d>>>0?a+1|0:a;c=d;d=Fj(P,0,ca,ya);j=c+d|0;c=Y+a|0;c=d>>>0>j>>>0?c+1|0:c;d=Fj(X,ua,aa,0);j=d+j|0;a=Y+c|0;a=d>>>0>j>>>0?a+1|0:a;c=Fj(R,0,U,va);j=c+j|0;d=Y+a|0;d=c>>>0>j>>>0?d+1|0:d;a=Fj(Q,ta,Z,0);j=a+j|0;c=Y+d|0;c=a>>>0>j>>>0?c+1|0:c;d=Fj(S,0,_,xa);j=d+j|0;a=Y+c|0;a=d>>>0>j>>>0?a+1|0:a;d=Fj(T,ma,ba,0);j=d+j|0;c=Y+a|0;c=d>>>0>j>>>0?c+1|0:c;d=Fj(W,wa,$,0);j=d+j|0;a=Y+c|0;a=d>>>0>j>>>0?a+1|0:a;c=Fj(O,0,da,za);j=c+j|0;d=Y+a|0;d=c>>>0>j>>>0?d+1|0:d;a=Fj(ha,Ca,K,0);j=a+j|0;c=Y+d|0;c=a>>>0>j>>>0?c+1|0:c;d=Fj(M,ra,fa,0);j=d+j|0;a=Y+c|0;a=d>>>0>j>>>0?a+1|0:a;d=(y[la+28|0]|y[la+29|0]<<8|(y[la+30|0]<<16|y[la+31|0]<<24))>>>7|0;j=d+j|0;c=d>>>0>j>>>0?a+1|0:a;d=g>>>21|0;g=(g&2097151)<<11|kb>>>21;j=g+j|0;a=c+d|0;a=g>>>0>j>>>0?a+1|0:a;u=a;a=j;c=u-((a>>>0<4293918720)-1|0)|0;z=a- -1048576|0;B=c;d=c>>21;c=(c&2097151)<<11|z>>>21;g=c+n|0;a=d+h|0;h=g;a=c>>>0>g>>>0?a+1|0:a;w=a;a=g;c=w-((a>>>0<4293918720)-1|0)|0;C=a- -1048576|0;o=c;d=c>>21;c=(c&2097151)<<11|C>>>21;g=c+A|0;a=d+r|0;a=c>>>0>g>>>0?a+1|0:a;s=a;a=g;c=s-((a>>>0<4293918720)-1|0)|0;A=a- -1048576|0;r=c;d=c>>21;c=(c&2097151)<<11|A>>>21;n=c+G|0;a=d+t|0;na=n;a=c>>>0>n>>>0?a+1|0:a;D=a;a=Fj(n,a,-683901,-1);d=a+ka|0;c=Y+q|0;q=d;n=a>>>0>d>>>0?c+1|0:c;a=A&-2097152;r=s-((a>>>0>g>>>0)+r|0)|0;ja=g-a|0;G=r;c=Fj(bb,cb,470296,0)+k|0;a=J+Y|0;a=c>>>0<k>>>0?a+1|0:a;g=c;d=Fa&-2097152;c=Fj($a,ab,654183,0);k=(g-d|0)+c|0;d=Y+(a-((d>>>0>g>>>0)+E|0)|0)|0;a=Fj(Ua,La,-997805,-1);g=a+k|0;c=Y+(c>>>0>k>>>0?d+1|0:d)|0;c=a>>>0>g>>>0?c+1|0:c;d=Fj(na,D,136657,0);g=d+g|0;a=Y+c|0;a=d>>>0>g>>>0?a+1|0:a;d=Fj(ja,r,-683901,-1);g=d+g|0;c=Y+a|0;c=d>>>0>g>>>0?c+1|0:c;s=c;a=g;d=c-((a>>>0<4293918720)-1|0)|0;t=a- -1048576|0;r=d;a=d>>21;c=(d&2097151)<<11|t>>>21;d=c+q|0;a=a+n|0;a=c>>>0>d>>>0?a+1|0:a;n=a;a=d;A=n-((a>>>0<4293918720)-1|0)|0;q=a- -1048576|0;k=A;a=k>>21;A=(k&2097151)<<11|q>>>21;E=A+I|0;c=a+Aa|0;F=E;A=A>>>0>E>>>0?c+1|0:c;a=q&-2097152;ka=d-a|0;Va=n-((a>>>0>d>>>0)+k|0)|0;a=t&-2097152;Ka=g-a|0;Ia=s-((a>>>0>g>>>0)+r|0)|0;a=Fj(bb,cb,666643,0);c=Pa&-2097152;g=a+(l-c|0)|0;d=Y+(pa-((c>>>0>l>>>0)+Ea|0)|0)|0;d=a>>>0>g>>>0?d+1|0:d;a=Fj($a,ab,470296,0);g=a+g|0;c=Y+d|0;c=a>>>0>g>>>0?c+1|0:c;d=Fj(Ua,La,654183,0);g=d+g|0;a=Y+c|0;r=g;g=d>>>0>g>>>0?a+1|0:a;a=C&-2097152;n=h-a|0;k=w-((a>>>0>h>>>0)+o|0)|0;c=Fj(Ma,Xa,470296,0);a=Y;d=c;c=Fj(Ra,Ya,666643,0);d=d+c|0;a=Y+a|0;a=c>>>0>d>>>0?a+1|0:a;c=d;d=Fj(Sa,Za,654183,0);h=c+d|0;c=Y+a|0;c=d>>>0>h>>>0?c+1|0:c;d=Fj(Oa,db,-997805,-1);h=d+h|0;a=Y+c|0;a=d>>>0>h>>>0?a+1|0:a;c=Fj(Ta,Ha,136657,0);h=c+h|0;d=Y+a|0;d=c>>>0>h>>>0?d+1|0:d;a=Fj(gb,Ja,-683901,-1);h=a+h|0;c=Y+d|0;d=h+j|0;a=u+(a>>>0>h>>>0?c+1|0:c)|0;a=d>>>0<j>>>0?a+1|0:a;h=d;d=z&-2097152;c=h-d|0;d=a-((d>>>0>h>>>0)+B|0)|0;h=c;a=e>>21;c=(e&2097151)<<11|lb>>>21;e=h+c|0;a=a+d|0;l=e;a=c>>>0>e>>>0?a+1|0:a;w=a;a=e;d=w-((a>>>0<4293918720)-1|0)|0;Ea=a- -1048576|0;o=d;c=(d&2097151)<<11|Ea>>>21;e=c+n|0;d=(d>>21)+k|0;H=e;d=c>>>0>e>>>0?d+1|0:d;z=d;a=Fj(e,d,-683901,-1);d=a+r|0;c=Y+g|0;c=a>>>0>d>>>0?c+1|0:c;a=d;d=Fj(na,D,-997805,-1);e=a+d|0;a=Y+c|0;a=d>>>0>e>>>0?a+1|0:a;d=Fj(ja,G,136657,0);e=d+e|0;c=Y+a|0;B=e;e=d>>>0>e>>>0?c+1|0:c;c=Fj(da,za,ea,0);a=Y;d=c;c=Fj(ba,0,ga,Ba);d=d+c|0;a=Y+a|0;a=c>>>0>d>>>0?a+1|0:a;c=Fj(ca,ya,fa,0);g=c+d|0;d=Y+a|0;d=c>>>0>g>>>0?d+1|0:d;a=Fj(ha,Ca,aa,0);g=a+g|0;c=Y+d|0;d=g;a=a>>>0>d>>>0?c+1|0:c;c=Ga>>>7&2097151;d=c+d|0;j=d;d=c>>>0>d>>>0?a+1|0:a;a=Fj(ea,0,fa,0);c=Y;g=a;a=Fj(da,za,ga,Ba);g=g+a|0;c=Y+c|0;c=a>>>0>g>>>0?c+1|0:c;a=Fj(ha,Ca,ca,ya);g=a+g|0;c=Y+c|0;c=a>>>0>g>>>0?c+1|0:c;a=g;g=((rb&3)<<30|qb>>>2)&2097151;h=a+g|0;a=c;k=h;a=g>>>0>h>>>0?a+1|0:a;g=a;a=h;h=g-((a>>>0<4293918720)-1|0)|0;pa=a- -1048576|0;q=h;c=h>>>21|0;a=(h&2097151)<<11|pa>>>21;h=a+j|0;c=c+d|0;j=h;c=a>>>0>h>>>0?c+1|0:c;u=c;a=h;d=c-((a>>>0<4293918720)-1|0)|0;J=a- -1048576|0;s=d;c=d>>>21|0;d=m+((d&2097151)<<11|J>>>21)|0;a=c+ia|0;a=d>>>0<m>>>0?a+1|0:a;h=d;c=eb&-2097152;d=Fj($a,ab,666643,0);m=(h-c|0)+d|0;c=Y+(a-((c>>>0>h>>>0)+Da|0)|0)|0;c=d>>>0>m>>>0?c+1|0:c;a=Fj(Ua,La,470296,0);d=a+m|0;c=Y+c|0;c=a>>>0>d>>>0?c+1|0:c;a=d;d=Fj(H,z,136657,0);h=a+d|0;a=Y+c|0;a=d>>>0>h>>>0?a+1|0:a;c=Fj(na,D,654183,0);d=c+h|0;a=Y+a|0;a=c>>>0>d>>>0?a+1|0:a;c=Fj(ja,G,-997805,-1);h=c+d|0;d=Y+a|0;E=h;d=c>>>0>h>>>0?d+1|0:d;r=d;a=h;d=d-((a>>>0<4293918720)-1|0)|0;C=a- -1048576|0;n=d;a=d>>21;d=(d&2097151)<<11|C>>>21;h=d+B|0;c=a+e|0;c=d>>>0>h>>>0?c+1|0:c;e=c;a=h;d=c-((a>>>0<4293918720)-1|0)|0;t=a- -1048576|0;m=d;c=(d&2097151)<<11|t>>>21;B=c+Ka|0;d=(d>>21)+Ia|0;Wa=B;B=c>>>0>B>>>0?d+1|0:d;d=i>>21;a=(i&2097151)<<11|nb>>>21;c=Ea&-2097152;i=a+(l-c|0)|0;c=d+(w-((c>>>0>l>>>0)+o|0)|0)|0;c=a>>>0>i>>>0?c+1|0:c;w=c;a=i;c=c-((a>>>0<4293918720)-1|0)|0;Ea=a- -1048576|0;o=c;d=c>>21;Da=d;Ga=(c&2097151)<<11|Ea>>>21;c=Fj(Ga,d,-683901,-1);d=c+h|0;a=Y+e|0;a=c>>>0>d>>>0?a+1|0:a;c=t&-2097152;Qa=d-c|0;Ka=a-((c>>>0>d>>>0)+m|0)|0;a=Fj(Ga,Da,136657,0);d=a+E|0;c=Y+r|0;c=a>>>0>d>>>0?c+1|0:c;a=C&-2097152;Ia=d-a|0;ia=c-((a>>>0>d>>>0)+n|0)|0;a=Fj(Ua,La,666643,0);c=J&-2097152;d=a+(j-c|0)|0;c=Y+(u-((c>>>0>j>>>0)+s|0)|0)|0;c=a>>>0>d>>>0?c+1|0:c;a=d;d=Fj(H,z,-997805,-1);e=a+d|0;a=Y+c|0;a=d>>>0>e>>>0?a+1|0:a;c=Fj(na,D,470296,0);e=c+e|0;d=Y+a|0;d=c>>>0>e>>>0?d+1|0:d;a=Fj(ja,G,654183,0);e=a+e|0;c=Y+d|0;u=e;l=a>>>0>e>>>0?c+1|0:c;h=g;c=Fj(ha,Ca,ea,0);a=Y;d=c;c=Fj(fa,0,ga,Ba);d=d+c|0;a=Y+a|0;a=c>>>0>d>>>0?a+1|0:a;c=d;d=pb>>>5&2097151;e=c+d|0;c=d>>>0>e>>>0?a+1|0:a;j=e;d=ob&2097151;e=Fj(ha,Ca,ga,Ba)+d|0;a=Y;g=e;a=d>>>0>e>>>0?a+1|0:a;s=a;a=e;e=s-((a>>>0<4293918720)-1|0)|0;J=a- -1048576|0;r=e;d=e>>>21|0;a=(e&2097151)<<11|J>>>21;e=a+j|0;c=c+d|0;c=a>>>0>e>>>0?c+1|0:c;n=c;a=e;c=c-((a>>>0<4293918720)-1|0)|0;E=a- -1048576|0;m=c;d=c>>>21|0;c=(c&2097151)<<11|E>>>21;j=c+k|0;a=d+h|0;a=c>>>0>j>>>0?a+1|0:a;d=Fj(H,z,654183,0);h=j;c=pa&-2097152;j=d+(h-c|0)|0;c=Y+(a-((q&16383)+(c>>>0>h>>>0)|0)|0)|0;a=Fj(na,D,666643,0);h=a+j|0;d=Y+(d>>>0>j>>>0?c+1|0:c)|0;d=a>>>0>h>>>0?d+1|0:d;c=Fj(ja,G,470296,0);h=c+h|0;a=Y+d|0;C=h;a=c>>>0>h>>>0?a+1|0:a;k=a;a=h;c=k-((a>>>0<4293918720)-1|0)|0;t=a- -1048576|0;j=c;d=c>>21;c=(c&2097151)<<11|t>>>21;h=c+u|0;a=d+l|0;q=h;a=c>>>0>h>>>0?a+1|0:a;c=a;a=h;l=c-((a>>>0<4293918720)-1|0)|0;u=a- -1048576|0;h=l;d=h>>21;l=(h&2097151)<<11|u>>>21;pa=l+Ia|0;a=d+ia|0;D=pa;l=l>>>0>D>>>0?a+1|0:a;a=Fj(Ga,Da,-997805,-1);d=a+q|0;c=Y+c|0;c=a>>>0>d>>>0?c+1|0:c;a=u&-2097152;ia=d-a|0;pa=c-((a>>>0>d>>>0)+h|0)|0;a=Fj(Ga,Da,654183,0);d=a+C|0;c=Y+k|0;c=a>>>0>d>>>0?c+1|0:c;a=t&-2097152;q=d-a|0;u=c-((a>>>0>d>>>0)+j|0)|0;c=Fj(H,z,470296,0);a=E&-2097152;d=c+(e-a|0)|0;a=Y+(n-((m&16383)+(a>>>0>e>>>0)|0)|0)|0;a=c>>>0>d>>>0?a+1|0:a;c=Fj(ja,G,666643,0);e=c+d|0;d=Y+a|0;d=c>>>0>e>>>0?d+1|0:d;h=e;a=Fj(H,z,666643,0);c=J&-2097152;e=a+(g-c|0)|0;c=Y+(s-((r&4095)+(c>>>0>g>>>0)|0)|0)|0;c=a>>>0>e>>>0?c+1|0:c;k=c;a=e;g=c-((a>>>0<4293918720)-1|0)|0;r=a- -1048576|0;j=g;a=g>>21;c=(g&2097151)<<11|r>>>21;g=c+h|0;d=a+d|0;n=g;d=c>>>0>g>>>0?d+1|0:d;h=d;a=g;d=d-((a>>>0<4293918720)-1|0)|0;m=a- -1048576|0;g=d;a=d>>21;d=(d&2097151)<<11|m>>>21;s=d+q|0;c=a+u|0;c=d>>>0>s>>>0?c+1|0:c;d=c;c=Fj(Ga,Da,470296,0);n=c+n|0;a=Y+h|0;a=c>>>0>n>>>0?a+1|0:a;h=m&-2097152;c=n-h|0;h=a-((h>>>0>n>>>0)+g|0)|0;m=c;a=Fj(Ga,Da,666643,0);c=r&-2097152;g=a+(e-c|0)|0;c=Y+(k-((c>>>0>e>>>0)+j|0)|0)|0;c=a>>>0>g>>>0?c+1|0:c;e=g;a=c>>21;c=(c&2097151)<<11|e>>>21;e=m+c|0;a=a+h|0;a=c>>>0>e>>>0?a+1|0:a;C=e;c=a>>21;a=(a&2097151)<<11|e>>>21;e=a+s|0;d=c+d|0;h=e;c=e;d=a>>>0>c>>>0?d+1|0:d;a=d>>21;d=(d&2097151)<<11|c>>>21;e=d+ia|0;c=a+pa|0;k=e;a=e;c=d>>>0>a>>>0?c+1|0:c;d=c>>21;c=(c&2097151)<<11|a>>>21;e=c+D|0;a=d+l|0;m=e;d=e;a=c>>>0>d>>>0?a+1|0:a;c=a>>21;a=(a&2097151)<<11|d>>>21;d=a+Qa|0;c=c+Ka|0;c=a>>>0>d>>>0?c+1|0:c;t=d;a=c>>21;c=(c&2097151)<<11|d>>>21;d=c+Wa|0;a=a+B|0;a=c>>>0>d>>>0?a+1|0:a;q=d;c=a>>21;a=(a&2097151)<<11|d>>>21;e=a+ka|0;d=c+Va|0;u=e;c=e;d=a>>>0>c>>>0?d+1|0:d;a=d>>21;d=(d&2097151)<<11|c>>>21;e=d+F|0;c=a+A|0;B=e;a=e;c=d>>>0>a>>>0?c+1|0:c;d=c>>21;c=(c&2097151)<<11|a>>>21;e=c+ib|0;a=d+jb|0;s=e;d=e;a=c>>>0>d>>>0?a+1|0:a;c=a>>21;a=(a&2097151)<<11|d>>>21;d=a+sb|0;c=c+hb|0;c=a>>>0>d>>>0?c+1|0:c;r=d;a=c>>21;e=(c&2097151)<<11|d>>>21;d=Ea&-2097152;c=i-d|0;e=e+c|0;d=(w-((d>>>0>i>>>0)+o|0)|0)+a|0;n=e;a=e;d=c>>>0>a>>>0?d+1|0:d;w=(d&2097151)<<11|a>>>21;c=d>>21;l=c;a=g&2097151;d=Fj(w,c,666643,0)+a|0;c=Y;j=d;c=a>>>0>d>>>0?c+1|0:c;e=c;v[f|0]=d;v[f+1|0]=(c&255)<<24|d>>>8;g=f;c=C&2097151;d=Fj(w,l,470296,0)+c|0;a=Y;a=c>>>0>d>>>0?a+1|0:a;o=d;d=e;c=d>>21;i=(d&2097151)<<11|j>>>21;o=o+i|0;d=a+c|0;d=i>>>0>o>>>0?d+1|0:d;i=o;v[g+4|0]=(d&2047)<<21|i>>>11;a=d;d=i;v[g+3|0]=(a&7)<<29|d>>>3;d=h&2097151;h=Fj(w,l,654183,0)+d|0;c=Y;c=d>>>0>h>>>0?c+1|0:c;d=h;h=(a&2097151)<<11|i>>>21;o=d+h|0;a=(a>>21)+c|0;a=h>>>0>o>>>0?a+1|0:a;h=o;c=a;v[g+6|0]=(a&63)<<26|h>>>6;g=0;d=((e&65535)<<16|j>>>16)&31;j=i&2097151;a=j;v[f+2|0]=d|a<<5;e=f;d=k&2097151;i=Fj(w,l,-997805,-1)+d|0;a=Y;a=d>>>0>i>>>0?a+1|0:a;d=a;a=c>>21;c=(c&2097151)<<11|h>>>21;i=c+i|0;d=a+d|0;k=i;d=c>>>0>i>>>0?d+1|0:d;v[e+9|0]=(d&511)<<23|i>>>9;a=d;d=i;v[e+8|0]=(a&1)<<31|d>>>1;i=0;h=h&2097151;d=h;v[e+5|0]=(g&524287)<<13|j>>>19|d<<2;d=m&2097151;g=Fj(w,l,136657,0)+d|0;c=Y;c=d>>>0>g>>>0?c+1|0:c;d=a>>21;a=(a&2097151)<<11|k>>>21;g=a+g|0;c=c+d|0;j=g;c=a>>>0>g>>>0?c+1|0:c;v[e+12|0]=(c&4095)<<20|g>>>12;d=c;a=c;c=g;v[e+11|0]=(a&15)<<28|c>>>4;g=0;m=k&2097151;c=m;v[e+7|0]=(i&16383)<<18|h>>>14|c<<7;c=t&2097151;i=Fj(w,l,-683901,-1)+c|0;a=Y;a=c>>>0>i>>>0?a+1|0:a;c=d>>21;d=(d&2097151)<<11|j>>>21;i=d+i|0;a=a+c|0;h=i;a=d>>>0>h>>>0?a+1|0:a;c=a;v[e+14|0]=(a&127)<<25|h>>>7;i=0;k=j&2097151;d=k;v[e+10|0]=(g&131071)<<15|m>>>17|d<<4;a=a>>21;c=(c&2097151)<<11|h>>>21;j=c+(q&2097151)|0;d=c>>>0>j>>>0?a+1|0:a;v[e+17|0]=(d&1023)<<22|j>>>10;a=d;d=j;v[e+16|0]=(a&3)<<30|d>>>2;l=h&2097151;d=l;v[e+13|0]=(i&1048575)<<12|k>>>20|d<<1;c=a;a=a>>21;d=(c&2097151)<<11|j>>>21;h=d+(u&2097151)|0;c=d>>>0>h>>>0?a+1|0:a;v[e+20|0]=(c&8191)<<19|h>>>13;a=c;c=h;v[e+19|0]=(a&31)<<27|c>>>5;k=j&2097151;c=k;v[e+15|0]=(g&32767)<<17|l>>>15|c<<6;c=a;a=a>>21;e=(c&2097151)<<11|h>>>21;l=e+(B&2097151)|0;c=e>>>0>l>>>0?a+1|0:a;v[f+21|0]=l;a=h;v[f+18|0]=(i&262143)<<14|k>>>18|a<<3;e=c;a=c;c=l;v[f+22|0]=(a&255)<<24|c>>>8;g=f;c=a>>21;a=(a&2097151)<<11|l>>>21;h=a+(s&2097151)|0;d=a>>>0>h>>>0?c+1|0:c;v[g+25|0]=(d&2047)<<21|h>>>11;a=d;d=h;v[g+24|0]=(a&7)<<29|d>>>3;d=g;g=(a&2097151)<<11|h>>>21;j=g+(r&2097151)|0;c=a>>21;i=j;c=g>>>0>i>>>0?c+1|0:c;a=c;v[d+27|0]=(a&63)<<26|i>>>6;g=0;j=h&2097151;c=j;v[d+23|0]=((e&65535)<<16|l>>>16)&31|c<<5;c=a;a=a>>21;c=(c&2097151)<<11|i>>>21;e=c+(n&2097151)|0;a=c>>>0>e>>>0?a+1|0:a;d=e;v[f+31|0]=(a&131071)<<15|d>>>17;v[f+30|0]=(a&511)<<23|d>>>9;v[f+29|0]=(a&1)<<31|d>>>1;a=0;i=i&2097151;h=i;v[f+26|0]=(g&524287)<<13|j>>>19|h<<2;v[f+28|0]=(a&16383)<<18|h>>>14|d<<7;oa(p+288|0,64);oa(p+224|0,64);if(b){x[b>>2]=64;x[b+4>>2]=0}V=p+560|0;return 0}function Ga(a,b,c){var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,w=0,x=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0;u=sa(b);f=y[b+2|0]|y[b+3|0]<<8|(y[b+4|0]<<16|y[b+5|0]<<24);z=sa(b+5|0);k=Y;i=y[b+7|0]|y[b+8|0]<<8|(y[b+9|0]<<16|y[b+10|0]<<24);j=y[b+10|0]|y[b+11|0]<<8|(y[b+12|0]<<16|y[b+13|0]<<24);M=sa(b+13|0);h=Y;l=y[b+15|0]|y[b+16|0]<<8|(y[b+17|0]<<16|y[b+18|0]<<24);N=sa(b+18|0);r=Y;C=sa(b+21|0);e=y[b+23|0]|y[b+24|0]<<8|(y[b+25|0]<<16|y[b+26|0]<<24);H=sa(b+26|0);d=Y;g=y[b+28|0]|y[b+29|0]<<8|(y[b+30|0]<<16|y[b+31|0]<<24);I=sa(c);p=y[c+2|0]|y[c+3|0]<<8|(y[c+4|0]<<16|y[c+5|0]<<24);J=sa(c+5|0);m=Y;o=y[c+7|0]|y[c+8|0]<<8|(y[c+9|0]<<16|y[c+10|0]<<24);s=y[c+10|0]|y[c+11|0]<<8|(y[c+12|0]<<16|y[c+13|0]<<24);w=sa(c+13|0);t=Y;K=y[c+15|0]|y[c+16|0]<<8|(y[c+17|0]<<16|y[c+18|0]<<24);A=sa(c+18|0);D=Y;E=sa(c+21|0);q=y[c+23|0]|y[c+24|0]<<8|(y[c+25|0]<<16|y[c+26|0]<<24);x=sa(c+26|0);n=Y;O=(y[c+28|0]|y[c+29|0]<<8|(y[c+30|0]<<16|y[c+31|0]<<24))>>>7|0;b=d;P=((b&3)<<30|H>>>2)&2097151;b=Fj(O,0,P,0);d=Y;F=b;b=n;n=x;Q=((b&3)<<30|n>>>2)&2097151;n=0;R=g>>>7|0;c=Fj(Q,n,R,0);b=F+c|0;d=Y+d|0;d=b>>>0<c>>>0?d+1|0:d;H=b;b=Fj(P,ma,Q,n);g=Y;S=q>>>5&2097151;q=Fj(S,0,R,0);c=q+b|0;b=Y+g|0;b=c>>>0<q>>>0?b+1|0:b;T=e>>>5&2097151;e=Fj(O,0,T,0);c=e+c|0;b=Y+b|0;b=c>>>0<e>>>0?b+1|0:b;e=c;x=b;b=b-((c>>>0<4293918720)-1|0)|0;g=c- -1048576|0;B=b;c=H;H=(b&2097151)<<11|g>>>21;q=c+H|0;b=(b>>21)+d|0;c=q;ya=c- -1048576|0;b=c>>>0<H>>>0?b+1|0:b;d=b-((c>>>0<4293918720)-1|0)|0;F=d;q=b;b=ya&-2097152;H=q-((b>>>0>c>>>0)+d|0)|0;Ca=c-b|0;Ka=Fj(Ca,H,666643,0);La=Y;U=p>>>5&2097151;V=C&2097151;b=Fj(U,0,V,0);c=Y;W=I&2097151;p=Fj(W,0,T,0);b=p+b|0;d=Y+c|0;d=b>>>0<p>>>0?d+1|0:d;c=b;b=m;X=((b&3)<<30|J>>>2)&2097151;q=0;b=r;Z=((b&7)<<29|N>>>3)&2097151;r=Fj(X,q,Z,0);c=c+r|0;b=Y+d|0;b=c>>>0<r>>>0?b+1|0:b;_=o>>>7&2097151;$=l>>>6&2097151;l=Fj(_,0,$,0);d=l+c|0;c=Y+b|0;c=d>>>0<l>>>0?c+1|0:c;l=d;aa=s>>>4&2097151;b=h;ba=((b&1)<<31|M>>>1)&2097151;d=Fj(aa,0,ba,0);b=l+d|0;c=Y+c|0;c=b>>>0<d>>>0?c+1|0:c;d=b;b=t;ca=((b&1)<<31|w>>>1)&2097151;s=0;da=j>>>4&2097151;j=Fj(ca,s,da,0);d=d+j|0;b=Y+c|0;ea=K>>>6&2097151;fa=i>>>7&2097151;i=Fj(ea,0,fa,0);c=i+d|0;d=Y+(d>>>0<j>>>0?b+1|0:b)|0;d=c>>>0<i>>>0?d+1|0:d;b=c;c=0;la=c;ga=E&2097151;ha=f>>>5&2097151;f=Fj(ga,c,ha,0);c=f+b|0;b=Y+d|0;d=c;c=c>>>0<f>>>0?b+1|0:b;i=d;b=D;ia=((b&7)<<29|A>>>3)&2097151;t=0;b=k;ja=((b&3)<<30|z>>>2)&2097151;d=Fj(ia,t,ja,0);b=i+d|0;c=Y+c|0;c=b>>>0<d>>>0?c+1|0:c;ka=u&2097151;f=Fj(S,0,ka,0);d=f+b|0;b=Y+c|0;l=d;i=d>>>0<f>>>0?b+1|0:b;b=Fj(Z,na,U,0);c=Y;f=Fj(V,oa,W,pa);b=f+b|0;d=Y+c|0;d=b>>>0<f>>>0?d+1|0:d;f=Fj($,0,X,q);b=f+b|0;c=Y+d|0;c=b>>>0<f>>>0?c+1|0:c;d=Fj(_,0,ba,qa);b=d+b|0;c=Y+c|0;c=b>>>0<d>>>0?c+1|0:c;f=Fj(aa,0,da,0);d=f+b|0;b=Y+c|0;b=d>>>0<f>>>0?b+1|0:b;c=d;d=Fj(ca,s,fa,0);c=c+d|0;b=Y+b|0;b=c>>>0<d>>>0?b+1|0:b;f=Fj(ja,ra,ea,0);c=f+c|0;d=Y+b|0;d=c>>>0<f>>>0?d+1|0:d;f=Fj(ha,0,ia,t);b=f+c|0;c=Y+d|0;c=b>>>0<f>>>0?c+1|0:c;d=Fj(ka,ta,ga,la);b=d+b|0;c=Y+c|0;f=b;c=b>>>0<d>>>0?c+1|0:c;j=c;c=b;b=j-((b>>>0<4293918720)-1|0)|0;k=c- -1048576|0;h=b;c=l;l=(b&2097151)<<11|k>>>21;d=c+l|0;b=(b>>>21|0)+i|0;b=d>>>0<l>>>0?b+1|0:b;c=d;i=c+Ka|0;d=b+La|0;d=i>>>0<c>>>0?d+1|0:d;b=b-((c>>>0<4293918720)-1|0)|0;l=b;ua=c- -1048576|0;c=ua&-2097152;u=i-c|0;z=d-((c>>>0>i>>>0)+b|0)|0;b=g&-2097152;K=e-b|0;D=x-((b>>>0>e>>>0)+B|0)|0;b=Fj(P,ma,S,0);c=Y;e=Fj(R,0,ga,la);b=e+b|0;d=Y+c|0;d=b>>>0<e>>>0?d+1|0:d;e=Fj(Q,n,T,0);c=e+b|0;b=Y+d|0;b=c>>>0<e>>>0?b+1|0:b;d=Fj(O,0,V,oa);c=d+c|0;b=Y+b|0;m=c;g=c>>>0<d>>>0?b+1|0:b;b=Fj(R,0,ia,t);c=Y;d=Fj(P,ma,ga,la);b=d+b|0;c=Y+c|0;c=b>>>0<d>>>0?c+1|0:c;d=Fj(T,0,S,0);b=d+b|0;c=Y+c|0;c=b>>>0<d>>>0?c+1|0:c;e=Fj(Q,n,V,oa);b=e+b|0;d=Y+c|0;d=b>>>0<e>>>0?d+1|0:d;e=Fj(O,0,Z,na);c=e+b|0;b=Y+d|0;b=c>>>0<e>>>0?b+1|0:b;e=c;r=b;b=b-((c>>>0<4293918720)-1|0)|0;i=c- -1048576|0;p=b;c=m;d=b>>21;m=(b&2097151)<<11|i>>>21;b=c+m|0;c=d+g|0;g=b;c=b>>>0<m>>>0?c+1|0:c;m=c;c=b;b=m-((b>>>0<4293918720)-1|0)|0;c=c- -1048576|0;o=b;x=(b&2097151)<<11|c>>>21;K=x+K|0;b=(b>>21)+D|0;Da=K;b=x>>>0>K>>>0?b+1|0:b;K=b;d=c&-2097152;c=m-((d>>>0>g>>>0)+o|0)|0;Ea=g-d|0;D=c;g=Fj(Da,b,470296,0);d=g+u|0;b=Y+z|0;b=d>>>0<g>>>0?b+1|0:b;g=Fj(Ea,c,654183,0);d=g+d|0;c=Y+b|0;o=d;m=d>>>0<g>>>0?c+1|0:c;b=i&-2097152;i=e-b|0;p=r-((b>>>0>e>>>0)+p|0)|0;b=Fj(T,0,ga,la);d=Y;e=Fj(R,0,ea,0);c=e+b|0;b=Y+d|0;b=c>>>0<e>>>0?b+1|0:b;e=Fj(P,ma,ia,t);d=e+c|0;c=Y+b|0;c=d>>>0<e>>>0?c+1|0:c;b=d;d=Fj(V,oa,S,0);b=b+d|0;c=Y+c|0;c=b>>>0<d>>>0?c+1|0:c;e=Fj(Q,n,Z,na);b=e+b|0;d=Y+c|0;d=b>>>0<e>>>0?d+1|0:d;e=Fj(O,0,$,0);c=e+b|0;b=Y+d|0;x=c;g=c>>>0<e>>>0?b+1|0:b;b=Fj(P,ma,ea,0);d=Y;e=Fj(R,0,ca,s);c=e+b|0;b=Y+d|0;b=c>>>0<e>>>0?b+1|0:b;e=Fj(V,oa,ga,la);d=e+c|0;c=Y+b|0;c=d>>>0<e>>>0?c+1|0:c;b=d;d=Fj(T,0,ia,t);b=b+d|0;c=Y+c|0;c=b>>>0<d>>>0?c+1|0:c;e=Fj(Z,na,S,0);b=e+b|0;d=Y+c|0;d=b>>>0<e>>>0?d+1|0:d;e=Fj(Q,n,$,0);c=e+b|0;b=Y+d|0;b=c>>>0<e>>>0?b+1|0:b;d=Fj(O,0,ba,qa);c=d+c|0;b=Y+b|0;e=c;b=c>>>0<d>>>0?b+1|0:b;r=b;b=c;c=r-((b>>>0<4293918720)-1|0)|0;u=b- -1048576|0;J=c;b=x;x=(c&2097151)<<11|u>>>21;d=b+x|0;c=(c>>21)+g|0;g=d;c=d>>>0<x>>>0?c+1|0:c;w=c;b=d;c=c-((b>>>0<4293918720)-1|0)|0;z=b- -1048576|0;A=c;b=c>>21;d=(c&2097151)<<11|z>>>21;c=d+i|0;b=b+p|0;Ma=c;b=c>>>0<d>>>0?b+1|0:b;x=b;d=Fj(c,b,-997805,-1);b=d+o|0;c=Y+m|0;o=b;m=b>>>0<d>>>0?c+1|0:c;b=k&-2097152;i=f-b|0;j=j-((b>>>0>f>>>0)+h|0)|0;b=Fj($,0,U,0);c=Y;f=Fj(Z,na,W,pa);b=f+b|0;d=Y+c|0;d=b>>>0<f>>>0?d+1|0:d;f=Fj(X,q,ba,qa);c=f+b|0;b=Y+d|0;b=c>>>0<f>>>0?b+1|0:b;f=Fj(_,0,da,0);d=f+c|0;c=Y+b|0;c=d>>>0<f>>>0?c+1|0:c;f=Fj(aa,0,fa,0);d=f+d|0;b=Y+c|0;b=d>>>0<f>>>0?b+1|0:b;f=Fj(ca,s,ja,ra);d=f+d|0;c=Y+b|0;c=d>>>0<f>>>0?c+1|0:c;f=Fj(ha,0,ea,0);b=f+d|0;d=Y+c|0;d=b>>>0<f>>>0?d+1|0:d;f=Fj(ka,ta,ia,t);c=f+b|0;b=Y+d|0;h=c;k=c>>>0<f>>>0?b+1|0:b;b=Fj(U,0,ba,qa);c=Y;d=Fj($,0,W,pa);b=d+b|0;c=Y+c|0;c=b>>>0<d>>>0?c+1|0:c;f=Fj(X,q,da,0);d=f+b|0;b=Y+c|0;b=d>>>0<f>>>0?b+1|0:b;f=Fj(_,0,fa,0);d=f+d|0;c=Y+b|0;c=d>>>0<f>>>0?c+1|0:c;f=Fj(aa,0,ja,ra);b=f+d|0;d=Y+c|0;d=b>>>0<f>>>0?d+1|0:d;f=Fj(ca,s,ha,0);c=f+b|0;b=Y+d|0;b=c>>>0<f>>>0?b+1|0:b;f=Fj(ka,ta,ea,0);d=f+c|0;c=Y+b|0;c=d>>>0<f>>>0?c+1|0:c;f=d;p=c;b=d;c=c-((b>>>0<4293918720)-1|0)|0;M=b- -1048576|0;E=c;b=h;h=(c&2097151)<<11|M>>>21;d=b+h|0;c=(c>>>21|0)+k|0;k=d;c=d>>>0<h>>>0?c+1|0:c;Ka=c;b=d;c=c-((b>>>0<4293918720)-1|0)|0;N=b- -1048576|0;La=c;b=i;i=(c&2097151)<<11|N>>>21;d=b+i|0;c=(c>>>21|0)+j|0;c=d>>>0<i>>>0?c+1|0:c;i=Fj(Da,K,666643,0);d=i+d|0;b=Y+c|0;b=d>>>0<i>>>0?b+1|0:b;i=Fj(Ea,D,470296,0);d=i+d|0;c=Y+b|0;c=d>>>0<i>>>0?c+1|0:c;i=Fj(Ma,x,654183,0);b=i+d|0;d=Y+c|0;d=b>>>0<i>>>0?d+1|0:d;i=b;Sa=d;c=b;b=d-((b>>>0<4293918720)-1|0)|0;C=c- -1048576|0;Ua=b;c=b>>21;d=(b&2097151)<<11|C>>>21;b=d+o|0;c=c+m|0;j=b;c=b>>>0<d>>>0?c+1|0:c;G=c;c=b;b=G-((b>>>0<4293918720)-1|0)|0;I=c- -1048576|0;wa=b;xa=(b&2097151)<<11|I>>>21;za=b>>21;b=Fj(T,0,U,0);c=Y;h=Fj(P,ma,W,pa);b=h+b|0;d=Y+c|0;d=b>>>0<h>>>0?d+1|0:d;h=Fj(V,oa,X,q);c=h+b|0;b=Y+d|0;b=c>>>0<h>>>0?b+1|0:b;h=Fj(Z,na,_,0);d=h+c|0;c=Y+b|0;c=d>>>0<h>>>0?c+1|0:c;h=Fj($,0,aa,0);d=h+d|0;b=Y+c|0;b=d>>>0<h>>>0?b+1|0:b;h=Fj(ba,qa,ca,s);d=h+d|0;c=Y+b|0;c=d>>>0<h>>>0?c+1|0:c;h=Fj(da,0,ea,0);b=h+d|0;d=Y+c|0;d=b>>>0<h>>>0?d+1|0:d;h=Fj(ja,ra,ga,la);c=h+b|0;b=Y+d|0;b=c>>>0<h>>>0?b+1|0:b;h=Fj(fa,0,ia,t);d=h+c|0;c=Y+b|0;c=d>>>0<h>>>0?c+1|0:c;h=Fj(S,0,ha,0);d=h+d|0;b=Y+c|0;b=d>>>0<h>>>0?b+1|0:b;h=Fj(Q,n,ka,ta);d=h+d|0;c=Y+b|0;c=d>>>0<h>>>0?c+1|0:c;h=d;o=c;Aa=Fj(Ca,H,470296,0);Ba=Y;b=Fj(O,0,R,0);Fa=b- -1048576|0;B=Y;c=B-((b>>>0<4293918720)-1|0)|0;m=c;d=Fa&-2097152;Na=b-d|0;c=B-((b>>>0<d>>>0)+c|0)|0;b=F;d=b>>21;B=(b&2097151)<<11|ya>>>21;b=B+Na|0;c=c+d|0;Oa=b;c=b>>>0<B>>>0?c+1|0:c;B=c;d=Fj(b,c,666643,0);b=d+Aa|0;c=Y+Ba|0;c=b>>>0<d>>>0?c+1|0:c;F=b;d=b+h|0;b=c+o|0;b=d>>>0<F>>>0?b+1|0:b;c=h;h=o-((c>>>0<4293918720)-1|0)|0;Xa=c- -1048576|0;o=h;c=l>>>21|0;l=(l&2097151)<<11|ua>>>21;d=l+d|0;b=b+c|0;b=d>>>0<l>>>0?b+1|0:b;l=Fj(Da,K,654183,0);c=l+d|0;d=Y+b|0;d=c>>>0<l>>>0?d+1|0:d;l=Fj(Ea,D,-997805,-1);b=l+c|0;c=Y+d|0;c=b>>>0<l>>>0?c+1|0:c;F=Fj(Ma,x,136657,0);l=Xa&-2097152;d=F+(b-l|0)|0;b=Y+(c-((b>>>0<l>>>0)+h|0)|0)|0;b=d>>>0<F>>>0?b+1|0:b;L=d;h=d;d=d+xa|0;c=za;za=b;c=c+b|0;xa=d;va=d>>>0<h>>>0?c+1|0:c;b=z&-2097152;Aa=g-b|0;Ba=w-((b>>>0>g>>>0)+A|0)|0;Ga=(m&2097151)<<11|Fa>>>21;c=m>>21;m=c;c=Fj(Ga,c,-683901,-1);b=c+e|0;d=Y+r|0;d=b>>>0<c>>>0?d+1|0:d;c=u&-2097152;g=b-c|0;r=d-((b>>>0<c>>>0)+J|0)|0;b=Fj(P,ma,ca,s);c=Y;d=Fj(R,0,aa,0);b=d+b|0;c=Y+c|0;c=b>>>0<d>>>0?c+1|0:c;d=Fj(T,0,ea,0);b=d+b|0;c=Y+c|0;c=b>>>0<d>>>0?c+1|0:c;e=Fj(Z,na,ga,la);b=e+b|0;d=Y+c|0;d=b>>>0<e>>>0?d+1|0:d;e=Fj(V,oa,ia,t);c=e+b|0;b=Y+d|0;b=c>>>0<e>>>0?b+1|0:b;d=Fj(S,0,$,0);c=d+c|0;b=Y+b|0;b=c>>>0<d>>>0?b+1|0:b;e=Fj(Q,n,ba,qa);d=e+c|0;c=Y+b|0;c=d>>>0<e>>>0?c+1|0:c;b=d;d=Fj(O,0,da,0);b=b+d|0;c=Y+c|0;u=b;e=b>>>0<d>>>0?c+1|0:c;b=Fj(P,ma,aa,0);c=Y;h=Fj(R,0,_,0);b=h+b|0;d=Y+c|0;d=b>>>0<h>>>0?d+1|0:d;h=Fj(T,0,ca,s);c=h+b|0;b=Y+d|0;b=c>>>0<h>>>0?b+1|0:b;d=Fj(V,oa,ea,0);c=d+c|0;b=Y+b|0;b=c>>>0<d>>>0?b+1|0:b;h=Fj($,0,ga,la);d=h+c|0;c=Y+b|0;c=d>>>0<h>>>0?c+1|0:c;b=d;d=Fj(Z,na,ia,t);b=b+d|0;c=Y+c|0;c=b>>>0<d>>>0?c+1|0:c;h=Fj(S,0,ba,qa);b=h+b|0;d=Y+c|0;d=b>>>0<h>>>0?d+1|0:d;h=Fj(Q,n,da,0);c=h+b|0;b=Y+d|0;b=c>>>0<h>>>0?b+1|0:b;d=Fj(O,0,fa,0);c=d+c|0;b=Y+b|0;h=c;b=c>>>0<d>>>0?b+1|0:b;J=b;b=c;c=J-((b>>>0<4293918720)-1|0)|0;l=b- -1048576|0;w=c;b=u;u=(c&2097151)<<11|l>>>21;d=b+u|0;c=(c>>21)+e|0;e=d;c=d>>>0<u>>>0?c+1|0:c;A=c;b=d;c=c-((b>>>0<4293918720)-1|0)|0;z=b- -1048576|0;ya=c;b=c>>21;d=(c&2097151)<<11|z>>>21;c=d+g|0;b=b+r|0;g=c;b=c>>>0<d>>>0?b+1|0:b;ua=b;b=c;c=ua-((b>>>0<4293918720)-1|0)|0;F=b- -1048576|0;Fa=c;r=(c&2097151)<<11|F>>>21;d=r+Aa|0;c=(c>>21)+Ba|0;Pa=d;c=d>>>0<r>>>0?c+1|0:c;u=c;Ya=L- -1048576|0;b=za-((L>>>0<4293918720)-1|0)|0;r=b;za=Fj(d,c,-683901,-1);c=za+xa|0;d=Y+va|0;d=c>>>0<za>>>0?d+1|0:d;b=Ya&-2097152;d=d-(r+(b>>>0>c>>>0)|0)|0;b=c-b|0;Za=b- -1048576|0;c=d-((b>>>0<4293918720)-1|0)|0;za=c;L=Za&-2097152;Ha=b-L|0;Va=d-((b>>>0<L>>>0)+c|0)|0;d=Fj(Pa,u,136657,0);c=I&-2097152;b=d+(j-c|0)|0;c=Y+(G-((c>>>0>j>>>0)+wa|0)|0)|0;Ba=b;G=b>>>0<d>>>0?c+1|0:c;b=F&-2097152;Na=g-b|0;Ta=ua-((b>>>0>g>>>0)+Fa|0)|0;b=Fj(Oa,B,-683901,-1);c=Y;g=Fj(Ga,m,136657,0);b=g+b|0;d=Y+c|0;c=b+e|0;b=A+(b>>>0<g>>>0?d+1|0:d)|0;b=c>>>0<e>>>0?b+1|0:b;d=z&-2097152;z=c-d|0;A=b-((c>>>0<d>>>0)+ya|0)|0;d=Fj(Ga,m,-997805,-1);c=d+h|0;b=Y+J|0;b=c>>>0<d>>>0?b+1|0:b;e=Fj(Oa,B,136657,0);c=e+c|0;d=Y+b|0;d=c>>>0<e>>>0?d+1|0:d;e=Fj(Ca,H,-683901,-1);c=e+c|0;b=Y+d|0;b=c>>>0<e>>>0?b+1|0:b;d=l&-2097152;j=c-d|0;h=b-((c>>>0<d>>>0)+w|0)|0;b=Fj(P,ma,_,0);c=Y;d=Fj(R,0,X,q);b=d+b|0;c=Y+c|0;c=b>>>0<d>>>0?c+1|0:c;e=Fj(T,0,aa,0);b=e+b|0;d=Y+c|0;d=b>>>0<e>>>0?d+1|0:d;e=Fj(V,oa,ca,s);c=e+b|0;b=Y+d|0;b=c>>>0<e>>>0?b+1|0:b;d=Fj(Z,na,ea,0);c=d+c|0;b=Y+b|0;b=c>>>0<d>>>0?b+1|0:b;e=Fj(ba,qa,ga,la);d=e+c|0;c=Y+b|0;c=d>>>0<e>>>0?c+1|0:c;b=d;d=Fj($,0,ia,t);b=b+d|0;c=Y+c|0;c=b>>>0<d>>>0?c+1|0:c;e=Fj(S,0,da,0);b=e+b|0;d=Y+c|0;d=b>>>0<e>>>0?d+1|0:d;e=Fj(Q,n,fa,0);c=e+b|0;b=Y+d|0;b=c>>>0<e>>>0?b+1|0:b;d=Fj(O,0,ja,ra);c=d+c|0;b=Y+b|0;l=c;g=c>>>0<d>>>0?b+1|0:b;b=Fj(P,ma,X,q);c=Y;d=Fj(R,0,U,0);b=d+b|0;c=Y+c|0;c=b>>>0<d>>>0?c+1|0:c;d=Fj(T,0,_,0);b=d+b|0;c=Y+c|0;c=b>>>0<d>>>0?c+1|0:c;e=Fj(V,oa,aa,0);b=e+b|0;d=Y+c|0;d=b>>>0<e>>>0?d+1|0:d;e=Fj(Z,na,ca,s);c=e+b|0;b=Y+d|0;b=c>>>0<e>>>0?b+1|0:b;d=Fj($,0,ea,0);c=d+c|0;b=Y+b|0;b=c>>>0<d>>>0?b+1|0:b;e=Fj(da,0,ga,la);d=e+c|0;c=Y+b|0;c=d>>>0<e>>>0?c+1|0:c;b=d;d=Fj(ba,qa,ia,t);b=b+d|0;c=Y+c|0;c=b>>>0<d>>>0?c+1|0:c;e=Fj(S,0,fa,0);b=e+b|0;d=Y+c|0;d=b>>>0<e>>>0?d+1|0:d;e=Fj(Q,n,ja,ra);c=e+b|0;b=Y+d|0;b=c>>>0<e>>>0?b+1|0:b;d=Fj(O,0,ha,0);c=d+c|0;b=Y+b|0;e=c;b=c>>>0<d>>>0?b+1|0:b;wa=b;b=c;c=wa-((b>>>0<4293918720)-1|0)|0;I=b- -1048576|0;L=c;b=l;l=(c&2097151)<<11|I>>>21;d=b+l|0;c=(c>>21)+g|0;g=d;c=d>>>0<l>>>0?c+1|0:c;va=c;b=d;c=c-((b>>>0<4293918720)-1|0)|0;F=b- -1048576|0;ya=c;b=c>>21;d=(c&2097151)<<11|F>>>21;c=d+j|0;b=b+h|0;j=c;b=c>>>0<d>>>0?b+1|0:b;ua=b;b=c;c=ua-((b>>>0<4293918720)-1|0)|0;J=b- -1048576|0;Fa=c;h=(c&2097151)<<11|J>>>21;d=h+z|0;c=(c>>21)+A|0;c=d>>>0<h>>>0?c+1|0:c;h=d;xa=c;b=d;c=c-((b>>>0<4293918720)-1|0)|0;w=b- -1048576|0;Aa=c;b=c>>21;d=(c&2097151)<<11|w>>>21;c=d+Na|0;b=b+Ta|0;Qa=c;b=c>>>0<d>>>0?b+1|0:b;z=b;d=Fj(c,b,-683901,-1);b=d+Ba|0;c=Y+G|0;Ra=b;G=b>>>0<d>>>0?c+1|0:c;b=C&-2097152;Ia=i-b|0;Wa=Sa-((b>>>0>i>>>0)+Ua|0)|0;d=Fj(Ea,D,666643,0);b=N&-2097152;c=d+(k-b|0)|0;b=Y+(Ka-((b>>>0>k>>>0)+La|0)|0)|0;b=c>>>0<d>>>0?b+1|0:b;d=Fj(Ma,x,470296,0);c=d+c|0;b=Y+b|0;A=c;l=c>>>0<d>>>0?b+1|0:b;i=f;b=Fj(U,0,da,0);c=Y;d=Fj(W,pa,ba,qa);b=d+b|0;c=Y+c|0;c=b>>>0<d>>>0?c+1|0:c;d=Fj(X,q,fa,0);b=d+b|0;c=Y+c|0;c=b>>>0<d>>>0?c+1|0:c;f=Fj(_,0,ja,ra);b=f+b|0;d=Y+c|0;d=b>>>0<f>>>0?d+1|0:d;f=Fj(aa,0,ha,0);c=f+b|0;b=Y+d|0;b=c>>>0<f>>>0?b+1|0:b;d=Fj(ca,s,ka,ta);c=d+c|0;b=Y+b|0;C=c;k=c>>>0<d>>>0?b+1|0:b;b=Fj(U,0,fa,0);c=Y;d=Fj(W,pa,da,0);b=d+b|0;c=Y+c|0;c=b>>>0<d>>>0?c+1|0:c;d=Fj(X,q,ja,ra);b=d+b|0;c=Y+c|0;c=b>>>0<d>>>0?c+1|0:c;f=Fj(_,0,ha,0);b=f+b|0;d=Y+c|0;d=b>>>0<f>>>0?d+1|0:d;f=Fj(aa,0,ka,ta);c=f+b|0;b=Y+d|0;b=c>>>0<f>>>0?b+1|0:b;f=c;Ka=b;b=b-((c>>>0<4293918720)-1|0)|0;N=c- -1048576|0;La=b;c=C;d=b>>>21|0;C=(b&2097151)<<11|N>>>21;b=c+C|0;c=d+k|0;k=b;c=b>>>0<C>>>0?c+1|0:c;Sa=c;c=b;b=Sa-((b>>>0<4293918720)-1|0)|0;C=c- -1048576|0;Ua=b;c=i;i=(b&2097151)<<11|C>>>21;c=c+i|0;b=(b>>>21|0)+p|0;b=c>>>0<i>>>0?b+1|0:b;p=Fj(Ma,x,666643,0);i=M&-2097152;d=p+(c-i|0)|0;c=Y+(b-((c>>>0<i>>>0)+E|0)|0)|0;i=d;c=d>>>0<p>>>0?c+1|0:c;Ba=c;b=d;c=c-((b>>>0<4293918720)-1|0)|0;M=b- -1048576|0;Na=c;b=c>>21;d=(c&2097151)<<11|M>>>21;c=d+A|0;b=b+l|0;l=c;b=c>>>0<d>>>0?b+1|0:b;Ta=b;b=c;c=Ta-((b>>>0<4293918720)-1|0)|0;A=b- -1048576|0;_a=c;b=h;d=w&-2097152;h=xa-((b>>>0<d>>>0)+Aa|0)|0;Ja=b-d|0;p=h;w=(c&2097151)<<11|A>>>21;d=w+Ia|0;c=(c>>21)+Wa|0;c=d>>>0<w>>>0?c+1|0:c;w=Fj(Pa,u,-997805,-1);b=w+d|0;d=Y+c|0;d=b>>>0<w>>>0?d+1|0:d;w=Fj(Qa,z,136657,0);c=w+b|0;b=Y+d|0;b=c>>>0<w>>>0?b+1|0:b;d=Fj(Ja,h,-683901,-1);c=d+c|0;b=Y+b|0;b=c>>>0<d>>>0?b+1|0:b;d=c;xa=b;b=b-((c>>>0<4293918720)-1|0)|0;w=c- -1048576|0;Aa=b;E=(b&2097151)<<11|w>>>21;h=E+Ra|0;b=(b>>21)+G|0;b=h>>>0<E>>>0?b+1|0:b;G=b;c=h;b=b-((c>>>0<4293918720)-1|0)|0;E=c- -1048576|0;Ra=b;Ia=(b&2097151)<<11|E>>>21;Ha=Ia+Ha|0;b=(b>>21)+Va|0;Va=Ha;Ha=Ha>>>0<Ia>>>0?b+1|0:b;b=E&-2097152;Ia=c-b|0;Ra=G-((b>>>0>c>>>0)+Ra|0)|0;b=w&-2097152;Wa=d-b|0;xa=xa-((b>>>0>d>>>0)+Aa|0)|0;d=Fj(Pa,u,654183,0);c=A&-2097152;b=d+(l-c|0)|0;c=Y+(Ta-((c>>>0>l>>>0)+_a|0)|0)|0;c=b>>>0<d>>>0?c+1|0:c;h=Fj(Qa,z,-997805,-1);d=h+b|0;b=Y+c|0;b=d>>>0<h>>>0?b+1|0:b;c=d;d=Fj(Ja,p,136657,0);c=c+d|0;b=Y+b|0;A=c;l=c>>>0<d>>>0?b+1|0:b;b=J&-2097152;h=j-b|0;E=ua-((b>>>0>j>>>0)+Fa|0)|0;b=Fj(Oa,B,-997805,-1);c=Y;d=Fj(Ga,m,654183,0);b=d+b|0;c=Y+c|0;c=b>>>0<d>>>0?c+1|0:c;j=Fj(Ca,H,136657,0);d=j+b|0;b=Y+c|0;b=d>>>0<j>>>0?b+1|0:b;c=d;d=Fj(Da,K,-683901,-1);c=c+d|0;b=Y+b|0;b=c>>>0<d>>>0?b+1|0:b;d=c+g|0;c=b+va|0;c=d>>>0<g>>>0?c+1|0:c;b=d;d=F&-2097152;j=b-d|0;G=c-((b>>>0<d>>>0)+ya|0)|0;b=Fj(Oa,B,654183,0);c=Y;d=Fj(Ga,m,470296,0);b=d+b|0;c=Y+c|0;c=b>>>0<d>>>0?c+1|0:c;g=Fj(Ca,H,-997805,-1);d=g+b|0;b=Y+c|0;b=d>>>0<g>>>0?b+1|0:b;d=d+e|0;c=b+wa|0;c=d>>>0<e>>>0?c+1|0:c;e=Fj(Da,K,136657,0);d=e+d|0;b=Y+c|0;b=d>>>0<e>>>0?b+1|0:b;e=Fj(Ea,D,-683901,-1);c=e+d|0;d=Y+b|0;d=c>>>0<e>>>0?d+1|0:d;b=c;c=I&-2097152;g=b-c|0;J=d-((b>>>0<c>>>0)+L|0)|0;b=Fj(P,ma,U,0);d=Y;e=Fj(R,0,W,pa);c=e+b|0;b=Y+d|0;b=c>>>0<e>>>0?b+1|0:b;d=Fj(T,0,X,q);c=d+c|0;b=Y+b|0;b=c>>>0<d>>>0?b+1|0:b;e=Fj(V,oa,_,0);c=e+c|0;d=Y+b|0;d=c>>>0<e>>>0?d+1|0:d;e=Fj(Z,na,aa,0);b=e+c|0;c=Y+d|0;c=b>>>0<e>>>0?c+1|0:c;d=Fj($,0,ca,s);b=d+b|0;c=Y+c|0;c=b>>>0<d>>>0?c+1|0:c;e=Fj(ba,qa,ea,0);d=e+b|0;b=Y+c|0;b=d>>>0<e>>>0?b+1|0:b;c=d;d=Fj(fa,0,ga,la);c=c+d|0;b=Y+b|0;b=c>>>0<d>>>0?b+1|0:b;e=Fj(da,0,ia,t);c=e+c|0;d=Y+b|0;d=c>>>0<e>>>0?d+1|0:d;e=Fj(S,0,ja,ra);b=e+c|0;c=Y+d|0;c=b>>>0<e>>>0?c+1|0:c;d=Fj(Q,n,ha,0);b=d+b|0;c=Y+c|0;c=b>>>0<d>>>0?c+1|0:c;e=Fj(O,0,ka,ta);d=e+b|0;b=Y+c|0;b=d>>>0<e>>>0?b+1|0:b;e=(o&2097151)<<11|Xa>>>21;d=e+d|0;b=(o>>>21|0)+b|0;b=d>>>0<e>>>0?b+1|0:b;e=d;I=b;c=d;b=b-((c>>>0<4293918720)-1|0)|0;o=c- -1048576|0;F=b;c=b>>21;d=(b&2097151)<<11|o>>>21;b=d+g|0;c=c+J|0;g=b;c=b>>>0<d>>>0?c+1|0:c;J=c;c=b;b=J-((b>>>0<4293918720)-1|0)|0;n=c- -1048576|0;w=b;c=j;j=(b&2097151)<<11|n>>>21;d=c+j|0;b=(b>>21)+G|0;b=d>>>0<j>>>0?b+1|0:b;s=b;c=d;b=b-((c>>>0<4293918720)-1|0)|0;j=c- -1048576|0;t=b;L=h;c=b>>21;h=(b&2097151)<<11|j>>>21;b=L+h|0;c=c+E|0;L=b;c=b>>>0<h>>>0?c+1|0:c;h=c;G=A;A=Fj(b,c,-683901,-1);c=G+A|0;b=Y+l|0;G=c;A=c>>>0<A>>>0?b+1|0:b;b=j&-2097152;j=s-((b>>>0>d>>>0)+t|0)|0;va=d-b|0;l=j;s=Fj(Pa,u,470296,0);c=M&-2097152;b=s+(i-c|0)|0;d=Y+(Ba-((c>>>0>i>>>0)+Na|0)|0)|0;d=b>>>0<s>>>0?d+1|0:d;i=Fj(Qa,z,654183,0);b=i+b|0;c=Y+d|0;c=b>>>0<i>>>0?c+1|0:c;i=Fj(Ja,p,-997805,-1);d=i+b|0;b=Y+c|0;b=d>>>0<i>>>0?b+1|0:b;i=Fj(L,h,136657,0);d=i+d|0;c=Y+b|0;c=d>>>0<i>>>0?c+1|0:c;i=Fj(va,j,-683901,-1);b=i+d|0;d=Y+c|0;d=b>>>0<i>>>0?d+1|0:d;i=b;M=d;c=d-((b>>>0<4293918720)-1|0)|0;s=b- -1048576|0;E=c;j=(c&2097151)<<11|s>>>21;d=j+G|0;c=(c>>21)+A|0;c=d>>>0<j>>>0?c+1|0:c;j=d;A=c;b=d;c=c-((b>>>0<4293918720)-1|0)|0;t=b- -1048576|0;G=c;b=c>>21;wa=(c&2097151)<<11|t>>>21;c=wa+Wa|0;d=b+xa|0;ya=c;wa=c>>>0<wa>>>0?d+1|0:d;b=t&-2097152;ua=j-b|0;A=A-((b>>>0>j>>>0)+G|0)|0;b=s&-2097152;G=i-b|0;E=M-((b>>>0>i>>>0)+E|0)|0;d=Fj(Pa,u,666643,0);c=C&-2097152;b=d+(k-c|0)|0;c=Y+(Sa-((c>>>0>k>>>0)+Ua|0)|0)|0;c=b>>>0<d>>>0?c+1|0:c;k=Fj(Qa,z,470296,0);b=k+b|0;d=Y+c|0;d=b>>>0<k>>>0?d+1|0:d;k=Fj(Ja,p,654183,0);b=k+b|0;c=Y+d|0;i=b;k=b>>>0<k>>>0?c+1|0:c;b=n&-2097152;j=g-b|0;g=J-((b>>>0>g>>>0)+w|0)|0;b=Fj(Oa,B,470296,0);d=Y;m=Fj(Ga,m,666643,0);c=m+b|0;b=Y+d|0;b=c>>>0<m>>>0?b+1|0:b;m=Fj(Ca,H,654183,0);c=m+c|0;d=Y+b|0;d=c>>>0<m>>>0?d+1|0:d;m=Fj(Da,K,-997805,-1);b=m+c|0;c=Y+d|0;c=b>>>0<m>>>0?c+1|0:c;d=Fj(Ea,D,136657,0);b=d+b|0;c=Y+c|0;c=b>>>0<d>>>0?c+1|0:c;d=b+e|0;b=c+I|0;b=d>>>0<e>>>0?b+1|0:b;c=d;d=Fj(Ma,x,-683901,-1);c=c+d|0;b=Y+b|0;b=c>>>0<d>>>0?b+1|0:b;d=o&-2097152;e=c-d|0;c=b-((c>>>0<d>>>0)+F|0)|0;b=e;e=(r&2097151)<<11|Ya>>>21;d=b+e|0;c=(r>>21)+c|0;c=d>>>0<e>>>0?c+1|0:c;e=d;H=c;b=d;c=c-((b>>>0<4293918720)-1|0)|0;m=b- -1048576|0;K=c;b=j;j=(c&2097151)<<11|m>>>21;d=b+j|0;c=(c>>21)+g|0;C=d;c=d>>>0<j>>>0?c+1|0:c;r=c;c=Fj(d,c,-683901,-1);b=c+i|0;d=Y+k|0;d=b>>>0<c>>>0?d+1|0:d;g=Fj(L,h,-997805,-1);b=g+b|0;c=Y+d|0;c=b>>>0<g>>>0?c+1|0:c;g=Fj(va,l,136657,0);d=g+b|0;b=Y+c|0;t=d;j=d>>>0<g>>>0?b+1|0:b;b=Fj(U,0,ja,ra);d=Y;g=Fj(W,pa,fa,0);c=g+b|0;b=Y+d|0;b=c>>>0<g>>>0?b+1|0:b;g=Fj(X,q,ha,0);d=g+c|0;c=Y+b|0;c=d>>>0<g>>>0?c+1|0:c;g=Fj(_,0,ka,ta);b=g+d|0;d=Y+c|0;d=b>>>0<g>>>0?d+1|0:d;k=b;b=Fj(U,0,ha,0);c=Y;g=Fj(W,pa,ja,ra);b=g+b|0;c=Y+c|0;c=b>>>0<g>>>0?c+1|0:c;i=Fj(X,q,ka,ta);g=i+b|0;b=Y+c|0;b=g>>>0<i>>>0?b+1|0:b;i=b;c=g;b=b-((c>>>0<4293918720)-1|0)|0;o=c- -1048576|0;D=b;x=k;c=b>>>21|0;k=(b&2097151)<<11|o>>>21;b=x+k|0;c=c+d|0;c=b>>>0<k>>>0?c+1|0:c;k=b;x=c;c=b;b=x-((b>>>0<4293918720)-1|0)|0;n=c- -1048576|0;B=b;d=f+((b&2097151)<<11|n>>>21)|0;b=Ka+(b>>>21|0)|0;b=d>>>0<f>>>0?b+1|0:b;q=Fj(Qa,z,666643,0);c=d;f=N&-2097152;d=q+(c-f|0)|0;c=Y+(b-((c>>>0<f>>>0)+La|0)|0)|0;c=d>>>0<q>>>0?c+1|0:c;b=d;d=Fj(Ja,p,470296,0);b=b+d|0;c=Y+c|0;c=b>>>0<d>>>0?c+1|0:c;f=Fj(C,r,136657,0);d=f+b|0;b=Y+c|0;b=d>>>0<f>>>0?b+1|0:b;f=Fj(L,h,654183,0);c=f+d|0;d=Y+b|0;d=c>>>0<f>>>0?d+1|0:d;f=Fj(va,l,-997805,-1);c=f+c|0;b=Y+d|0;q=c;b=c>>>0<f>>>0?b+1|0:b;u=b;b=b-((c>>>0<4293918720)-1|0)|0;s=c- -1048576|0;z=b;d=b>>21;f=(b&2097151)<<11|s>>>21;b=f+t|0;c=d+j|0;c=b>>>0<f>>>0?c+1|0:c;f=b;j=c;c=b;b=j-((b>>>0<4293918720)-1|0)|0;t=c- -1048576|0;M=b;N=(b&2097151)<<11|t>>>21;c=N+G|0;b=(b>>21)+E|0;F=c;N=c>>>0<N>>>0?b+1|0:b;d=j;b=m&-2097152;c=e-b|0;j=H-((b>>>0>e>>>0)+K|0)|0;e=c;c=za;b=c>>21;m=(c&2097151)<<11|Za>>>21;e=e+m|0;c=b+j|0;c=e>>>0<m>>>0?c+1|0:c;H=c;b=e;c=c-((b>>>0<4293918720)-1|0)|0;m=b- -1048576|0;K=c;I=(c&2097151)<<11|m>>>21;b=c>>21;j=b;c=f;f=Fj(I,b,-683901,-1);c=c+f|0;b=Y+d|0;b=c>>>0<f>>>0?b+1|0:b;d=t&-2097152;J=c-d|0;M=b-((c>>>0<d>>>0)+M|0)|0;d=Fj(I,j,136657,0);b=d+q|0;c=Y+u|0;c=b>>>0<d>>>0?c+1|0:c;d=s&-2097152;u=b-d|0;z=c-((b>>>0<d>>>0)+z|0)|0;d=Fj(Ja,p,666643,0);c=n&-2097152;b=d+(k-c|0)|0;c=Y+(x-((c>>>0>k>>>0)+B|0)|0)|0;c=b>>>0<d>>>0?c+1|0:c;f=Fj(C,r,-997805,-1);b=f+b|0;d=Y+c|0;d=b>>>0<f>>>0?d+1|0:d;f=Fj(L,h,470296,0);c=f+b|0;b=Y+d|0;b=c>>>0<f>>>0?b+1|0:b;f=Fj(va,l,654183,0);d=f+c|0;c=Y+b|0;B=d;p=d>>>0<f>>>0?c+1|0:c;n=g;q=i;b=Fj(U,0,ka,ta);d=Y;f=Fj(W,pa,ha,0);c=f+b|0;b=Y+d|0;g=c;d=c>>>0<f>>>0?b+1|0:b;f=Fj(W,pa,ka,ta);b=Y;w=b;c=f;b=b-((c>>>0<4293918720)-1|0)|0;k=c- -1048576|0;s=b;i=g;c=b>>>21|0;g=(b&2097151)<<11|k>>>21;b=i+g|0;d=c+d|0;d=b>>>0<g>>>0?d+1|0:d;g=b;t=d;c=b;b=d-((b>>>0<4293918720)-1|0)|0;i=c- -1048576|0;x=b;c=n;n=(b&2097151)<<11|i>>>21;d=c+n|0;b=(b>>>21|0)+q|0;b=d>>>0<n>>>0?b+1|0:b;n=Fj(C,r,654183,0);o=o&-2097152;c=n+(d-o|0)|0;d=Y+(b-((D&8191)+(d>>>0<o>>>0)|0)|0)|0;h=Fj(L,h,666643,0);b=h+c|0;c=Y+(c>>>0<n>>>0?d+1|0:d)|0;c=b>>>0<h>>>0?c+1|0:c;h=Fj(va,l,470296,0);d=h+b|0;b=Y+c|0;b=d>>>0<h>>>0?b+1|0:b;n=b;c=d;b=b-((c>>>0<4293918720)-1|0)|0;h=c- -1048576|0;q=b;c=b>>21;o=(b&2097151)<<11|h>>>21;b=o+B|0;c=c+p|0;c=b>>>0<o>>>0?c+1|0:c;D=c;c=b;b=D-((b>>>0<4293918720)-1|0)|0;o=c- -1048576|0;B=b;E=(b&2097151)<<11|o>>>21;u=E+u|0;b=(b>>21)+z|0;z=u;u=u>>>0<E>>>0?b+1|0:b;p=Fj(I,j,-997805,-1);c=c+p|0;b=Y+D|0;b=c>>>0<p>>>0?b+1|0:b;p=o&-2097152;D=c-p|0;B=b-((c>>>0<p>>>0)+B|0)|0;c=Fj(I,j,654183,0);b=c+d|0;d=Y+n|0;d=b>>>0<c>>>0?d+1|0:d;c=h&-2097152;o=b-c|0;n=d-((b>>>0<c>>>0)+q|0)|0;d=Fj(C,r,470296,0);c=i&-2097152;b=d+(g-c|0)|0;c=Y+(t-((x&8191)+(c>>>0>g>>>0)|0)|0)|0;c=b>>>0<d>>>0?c+1|0:c;d=Fj(va,l,666643,0);b=d+b|0;c=Y+c|0;p=b;i=b>>>0<d>>>0?c+1|0:c;g=Fj(C,r,666643,0);c=k&-2097152;b=g+(f-c|0)|0;d=Y+(w-((s&2047)+(c>>>0>f>>>0)|0)|0)|0;f=b;d=b>>>0<g>>>0?d+1|0:d;h=d;c=d-((b>>>0<4293918720)-1|0)|0;g=b- -1048576|0;l=c;k=(c&2097151)<<11|g>>>21;d=k+p|0;c=(c>>21)+i|0;c=d>>>0<k>>>0?c+1|0:c;k=d;r=c;b=d;c=c-((b>>>0<4293918720)-1|0)|0;i=b- -1048576|0;p=c;d=o;b=c>>21;o=(c&2097151)<<11|i>>>21;c=d+o|0;d=b+n|0;n=c;o=c>>>0<o>>>0?d+1|0:d;d=Fj(I,j,470296,0);b=d+k|0;c=Y+r|0;c=b>>>0<d>>>0?c+1|0:c;d=i&-2097152;k=b-d|0;i=c-((b>>>0<d>>>0)+p|0)|0;c=g&-2097152;g=Fj(I,j,666643,0);b=(f-c|0)+g|0;d=Y+(h-((c>>>0>f>>>0)+l|0)|0)|0;d=b>>>0<g>>>0?d+1|0:d;g=b;c=d>>21;f=(d&2097151)<<11|b>>>21;d=f+k|0;b=c+i|0;k=d;c=d;b=c>>>0<f>>>0?b+1|0:b;d=b>>21;f=(b&2097151)<<11|c>>>21;b=f+n|0;c=d+o|0;l=b;d=b;c=b>>>0<f>>>0?c+1|0:c;b=c>>21;d=(c&2097151)<<11|d>>>21;c=d+D|0;b=b+B|0;b=c>>>0<d>>>0?b+1|0:b;r=c;d=c;c=b>>21;d=(b&2097151)<<11|d>>>21;b=d+z|0;c=c+u|0;c=b>>>0<d>>>0?c+1|0:c;p=b;d=b;b=c>>21;f=(c&2097151)<<11|d>>>21;c=f+J|0;d=b+M|0;o=c;b=c;d=b>>>0<f>>>0?d+1|0:d;c=d>>21;f=(d&2097151)<<11|b>>>21;d=f+F|0;b=c+N|0;n=d;c=d;b=c>>>0<f>>>0?b+1|0:b;d=b>>21;f=(b&2097151)<<11|c>>>21;b=f+ua|0;c=d+A|0;q=b;d=b;c=b>>>0<f>>>0?c+1|0:c;b=c>>21;d=(c&2097151)<<11|d>>>21;c=d+ya|0;b=b+wa|0;b=c>>>0<d>>>0?b+1|0:b;s=c;d=c;c=b>>21;d=(b&2097151)<<11|d>>>21;b=d+Ia|0;c=c+Ra|0;c=b>>>0<d>>>0?c+1|0:c;t=b;d=b;b=c>>21;f=(c&2097151)<<11|d>>>21;c=f+Va|0;d=b+Ha|0;D=c;b=c;d=b>>>0<f>>>0?d+1|0:d;c=d>>21;b=(d&2097151)<<11|b>>>21;d=m&-2097152;f=e-d|0;b=b+f|0;c=(H-((d>>>0>e>>>0)+K|0)|0)+c|0;m=b;c=b>>>0<f>>>0?c+1|0:c;h=(c&2097151)<<11|b>>>21;b=c>>21;f=b;c=g&2097151;b=Fj(h,b,666643,0)+c|0;d=Y;g=b;d=b>>>0<c>>>0?d+1|0:d;e=d;v[a|0]=b;v[a+1|0]=(d&255)<<24|b>>>8;k=k&2097151;b=Fj(h,f,470296,0)+k|0;c=Y;c=b>>>0<k>>>0?c+1|0:c;k=c;d=b;c=e;b=c>>21;j=(c&2097151)<<11|g>>>21;i=d+j|0;c=b+k|0;k=i;c=i>>>0<j>>>0?c+1|0:c;d=i;v[a+4|0]=(c&2047)<<21|d>>>11;b=c;v[a+3|0]=(b&7)<<29|d>>>3;j=a;i=l&2097151;c=Fj(h,f,654183,0)+i|0;d=Y;d=c>>>0<i>>>0?d+1|0:d;l=c;c=b;b=b>>21;i=(c&2097151)<<11|k>>>21;c=l+i|0;b=b+d|0;b=c>>>0<i>>>0?b+1|0:b;i=c;d=b;v[j+6|0]=(b&63)<<26|c>>>6;j=0;l=k&2097151;b=l;v[a+2|0]=((e&65535)<<16|g>>>16)&31|b<<5;g=a;e=r&2097151;b=Fj(h,f,-997805,-1)+e|0;c=Y;c=b>>>0<e>>>0?c+1|0:c;k=b;b=d>>21;e=(d&2097151)<<11|i>>>21;d=k+e|0;c=b+c|0;c=d>>>0<e>>>0?c+1|0:c;e=d;v[g+9|0]=(c&511)<<23|d>>>9;d=c;b=c;c=e;v[g+8|0]=(b&1)<<31|c>>>1;k=0;r=i&2097151;b=r;c=b<<2;b=j;v[g+5|0]=c|((b&524287)<<13|l>>>19);i=g;g=p&2097151;c=Fj(h,f,136657,0)+g|0;b=Y;b=c>>>0<g>>>0?b+1|0:b;j=(d&2097151)<<11|e>>>21;g=j+c|0;d=(d>>21)+b|0;d=g>>>0<j>>>0?d+1|0:d;v[i+12|0]=(d&4095)<<20|g>>>12;c=d;b=c;d=g;v[i+11|0]=(b&15)<<28|d>>>4;i=0;j=e&2097151;b=j;d=b<<7;b=k;v[a+7|0]=d|((b&16383)<<18|r>>>14);k=a;e=o&2097151;d=Fj(h,f,-683901,-1)+e|0;b=Y;b=d>>>0<e>>>0?b+1|0:b;f=(c&2097151)<<11|g>>>21;e=f+d|0;c=(c>>21)+b|0;c=e>>>0<f>>>0?c+1|0:c;b=c;v[k+14|0]=(b&127)<<25|e>>>7;f=0;k=g&2097151;c=k;d=c<<4;c=i;v[a+10|0]=d|((c&131071)<<15|j>>>17);g=a;c=b;b=b>>21;j=(c&2097151)<<11|e>>>21;d=j+(n&2097151)|0;c=d>>>0<j>>>0?b+1|0:b;v[g+17|0]=(c&1023)<<22|d>>>10;b=c;v[g+16|0]=(b&3)<<30|d>>>2;g=0;j=e&2097151;c=j;i=c<<1;c=f;v[a+13|0]=i|((c&1048575)<<12|k>>>20);c=b;b=b>>21;k=(c&2097151)<<11|d>>>21;c=k+(q&2097151)|0;f=c;b=c>>>0<k>>>0?b+1|0:b;e=c;v[a+20|0]=(b&8191)<<19|c>>>13;c=b;v[a+19|0]=(b&31)<<27|e>>>5;k=0;h=d&2097151;b=h;d=b<<6;b=g;v[a+15|0]=d|((b&32767)<<17|j>>>15);d=c>>21;g=a;j=(c&2097151)<<11|e>>>21;e=j+(s&2097151)|0;i=e;v[g+21|0]=e;b=f;c=b<<3;b=k;v[g+18|0]=c|((b&262143)<<14|h>>>18);e=e>>>0<j>>>0?d+1|0:d;v[g+22|0]=(e&255)<<24|i>>>8;b=e;d=b>>21;g=(b&2097151)<<11|i>>>21;b=g+(t&2097151)|0;c=d;d=b;c=b>>>0<g>>>0?c+1|0:c;v[a+25|0]=(c&2047)<<21|b>>>11;b=c;v[a+24|0]=(b&7)<<29|d>>>3;g=a;b=b>>21;k=(c&2097151)<<11|d>>>21;c=k+(D&2097151)|0;f=c;b=c>>>0<k>>>0?b+1|0:b;c=b;v[g+27|0]=(b&63)<<26|f>>>6;g=0;h=((e&65535)<<16|i>>>16)&31;i=d&2097151;b=i;v[a+23|0]=h|b<<5;e=a;j=(c&2097151)<<11|f>>>21;d=j+(m&2097151)|0;c=c>>21;c=d>>>0<j>>>0?c+1|0:c;v[e+31|0]=(c&131071)<<15|d>>>17;b=c;v[e+30|0]=(b&511)<<23|d>>>9;v[e+29|0]=(b&1)<<31|d>>>1;e=0;f=f&2097151;c=f;b=c<<2;c=g;g=i;v[a+26|0]=b|((c&524287)<<13|g>>>19);v[a+28|0]=(e&16383)<<18|f>>>14|d<<7}function pc(a,b,c,d){var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;while(1){e=m<<3;k=e+c|0;e=b+e|0;C=y[e+4|0]|y[e+5|0]<<8|(y[e+6|0]<<16|y[e+7|0]<<24);o=y[e|0]|y[e+1|0]<<8|(y[e+2|0]<<16|y[e+3|0]<<24);j=o<<24|o<<8&16711680;e=C<<24|o>>>8;f=e&65280;e=C<<8|o>>>24;j=e&255|f|j;e=C;x[k>>2]=((e&255)<<24|o>>>8)&-16777216|((e&16777215)<<8|o>>>24)&16711680|(e>>>8&65280|e>>>24)|i;x[k+4>>2]=j;m=m+1|0;if((m|0)!=16){continue}break}b=za(d,a,64);while(1){A=P<<3;C=A+c|0;d=C;e=x[d>>2];d=x[d+4>>2];o=b;z=x[o+32>>2];n=x[o+36>>2];k=ia(z,n,14);j=Y;k=ia(z,n,18)^k;j=Y^j;k=ia(z,n,41)^k;e=k+e|0;d=(Y^j)+d|0;d=e>>>0<k>>>0?d+1|0:d;k=e;e=o;g=x[e+48>>2];j=A+35088|0;m=x[j>>2];k=m+k|0;d=x[j+4>>2]+d|0;d=k>>>0<m>>>0?d+1|0:d;h=x[e+40>>2];j=g^(h^g)&z;k=j+k|0;f=x[e+52>>2];v=x[e+44>>2];e=((f^v)&n^f)+d|0;e=j>>>0>k>>>0?e+1|0:e;j=x[o+56>>2];k=j+k|0;d=x[o+60>>2]+e|0;d=j>>>0>k>>>0?d+1|0:d;j=k;m=x[o+24>>2];k=j+m|0;e=x[o+28>>2]+d|0;i=k;e=i>>>0<m>>>0?e+1|0:e;r=e;x[o+24>>2]=i;x[o+28>>2]=e;k=o;u=x[k>>2];m=x[k+4>>2];e=ia(u,m,28);o=Y;e=ia(u,m,34)^e;t=Y^o;o=j+(ia(u,m,39)^e)|0;e=d+(Y^t)|0;e=j>>>0>o>>>0?e+1|0:e;t=x[k+16>>2];s=x[k+8>>2];p=u&(t|s)|s&t;o=p+o|0;d=e;e=x[k+20>>2];j=x[k+12>>2];d=d+(m&(e|j)|e&j)|0;l=o;d=o>>>0<p>>>0?d+1|0:d;o=d;x[k+56>>2]=l;x[k+60>>2]=d;d=k;k=e;e=ia(i,r,14);p=Y;q=ia(i,r,18)^e;p=Y^p;B=t;t=(h^z)&i^h;g=t+g|0;e=((n^v)&r^v)+f|0;e=g>>>0<t>>>0?e+1|0:e;f=ia(i,r,41)^q;g=f+g|0;e=(Y^p)+e|0;e=g>>>0<f>>>0?e+1|0:e;f=A|8;I=f+c|0;t=I;p=x[t>>2];g=p+g|0;e=x[t+4>>2]+e|0;e=g>>>0<p>>>0?e+1|0:e;f=f+35088|0;t=x[f>>2];g=t+g|0;e=x[f+4>>2]+e|0;e=g>>>0<t>>>0?e+1|0:e;p=g;f=g;g=B+f|0;q=k;k=e;e=q+e|0;e=g>>>0<f>>>0?e+1|0:e;t=e;x[d+16>>2]=g;x[d+20>>2]=e;f=d;d=ia(l,o,28);e=Y;q=ia(l,o,34)^d;w=Y^e;d=p;p=(s|u)&l|s&u;d=d+p|0;e=((j|m)&o|j&m)+k|0;e=d>>>0<p>>>0?e+1|0:e;p=ia(l,o,39)^q;k=p+d|0;d=(Y^w)+e|0;q=k;d=k>>>0<p>>>0?d+1|0:d;k=d;x[f+48>>2]=q;x[f+52>>2]=d;p=f;d=ia(g,t,14);e=Y;f=ia(g,t,18)^d;w=Y^e;B=s;s=(i^z)&g^z;d=s+h|0;e=((n^r)&t^n)+v|0;e=d>>>0<s>>>0?e+1|0:e;f=ia(g,t,41)^f;d=f+d|0;e=(Y^w)+e|0;e=d>>>0<f>>>0?e+1|0:e;f=d;s=A|16;L=s+c|0;d=L;h=x[d>>2];f=f+h|0;d=x[d+4>>2]+e|0;d=f>>>0<h>>>0?d+1|0:d;e=s+35088|0;s=x[e>>2];f=s+f|0;e=x[e+4>>2]+d|0;e=f>>>0<s>>>0?e+1|0:e;h=f;f=B+f|0;d=e;e=e+j|0;e=f>>>0<h>>>0?e+1|0:e;s=e;x[p+8>>2]=f;x[p+12>>2]=e;e=p;j=ia(q,k,28);p=Y;v=ia(q,k,34)^j;p=Y^p;j=h;h=(l|u)&q|l&u;j=j+h|0;d=((m|o)&k|m&o)+d|0;d=j>>>0<h>>>0?d+1|0:d;h=ia(q,k,39)^v;j=h+j|0;d=(Y^p)+d|0;v=j;d=j>>>0<h>>>0?d+1|0:d;j=d;x[e+40>>2]=v;x[e+44>>2]=d;h=e;d=ia(f,s,14);e=Y;p=ia(f,s,18)^d;w=Y^e;E=u;e=(r^(r^t)&s)+n|0;u=i^(g^i)&f;d=u+z|0;p=ia(f,s,41)^p;n=d+p|0;d=(Y^w)+(d>>>0<u>>>0?e+1|0:e)|0;d=n>>>0<p>>>0?d+1|0:d;p=A|24;B=p+c|0;e=B;u=x[e>>2];n=u+n|0;e=x[e+4>>2]+d|0;e=n>>>0<u>>>0?e+1|0:e;d=n;n=p+35088|0;p=x[n>>2];d=d+p|0;e=x[n+4>>2]+e|0;e=d>>>0<p>>>0?e+1|0:e;u=d;p=d;n=E+d|0;d=e+m|0;d=n>>>0<p>>>0?d+1|0:d;p=d;x[h>>2]=n;x[h+4>>2]=d;d=ia(v,j,28);m=Y;z=ia(v,j,34)^d;w=Y^m;m=(l|q)&v|l&q;d=m+u|0;e=((k|o)&j|k&o)+e|0;e=d>>>0<m>>>0?e+1|0:e;u=ia(v,j,39)^z;m=u+d|0;d=(Y^w)+e|0;d=m>>>0<u>>>0?d+1|0:d;u=m;m=d;x[h+32>>2]=u;x[h+36>>2]=d;d=h;e=ia(n,p,14);h=Y;z=ia(n,p,18)^e;w=Y^h;E=l;e=r+(t^(s^t)&p)|0;h=i+(g^(g^f)&n)|0;e=h>>>0<i>>>0?e+1|0:e;r=ia(n,p,41)^z;i=r+h|0;e=(Y^w)+e|0;e=i>>>0<r>>>0?e+1|0:e;r=A|32;J=r+c|0;h=J;l=x[h>>2];i=l+i|0;e=x[h+4>>2]+e|0;e=i>>>0<l>>>0?e+1|0:e;r=r+35088|0;h=x[r>>2];i=h+i|0;e=x[r+4>>2]+e|0;e=i>>>0<h>>>0?e+1|0:e;l=i;i=E+i|0;h=o;o=e;e=h+e|0;e=i>>>0<l>>>0?e+1|0:e;r=e;x[d+56>>2]=i;x[d+60>>2]=e;h=d;d=ia(u,m,28);e=Y;z=ia(u,m,34)^d;w=Y^e;d=l;l=(q|v)&u|q&v;d=d+l|0;e=((j|k)&m|j&k)+o|0;e=d>>>0<l>>>0?e+1|0:e;l=ia(u,m,39)^z;o=l+d|0;d=(Y^w)+e|0;z=o;d=l>>>0>o>>>0?d+1|0:d;o=d;x[h+24>>2]=z;x[h+28>>2]=d;d=ia(i,r,14);e=Y;l=ia(i,r,18)^d;w=Y^e;e=t+(s^(p^s)&r)|0;d=g+(f^(f^n)&i)|0;e=d>>>0<g>>>0?e+1|0:e;g=ia(i,r,41)^l;d=g+d|0;e=(Y^w)+e|0;e=d>>>0<g>>>0?e+1|0:e;g=d;t=A|40;D=t+c|0;d=D;l=x[d>>2];g=g+l|0;d=x[d+4>>2]+e|0;d=g>>>0<l>>>0?d+1|0:d;e=t+35088|0;t=x[e>>2];g=t+g|0;e=x[e+4>>2]+d|0;e=g>>>0<t>>>0?e+1|0:e;l=g;g=g+q|0;d=e;e=e+k|0;e=g>>>0<l>>>0?e+1|0:e;t=e;x[h+48>>2]=g;x[h+52>>2]=e;e=h;k=ia(z,o,28);h=Y;q=ia(z,o,34)^k;h=Y^h;k=l;l=(v|u)&z|v&u;k=k+l|0;d=((j|m)&o|j&m)+d|0;d=k>>>0<l>>>0?d+1|0:d;l=ia(z,o,39)^q;k=l+k|0;d=(Y^h)+d|0;q=k;d=k>>>0<l>>>0?d+1|0:d;k=d;x[e+16>>2]=q;x[e+20>>2]=d;h=e;d=ia(g,t,14);e=Y;l=ia(g,t,18)^d;w=Y^e;e=s+(p^(p^r)&t)|0;d=f+(n^(i^n)&g)|0;e=d>>>0<f>>>0?e+1|0:e;s=ia(g,t,41)^l;f=s+d|0;d=(Y^w)+e|0;d=f>>>0<s>>>0?d+1|0:d;s=A|48;Q=s+c|0;e=Q;l=x[e>>2];f=l+f|0;e=x[e+4>>2]+d|0;e=f>>>0<l>>>0?e+1|0:e;d=f;f=s+35088|0;s=x[f>>2];d=d+s|0;e=x[f+4>>2]+e|0;e=d>>>0<s>>>0?e+1|0:e;l=d;f=d+v|0;d=e+j|0;d=f>>>0<l>>>0?d+1|0:d;s=d;x[h+40>>2]=f;x[h+44>>2]=d;d=ia(q,k,28);j=Y;v=ia(q,k,34)^d;w=Y^j;j=(u|z)&q|u&z;d=j+l|0;e=((m|o)&k|m&o)+e|0;e=d>>>0<j>>>0?e+1|0:e;l=ia(q,k,39)^v;j=l+d|0;d=(Y^w)+e|0;v=j;d=j>>>0<l>>>0?d+1|0:d;j=d;x[h+8>>2]=v;x[h+12>>2]=d;d=h;e=ia(f,s,14);h=Y;l=ia(f,s,18)^e;w=Y^h;e=p+(r^(r^t)&s)|0;h=n+(i^(g^i)&f)|0;e=h>>>0<n>>>0?e+1|0:e;p=ia(f,s,41)^l;n=p+h|0;e=(Y^w)+e|0;e=n>>>0<p>>>0?e+1|0:e;p=A|56;R=p+c|0;h=R;l=x[h>>2];n=l+n|0;e=x[h+4>>2]+e|0;e=n>>>0<l>>>0?e+1|0:e;p=p+35088|0;h=x[p>>2];n=h+n|0;e=x[p+4>>2]+e|0;e=h>>>0>n>>>0?e+1|0:e;l=n;n=n+u|0;h=m;m=e;e=h+e|0;e=n>>>0<l>>>0?e+1|0:e;p=e;x[d+32>>2]=n;x[d+36>>2]=e;h=d;d=ia(v,j,28);e=Y;u=ia(v,j,34)^d;w=Y^e;d=l;l=(q|z)&v|q&z;d=d+l|0;e=((k|o)&j|k&o)+m|0;e=d>>>0<l>>>0?e+1|0:e;l=ia(v,j,39)^u;m=l+d|0;d=(Y^w)+e|0;u=m;d=m>>>0<l>>>0?d+1|0:d;m=d;x[h>>2]=u;x[h+4>>2]=d;l=h;d=ia(n,p,14);e=Y;h=ia(n,p,18)^d;w=Y^e;e=r+(t^(s^t)&p)|0;d=i+(g^(g^f)&n)|0;e=d>>>0<i>>>0?e+1|0:e;i=ia(n,p,41)^h;d=i+d|0;e=(Y^w)+e|0;e=d>>>0<i>>>0?e+1|0:e;i=d;r=A|64;S=r+c|0;d=S;h=x[d>>2];i=i+h|0;d=x[d+4>>2]+e|0;d=i>>>0<h>>>0?d+1|0:d;e=r+35088|0;r=x[e>>2];i=r+i|0;e=x[e+4>>2]+d|0;e=i>>>0<r>>>0?e+1|0:e;r=i;h=i;i=i+z|0;d=e;e=e+o|0;e=i>>>0<h>>>0?e+1|0:e;h=e;x[l+24>>2]=i;x[l+28>>2]=e;e=l;o=ia(u,m,28);l=Y;z=ia(u,m,34)^o;l=Y^l;o=r;r=(q|v)&u|q&v;o=o+r|0;d=((j|k)&m|j&k)+d|0;d=o>>>0<r>>>0?d+1|0:d;r=ia(u,m,39)^z;o=r+o|0;d=(Y^l)+d|0;z=o;d=o>>>0<r>>>0?d+1|0:d;o=d;x[e+56>>2]=z;x[e+60>>2]=d;r=e;d=ia(i,h,14);e=Y;l=ia(i,h,18)^d;w=Y^e;e=t+(s^(p^s)&h)|0;d=g+(f^(f^n)&i)|0;e=d>>>0<g>>>0?e+1|0:e;t=ia(i,h,41)^l;g=t+d|0;d=(Y^w)+e|0;d=g>>>0<t>>>0?d+1|0:d;t=A|72;F=t+c|0;e=F;l=x[e>>2];g=l+g|0;e=x[e+4>>2]+d|0;e=g>>>0<l>>>0?e+1|0:e;d=g;g=t+35088|0;t=x[g>>2];d=d+t|0;e=x[g+4>>2]+e|0;e=d>>>0<t>>>0?e+1|0:e;t=d;l=d;g=d+q|0;d=e+k|0;d=g>>>0<l>>>0?d+1|0:d;l=d;x[r+16>>2]=g;x[r+20>>2]=d;d=ia(z,o,28);k=Y;q=ia(z,o,34)^d;w=Y^k;k=(v|u)&z|v&u;d=k+t|0;e=((j|m)&o|j&m)+e|0;e=d>>>0<k>>>0?e+1|0:e;t=ia(z,o,39)^q;k=t+d|0;d=(Y^w)+e|0;w=k;d=k>>>0<t>>>0?d+1|0:d;k=d;x[r+48>>2]=w;x[r+52>>2]=d;d=r;e=ia(g,l,14);r=Y;t=ia(g,l,18)^e;q=Y^r;e=s+(p^(h^p)&l)|0;r=f+(n^(i^n)&g)|0;e=r>>>0<f>>>0?e+1|0:e;f=r;r=ia(g,l,41)^t;f=f+r|0;e=(Y^q)+e|0;e=f>>>0<r>>>0?e+1|0:e;r=A|80;G=r+c|0;t=G;s=x[t>>2];f=s+f|0;e=x[t+4>>2]+e|0;e=f>>>0<s>>>0?e+1|0:e;r=r+35088|0;t=x[r>>2];f=t+f|0;e=x[r+4>>2]+e|0;e=f>>>0<t>>>0?e+1|0:e;r=f;f=f+v|0;q=j;j=e;e=q+e|0;e=f>>>0<r>>>0?e+1|0:e;s=e;x[d+8>>2]=f;x[d+12>>2]=e;t=d;d=ia(w,k,28);e=Y;q=ia(w,k,34)^d;v=Y^e;d=r;r=(u|z)&w|u&z;d=d+r|0;e=((m|o)&k|m&o)+j|0;e=d>>>0<r>>>0?e+1|0:e;r=ia(w,k,39)^q;j=r+d|0;d=(Y^v)+e|0;d=j>>>0<r>>>0?d+1|0:d;r=d;x[t+40>>2]=j;x[t+44>>2]=d;d=ia(f,s,14);e=Y;q=ia(f,s,18)^d;v=Y^e;e=p+(h^(h^l)&s)|0;d=n+(i^(g^i)&f)|0;e=d>>>0<n>>>0?e+1|0:e;n=ia(f,s,41)^q;d=n+d|0;e=(Y^v)+e|0;e=d>>>0<n>>>0?e+1|0:e;n=d;p=A|88;E=p+c|0;d=E;q=x[d>>2];n=n+q|0;d=x[d+4>>2]+e|0;d=n>>>0<q>>>0?d+1|0:d;e=p+35088|0;p=x[e>>2];n=p+n|0;e=x[e+4>>2]+d|0;e=n>>>0<p>>>0?e+1|0:e;q=n;p=n;n=n+u|0;d=e;e=e+m|0;e=n>>>0<p>>>0?e+1|0:e;p=e;x[t>>2]=n;x[t+4>>2]=e;e=t;m=ia(j,r,28);t=Y;v=ia(j,r,34)^m;t=Y^t;m=q;q=(w|z)&j|w&z;m=m+q|0;d=((k|o)&r|k&o)+d|0;d=m>>>0<q>>>0?d+1|0:d;q=ia(j,r,39)^v;m=q+m|0;d=(Y^t)+d|0;d=m>>>0<q>>>0?d+1|0:d;t=d;x[e+32>>2]=m;x[e+36>>2]=d;q=e;d=ia(n,p,14);e=Y;v=ia(n,p,18)^d;u=Y^e;e=h+(l^(l^s)&p)|0;d=i+(g^(g^f)&n)|0;e=d>>>0<i>>>0?e+1|0:e;h=ia(n,p,41)^v;i=h+d|0;d=(Y^u)+e|0;d=i>>>0<h>>>0?d+1|0:d;h=A|96;T=h+c|0;e=T;v=x[e>>2];i=v+i|0;e=x[e+4>>2]+d|0;e=i>>>0<v>>>0?e+1|0:e;d=i;i=h+35088|0;h=x[i>>2];d=d+h|0;e=x[i+4>>2]+e|0;e=d>>>0<h>>>0?e+1|0:e;u=d;h=d;i=d+z|0;d=e+o|0;v=i;d=i>>>0<h>>>0?d+1|0:d;i=d;x[q+56>>2]=v;x[q+60>>2]=d;h=q;d=ia(m,t,28);o=Y;q=ia(m,t,34)^d;z=Y^o;o=(j|w)&m|j&w;d=o+u|0;e=((k|r)&t|k&r)+e|0;e=d>>>0<o>>>0?e+1|0:e;q=ia(m,t,39)^q;o=q+d|0;d=(Y^z)+e|0;d=o>>>0<q>>>0?d+1|0:d;q=o;o=d;x[h+24>>2]=q;x[h+28>>2]=d;d=h;e=ia(v,i,14);h=Y;u=ia(v,i,18)^e;z=Y^h;e=l+(s^(p^s)&i)|0;h=g+(f^(f^n)&v)|0;e=h>>>0<g>>>0?e+1|0:e;g=h;h=ia(v,i,41)^u;g=g+h|0;e=(Y^z)+e|0;e=g>>>0<h>>>0?e+1|0:e;h=A|104;U=h+c|0;l=U;u=x[l>>2];g=u+g|0;e=x[l+4>>2]+e|0;e=g>>>0<u>>>0?e+1|0:e;h=h+35088|0;l=x[h>>2];g=l+g|0;e=x[h+4>>2]+e|0;e=g>>>0<l>>>0?e+1|0:e;l=g;h=g;g=g+w|0;u=k;k=e;e=u+e|0;u=g;e=g>>>0<h>>>0?e+1|0:e;g=e;x[d+48>>2]=u;x[d+52>>2]=e;h=d;d=ia(q,o,28);e=Y;z=ia(q,o,34)^d;w=Y^e;d=l;l=(j|m)&q|j&m;d=d+l|0;e=((r|t)&o|r&t)+k|0;e=d>>>0<l>>>0?e+1|0:e;l=ia(q,o,39)^z;k=l+d|0;d=(Y^w)+e|0;d=k>>>0<l>>>0?d+1|0:d;l=k;k=d;x[h+16>>2]=l;x[h+20>>2]=d;d=ia(u,g,14);e=Y;z=ia(u,g,18)^d;w=Y^e;e=s+(p^(i^p)&g)|0;d=f+(n^(n^v)&u)|0;e=d>>>0<f>>>0?e+1|0:e;f=ia(u,g,41)^z;d=f+d|0;e=(Y^w)+e|0;e=d>>>0<f>>>0?e+1|0:e;f=d;s=A|112;z=s+c|0;d=z;w=x[d>>2];f=f+w|0;d=x[d+4>>2]+e|0;d=f>>>0<w>>>0?d+1|0:d;e=s+35088|0;s=x[e>>2];f=s+f|0;e=x[e+4>>2]+d|0;e=f>>>0<s>>>0?e+1|0:e;w=f;f=j+f|0;d=e;e=r+e|0;s=f;e=f>>>0<j>>>0?e+1|0:e;j=e;x[h+40>>2]=f;x[h+44>>2]=e;e=h;f=ia(l,k,28);r=Y;h=ia(l,k,34)^f;r=Y^r;f=w;w=(m|q)&l|m&q;f=f+w|0;d=((o|t)&k|o&t)+d|0;d=f>>>0<w>>>0?d+1|0:d;h=ia(l,k,39)^h;f=h+f|0;d=(Y^r)+d|0;d=f>>>0<h>>>0?d+1|0:d;h=f;f=d;x[e+8>>2]=h;x[e+12>>2]=d;d=ia(s,j,14);e=Y;w=ia(s,j,18)^d;K=Y^e;e=p+(i^(g^i)&j)|0;d=n+(v^(v^u)&s)|0;e=d>>>0<n>>>0?e+1|0:e;i=ia(s,j,41)^w;j=i+d|0;d=(Y^K)+e|0;d=j>>>0<i>>>0?d+1|0:d;g=A|120;i=g+c|0;e=i;n=x[e>>2];j=n+j|0;e=x[e+4>>2]+d|0;e=j>>>0<n>>>0?e+1|0:e;d=j;j=g+35088|0;g=x[j>>2];d=d+g|0;e=x[j+4>>2]+e|0;e=d>>>0<g>>>0?e+1|0:e;g=d;j=m+d|0;d=e+t|0;r=b;x[r+32>>2]=j;x[r+36>>2]=j>>>0<m>>>0?d+1|0:d;d=ia(h,f,28);j=Y;m=ia(h,f,34)^d;n=Y^j;e=((k|o)&f|k&o)+e|0;d=g;g=(l|q)&h|l&q;d=d+g|0;k=ia(h,f,39)^m;o=d+k|0;d=(Y^n)+(d>>>0<g>>>0?e+1|0:e)|0;j=r;x[j>>2]=o;x[j+4>>2]=k>>>0>o>>>0?d+1|0:d;if((P|0)==64){while(1){d=V<<3;c=d+a|0;e=b+d|0;o=x[e>>2];d=o+x[c>>2]|0;e=x[c+4>>2]+x[e+4>>2]|0;x[c>>2]=d;x[c+4>>2]=d>>>0<o>>>0?e+1|0:e;V=V+1|0;if((V|0)!=8){continue}break}}else{P=P+16|0;j=(P<<3)+c|0;d=x[z+4>>2];r=d;e=d>>>6|0;K=x[z>>2];d=((d&63)<<26|K>>>6)^ia(K,d,19);e=Y^e;d=ia(K,r,61)^d;M=x[F>>2];o=M;d=d+o|0;v=x[F+4>>2];e=v+(Y^e)|0;e=d>>>0<o>>>0?e+1|0:e;o=x[C>>2];d=o+d|0;e=x[C+4>>2]+e|0;g=d;d=d>>>0<o>>>0?e+1|0:e;o=x[I+4>>2];k=o;e=k>>>7|0;m=x[I>>2];o=((k&127)<<25|m>>>7)^ia(m,k,1);e=Y^e;f=g;g=ia(m,k,8)^o;o=f+g|0;e=(Y^e)+d|0;F=o;e=g>>>0>o>>>0?e+1|0:e;o=e;x[j>>2]=F;x[j+4>>2]=e;j=C;d=m;N=x[G>>2];m=N;d=d+m|0;u=x[G+4>>2];e=u+k|0;e=d>>>0<m>>>0?e+1|0:e;m=d;d=e;k=x[i+4>>2];t=k;e=k>>>6|0;G=x[i>>2];k=((k&63)<<26|G>>>6)^ia(G,k,19);i=Y^e;k=ia(G,t,61)^k;e=k+m|0;d=(Y^i)+d|0;m=e;e=e>>>0<k>>>0?d+1|0:d;k=x[L+4>>2];i=k;d=i>>>7|0;g=x[L>>2];k=((i&127)<<25|g>>>7)^ia(g,i,1);f=Y^d;k=ia(g,i,8)^k;d=k+m|0;e=(Y^f)+e|0;H=d;e=d>>>0<k>>>0?e+1|0:e;k=e;x[j+136>>2]=d;x[j+140>>2]=e;m=j;O=x[E>>2];j=O;e=j+g|0;z=x[E+4>>2];d=z+i|0;d=e>>>0<j>>>0?d+1|0:d;j=d;d=ia(F,o,19);g=Y;h=e;i=d;e=o;d=e>>>6|0;f=i^((e&63)<<26|F>>>6)^ia(F,e,61);i=h+f|0;e=(Y^(d^g))+j|0;e=f>>>0>i>>>0?e+1|0:e;d=e;j=x[B+4>>2];g=j;e=g>>>7|0;f=x[B>>2];j=((g&127)<<25|f>>>7)^ia(f,g,1);e=Y^e;h=i;i=ia(f,g,8)^j;j=h+i|0;e=(Y^e)+d|0;s=j;e=j>>>0<i>>>0?e+1|0:e;j=e;x[m+144>>2]=s;x[m+148>>2]=e;i=m;E=x[T>>2];m=E;e=m+f|0;w=x[T+4>>2];d=w+g|0;d=e>>>0<m>>>0?d+1|0:d;m=d;d=ia(H,k,19);f=Y;h=e;g=d;e=k;d=e>>>6|0;n=g^((e&63)<<26|H>>>6)^ia(H,e,61);g=h+n|0;e=(Y^(d^f))+m|0;f=g;d=f>>>0<n>>>0?e+1|0:e;m=x[J+4>>2];g=m;e=g>>>7|0;n=x[J>>2];m=((g&127)<<25|n>>>7)^ia(n,g,1);e=Y^e;h=f;f=ia(n,g,8)^m;m=h+f|0;e=(Y^e)+d|0;p=m;e=f>>>0>m>>>0?e+1|0:e;m=e;x[i+152>>2]=p;x[i+156>>2]=e;f=i;I=x[U>>2];i=I;e=i+n|0;L=x[U+4>>2];d=L+g|0;d=e>>>0<i>>>0?d+1|0:d;i=d;d=ia(s,j,19);g=Y;l=e;h=d;e=j;d=e>>>6|0;n=h^((e&63)<<26|s>>>6)^ia(s,e,61);e=l+n|0;d=(Y^(d^g))+i|0;h=e;e=e>>>0<n>>>0?d+1|0:d;i=x[D+4>>2];n=i;d=i>>>7|0;g=x[D>>2];i=((i&127)<<25|g>>>7)^ia(g,i,1);l=Y^d;i=ia(g,n,8)^i;d=i+h|0;e=(Y^l)+e|0;h=d;e=d>>>0<i>>>0?e+1|0:e;i=e;x[f+160>>2]=d;x[f+164>>2]=e;d=n+r|0;e=g+K|0;d=e>>>0<g>>>0?d+1|0:d;g=d;d=ia(p,m,19);l=Y;n=e;q=d;e=m;d=e>>>6|0;q=q^((e&63)<<26|p>>>6)^ia(p,e,61);n=n+q|0;e=(Y^(d^l))+g|0;e=n>>>0<q>>>0?e+1|0:e;q=n;g=e;l=x[Q+4>>2];n=l;e=n>>>7|0;d=x[Q>>2];l=((n&127)<<25|d>>>7)^ia(d,n,1);e=Y^e;B=q;q=ia(d,n,8)^l;l=B+q|0;e=(Y^e)+g|0;e=l>>>0<q>>>0?e+1|0:e;g=e;x[f+168>>2]=l;x[f+172>>2]=e;q=f;e=d;f=e+G|0;d=n+t|0;d=e>>>0>f>>>0?d+1|0:d;e=f;f=d;d=ia(h,i,19);A=Y;C=e;n=d;e=i;d=e>>>6|0;B=n^((e&63)<<26|h>>>6)^ia(h,e,61);n=C+B|0;e=(Y^(d^A))+f|0;A=n;d=n>>>0<B>>>0?e+1|0:e;f=x[R+4>>2];B=f;e=f>>>7|0;n=x[R>>2];f=((f&127)<<25|n>>>7)^ia(n,f,1);J=Y^e;f=ia(n,B,8)^f;e=f+A|0;d=(Y^J)+d|0;J=e;d=e>>>0<f>>>0?d+1|0:d;f=d;x[q+176>>2]=e;x[q+180>>2]=d;A=q;d=o+B|0;e=n+F|0;d=e>>>0<n>>>0?d+1|0:d;n=d;d=ia(l,g,19);B=Y;C=e;q=d;e=g;d=e>>>6|0;D=q^((e&63)<<26|l>>>6)^ia(l,e,61);q=C+D|0;e=(Y^(d^B))+n|0;B=q;n=q>>>0<D>>>0?e+1|0:e;q=x[S+4>>2];D=q;e=q>>>7|0;d=x[S>>2];q=((q&127)<<25|d>>>7)^ia(d,q,1);e=Y^e;C=B;B=ia(d,D,8)^q;q=C+B|0;e=(Y^e)+n|0;e=q>>>0<B>>>0?e+1|0:e;n=e;x[A+184>>2]=q;x[A+188>>2]=e;B=A;e=d;A=e+H|0;d=k+D|0;d=e>>>0>A>>>0?d+1|0:d;e=A;k=d;d=ia(J,f,19);A=Y;D=e;C=d;e=f;d=e>>>6|0;H=C^((e&63)<<26|J>>>6)^ia(J,e,61);e=D+H|0;d=(Y^(d^A))+k|0;d=e>>>0<H>>>0?d+1|0:d;k=d;d=ia(M,v,1);H=Y;C=e;A=d;e=v;d=e>>>7|0;D=A^((e&127)<<25|M>>>7)^ia(M,e,8);A=C+D|0;e=(Y^(d^H))+k|0;e=A>>>0<D>>>0?e+1|0:e;k=e;x[B+192>>2]=A;x[B+196>>2]=e;d=j+v|0;e=s+M|0;d=e>>>0<s>>>0?d+1|0:d;j=d;d=ia(q,n,19);s=Y;C=e;v=d;e=n;d=e>>>6|0;v=v^((e&63)<<26|q>>>6)^ia(q,e,61);e=C+v|0;d=(Y^(d^s))+j|0;d=e>>>0<v>>>0?d+1|0:d;j=d;d=ia(N,u,1);v=Y;C=e;s=d;e=u;d=e>>>7|0;H=s^((e&127)<<25|N>>>7)^ia(N,e,8);s=C+H|0;e=(Y^(d^v))+j|0;v=s;e=s>>>0<H>>>0?e+1|0:e;j=e;x[B+200>>2]=s;x[B+204>>2]=e;s=B;d=m+u|0;e=p+N|0;d=e>>>0<p>>>0?d+1|0:d;m=d;d=ia(A,k,19);p=Y;C=e;B=d;e=k;d=e>>>6|0;u=B^((e&63)<<26|A>>>6)^ia(A,e,61);e=C+u|0;d=(Y^(d^p))+m|0;d=e>>>0<u>>>0?d+1|0:d;m=d;d=ia(O,z,1);u=Y;C=e;p=d;e=z;d=e>>>7|0;B=p^((e&127)<<25|O>>>7)^ia(O,e,8);p=C+B|0;e=(Y^(d^u))+m|0;e=p>>>0<B>>>0?e+1|0:e;m=e;x[s+208>>2]=p;x[s+212>>2]=e;d=i+z|0;e=h+O|0;d=e>>>0<h>>>0?d+1|0:d;i=d;d=ia(v,j,19);h=Y;u=e;B=d;e=j;d=e>>>6|0;j=B^((e&63)<<26|v>>>6)^ia(v,e,61);e=u+j|0;d=(Y^(d^h))+i|0;d=e>>>0<j>>>0?d+1|0:d;j=d;d=ia(E,w,1);h=Y;B=e;i=d;e=w;d=e>>>7|0;v=i^((e&127)<<25|E>>>7)^ia(E,e,8);i=B+v|0;e=(Y^(d^h))+j|0;h=i;e=i>>>0<v>>>0?e+1|0:e;j=e;x[s+216>>2]=i;x[s+220>>2]=e;i=s;d=g+w|0;e=l+E|0;d=e>>>0<l>>>0?d+1|0:d;g=d;d=ia(p,m,19);s=Y;B=e;l=d;e=m;d=e>>>6|0;m=l^((e&63)<<26|p>>>6)^ia(p,e,61);e=B+m|0;d=(Y^(d^s))+g|0;d=e>>>0<m>>>0?d+1|0:d;m=d;d=ia(I,L,1);s=Y;l=e;g=d;e=L;d=e>>>7|0;p=g^((e&127)<<25|I>>>7)^ia(I,e,8);g=l+p|0;e=(Y^(d^s))+m|0;s=g;e=g>>>0<p>>>0?e+1|0:e;m=e;x[i+224>>2]=g;x[i+228>>2]=e;d=f+L|0;e=J+I|0;d=e>>>0<I>>>0?d+1|0:d;g=d;d=ia(h,j,19);f=Y;p=e;l=d;e=j;d=e>>>6|0;j=l^((e&63)<<26|h>>>6)^ia(h,e,61);e=p+j|0;d=(Y^(d^f))+g|0;d=e>>>0<j>>>0?d+1|0:d;j=d;d=ia(K,r,1);f=Y;h=e;g=d;e=r;d=e>>>7|0;p=g^((e&127)<<25|K>>>7)^ia(K,e,8);g=h+p|0;e=(Y^(d^f))+j|0;f=g;e=f>>>0<p>>>0?e+1|0:e;j=e;x[i+232>>2]=f;x[i+236>>2]=e;e=i;d=n+r|0;i=q+K|0;d=i>>>0<q>>>0?d+1|0:d;g=d;d=ia(s,m,19);n=Y;l=i;h=d;i=m;d=i>>>6|0;i=h^((i&63)<<26|s>>>6)^ia(s,i,61);m=l+i|0;d=(Y^(d^n))+g|0;g=m;m=i>>>0>g>>>0?d+1|0:d;d=ia(G,t,1);n=Y;i=e;h=d;e=t;d=e>>>7|0;r=h^((e&127)<<25|G>>>7)^ia(G,e,8);g=r+g|0;e=(Y^(d^n))+m|0;x[i+240>>2]=g;x[i+244>>2]=g>>>0<r>>>0?e+1|0:e;d=k+t|0;e=A+G|0;d=e>>>0<A>>>0?d+1|0:d;k=d;d=ia(f,j,19);m=Y;h=e;g=d;e=j;d=e>>>6|0;j=g^((e&63)<<26|f>>>6)^ia(f,e,61);e=h+j|0;d=(Y^(d^m))+k|0;d=e>>>0<j>>>0?d+1|0:d;k=d;d=ia(F,o,1);j=Y;g=e;m=d;e=o;d=e>>>7|0;m=m^((e&127)<<25|F>>>7)^ia(F,e,8);o=g+m|0;e=(Y^(d^j))+k|0;x[i+248>>2]=o;x[i+252>>2]=m>>>0>o>>>0?e+1|0:e;continue}break}}function Eb(a){var b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,w=0,x=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0;ea=sa(a);fa=y[a+2|0]|y[a+3|0]<<8|(y[a+4|0]<<16|y[a+5|0]<<24);ga=sa(a+5|0);ha=Y;X=y[a+7|0]|y[a+8|0]<<8|(y[a+9|0]<<16|y[a+10|0]<<24);Z=y[a+10|0]|y[a+11|0]<<8|(y[a+12|0]<<16|y[a+13|0]<<24);ia=sa(a+13|0);_=Y;p=y[a+15|0]|y[a+16|0]<<8|(y[a+17|0]<<16|y[a+18|0]<<24);F=sa(a+18|0);q=Y;k=sa(a+21|0);g=y[a+23|0]|y[a+24|0]<<8|(y[a+25|0]<<16|y[a+26|0]<<24);f=sa(a+26|0);c=Y;Q=y[a+28|0]|y[a+29|0]<<8|(y[a+30|0]<<16|y[a+31|0]<<24);z=y[a+31|0]|y[a+32|0]<<8|(y[a+33|0]<<16|y[a+34|0]<<24);D=sa(a+34|0);C=Y;r=y[a+36|0]|y[a+37|0]<<8|(y[a+38|0]<<16|y[a+39|0]<<24);G=sa(a+39|0);t=Y;i=sa(a+42|0);e=y[a+44|0]|y[a+45|0]<<8|(y[a+46|0]<<16|y[a+47|0]<<24);d=sa(a+47|0);h=Y;H=((h&3)<<30|d>>>2)&2097151;b=((c&3)<<30|f>>>2)&2097151;f=Fj(H,0,136657,0)+b|0;c=Y;c=b>>>0>f>>>0?c+1|0:c;I=(y[a+49|0]|y[a+50|0]<<8|(y[a+51|0]<<16|y[a+52|0]<<24))>>>7&2097151;d=Fj(I,0,-997805,-1);f=d+f|0;b=Y+c|0;b=d>>>0>f>>>0?b+1|0:b;J=(y[a+52|0]|y[a+53|0]<<8|(y[a+54|0]<<16|y[a+55|0]<<24))>>>4&2097151;c=Fj(J,0,654183,0);f=c+f|0;d=Y+b|0;d=c>>>0>f>>>0?d+1|0:d;b=f;c=sa(a+55|0);f=Y;K=((f&1)<<31|c>>>1)&2097151;c=Fj(K,0,470296,0);f=b+c|0;b=Y+d|0;b=c>>>0>f>>>0?b+1|0:b;L=(y[a+57|0]|y[a+58|0]<<8|(y[a+59|0]<<16|y[a+60|0]<<24))>>>6&2097151;d=Fj(L,0,666643,0);f=d+f|0;c=Y+b|0;c=d>>>0>f>>>0?c+1|0:c;m=c;d=c;j=e>>>5&2097151;M=(y[a+60|0]|y[a+61|0]<<8|(y[a+62|0]<<16|y[a+63|0]<<24))>>>3|0;c=i&2097151;e=Fj(M,0,-683901,-1)+c|0;b=Y;i=e;b=c>>>0>e>>>0?b+1|0:b;n=b;b=e;e=n-((b>>>0<4293918720)-1|0)|0;o=b- -1048576|0;w=e;b=e>>21;e=(e&2097151)<<11|o>>>21;j=e+j|0;R=j;c=e>>>0>j>>>0?b+1|0:b;B=c;b=Fj(j,c,-683901,-1);h=b+f|0;c=Y+d|0;E=h;l=b>>>0>h>>>0?c+1|0:c;d=g>>>5&2097151;h=Fj(H,U,-997805,-1)+d|0;b=Y;b=d>>>0>h>>>0?b+1|0:b;c=Fj(I,0,654183,0);h=c+h|0;d=Y+b|0;d=c>>>0>h>>>0?d+1|0:d;b=Fj(J,0,470296,0);h=b+h|0;c=Y+d|0;c=b>>>0>h>>>0?c+1|0:c;d=Fj(K,V,666643,0);h=d+h|0;b=Y+c|0;g=h;d=d>>>0>g>>>0?b+1|0:b;b=k&2097151;h=Fj(H,U,654183,0)+b|0;c=Y;c=b>>>0>h>>>0?c+1|0:c;b=h;h=Fj(I,0,470296,0);e=b+h|0;b=Y+c|0;b=e>>>0<h>>>0?b+1|0:b;h=Fj(J,0,666643,0);e=h+e|0;c=Y+b|0;j=e;c=e>>>0<h>>>0?c+1|0:c;e=c;b=j;h=c-((b>>>0<4293918720)-1|0)|0;N=b- -1048576|0;s=h;b=h>>>21|0;c=(h&2097151)<<11|N>>>21;h=c+g|0;d=b+d|0;g=h;d=c>>>0>g>>>0?d+1|0:d;k=d;b=g;u=d-((b>>>0<4293918720)-1|0)|0;x=b- -1048576|0;ca=f- -1048576|0;m=m-((f>>>0<4293918720)-1|0)|0;h=m;d=u;b=d>>21;f=(d&2097151)<<11|x>>>21;u=f+E|0;c=b+l|0;c=f>>>0>u>>>0?c+1|0:c;f=u;b=ca&-2097152;m=c-((b>>>0>f>>>0)+h|0)|0;b=f-b|0;da=b- -1048576|0;f=m-((b>>>0<4293918720)-1|0)|0;c=da&-2097152;$=b-c|0;aa=m-((b>>>0<c>>>0)+f|0)|0;c=Fj(R,B,136657,0)+g|0;b=k+Y|0;b=c>>>0<g>>>0?b+1|0:b;g=c;c=x&-2097152;O=g-c|0;E=b-((c>>>0>g>>>0)+d|0)|0;b=o&-2097152;m=i-b|0;l=n-((b>>>0>i>>>0)+w|0)|0;b=((t&7)<<29|G>>>3)&2097151;d=Fj(M,0,136657,0)+b|0;c=Y;c=b>>>0>d>>>0?c+1|0:c;b=d;d=Fj(L,0,-683901,-1);g=b+d|0;b=Y+c|0;i=g;g=d>>>0>g>>>0?b+1|0:b;b=Fj(K,V,-683901,-1);c=Y;d=b;b=r>>>6&2097151;d=d+b|0;c=b>>>0>d>>>0?c+1|0:c;b=Fj(M,0,-997805,-1);k=b+d|0;d=Y+c|0;d=b>>>0>k>>>0?d+1|0:d;c=Fj(L,0,136657,0);k=c+k|0;b=Y+d|0;b=c>>>0>k>>>0?b+1|0:b;o=b;b=k;c=o-((b>>>0<4293918720)-1|0)|0;G=b- -1048576|0;x=c;b=(c&2097151)<<11|G>>>21;i=b+i|0;c=(c>>21)+g|0;c=b>>>0>i>>>0?c+1|0:c;n=c;b=i;c=c-((b>>>0<4293918720)-1|0)|0;u=b- -1048576|0;w=c;d=c>>21;c=(c&2097151)<<11|u>>>21;g=c+m|0;b=d+l|0;S=g;b=c>>>0>g>>>0?b+1|0:b;A=b;c=Fj(g,b,-683901,-1);d=c+O|0;b=Y+E|0;ba=d;r=c>>>0>d>>>0?b+1|0:b;l=j;b=((q&7)<<29|F>>>3)&2097151;d=Fj(H,U,470296,0)+b|0;c=Y;c=b>>>0>d>>>0?c+1|0:c;b=Fj(I,0,666643,0);d=b+d|0;c=Y+c|0;m=d;d=b>>>0>d>>>0?c+1|0:c;g=p>>>6&2097151;j=Fj(H,U,666643,0)+g|0;b=Y;b=g>>>0>j>>>0?b+1|0:b;p=b;b=j;g=p-((b>>>0<4293918720)-1|0)|0;O=b- -1048576|0;q=g;c=g>>>21|0;b=(g&2097151)<<11|O>>>21;g=b+m|0;c=c+d|0;c=b>>>0>g>>>0?c+1|0:c;t=c;b=g;F=c-((b>>>0<4293918720)-1|0)|0;E=b- -1048576|0;b=u&-2097152;d=n-((b>>>0>i>>>0)+w|0)|0;P=i-b|0;T=d;m=F;i=(m&2097151)<<11|E>>>21;l=i+l|0;b=(m>>>21|0)+e|0;b=i>>>0>l>>>0?b+1|0:b;e=Fj(R,B,-997805,-1);i=l;c=N&-2097152;l=e+(i-c|0)|0;c=Y+(b-((s&8191)+(c>>>0>i>>>0)|0)|0)|0;c=e>>>0>l>>>0?c+1|0:c;b=Fj(S,A,136657,0);e=b+l|0;c=Y+c|0;c=b>>>0>e>>>0?c+1|0:c;d=Fj(P,d,-683901,-1);e=d+e|0;b=Y+c|0;b=d>>>0>e>>>0?b+1|0:b;n=b;b=e;d=n-((b>>>0<4293918720)-1|0)|0;u=b- -1048576|0;w=d;b=d>>21;d=(d&2097151)<<11|u>>>21;i=d+ba|0;c=b+r|0;c=d>>>0>i>>>0?c+1|0:c;d=i;l=c;b=d;r=c-((b>>>0<4293918720)-1|0)|0;s=b- -1048576|0;i=r;b=i>>21;c=(i&2097151)<<11|s>>>21;r=c+$|0;b=b+aa|0;$=r;r=c>>>0>r>>>0?b+1|0:b;b=s&-2097152;aa=d-b|0;ba=l-((b>>>0>d>>>0)+i|0)|0;b=u&-2097152;F=e-b|0;N=n-((b>>>0>e>>>0)+w|0)|0;b=Fj(R,B,654183,0);c=E&-2097152;e=b+(g-c|0)|0;d=Y+(t-((m&8191)+(c>>>0>g>>>0)|0)|0)|0;d=b>>>0>e>>>0?d+1|0:d;c=Fj(S,A,-997805,-1);e=c+e|0;b=Y+d|0;b=c>>>0>e>>>0?b+1|0:b;d=Fj(P,T,136657,0);e=d+e|0;c=Y+b|0;u=e;i=d>>>0>e>>>0?c+1|0:c;b=G&-2097152;s=k-b|0;t=o-((b>>>0>k>>>0)+x|0)|0;c=((C&1)<<31|D>>>1)&2097151;e=Fj(J,0,-683901,-1)+c|0;b=Y;b=c>>>0>e>>>0?b+1|0:b;c=Fj(K,V,136657,0);d=c+e|0;b=Y+b|0;b=c>>>0>d>>>0?b+1|0:b;c=d;d=Fj(M,0,654183,0);e=c+d|0;c=Y+b|0;c=d>>>0>e>>>0?c+1|0:c;b=Fj(L,0,-997805,-1);d=b+e|0;c=Y+c|0;k=d;e=b>>>0>d>>>0?c+1|0:c;b=Fj(I,0,-683901,-1);d=Y;c=b;b=z>>>4&2097151;c=c+b|0;d=b>>>0>c>>>0?d+1|0:d;b=c;c=Fj(J,0,136657,0);g=b+c|0;b=Y+d|0;b=c>>>0>g>>>0?b+1|0:b;d=Fj(K,V,-997805,-1);g=d+g|0;c=Y+b|0;c=d>>>0>g>>>0?c+1|0:c;d=Fj(M,0,470296,0);g=d+g|0;b=Y+c|0;b=d>>>0>g>>>0?b+1|0:b;d=Fj(L,0,654183,0);g=d+g|0;c=Y+b|0;c=d>>>0>g>>>0?c+1|0:c;n=c;b=g;d=c-((b>>>0<4293918720)-1|0)|0;x=b- -1048576|0;w=d;b=d>>21;c=(d&2097151)<<11|x>>>21;d=c+k|0;b=b+e|0;e=d;b=c>>>0>d>>>0?b+1|0:b;l=b;b=d;d=l-((b>>>0<4293918720)-1|0)|0;m=b- -1048576|0;k=d;b=d>>21;d=(d&2097151)<<11|m>>>21;o=d+s|0;c=b+t|0;W=o;c=d>>>0>o>>>0?c+1|0:c;z=c;b=Fj(o,c,-683901,-1);c=b+u|0;d=Y+i|0;t=c;i=b>>>0>c>>>0?d+1|0:d;b=m&-2097152;k=l-((b>>>0>e>>>0)+k|0)|0;D=e-b|0;C=k;b=Fj(R,B,470296,0);c=O&-2097152;d=b+(j-c|0)|0;c=Y+(p-((q&2047)+(c>>>0>j>>>0)|0)|0)|0;c=b>>>0>d>>>0?c+1|0:c;b=Fj(S,A,654183,0);d=b+d|0;c=Y+c|0;c=b>>>0>d>>>0?c+1|0:c;b=Fj(P,T,-997805,-1);e=b+d|0;d=Y+c|0;d=b>>>0>e>>>0?d+1|0:d;c=Fj(o,z,136657,0);e=c+e|0;b=Y+d|0;b=c>>>0>e>>>0?b+1|0:b;d=Fj(D,k,-683901,-1);e=d+e|0;c=Y+b|0;c=d>>>0>e>>>0?c+1|0:c;l=c;b=e;d=c-((b>>>0<4293918720)-1|0)|0;q=b- -1048576|0;k=d;b=d>>21;c=(d&2097151)<<11|q>>>21;d=c+t|0;b=b+i|0;b=c>>>0>d>>>0?b+1|0:b;i=b;b=d;t=i-((b>>>0<4293918720)-1|0)|0;m=b- -1048576|0;j=t;b=j>>21;t=(j&2097151)<<11|m>>>21;p=t+F|0;c=b+N|0;F=p;t=p>>>0<t>>>0?c+1|0:c;b=m&-2097152;N=d-b|0;G=i-((b>>>0>d>>>0)+j|0)|0;b=q&-2097152;u=e-b|0;o=l-((b>>>0>e>>>0)+k|0)|0;c=((_&1)<<31|ia>>>1)&2097151;e=Fj(R,B,666643,0)+c|0;b=Y;b=c>>>0>e>>>0?b+1|0:b;d=Fj(S,A,470296,0);e=d+e|0;c=Y+b|0;c=d>>>0>e>>>0?c+1|0:c;d=Fj(P,T,654183,0);e=d+e|0;b=Y+c|0;b=d>>>0>e>>>0?b+1|0:b;c=Fj(W,z,-997805,-1);e=c+e|0;d=Y+b|0;d=c>>>0>e>>>0?d+1|0:d;b=Fj(D,C,136657,0);e=b+e|0;c=Y+d|0;k=e;j=b>>>0>e>>>0?c+1|0:c;b=x&-2097152;i=g-b|0;g=n-((b>>>0>g>>>0)+w|0)|0;b=Fj(H,U,-683901,-1);c=Y;d=b;b=Q>>>7&2097151;d=d+b|0;c=b>>>0>d>>>0?c+1|0:c;b=Fj(I,0,136657,0);e=b+d|0;d=Y+c|0;d=b>>>0>e>>>0?d+1|0:d;c=Fj(J,0,-997805,-1);e=c+e|0;b=Y+d|0;b=c>>>0>e>>>0?b+1|0:b;d=Fj(K,V,654183,0);e=d+e|0;c=Y+b|0;c=d>>>0>e>>>0?c+1|0:c;d=Fj(M,0,666643,0);e=d+e|0;b=Y+c|0;b=d>>>0>e>>>0?b+1|0:b;d=Fj(L,0,470296,0);e=d+e|0;c=Y+b|0;c=d>>>0>e>>>0?c+1|0:c;d=e;b=c;c=h>>21;h=(h&2097151)<<11|ca>>>21;e=h+d|0;d=b+c|0;d=e>>>0<h>>>0?d+1|0:d;w=d;b=e;d=d-((b>>>0<4293918720)-1|0)|0;n=b- -1048576|0;l=d;c=d>>21;d=(d&2097151)<<11|n>>>21;h=d+i|0;b=c+g|0;B=h;b=d>>>0>h>>>0?b+1|0:b;s=b;b=Fj(h,b,-683901,-1);d=b+k|0;c=Y+j|0;j=d;h=b>>>0>d>>>0?c+1|0:c;b=Fj(S,A,666643,0);d=Y;c=b;b=Z>>>4&2097151;c=c+b|0;d=b>>>0>c>>>0?d+1|0:d;b=c;c=Fj(P,T,470296,0);g=b+c|0;b=Y+d|0;b=c>>>0>g>>>0?b+1|0:b;d=Fj(W,z,654183,0);g=d+g|0;c=Y+b|0;c=d>>>0>g>>>0?c+1|0:c;b=Fj(D,C,-997805,-1);d=b+g|0;c=Y+c|0;c=b>>>0>d>>>0?c+1|0:c;b=d;d=Fj(B,s,136657,0);g=b+d|0;b=Y+c|0;b=d>>>0>g>>>0?b+1|0:b;k=b;b=g;d=k-((b>>>0<4293918720)-1|0)|0;p=b- -1048576|0;i=d;c=d>>21;d=(d&2097151)<<11|p>>>21;j=d+j|0;b=c+h|0;h=j;b=d>>>0>h>>>0?b+1|0:b;d=b;b=h;m=d-((b>>>0<4293918720)-1|0)|0;q=b- -1048576|0;j=m;c=j>>21;m=(j&2097151)<<11|q>>>21;x=m+u|0;b=c+o|0;O=x;m=m>>>0>x>>>0?b+1|0:b;c=n&-2097152;b=e-c|0;e=w-((c>>>0>e>>>0)+l|0)|0;l=b;b=f>>21;c=(f&2097151)<<11|da>>>21;f=l+c|0;b=b+e|0;e=f;b=c>>>0>e>>>0?b+1|0:b;n=b;b=e;f=n-((b>>>0<4293918720)-1|0)|0;x=b- -1048576|0;w=f;b=f>>21;o=b;A=(f&2097151)<<11|x>>>21;b=Fj(A,b,-683901,-1);f=b+h|0;c=Y+d|0;c=b>>>0>f>>>0?c+1|0:c;d=f;b=q&-2097152;E=d-b|0;u=c-((b>>>0>d>>>0)+j|0)|0;c=Fj(A,o,136657,0)+g|0;b=k+Y|0;b=c>>>0<g>>>0?b+1|0:b;d=c;c=p&-2097152;Q=d-c|0;p=b-((c>>>0>d>>>0)+i|0)|0;b=Fj(P,T,666643,0);c=Y;d=b;b=X>>>7&2097151;d=d+b|0;c=b>>>0>d>>>0?c+1|0:c;b=Fj(W,z,470296,0);f=b+d|0;d=Y+c|0;d=b>>>0>f>>>0?d+1|0:d;c=Fj(D,C,654183,0);f=c+f|0;b=Y+d|0;b=c>>>0>f>>>0?b+1|0:b;c=Fj(B,s,-997805,-1);d=c+f|0;b=Y+b|0;i=d;d=c>>>0>d>>>0?b+1|0:b;b=((ha&3)<<30|ga>>>2)&2097151;f=Fj(W,z,666643,0)+b|0;c=Y;c=b>>>0>f>>>0?c+1|0:c;b=Fj(D,C,470296,0);f=b+f|0;c=Y+c|0;c=b>>>0>f>>>0?c+1|0:c;b=f;f=Fj(B,s,654183,0);h=b+f|0;b=Y+c|0;b=f>>>0>h>>>0?b+1|0:b;f=h;j=b;b=f;h=j-((b>>>0<4293918720)-1|0)|0;q=b- -1048576|0;g=h;c=g>>21;h=(g&2097151)<<11|q>>>21;i=h+i|0;b=c+d|0;k=i;b=h>>>0>i>>>0?b+1|0:b;d=b;b=i;l=d-((b>>>0<4293918720)-1|0)|0;i=b- -1048576|0;h=l;c=h>>21;l=(h&2097151)<<11|i>>>21;z=l+Q|0;b=c+p|0;X=z;l=l>>>0>z>>>0?b+1|0:b;b=Fj(A,o,-997805,-1);c=b+k|0;d=Y+d|0;d=b>>>0>c>>>0?d+1|0:d;b=i&-2097152;Z=c-b|0;_=d-((b>>>0>c>>>0)+h|0)|0;b=Fj(A,o,654183,0)+f|0;c=j+Y|0;c=b>>>0<f>>>0?c+1|0:c;d=b;b=q&-2097152;Q=d-b|0;z=c-((b>>>0>d>>>0)+g|0)|0;b=Fj(D,C,666643,0);d=Y;c=b;b=fa>>>5&2097151;c=c+b|0;d=b>>>0>c>>>0?d+1|0:d;b=c;c=Fj(B,s,470296,0);f=b+c|0;b=Y+d|0;g=f;d=c>>>0>f>>>0?b+1|0:b;c=ea&2097151;f=Fj(B,s,666643,0)+c|0;b=Y;h=f;b=c>>>0>f>>>0?b+1|0:b;k=b;b=f;f=k-((b>>>0<4293918720)-1|0)|0;p=b- -1048576|0;i=f;c=f>>21;b=(f&2097151)<<11|p>>>21;f=b+g|0;d=c+d|0;d=b>>>0>f>>>0?d+1|0:d;j=d;b=f;d=d-((b>>>0<4293918720)-1|0)|0;q=b- -1048576|0;g=d;c=d>>21;d=(d&2097151)<<11|q>>>21;s=d+Q|0;b=c+z|0;b=d>>>0>s>>>0?b+1|0:b;d=b;b=Fj(A,o,470296,0)+f|0;c=j+Y|0;c=b>>>0<f>>>0?c+1|0:c;j=b;f=q&-2097152;b=b-f|0;g=c-((f>>>0>j>>>0)+g|0)|0;j=b;c=Fj(A,o,666643,0);b=p&-2097152;f=c+(h-b|0)|0;b=Y+(k-((b>>>0>h>>>0)+i|0)|0)|0;b=c>>>0>f>>>0?b+1|0:b;h=f;c=b>>21;b=(b&2097151)<<11|f>>>21;f=j+b|0;c=c+g|0;c=b>>>0>f>>>0?c+1|0:c;C=f;b=c>>21;c=(c&2097151)<<11|f>>>21;f=c+s|0;d=b+d|0;g=f;b=f;d=c>>>0>b>>>0?d+1|0:d;c=d>>21;d=(d&2097151)<<11|b>>>21;f=d+Z|0;b=c+_|0;i=f;c=f;b=d>>>0>c>>>0?b+1|0:b;d=b>>21;b=(b&2097151)<<11|c>>>21;f=b+X|0;c=d+l|0;l=f;d=f;c=b>>>0>d>>>0?c+1|0:c;b=c>>21;c=(c&2097151)<<11|d>>>21;d=c+E|0;b=b+u|0;b=c>>>0>d>>>0?b+1|0:b;s=d;c=b>>21;b=(b&2097151)<<11|d>>>21;d=b+O|0;c=c+m|0;c=b>>>0>d>>>0?c+1|0:c;o=d;b=c>>21;c=(c&2097151)<<11|d>>>21;f=c+N|0;d=b+G|0;p=f;b=f;d=c>>>0>b>>>0?d+1|0:d;c=d>>21;d=(d&2097151)<<11|b>>>21;f=d+F|0;b=c+t|0;q=f;c=f;b=d>>>0>c>>>0?b+1|0:b;d=b>>21;b=(b&2097151)<<11|c>>>21;f=b+aa|0;c=d+ba|0;t=f;d=f;c=b>>>0>d>>>0?c+1|0:c;b=c>>21;c=(c&2097151)<<11|d>>>21;d=c+$|0;b=b+r|0;b=c>>>0>d>>>0?b+1|0:b;m=d;c=b>>21;f=(b&2097151)<<11|d>>>21;d=x&-2097152;b=e-d|0;f=f+b|0;d=(n-((d>>>0>e>>>0)+w|0)|0)+c|0;w=f;c=f;d=b>>>0>c>>>0?d+1|0:d;r=(d&2097151)<<11|c>>>21;b=d>>21;k=b;c=h&2097151;d=Fj(r,b,666643,0)+c|0;b=Y;j=d;b=c>>>0>d>>>0?b+1|0:b;f=b;v[a|0]=d;v[a+1|0]=(b&255)<<24|d>>>8;b=C&2097151;d=Fj(r,k,470296,0)+b|0;c=Y;c=b>>>0>d>>>0?c+1|0:c;h=d;d=f;b=d>>21;e=(d&2097151)<<11|j>>>21;n=h+e|0;d=b+c|0;d=e>>>0>n>>>0?d+1|0:d;e=n;v[a+4|0]=(d&2047)<<21|e>>>11;c=d;b=c;d=e;v[a+3|0]=(b&7)<<29|d>>>3;d=g&2097151;g=Fj(r,k,654183,0)+d|0;b=Y;b=d>>>0>g>>>0?b+1|0:b;d=g;g=(c&2097151)<<11|e>>>21;n=d+g|0;c=(c>>21)+b|0;c=g>>>0>n>>>0?c+1|0:c;g=n;b=c;v[a+6|0]=(b&63)<<26|g>>>6;h=0;d=((f&65535)<<16|j>>>16)&31;j=e&2097151;c=j;v[a+2|0]=d|c<<5;d=i&2097151;e=Fj(r,k,-997805,-1)+d|0;c=Y;c=d>>>0>e>>>0?c+1|0:c;d=c;c=b>>21;b=(b&2097151)<<11|g>>>21;e=b+e|0;d=c+d|0;i=e;d=b>>>0>e>>>0?d+1|0:d;v[a+9|0]=(d&511)<<23|e>>>9;c=d;b=c;d=e;v[a+8|0]=(b&1)<<31|d>>>1;e=0;g=g&2097151;d=g;v[a+5|0]=(h&524287)<<13|j>>>19|d<<2;d=l&2097151;h=Fj(r,k,136657,0)+d|0;b=Y;b=d>>>0>h>>>0?b+1|0:b;d=c>>21;c=(c&2097151)<<11|i>>>21;h=c+h|0;b=b+d|0;j=h;b=c>>>0>h>>>0?b+1|0:b;c=h;v[a+12|0]=(b&4095)<<20|c>>>12;d=b;v[a+11|0]=(b&15)<<28|c>>>4;h=0;l=i&2097151;c=l;v[a+7|0]=(e&16383)<<18|g>>>14|c<<7;b=s&2097151;e=Fj(r,k,-683901,-1)+b|0;c=Y;c=b>>>0>e>>>0?c+1|0:c;b=d>>21;d=(d&2097151)<<11|j>>>21;e=d+e|0;c=b+c|0;g=e;c=d>>>0>e>>>0?c+1|0:c;b=c;v[a+14|0]=(b&127)<<25|e>>>7;e=0;i=j&2097151;d=i;v[a+10|0]=(h&131071)<<15|l>>>17|d<<4;c=b>>21;b=(b&2097151)<<11|g>>>21;j=b+(o&2097151)|0;d=b>>>0>j>>>0?c+1|0:c;v[a+17|0]=(d&1023)<<22|j>>>10;b=d;d=j;v[a+16|0]=(b&3)<<30|d>>>2;k=g&2097151;d=k;v[a+13|0]=(e&1048575)<<12|i>>>20|d<<1;d=(b&2097151)<<11|j>>>21;g=d+(p&2097151)|0;b=b>>21;b=d>>>0>g>>>0?b+1|0:b;c=g;v[a+20|0]=(b&8191)<<19|c>>>13;v[a+19|0]=(b&31)<<27|c>>>5;i=j&2097151;c=i;v[a+15|0]=(h&32767)<<17|k>>>15|c<<6;c=b>>21;f=(b&2097151)<<11|g>>>21;k=f+(q&2097151)|0;b=c;b=f>>>0>k>>>0?b+1|0:b;f=b;v[a+21|0]=k;b=g;v[a+18|0]=(e&262143)<<14|i>>>18|b<<3;b=f;v[a+22|0]=(b&255)<<24|k>>>8;c=a;d=b;b=b>>21;h=(d&2097151)<<11|k>>>21;g=h+(t&2097151)|0;d=g>>>0<h>>>0?b+1|0:b;v[c+25|0]=(d&2047)<<21|g>>>11;b=d;d=g;v[c+24|0]=(b&7)<<29|d>>>3;d=c;h=(b&2097151)<<11|g>>>21;j=h+(m&2097151)|0;b=b>>21;e=j;b=h>>>0>e>>>0?b+1|0:b;c=b;v[d+27|0]=(b&63)<<26|e>>>6;h=0;j=g&2097151;b=j;v[d+23|0]=((f&65535)<<16|k>>>16)&31|b<<5;b=c;c=b>>21;b=(b&2097151)<<11|e>>>21;f=b+(w&2097151)|0;c=b>>>0>f>>>0?c+1|0:c;d=f;v[a+31|0]=(c&131071)<<15|d>>>17;b=c;v[a+30|0]=(b&511)<<23|d>>>9;v[a+29|0]=(b&1)<<31|d>>>1;c=0;e=e&2097151;v[a+26|0]=(h&524287)<<13|j>>>19|e<<2;v[a+28|0]=(c&16383)<<18|e>>>14|d<<7}function Ob(a,b,c,d,e,f,g,h,i,j,k,l){var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,w=0,z=0,B=0,C=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ja=0,la=0,ma=0,na=0,pa=0,qa=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,Aa=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0;o=V+-64|0;V=o;ja=Za(i);a:{if(!ja){c=-22;break a}x[o+32>>2]=0;x[o+36>>2]=0;x[o+24>>2]=0;x[o+28>>2]=0;x[o+20>>2]=g;x[o+16>>2]=f;x[o+12>>2]=e;x[o+8>>2]=d;x[o+4>>2]=i;x[o>>2]=ja;x[o+56>>2]=0;x[o+52>>2]=c;x[o+48>>2]=c;x[o+44>>2]=b;x[o+40>>2]=a;b=V-48|0;V=b;a=Dc(o);b:{if(a){break b}a=-26;if(l-1>>>0>1){break b}c=x[o+44>>2];a=x[o+48>>2];x[b>>2]=0;d=x[o+40>>2];x[b+28>>2]=a;x[b+12>>2]=-1;x[b+8>>2]=d;d=a<<3;d=c>>>0<d>>>0?d:c;c=a<<2;a=(d>>>0)/(c>>>0)|0;x[b+20>>2]=a;x[b+24>>2]=a<<2;x[b+16>>2]=D(a,c);a=x[o+52>>2];x[b+36>>2]=l;x[b+32>>2]=a;c=V-80|0;V=c;a=-25;c:{if(!b|!o){break c}a=Za(x[b+20>>2]<<3);x[b+4>>2]=a;if(!a){a=-22;break c}d=V-16|0;V=d;a=-22;e=x[b+16>>2];d:{if(!b|!e){break d}f=e<<10;if(((f>>>0)/(e>>>0)|0)!=1024){break d}e=Za(12);x[b>>2]=e;if(!e){break d}x[e>>2]=0;x[e+4>>2]=0;e=Lf(d+12|0,f);x[9301]=e;e:{f:{if(e){x[d+12>>2]=0;break f}e=x[d+12>>2];if(e){break e}}Ka(x[b>>2]);x[b>>2]=0;break d}x[x[b>>2]>>2]=e;x[x[b>>2]+4>>2]=e;x[x[b>>2]+8>>2]=f;a=0}V=d+16|0;if(a){Qd(b,x[o+56>>2]);break c}d=x[b+36>>2];e=V;a=e-448&-64;V=a;if(!(!o|!c)){Ib(a- -64|0,0,0,64);ra(a+60|0,x[o+48>>2]);Ja(a- -64|0,a+60|0,4,0);ra(a+60|0,x[o+4>>2]);Ja(a- -64|0,a+60|0,4,0);ra(a+60|0,x[o+44>>2]);Ja(a- -64|0,a+60|0,4,0);ra(a+60|0,x[o+40>>2]);Ja(a- -64|0,a+60|0,4,0);ra(a+60|0,19);Ja(a- -64|0,a+60|0,4,0);ra(a+60|0,d);Ja(a- -64|0,a+60|0,4,0);ra(a+60|0,x[o+12>>2]);Ja(a- -64|0,a+60|0,4,0);d=x[o+8>>2];g:{if(!d){break g}Ja(a- -64|0,d,x[o+12>>2],0);if(!(v[o+56|0]&1)){break g}oa(x[o+8>>2],x[o+12>>2]);x[o+12>>2]=0}ra(a+60|0,x[o+20>>2]);Ja(a- -64|0,a+60|0,4,0);d=x[o+16>>2];if(d){Ja(a- -64|0,d,x[o+20>>2],0)}ra(a+60|0,x[o+28>>2]);Ja(a- -64|0,a+60|0,4,0);d=x[o+24>>2];h:{if(!d){break h}Ja(a- -64|0,d,x[o+28>>2],0);if(!(y[o+56|0]&2)){break h}oa(x[o+24>>2],x[o+28>>2]);x[o+28>>2]=0}ra(a+60|0,x[o+36>>2]);Ja(a- -64|0,a+60|0,4,0);d=x[o+32>>2];if(d){Ja(a- -64|0,d,x[o+36>>2],0)}Hb(a- -64|0,c,64)}V=e;oa(c- -64|0,8);a=0;d=V-1024|0;V=d;if(x[b+28>>2]){f=c+68|0;e=c- -64|0;while(1){ra(e,0);ra(f,a);Fc(d,1024,c,72);Pd(x[x[b>>2]+4>>2]+(D(x[b+24>>2],a)<<10)|0,d);ra(e,1);Fc(d,1024,c,72);Pd((x[x[b>>2]+4>>2]+(D(x[b+24>>2],a)<<10)|0)+1024|0,d);a=a+1|0;if(a>>>0<A[b+28>>2]){continue}break}}oa(d,1024);V=d+1024|0;oa(c,72);a=0}V=c+80|0;if(a){break b}if(x[b+8>>2]){while(1){a=0;f=0;e=V-32|0;V=e;i:{if(!b|!x[b+28>>2]){break i}x[e+16>>2]=ta;while(1){v[e+24|0]=a;sa=0;d=0;if(!f){while(1){x[e+28>>2]=0;c=x[e+28>>2];x[e+8>>2]=x[e+24>>2];x[e+12>>2]=c;x[e+20>>2]=sa;c=x[e+20>>2];x[e>>2]=x[e+16>>2];x[e+4>>2]=c;d=0;j:{if(!b){break j}k:{l:{if(x[b+36>>2]!=2){break l}g=x[e>>2];if(!(y[e+8|0]<2?g:1)){break l}ua=x[b+4>>2];c=1;break k}ua=x[b+4>>2];f=ua;c=V-4096|0;V=c;$b(c+3072|0);$b(c+2048|0);m:{if(!b|!e){break m}x[c+2048>>2]=x[e>>2];x[c+2052>>2]=0;x[c+2056>>2]=x[e+4>>2];x[c+2060>>2]=0;x[c+2064>>2]=y[e+8|0];x[c+2068>>2]=0;x[c+2072>>2]=x[b+16>>2];x[c+2076>>2]=0;x[c+2080>>2]=x[b+8>>2];x[c+2084>>2]=0;x[c+2088>>2]=x[b+36>>2];x[c+2092>>2]=0;if(!x[b+20>>2]){break m}while(1){g=d&127;if(!g){P=x[c+2100>>2];m=P+1|0;n=P;P=x[c+2096>>2]+1|0;da=P>>>0<1?m:n;x[c+2096>>2]=P;x[c+2100>>2]=da;$b(c);$b(c+1024|0);Ec(c+3072|0,c+2048|0,c);Ec(c+3072|0,c,c+1024|0)}g=(c+1024|0)+(g<<3)|0;P=x[g+4>>2];da=f+(d<<3)|0;x[da>>2]=x[g>>2];x[da+4>>2]=P;d=d+1|0;if(d>>>0<A[b+20>>2]){continue}break}}V=c+4096|0;g=x[e>>2];c=0}Fa=c;c=y[e+8|0];P=!(c|g)<<1;d=x[b+20>>2];if(P>>>0>=d>>>0){break j}f=x[b+24>>2];g=(D(f,x[e+4>>2])+P|0)+D(c,d)|0;d=g+((g>>>0)%(f>>>0)|0?-1:f-1|0)|0;while(1){da=((g>>>0)%(f>>>0)|0)==1?g-1|0:d;c=x[b+28>>2];n:{if(!Fa){d=x[b>>2];H=(P<<3)+ua|0;break n}d=x[b>>2];H=x[d+4>>2]+(da<<10)|0}I=x[H>>2];H=x[H+4>>2];x[e+12>>2]=P;c=(H>>>0)%(c>>>0)|0;H=x[e+4>>2];t=y[e+8|0]?c:H;d=x[d+4>>2];n=t;t=x[e>>2];c=t?c:n;f=d+(D(c,f)<<10)|0;c=(c|0)==(H|0);n=f;o:{if(!x[e>>2]){f=y[e+8|0];if(!f){f=x[e+12>>2]-1|0;m=0;break o}f=D(f,x[b+20>>2]);H=x[e+12>>2];if(c){f=(f+H|0)-1|0;m=0;break o}f=f-!H|0;m=0;break o}f=x[b+24>>2];H=x[b+20>>2];f=c?x[e+12>>2]+(f+(H^-1)|0)|0:(f-H|0)-!x[e+12>>2]|0;c=y[e+8|0];m=0;if((c|0)==3){break o}m=D(H,c+1|0)}H=f-1|0;c=m+H|0;Fj(I,0,I,0);Fj(f,0,Y,0);f=Y;Ej(c-f|0,(c>>>0<H>>>0)-(c>>>0<f>>>0)|0,x[b+24>>2]);Y=X;c=n+(W<<10)|0;H=d+(da<<10)|0;f=d+(g<<10)|0;p:{if(t){Ec(H,c,f);break p}I=0;d=V-2048|0;V=d;pb(d+1024|0,c);xb(d+1024|0,H);pb(d,d+1024|0);H=0;while(1){c=I<<7;t=(d+1024|0)+(c|64)|0;m=t;r=x[m>>2];u=(d+1024|0)+(c|96)|0;n=u;B=x[n>>2];n=x[n+4>>2];C=r;z=x[m+4>>2];m=c+(d+1024|0)|0;r=(d+1024|0)+(c|32)|0;E=x[r>>2];q=x[r+4>>2];p=ka(x[m>>2],x[m+4>>2],E,q);s=n;n=Y;B=ia(B^p,s^n,32);s=Y;z=ka(C,z,B,s);C=z^E;E=Y;q=ia(C,q^E,24);C=n;n=Y;_=ka(p,C,q,n);w=Y;ea=ia(_^B,w^s,16);$=Y;fa=ka(z,E,ea,$);aa=Y;n=ia(q^fa,aa^n,63);B=Y;q=(d+1024|0)+(c|104)|0;z=x[q>>2];K=x[q+4>>2];E=(d+1024|0)+(c|72)|0;p=E;G=x[p>>2];F=x[p+4>>2];p=(d+1024|0)+(c|8)|0;s=(d+1024|0)+(c|40)|0;J=x[s>>2];T=x[s+4>>2];C=ka(x[p>>2],x[p+4>>2],J,T);L=z^C;z=Y;K=ia(L,z^K,32);ca=Y;L=ka(G,F,K,ca);G=L^J;J=Y;T=ia(G,T^J,24);G=z;z=Y;ba=ka(C,G,T,z);ga=Y;na=ia(ba^K,ga^ca,16);va=Y;wa=ka(L,J,na,va);xa=Y;z=ia(T^wa,xa^z,63);K=Y;T=(d+1024|0)+(c|112)|0;J=T;L=x[J>>2];R=x[J+4>>2];J=(d+1024|0)+(c|80)|0;F=x[J>>2];Q=x[J+4>>2];C=(d+1024|0)+(c|16)|0;ca=(d+1024|0)+(c|48)|0;N=ca;U=x[N>>2];N=x[N+4>>2];G=ka(x[C>>2],x[C+4>>2],U,N);M=L^G;L=Y;R=ia(M,L^R,32);M=Y;O=ka(F,Q,R,M);F=O^U;U=Y;N=ia(F,N^U,24);F=L;L=Y;ya=ka(G,F,N,L);Aa=Y;Ca=ia(ya^R,Aa^M,16);Da=Y;Q=ka(O,U,Ca,Da);la=Y;L=ia(N^Q,la^L,63);R=Y;N=(d+1024|0)+(c|120)|0;M=x[N>>2];O=x[N+4>>2];U=(d+1024|0)+(c|88)|0;G=U;S=x[G>>2];pa=x[G+4>>2];G=(d+1024|0)+(c|24)|0;c=(d+1024|0)+(c|56)|0;Z=x[c>>2];F=x[c+4>>2];ha=ka(x[G>>2],x[G+4>>2],Z,F);ma=M^ha;M=Y;O=ia(ma,M^O,32);ma=Y;qa=ka(S,pa,O,ma);S=qa^Z;Z=Y;F=ia(S,F^Z,24);S=F;pa=Z;Z=M;M=Y;F=ka(ha,Z,F,M);Z=Y;ha=ia(F^O,Z^ma,16);ma=Y;qa=ka(qa,pa,ha,ma);Ea=Y;M=ia(S^qa,Ea^M,63);O=Y;S=Q;pa=la;_=ka(_,w,z,K);w=Y;Q=ia(ha^_,ma^w,32);la=Y;ha=ka(S,pa,Q,la);S=K;K=Y;z=ia(ha^z,S^K,24);S=_;_=Y;w=ka(S,w,z,_);x[m>>2]=w;S=m;m=Y;x[S+4>>2]=m;m=ia(w^Q,m^la,16);w=Y;x[N>>2]=m;x[N+4>>2]=w;m=ka(ha,K,m,w);x[J>>2]=m;K=Y;x[J+4>>2]=K;Ga=s,Ha=ia(m^z,K^_,63),x[Ga>>2]=Ha;x[s+4>>2]=Y;m=L;s=ka(ba,ga,L,R);z=Y;K=ia(ea^s,$^z,32);J=Y;L=ka(qa,Ea,K,J);w=R;R=Y;m=ia(m^L,w^R,24);w=s;s=Y;z=ka(w,z,m,s);x[p>>2]=z;w=p;p=Y;x[w+4>>2]=p;p=ia(z^K,p^J,16);z=Y;x[u>>2]=p;x[u+4>>2]=z;u=ka(L,R,p,z);x[U>>2]=u;p=Y;x[U+4>>2]=p;Ga=ca,Ha=ia(m^u,p^s,63),x[Ga>>2]=Ha;x[ca+4>>2]=Y;m=ka(ya,Aa,M,O);p=Y;s=ia(na^m,va^p,32);z=Y;K=ka(fa,aa,s,z);J=Y;u=ia(K^M,J^O,24);w=p;p=Y;m=ka(m,w,u,p);x[C>>2]=m;w=C;C=Y;x[w+4>>2]=C;m=ia(m^s,z^C,16);s=Y;x[q>>2]=m;x[q+4>>2]=s;m=ka(K,J,m,s);x[t>>2]=m;q=t;t=Y;x[q+4>>2]=t;Ga=c,Ha=ia(m^u,t^p,63),x[Ga>>2]=Ha;x[c+4>>2]=Y;c=n;t=ka(F,Z,n,B);u=Y;m=ia(Ca^t,Da^u,32);n=Y;q=ka(wa,xa,m,n);p=B;B=Y;c=ia(c^q,p^B,24);p=u;u=Y;t=ka(t,p,c,u);x[G>>2]=t;p=Y;x[G+4>>2]=p;t=ia(m^t,n^p,16);m=Y;x[T>>2]=t;x[T+4>>2]=m;t=ka(q,B,t,m);x[E>>2]=t;m=Y;x[E+4>>2]=m;Ga=r,Ha=ia(c^t,m^u,63),x[Ga>>2]=Ha;x[r+4>>2]=Y;I=I+1|0;if((I|0)!=8){continue}break}while(1){u=H<<4;c=u+(d+1024|0)|0;I=x[c+512>>2];t=x[c+772>>2];p=I;q=x[c+516>>2];s=x[c+768>>2];I=x[c+256>>2];m=x[c+260>>2];r=ka(x[c>>2],x[c+4>>2],I,m);n=t;t=Y;n=ia(s^r,n^t,32);B=Y;q=ka(p,q,n,B);p=q^I;I=Y;m=ia(p,m^I,24);C=I;I=Y;p=ka(r,t,m,I);s=Y;z=ia(p^n,s^B,16);K=Y;T=ka(q,C,z,K);J=Y;I=ia(m^T,J^I,63);t=Y;m=x[c+780>>2];C=x[c+520>>2];w=x[c+524>>2];E=x[c+776>>2];u=(d+1024|0)+(u|8)|0;r=u;q=x[r>>2];B=x[r+4>>2];r=x[c+264>>2];n=x[c+268>>2];B=ka(q,B,r,n);q=m;m=Y;q=ia(E^B,q^m,32);E=Y;C=ka(C,w,q,E);w=C^r;r=Y;n=ia(w,n^r,24);w=C;C=m;m=Y;C=ka(B,C,n,m);ca=Y;L=ia(C^q,ca^E,16);R=Y;N=ka(w,r,L,R);U=Y;m=ia(n^N,U^m,63);r=Y;n=x[c+900>>2];F=x[c+640>>2];Q=x[c+644>>2];G=x[c+896>>2];B=x[c+384>>2];q=x[c+388>>2];E=ka(x[c+128>>2],x[c+132>>2],B,q);w=n;n=Y;G=ia(G^E,w^n,32);M=Y;O=ka(F,Q,G,M);w=O^B;B=Y;q=ia(w,q^B,24);w=O;F=G;G=n;n=Y;G=ka(E,G,q,n);E=M;M=Y;O=ia(F^G,E^M,16);_=Y;w=ka(w,B,O,_);ea=Y;n=ia(q^w,ea^n,63);B=Y;q=x[c+908>>2];Q=x[c+648>>2];Z=x[c+652>>2];la=x[c+904>>2];E=x[c+392>>2];$=x[c+396>>2];fa=ka(x[c+136>>2],x[c+140>>2],E,$);F=q;q=Y;aa=ia(la^fa,F^q,32);ba=Y;ga=ka(Q,Z,aa,ba);F=ga^E;E=Y;$=ia(F,$^E,24);F=$;Q=q;q=Y;$=ka(fa,Q,$,q);fa=Y;aa=ia($^aa,fa^ba,16);ba=Y;ga=ka(ga,E,aa,ba);na=Y;q=ia(F^ga,na^q,63);E=Y;F=w;Q=ea;p=ka(p,s,m,r);s=Y;w=ia(aa^p,ba^s,32);ea=Y;aa=ka(F,Q,w,ea);ba=Y;m=ia(aa^m,ba^r,24);r=p;p=Y;r=ka(r,s,m,p);x[c>>2]=r;s=Y;x[c+4>>2]=s;r=ia(r^w,s^ea,16);s=Y;x[c+904>>2]=r;x[c+908>>2]=s;r=ka(aa,ba,r,s);x[c+640>>2]=r;s=Y;x[c+644>>2]=s;Ga=c,Ha=ia(m^r,p^s,63),x[Ga+264>>2]=Ha;x[c+268>>2]=Y;m=n;r=ka(C,ca,n,B);n=Y;p=ia(z^r,K^n,32);s=Y;z=ka(ga,na,p,s);C=B;B=Y;m=ia(m^z,C^B,24);C=r;r=Y;n=ka(C,n,m,r);x[u>>2]=n;C=u;u=Y;x[C+4>>2]=u;u=ia(n^p,u^s,16);n=Y;x[c+768>>2]=u;x[c+772>>2]=n;u=ka(z,B,u,n);x[c+648>>2]=u;n=Y;x[c+652>>2]=n;Ga=c,Ha=ia(m^u,n^r,63),x[Ga+384>>2]=Ha;x[c+388>>2]=Y;p=q;m=ka(G,M,q,E);r=Y;n=ia(L^m,R^r,32);B=Y;q=ka(T,J,n,B);s=E;E=Y;u=ia(p^q,s^E,24);p=r;r=Y;m=ka(m,p,u,r);x[c+128>>2]=m;p=Y;x[c+132>>2]=p;m=ia(m^n,p^B,16);n=Y;x[c+776>>2]=m;x[c+780>>2]=n;m=ka(q,E,m,n);x[c+512>>2]=m;n=Y;x[c+516>>2]=n;Ga=c,Ha=ia(m^u,n^r,63),x[Ga+392>>2]=Ha;x[c+396>>2]=Y;u=ka($,fa,I,t);m=Y;r=ia(O^u,_^m,32);n=Y;B=ka(N,U,r,n);q=Y;I=ia(B^I,q^t,24);p=u;u=Y;t=ka(p,m,I,u);x[c+136>>2]=t;m=Y;x[c+140>>2]=m;t=ia(r^t,m^n,16);m=Y;x[c+896>>2]=t;x[c+900>>2]=m;t=ka(B,q,t,m);x[c+520>>2]=t;m=Y;x[c+524>>2]=m;Ga=c,Ha=ia(t^I,m^u,63),x[Ga+256>>2]=Ha;x[c+260>>2]=Y;H=H+1|0;if((H|0)!=8){continue}break}pb(f,d);xb(f,d+1024|0);V=d+2048|0}P=P+1|0;if(P>>>0>=A[b+20>>2]){break j}g=g+1|0;d=da+1|0;f=x[b+24>>2];continue}}d=x[b+28>>2];sa=sa+1|0;if(d>>>0>sa>>>0){continue}break}}a=a+1|0;if((a|0)==4){break i}f=!d;continue}}V=e+32|0;ta=ta+1|0;if(ta>>>0<A[b+8>>2]){continue}break}}a=V-2048|0;V=a;if(!(!o|!b)){pb(a+1024|0,(x[x[b>>2]+4>>2]+(x[b+24>>2]<<10)|0)-1024|0);if(A[b+28>>2]>=2){f=1;while(1){c=x[b+24>>2];xb(a+1024|0,(x[x[b>>2]+4>>2]+(D(c,f)+c<<10)|0)-1024|0);f=f+1|0;if(f>>>0<A[b+28>>2]){continue}break}}c=a+1024|0;f=0;while(1){d=f<<3;e=d+a|0;d=c+d|0;Ba(e,x[d>>2],x[d+4>>2]);f=f+1|0;if((f|0)!=128){continue}break}Fc(x[o>>2],x[o+4>>2],a,1024);oa(a+1024|0,1024);oa(a,1024);Qd(b,x[o+56>>2])}V=a+2048|0;a=0}V=b+48|0;c=a;q:{if(c){oa(ja,i);break q}r:{if(!j|!k){break r}d=V-16|0;V=d;b=-31;s:{t:{u:{v:{w:{switch(l-1|0){case 1:if(k>>>0<13){break u}b=y[1417]|y[1418]<<8|(y[1419]<<16|y[1420]<<24);a=j;c=y[1413]|y[1414]<<8|(y[1415]<<16|y[1416]<<24);v[a|0]=c;v[a+1|0]=c>>>8;v[a+2|0]=c>>>16;v[a+3|0]=c>>>24;v[a+4|0]=b;v[a+5|0]=b>>>8;v[a+6|0]=b>>>16;v[a+7|0]=b>>>24;b=y[1422]|y[1423]<<8|(y[1424]<<16|y[1425]<<24);c=y[1418]|y[1419]<<8|(y[1420]<<16|y[1421]<<24);v[a+5|0]=c;v[a+6|0]=c>>>8;v[a+7|0]=c>>>16;v[a+8|0]=c>>>24;v[a+9|0]=b;v[a+10|0]=b>>>8;v[a+11|0]=b>>>16;v[a+12|0]=b>>>24;c=k-12|0;e=a+12|0;break v;case 0:break w;default:break t}}if(k>>>0<12){break u}b=y[1405]|y[1406]<<8|(y[1407]<<16|y[1408]<<24);a=j;c=y[1401]|y[1402]<<8|(y[1403]<<16|y[1404]<<24);v[a|0]=c;v[a+1|0]=c>>>8;v[a+2|0]=c>>>16;v[a+3|0]=c>>>24;v[a+4|0]=b;v[a+5|0]=b>>>8;v[a+6|0]=b>>>16;v[a+7|0]=b>>>24;b=y[1409]|y[1410]<<8|(y[1411]<<16|y[1412]<<24);v[a+8|0]=b;v[a+9|0]=b>>>8;v[a+10|0]=b>>>16;v[a+11|0]=b>>>24;c=k-11|0;e=a+11|0}b=Dc(o);if(b){break t}lc(d+5|0,19);a=Ta(d+5|0);if(a>>>0>=c>>>0){break u}b=za(e,d+5|0,a+1|0);c=c-a|0;if(c>>>0<4){break u}a=a+b|0;v[a|0]=36;v[a+1|0]=109;v[a+2|0]=61;v[a+3|0]=0;lc(d+5|0,x[o+44>>2]);c=c-3|0;b=Ta(d+5|0);if(c>>>0<=b>>>0){break u}a=za(a+3|0,d+5|0,b+1|0);c=c-b|0;if(c>>>0<4){break u}a=a+b|0;v[a|0]=44;v[a+1|0]=116;v[a+2|0]=61;v[a+3|0]=0;lc(d+5|0,x[o+40>>2]);c=c-3|0;b=Ta(d+5|0);if(c>>>0<=b>>>0){break u}a=za(a+3|0,d+5|0,b+1|0);c=c-b|0;if(c>>>0<4){break u}a=a+b|0;v[a|0]=44;v[a+1|0]=112;v[a+2|0]=61;v[a+3|0]=0;lc(d+5|0,x[o+48>>2]);c=c-3|0;b=Ta(d+5|0);if(c>>>0<=b>>>0){break u}a=za(a+3|0,d+5|0,b+1|0);c=c-b|0;if(c>>>0<2){break u}a=a+b|0;v[a|0]=36;v[a+1|0]=0;a=a+1|0;c=c-1|0;if(!od(a,c,x[o+16>>2],x[o+20>>2],3)){break u}b=-31;e=c;c=Ta(a);e=e-c|0;if(e>>>0<2){break t}a=a+c|0;v[a|0]=36;v[a+1|0]=0;a=od(a+1|0,e-1|0,x[o>>2],x[o+4>>2],3);V=d+16|0;b=a?0:-31;break s}b=-31}V=d+16|0}if(!b){break r}oa(ja,i);oa(j,k);c=-31;break q}if(h){za(h,ja,i)}oa(ja,i);c=0}Ka(ja)}V=o- -64|0;return c}function Za(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;m=V-16|0;V=m;a:{b:{c:{d:{e:{f:{g:{h:{i:{j:{k:{l:{if(a>>>0<=244){f=x[9302];i=a>>>0<11?16:a+11&-8;c=i>>>3|0;b=f>>>c|0;if(b&3){d=c+((b^-1)&1)|0;b=d<<3;e=x[b+37256>>2];a=e+8|0;c=x[e+8>>2];b=b+37248|0;m:{if((c|0)==(b|0)){n=37208,o=Gj(-2,d)&f,x[n>>2]=o;break m}x[c+12>>2]=b;x[b+8>>2]=c}b=d<<3;x[e+4>>2]=b|3;b=b+e|0;x[b+4>>2]=x[b+4>>2]|1;break a}k=x[9304];if(k>>>0>=i>>>0){break l}if(b){a=2<<c;a=(0-a|a)&b<<c;b=(0-a&a)-1|0;a=b>>>12&16;c=a;b=b>>>a|0;a=b>>>5&8;c=c|a;b=b>>>a|0;a=b>>>2&4;c=c|a;b=b>>>a|0;a=b>>>1&2;c=c|a;b=b>>>a|0;a=b>>>1&1;c=(c|a)+(b>>>a|0)|0;a=c<<3;g=x[a+37256>>2];b=x[g+8>>2];a=a+37248|0;n:{if((b|0)==(a|0)){f=Gj(-2,c)&f;x[9302]=f;break n}x[b+12>>2]=a;x[a+8>>2]=b}a=g+8|0;x[g+4>>2]=i|3;d=g+i|0;b=c<<3;e=b-i|0;x[d+4>>2]=e|1;x[b+g>>2]=e;if(k){b=k>>>3|0;c=(b<<3)+37248|0;g=x[9307];b=1<<b;o:{if(!(b&f)){x[9302]=b|f;b=c;break o}b=x[c+8>>2]}x[c+8>>2]=g;x[b+12>>2]=g;x[g+12>>2]=c;x[g+8>>2]=b}x[9307]=d;x[9304]=e;break a}h=x[9303];if(!h){break l}b=(h&0-h)-1|0;a=b>>>12&16;c=a;b=b>>>a|0;a=b>>>5&8;c=c|a;b=b>>>a|0;a=b>>>2&4;c=c|a;b=b>>>a|0;a=b>>>1&2;c=c|a;b=b>>>a|0;a=b>>>1&1;b=x[((c|a)+(b>>>a|0)<<2)+37512>>2];d=(x[b+4>>2]&-8)-i|0;c=b;while(1){p:{a=x[c+16>>2];if(!a){a=x[c+20>>2];if(!a){break p}}c=(x[a+4>>2]&-8)-i|0;e=c>>>0<d>>>0;d=e?c:d;b=e?a:b;c=a;continue}break}j=b+i|0;if(j>>>0<=b>>>0){break k}l=x[b+24>>2];e=x[b+12>>2];if((e|0)!=(b|0)){a=x[b+8>>2];x[a+12>>2]=e;x[e+8>>2]=a;break b}c=b+20|0;a=x[c>>2];if(!a){a=x[b+16>>2];if(!a){break j}c=b+16|0}while(1){g=c;e=a;c=a+20|0;a=x[c>>2];if(a){continue}c=e+16|0;a=x[e+16>>2];if(a){continue}break}x[g>>2]=0;break b}i=-1;if(a>>>0>4294967231){break l}a=a+11|0;i=a&-8;j=x[9303];if(!j){break l}d=0-i|0;f=0;q:{if(i>>>0<256){break q}f=31;if(i>>>0>16777215){break q}a=a>>>8|0;g=a+1048320>>>16&8;a=a<<g;c=a+520192>>>16&4;a=a<<c;b=a+245760>>>16&2;a=(a<<b>>>15|0)-(b|(c|g))|0;f=(a<<1|i>>>a+21&1)+28|0}c=x[(f<<2)+37512>>2];r:{s:{t:{if(!c){a=0;break t}a=0;b=i<<((f|0)==31?0:25-(f>>>1|0)|0);while(1){u:{g=(x[c+4>>2]&-8)-i|0;if(g>>>0>=d>>>0){break u}e=c;d=g;if(d){break u}d=0;a=c;break s}g=x[c+20>>2];c=x[((b>>>29&4)+c|0)+16>>2];a=g?(g|0)==(c|0)?a:g:a;b=b<<1;if(c){continue}break}}if(!(a|e)){e=0;a=2<<f;a=(0-a|a)&j;if(!a){break l}b=(a&0-a)-1|0;a=b>>>12&16;c=a;b=b>>>a|0;a=b>>>5&8;c=c|a;b=b>>>a|0;a=b>>>2&4;c=c|a;b=b>>>a|0;a=b>>>1&2;c=c|a;b=b>>>a|0;a=b>>>1&1;a=x[((c|a)+(b>>>a|0)<<2)+37512>>2]}if(!a){break r}}while(1){b=(x[a+4>>2]&-8)-i|0;c=b>>>0<d>>>0;d=c?b:d;e=c?a:e;b=x[a+16>>2];if(b){a=b}else{a=x[a+20>>2]}if(a){continue}break}}if(!e|x[9304]-i>>>0<=d>>>0){break l}h=e+i|0;if(h>>>0<=e>>>0){break k}f=x[e+24>>2];b=x[e+12>>2];if((e|0)!=(b|0)){a=x[e+8>>2];x[a+12>>2]=b;x[b+8>>2]=a;break c}c=e+20|0;a=x[c>>2];if(!a){a=x[e+16>>2];if(!a){break i}c=e+16|0}while(1){g=c;b=a;c=a+20|0;a=x[c>>2];if(a){continue}c=b+16|0;a=x[b+16>>2];if(a){continue}break}x[g>>2]=0;break c}c=x[9304];if(c>>>0>=i>>>0){d=x[9307];b=c-i|0;v:{if(b>>>0>=16){x[9304]=b;a=d+i|0;x[9307]=a;x[a+4>>2]=b|1;x[c+d>>2]=b;x[d+4>>2]=i|3;break v}x[9307]=0;x[9304]=0;x[d+4>>2]=c|3;a=c+d|0;x[a+4>>2]=x[a+4>>2]|1}a=d+8|0;break a}h=x[9305];if(h>>>0>i>>>0){b=h-i|0;x[9305]=b;c=x[9308];a=c+i|0;x[9308]=a;x[a+4>>2]=b|1;x[c+4>>2]=i|3;a=c+8|0;break a}a=0;j=i+47|0;b=j;if(x[9420]){c=x[9422]}else{x[9423]=-1;x[9424]=-1;x[9421]=4096;x[9422]=4096;x[9420]=m+12&-16^1431655768;x[9425]=0;x[9413]=0;c=4096}g=b+c|0;e=0-c|0;c=g&e;if(c>>>0<=i>>>0){break a}d=x[9412];if(d){b=x[9410];f=b+c|0;if(d>>>0<f>>>0|b>>>0>=f>>>0){break a}}if(y[37652]&4){break f}w:{x:{d=x[9308];if(d){a=37656;while(1){b=x[a>>2];if(d>>>0<b+x[a+4>>2]>>>0?b>>>0<=d>>>0:0){break x}a=x[a+8>>2];if(a){continue}break}}b=tb(0);if((b|0)==-1){break g}f=c;d=x[9421];a=d-1|0;if(a&b){f=(c-b|0)+(a+b&0-d)|0}if(f>>>0<=i>>>0|f>>>0>2147483646){break g}d=x[9412];if(d){a=x[9410];e=a+f|0;if(d>>>0<e>>>0|a>>>0>=e>>>0){break g}}a=tb(f);if((b|0)!=(a|0)){break w}break e}f=e&g-h;if(f>>>0>2147483646){break g}b=tb(f);if((b|0)==(x[a>>2]+x[a+4>>2]|0)){break h}a=b}if(!((a|0)==-1|i+48>>>0<=f>>>0)){b=x[9422];b=b+(j-f|0)&0-b;if(b>>>0>2147483646){b=a;break e}if((tb(b)|0)!=-1){f=b+f|0;b=a;break e}tb(0-f|0);break g}b=a;if((a|0)!=-1){break e}break g}N()}e=0;break b}b=0;break c}if((b|0)!=-1){break e}}x[9413]=x[9413]|4}if(c>>>0>2147483646){break d}b=tb(c);a=tb(0);if((b|0)==-1|(a|0)==-1|a>>>0<=b>>>0){break d}f=a-b|0;if(f>>>0<=i+40>>>0){break d}}a=x[9410]+f|0;x[9410]=a;if(a>>>0>A[9411]){x[9411]=a}y:{z:{A:{g=x[9308];if(g){a=37656;while(1){d=x[a>>2];c=x[a+4>>2];if((d+c|0)==(b|0)){break A}a=x[a+8>>2];if(a){continue}break}break z}a=x[9306];if(!(a>>>0<=b>>>0?a:0)){x[9306]=b}a=0;x[9415]=f;x[9414]=b;x[9310]=-1;x[9311]=x[9420];x[9417]=0;while(1){d=a<<3;c=d+37248|0;x[d+37256>>2]=c;x[d+37260>>2]=c;a=a+1|0;if((a|0)!=32){continue}break}d=f-40|0;a=b+8&7?-8-b&7:0;c=d-a|0;x[9305]=c;a=a+b|0;x[9308]=a;x[a+4>>2]=c|1;x[(b+d|0)+4>>2]=40;x[9309]=x[9424];break y}if(y[a+12|0]&8|d>>>0>g>>>0|b>>>0<=g>>>0){break z}x[a+4>>2]=c+f;a=g+8&7?-8-g&7:0;c=a+g|0;x[9308]=c;b=x[9305]+f|0;a=b-a|0;x[9305]=a;x[c+4>>2]=a|1;x[(b+g|0)+4>>2]=40;x[9309]=x[9424];break y}if(A[9306]>b>>>0){x[9306]=b}c=b+f|0;a=37656;B:{C:{D:{E:{F:{G:{while(1){if((c|0)!=x[a>>2]){a=x[a+8>>2];if(a){continue}break G}break}if(!(y[a+12|0]&8)){break F}}a=37656;while(1){c=x[a>>2];if(c>>>0<=g>>>0){e=c+x[a+4>>2]|0;if(e>>>0>g>>>0){break E}}a=x[a+8>>2];continue}}x[a>>2]=b;x[a+4>>2]=x[a+4>>2]+f;j=(b+8&7?-8-b&7:0)+b|0;x[j+4>>2]=i|3;f=c+(c+8&7?-8-c&7:0)|0;h=i+j|0;c=f-h|0;if((g|0)==(f|0)){x[9308]=h;a=x[9305]+c|0;x[9305]=a;x[h+4>>2]=a|1;break C}if(x[9307]==(f|0)){x[9307]=h;a=x[9304]+c|0;x[9304]=a;x[h+4>>2]=a|1;x[a+h>>2]=a;break C}a=x[f+4>>2];if((a&3)==1){g=a&-8;H:{if(a>>>0<=255){d=x[f+8>>2];a=a>>>3|0;b=x[f+12>>2];if((b|0)==(d|0)){n=37208,o=x[9302]&Gj(-2,a),x[n>>2]=o;break H}x[d+12>>2]=b;x[b+8>>2]=d;break H}i=x[f+24>>2];b=x[f+12>>2];I:{if((f|0)!=(b|0)){a=x[f+8>>2];x[a+12>>2]=b;x[b+8>>2]=a;break I}J:{a=f+20|0;d=x[a>>2];if(d){break J}a=f+16|0;d=x[a>>2];if(d){break J}b=0;break I}while(1){e=a;b=d;a=b+20|0;d=x[a>>2];if(d){continue}a=b+16|0;d=x[b+16>>2];if(d){continue}break}x[e>>2]=0}if(!i){break H}d=x[f+28>>2];a=(d<<2)+37512|0;K:{if(x[a>>2]==(f|0)){x[a>>2]=b;if(b){break K}n=37212,o=x[9303]&Gj(-2,d),x[n>>2]=o;break H}x[i+(x[i+16>>2]==(f|0)?16:20)>>2]=b;if(!b){break H}}x[b+24>>2]=i;a=x[f+16>>2];if(a){x[b+16>>2]=a;x[a+24>>2]=b}a=x[f+20>>2];if(!a){break H}x[b+20>>2]=a;x[a+24>>2]=b}f=g+f|0;c=c+g|0}x[f+4>>2]=x[f+4>>2]&-2;x[h+4>>2]=c|1;x[c+h>>2]=c;if(c>>>0<=255){a=c>>>3|0;b=(a<<3)+37248|0;c=x[9302];a=1<<a;L:{if(!(c&a)){x[9302]=a|c;a=b;break L}a=x[b+8>>2]}x[b+8>>2]=h;x[a+12>>2]=h;x[h+12>>2]=b;x[h+8>>2]=a;break C}a=31;if(c>>>0<=16777215){a=c>>>8|0;e=a+1048320>>>16&8;a=a<<e;d=a+520192>>>16&4;a=a<<d;b=a+245760>>>16&2;a=(a<<b>>>15|0)-(b|(d|e))|0;a=(a<<1|c>>>a+21&1)+28|0}x[h+28>>2]=a;x[h+16>>2]=0;x[h+20>>2]=0;e=(a<<2)+37512|0;d=x[9303];b=1<<a;M:{if(!(d&b)){x[9303]=b|d;x[e>>2]=h;x[h+24>>2]=e;break M}a=c<<((a|0)==31?0:25-(a>>>1|0)|0);b=x[e>>2];while(1){d=b;if((x[b+4>>2]&-8)==(c|0)){break D}b=a>>>29|0;a=a<<1;e=d+(b&4)|0;b=x[e+16>>2];if(b){continue}break}x[e+16>>2]=h;x[h+24>>2]=d}x[h+12>>2]=h;x[h+8>>2]=h;break C}d=f-40|0;a=b+8&7?-8-b&7:0;c=d-a|0;x[9305]=c;a=a+b|0;x[9308]=a;x[a+4>>2]=c|1;x[(b+d|0)+4>>2]=40;x[9309]=x[9424];a=(e+(e-39&7?39-e&7:0)|0)-47|0;c=a>>>0<g+16>>>0?g:a;x[c+4>>2]=27;a=x[9417];x[c+16>>2]=x[9416];x[c+20>>2]=a;a=x[9415];x[c+8>>2]=x[9414];x[c+12>>2]=a;x[9416]=c+8;x[9415]=f;x[9414]=b;x[9417]=0;a=c+24|0;while(1){x[a+4>>2]=7;b=a+8|0;a=a+4|0;if(b>>>0<e>>>0){continue}break}if((c|0)==(g|0)){break y}x[c+4>>2]=x[c+4>>2]&-2;e=c-g|0;x[g+4>>2]=e|1;x[c>>2]=e;if(e>>>0<=255){a=e>>>3|0;b=(a<<3)+37248|0;c=x[9302];a=1<<a;N:{if(!(c&a)){x[9302]=a|c;a=b;break N}a=x[b+8>>2]}x[b+8>>2]=g;x[a+12>>2]=g;x[g+12>>2]=b;x[g+8>>2]=a;break y}a=31;x[g+16>>2]=0;x[g+20>>2]=0;if(e>>>0<=16777215){a=e>>>8|0;d=a+1048320>>>16&8;a=a<<d;c=a+520192>>>16&4;a=a<<c;b=a+245760>>>16&2;a=(a<<b>>>15|0)-(b|(c|d))|0;a=(a<<1|e>>>a+21&1)+28|0}x[g+28>>2]=a;d=(a<<2)+37512|0;c=x[9303];b=1<<a;O:{if(!(c&b)){x[9303]=b|c;x[d>>2]=g;x[g+24>>2]=d;break O}a=e<<((a|0)==31?0:25-(a>>>1|0)|0);b=x[d>>2];while(1){c=b;if((e|0)==(x[b+4>>2]&-8)){break B}b=a>>>29|0;a=a<<1;d=c+(b&4)|0;b=x[d+16>>2];if(b){continue}break}x[d+16>>2]=g;x[g+24>>2]=c}x[g+12>>2]=g;x[g+8>>2]=g;break y}a=x[d+8>>2];x[a+12>>2]=h;x[d+8>>2]=h;x[h+24>>2]=0;x[h+12>>2]=d;x[h+8>>2]=a}a=j+8|0;break a}a=x[c+8>>2];x[a+12>>2]=g;x[c+8>>2]=g;x[g+24>>2]=0;x[g+12>>2]=c;x[g+8>>2]=a}a=x[9305];if(a>>>0<=i>>>0){break d}b=a-i|0;x[9305]=b;c=x[9308];a=c+i|0;x[9308]=a;x[a+4>>2]=b|1;x[c+4>>2]=i|3;a=c+8|0;break a}x[9301]=48;a=0;break a}P:{if(!f){break P}c=x[e+28>>2];a=(c<<2)+37512|0;Q:{if(x[a>>2]==(e|0)){x[a>>2]=b;if(b){break Q}j=Gj(-2,c)&j;x[9303]=j;break P}x[f+(x[f+16>>2]==(e|0)?16:20)>>2]=b;if(!b){break P}}x[b+24>>2]=f;a=x[e+16>>2];if(a){x[b+16>>2]=a;x[a+24>>2]=b}a=x[e+20>>2];if(!a){break P}x[b+20>>2]=a;x[a+24>>2]=b}R:{if(d>>>0<=15){a=d+i|0;x[e+4>>2]=a|3;a=a+e|0;x[a+4>>2]=x[a+4>>2]|1;break R}x[e+4>>2]=i|3;x[h+4>>2]=d|1;x[d+h>>2]=d;if(d>>>0<=255){a=d>>>3|0;b=(a<<3)+37248|0;c=x[9302];a=1<<a;S:{if(!(c&a)){x[9302]=a|c;a=b;break S}a=x[b+8>>2]}x[b+8>>2]=h;x[a+12>>2]=h;x[h+12>>2]=b;x[h+8>>2]=a;break R}a=31;if(d>>>0<=16777215){a=d>>>8|0;g=a+1048320>>>16&8;a=a<<g;c=a+520192>>>16&4;a=a<<c;b=a+245760>>>16&2;a=(a<<b>>>15|0)-(b|(c|g))|0;a=(a<<1|d>>>a+21&1)+28|0}x[h+28>>2]=a;x[h+16>>2]=0;x[h+20>>2]=0;c=(a<<2)+37512|0;T:{b=1<<a;U:{if(!(b&j)){x[9303]=b|j;x[c>>2]=h;x[h+24>>2]=c;break U}a=d<<((a|0)==31?0:25-(a>>>1|0)|0);i=x[c>>2];while(1){b=i;if((x[b+4>>2]&-8)==(d|0)){break T}c=a>>>29|0;a=a<<1;c=b+(c&4)|0;i=x[c+16>>2];if(i){continue}break}x[c+16>>2]=h;x[h+24>>2]=b}x[h+12>>2]=h;x[h+8>>2]=h;break R}a=x[b+8>>2];x[a+12>>2]=h;x[b+8>>2]=h;x[h+24>>2]=0;x[h+12>>2]=b;x[h+8>>2]=a}a=e+8|0;break a}V:{if(!l){break V}c=x[b+28>>2];a=(c<<2)+37512|0;W:{if(x[a>>2]==(b|0)){x[a>>2]=e;if(e){break W}n=37212,o=Gj(-2,c)&h,x[n>>2]=o;break V}x[(x[l+16>>2]==(b|0)?16:20)+l>>2]=e;if(!e){break V}}x[e+24>>2]=l;a=x[b+16>>2];if(a){x[e+16>>2]=a;x[a+24>>2]=e}a=x[b+20>>2];if(!a){break V}x[e+20>>2]=a;x[a+24>>2]=e}X:{if(d>>>0<=15){a=d+i|0;x[b+4>>2]=a|3;a=a+b|0;x[a+4>>2]=x[a+4>>2]|1;break X}x[b+4>>2]=i|3;x[j+4>>2]=d|1;x[d+j>>2]=d;if(k){a=k>>>3|0;c=(a<<3)+37248|0;e=x[9307];a=1<<a;Y:{if(!(a&f)){x[9302]=a|f;a=c;break Y}a=x[c+8>>2]}x[c+8>>2]=e;x[a+12>>2]=e;x[e+12>>2]=c;x[e+8>>2]=a}x[9307]=j;x[9304]=d}a=b+8|0}V=m+16|0;return a|0}function ma(a,b,c){var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0;j=a;V=x[c+4>>2];d=V;y=d;H=d>>31;r=x[b+20>>2];d=r<<1;ma=d;Z=d>>31;d=Fj(y,H,d,Z);f=Y;e=d;d=x[c>>2];z=d;A=d>>31;d=x[b+24>>2];I=d;B=d>>31;h=Fj(z,A,d,B);e=e+h|0;d=Y+f|0;d=e>>>0<h>>>0?d+1|0:d;f=e;i=x[c+8>>2];e=i;na=e;P=e>>31;e=x[b+16>>2];J=e;C=e>>31;h=Fj(i,P,e,C);e=f+h|0;f=Y+d|0;f=e>>>0<h>>>0?f+1|0:f;t=x[c+12>>2];d=t;oa=d;R=d>>31;o=x[b+12>>2];d=o<<1;pa=d;_=d>>31;h=Fj(t,R,d,_);d=h+e|0;e=Y+f|0;e=d>>>0<h>>>0?e+1|0:e;f=d;s=x[c+16>>2];d=s;wa=d;W=d>>31;d=x[b+8>>2];K=d;E=d>>31;h=Fj(s,W,d,E);f=f+h|0;d=Y+e|0;d=f>>>0<h>>>0?d+1|0:d;g=f;m=x[c+20>>2];e=m;xa=e;$=e>>31;l=x[b+4>>2];e=l<<1;qa=e;aa=e>>31;f=Fj(m,$,e,aa);e=g+f|0;d=Y+d|0;d=e>>>0<f>>>0?d+1|0:d;f=e;n=x[c+24>>2];e=n;ya=e;ra=e>>31;e=x[b>>2];L=e;F=e>>31;h=Fj(n,ra,e,F);f=f+h|0;e=Y+d|0;e=f>>>0<h>>>0?e+1|0:e;u=x[c+28>>2];d=D(u,19);S=d;T=d>>31;p=x[b+36>>2];d=p<<1;sa=d;ba=d>>31;h=Fj(S,T,d,ba);d=h+f|0;f=Y+e|0;f=d>>>0<h>>>0?f+1|0:f;e=d;q=x[c+32>>2];d=D(q,19);v=d;w=d>>31;d=x[b+32>>2];M=d;G=d>>31;h=Fj(v,w,d,G);e=e+h|0;d=Y+f|0;d=e>>>0<h>>>0?d+1|0:d;f=e;za=x[c+36>>2];c=D(za,19);N=c;O=c>>31;b=x[b+28>>2];c=b<<1;ta=c;ca=c>>31;e=Fj(N,O,c,ca);c=f+e|0;d=Y+d|0;k=c;c=c>>>0<e>>>0?d+1|0:d;d=Fj(J,C,y,H);e=Y;h=r;da=h>>31;r=Fj(z,A,h,da);d=r+d|0;f=Y+e|0;f=d>>>0<r>>>0?f+1|0:f;r=o;ea=o>>31;o=Fj(i,P,o,ea);d=o+d|0;e=Y+f|0;e=d>>>0<o>>>0?e+1|0:e;o=Fj(K,E,t,R);f=o+d|0;d=Y+e|0;d=f>>>0<o>>>0?d+1|0:d;e=f;o=l;fa=l>>31;f=Fj(s,W,l,fa);e=e+f|0;d=Y+d|0;d=e>>>0<f>>>0?d+1|0:d;f=Fj(L,F,m,$);e=f+e|0;d=Y+d|0;d=e>>>0<f>>>0?d+1|0:d;f=e;e=D(n,19);ga=e;X=e>>31;l=p;ha=l>>31;p=Fj(e,X,l,ha);e=f+p|0;f=Y+d|0;f=e>>>0<p>>>0?f+1|0:f;p=Fj(M,G,S,T);d=p+e|0;e=Y+f|0;e=d>>>0<p>>>0?e+1|0:e;p=b;ia=b>>31;f=Fj(v,w,b,ia);b=f+d|0;d=Y+e|0;d=b>>>0<f>>>0?d+1|0:d;e=Fj(N,O,I,B);b=e+b|0;d=Y+d|0;U=b;b=b>>>0<e>>>0?d+1|0:d;d=Fj(y,H,pa,_);f=Y;n=Fj(z,A,J,C);e=n+d|0;d=Y+f|0;d=e>>>0<n>>>0?d+1|0:d;n=Fj(K,E,i,P);e=n+e|0;f=Y+d|0;f=e>>>0<n>>>0?f+1|0:f;n=Fj(t,R,qa,aa);d=n+e|0;e=Y+f|0;e=d>>>0<n>>>0?e+1|0:e;n=Fj(L,F,s,W);f=n+d|0;d=Y+e|0;d=f>>>0<n>>>0?d+1|0:d;g=f;e=D(m,19);ua=e;ja=e>>31;f=Fj(e,ja,sa,ba);e=g+f|0;d=Y+d|0;d=e>>>0<f>>>0?d+1|0:d;f=Fj(M,G,ga,X);e=f+e|0;d=Y+d|0;d=e>>>0<f>>>0?d+1|0:d;m=Fj(S,T,ta,ca);e=m+e|0;f=Y+d|0;f=e>>>0<m>>>0?f+1|0:f;m=Fj(v,w,I,B);d=m+e|0;e=Y+f|0;e=d>>>0<m>>>0?e+1|0:e;m=Fj(N,O,ma,Z);f=m+d|0;d=Y+e|0;d=f>>>0<m>>>0?d+1|0:d;m=f;Ba=d;e=f+33554432|0;d=e>>>0<33554432?d+1|0:d;n=e;Ca=d;f=U;U=(d&67108863)<<6|e>>>26;f=f+U|0;d=(d>>26)+b|0;d=f>>>0<U>>>0?d+1|0:d;U=f;b=U+16777216|0;f=b>>>0<16777216?d+1|0:d;Da=b;e=f>>25;f=(f&33554431)<<7|b>>>25;b=f+k|0;d=c+e|0;d=b>>>0<f>>>0?d+1|0:d;c=b;b=c+33554432|0;d=b>>>0<33554432?d+1|0:d;ka=b;b=d;d=ka&-67108864;x[j+24>>2]=c-d;k=j;c=Fj(y,H,qa,aa);d=Y;e=Fj(z,A,K,E);c=e+c|0;f=Y+d|0;f=c>>>0<e>>>0?f+1|0:f;e=Fj(L,F,i,P);c=e+c|0;d=Y+f|0;d=c>>>0<e>>>0?d+1|0:d;f=c;c=D(t,19);j=c;t=c>>31;e=Fj(c,t,sa,ba);c=f+e|0;d=Y+d|0;d=c>>>0<e>>>0?d+1|0:d;e=c;c=D(s,19);Aa=c;va=c>>31;f=Fj(M,G,c,va);c=e+f|0;e=Y+d|0;e=c>>>0<f>>>0?e+1|0:e;f=Fj(ta,ca,ua,ja);c=f+c|0;d=Y+e|0;d=c>>>0<f>>>0?d+1|0:d;e=Fj(I,B,ga,X);c=e+c|0;f=Y+d|0;f=c>>>0<e>>>0?f+1|0:f;e=Fj(S,T,ma,Z);c=e+c|0;d=Y+f|0;d=c>>>0<e>>>0?d+1|0:d;e=Fj(v,w,J,C);c=e+c|0;d=Y+d|0;d=c>>>0<e>>>0?d+1|0:d;f=Fj(N,O,pa,_);c=f+c|0;e=Y+d|0;g=c;c=c>>>0<f>>>0?e+1|0:e;d=Fj(L,F,y,H);f=Y;s=Fj(z,A,o,fa);e=s+d|0;d=Y+f|0;d=e>>>0<s>>>0?d+1|0:d;f=e;e=D(i,19);s=e;Q=e>>31;i=Fj(e,Q,l,ha);e=f+i|0;f=Y+d|0;f=e>>>0<i>>>0?f+1|0:f;i=Fj(M,G,j,t);e=i+e|0;d=Y+f|0;d=e>>>0<i>>>0?d+1|0:d;f=Fj(Aa,va,p,ia);e=f+e|0;d=Y+d|0;d=e>>>0<f>>>0?d+1|0:d;i=Fj(I,B,ua,ja);f=i+e|0;e=Y+d|0;e=f>>>0<i>>>0?e+1|0:e;i=Fj(ga,X,h,da);f=i+f|0;d=Y+e|0;d=f>>>0<i>>>0?d+1|0:d;i=Fj(J,C,S,T);e=i+f|0;f=Y+d|0;f=e>>>0<i>>>0?f+1|0:f;i=Fj(v,w,r,ea);e=i+e|0;d=Y+f|0;d=e>>>0<i>>>0?d+1|0:d;f=Fj(N,O,K,E);e=f+e|0;d=Y+d|0;la=e;i=e>>>0<f>>>0?d+1|0:d;d=D(y,19);d=Fj(d,d>>31,sa,ba);e=Y;f=Fj(z,A,L,F);d=f+d|0;e=Y+e|0;e=d>>>0<f>>>0?e+1|0:e;V=Fj(M,G,s,Q);f=V+d|0;d=Y+e|0;j=Fj(j,t,ta,ca);e=j+f|0;f=Y+(f>>>0<V>>>0?d+1|0:d)|0;f=e>>>0<j>>>0?f+1|0:f;j=Fj(I,B,Aa,va);e=j+e|0;d=Y+f|0;d=e>>>0<j>>>0?d+1|0:d;f=Fj(ma,Z,ua,ja);e=f+e|0;d=Y+d|0;d=e>>>0<f>>>0?d+1|0:d;j=Fj(J,C,ga,X);f=j+e|0;e=Y+d|0;e=f>>>0<j>>>0?e+1|0:e;j=Fj(S,T,pa,_);f=j+f|0;d=Y+e|0;d=f>>>0<j>>>0?d+1|0:d;j=Fj(v,w,K,E);e=j+f|0;f=Y+d|0;f=e>>>0<j>>>0?f+1|0:f;j=Fj(N,O,qa,aa);e=j+e|0;d=Y+f|0;d=e>>>0<j>>>0?d+1|0:d;j=e;V=d;e=e+33554432|0;d=e>>>0<33554432?d+1|0:d;t=e;s=d;f=d>>26;Q=(d&67108863)<<6|e>>>26;d=Q+la|0;e=f+i|0;i=d;f=g;d=d>>>0<Q>>>0?e+1|0:e;e=i+16777216|0;d=e>>>0<16777216?d+1|0:d;Ea=e;g=(d&33554431)<<7|e>>>25;e=f+g|0;d=(d>>25)+c|0;d=e>>>0<g>>>0?d+1|0:d;c=e+33554432|0;d=c>>>0<33554432?d+1|0:d;Q=c;c=d;d=Q&-67108864;x[k+8>>2]=e-d;g=k;d=Fj(I,B,y,H);f=Y;k=Fj(z,A,p,ia);e=k+d|0;d=Y+f|0;d=e>>>0<k>>>0?d+1|0:d;f=Fj(na,P,h,da);e=f+e|0;d=Y+d|0;d=e>>>0<f>>>0?d+1|0:d;f=Fj(J,C,oa,R);e=f+e|0;d=Y+d|0;d=e>>>0<f>>>0?d+1|0:d;k=Fj(wa,W,r,ea);e=k+e|0;f=Y+d|0;f=e>>>0<k>>>0?f+1|0:f;k=Fj(K,E,xa,$);d=k+e|0;e=Y+f|0;e=d>>>0<k>>>0?e+1|0:e;k=Fj(o,fa,ya,ra);f=k+d|0;d=Y+e|0;d=f>>>0<k>>>0?d+1|0:d;e=f;k=u;la=k>>31;f=Fj(L,F,k,la);e=e+f|0;d=Y+d|0;d=e>>>0<f>>>0?d+1|0:d;f=Fj(v,w,l,ha);e=f+e|0;d=Y+d|0;d=e>>>0<f>>>0?d+1|0:d;u=Fj(N,O,M,G);e=u+e|0;f=Y+d|0;f=e>>>0<u>>>0?f+1|0:f;d=b>>26;u=(b&67108863)<<6|ka>>>26;b=u+e|0;e=d+f|0;e=b>>>0<u>>>0?e+1|0:e;f=b;d=e;b=f+16777216|0;d=b>>>0<16777216?d+1|0:d;ka=b;b=d;d=ka&-33554432;x[g+28>>2]=f-d;u=g;d=Fj(K,E,y,H);e=Y;g=Fj(z,A,r,ea);d=g+d|0;f=Y+e|0;f=d>>>0<g>>>0?f+1|0:f;g=Fj(na,P,o,fa);d=g+d|0;e=Y+f|0;e=d>>>0<g>>>0?e+1|0:e;g=Fj(L,F,oa,R);f=g+d|0;d=Y+e|0;d=f>>>0<g>>>0?d+1|0:d;e=f;f=Fj(Aa,va,l,ha);e=e+f|0;d=Y+d|0;d=e>>>0<f>>>0?d+1|0:d;f=Fj(M,G,ua,ja);e=f+e|0;d=Y+d|0;d=e>>>0<f>>>0?d+1|0:d;g=Fj(ga,X,p,ia);e=g+e|0;f=Y+d|0;f=e>>>0<g>>>0?f+1|0:f;g=Fj(I,B,S,T);d=g+e|0;e=Y+f|0;e=d>>>0<g>>>0?e+1|0:e;g=Fj(v,w,h,da);f=g+d|0;d=Y+e|0;d=f>>>0<g>>>0?d+1|0:d;e=f;f=Fj(N,O,J,C);e=e+f|0;d=Y+d|0;d=e>>>0<f>>>0?d+1|0:d;g=e;e=c>>26;f=(c&67108863)<<6|Q>>>26;c=g+f|0;d=d+e|0;d=c>>>0<f>>>0?d+1|0:d;e=c;c=e+16777216|0;f=c>>>0<16777216?d+1|0:d;v=c;c=f;d=v&-33554432;x[u+12>>2]=e-d;d=Fj(y,H,ta,ca);f=Y;g=Fj(z,A,M,G);e=g+d|0;d=Y+f|0;d=e>>>0<g>>>0?d+1|0:d;f=Fj(I,B,na,P);e=f+e|0;d=Y+d|0;d=e>>>0<f>>>0?d+1|0:d;g=Fj(oa,R,ma,Z);e=g+e|0;f=Y+d|0;f=e>>>0<g>>>0?f+1|0:f;g=Fj(J,C,wa,W);d=g+e|0;e=Y+f|0;e=d>>>0<g>>>0?e+1|0:e;g=Fj(pa,_,xa,$);f=g+d|0;d=Y+e|0;d=f>>>0<g>>>0?d+1|0:d;e=f;f=Fj(K,E,ya,ra);e=e+f|0;d=Y+d|0;d=e>>>0<f>>>0?d+1|0:d;f=Fj(k,la,qa,aa);e=f+e|0;d=Y+d|0;d=e>>>0<f>>>0?d+1|0:d;g=q;w=g>>31;q=Fj(L,F,g,w);e=q+e|0;f=Y+d|0;f=e>>>0<q>>>0?f+1|0:f;q=Fj(N,O,sa,ba);d=q+e|0;e=Y+f|0;e=d>>>0<q>>>0?e+1|0:e;q=d;d=b>>25;f=(b&33554431)<<7|ka>>>25;b=q+f|0;d=d+e|0;d=b>>>0<f>>>0?d+1|0:d;e=b;b=e+33554432|0;d=b>>>0<33554432?d+1|0:d;q=b;b=d;d=q&-67108864;x[u+32>>2]=e-d;d=n&-67108864;e=m-d|0;d=Ba-((d>>>0>m>>>0)+Ca|0)|0;f=e;e=c>>25;m=(c&33554431)<<7|v>>>25;c=f+m|0;d=d+e|0;d=c>>>0<m>>>0?d+1|0:d;e=c+33554432|0;if(e>>>0<33554432){d=d+1|0}d=(U-(Da&-33554432)|0)+((d&67108863)<<6|e>>>26)|0;x[a+20>>2]=d;d=e&-67108864;x[a+16>>2]=c-d;d=Fj(M,G,y,H);f=Y;l=Fj(z,A,l,ha);e=l+d|0;d=Y+f|0;d=e>>>0<l>>>0?d+1|0:d;l=Fj(na,P,p,ia);f=l+e|0;e=Y+d|0;e=f>>>0<l>>>0?e+1|0:e;l=Fj(I,B,oa,R);d=l+f|0;f=Y+e|0;h=Fj(wa,W,h,da);e=h+d|0;d=Y+(d>>>0<l>>>0?f+1|0:f)|0;d=e>>>0<h>>>0?d+1|0:d;f=Fj(J,C,xa,$);e=f+e|0;d=Y+d|0;d=e>>>0<f>>>0?d+1|0:d;f=Fj(r,ea,ya,ra);e=f+e|0;d=Y+d|0;d=e>>>0<f>>>0?d+1|0:d;h=Fj(K,E,k,la);f=h+e|0;e=Y+d|0;e=f>>>0<h>>>0?e+1|0:e;h=Fj(g,w,o,fa);d=h+f|0;f=Y+e|0;f=d>>>0<h>>>0?f+1|0:f;h=Fj(L,F,za,za>>31);e=h+d|0;d=Y+f|0;d=e>>>0<h>>>0?d+1|0:d;c=e;e=b>>26;f=(b&67108863)<<6|q>>>26;b=c+f|0;d=d+e|0;d=b>>>0<f>>>0?d+1|0:d;c=b;b=c+16777216|0;d=b>>>0<16777216?d+1|0:d;e=b;b=e&-33554432;x[a+36>>2]=c-b;f=i-(Ea&-33554432)|0;b=t&-67108864;h=j-b|0;r=V-((b>>>0>j>>>0)+s|0)|0;b=d;d=d>>25;d=Fj((b&33554431)<<7|e>>>25,d,19,0);b=d+h|0;e=Y+r|0;e=b>>>0<d>>>0?e+1|0:e;d=e;c=b+33554432|0;d=c>>>0<33554432?d+1|0:d;e=c;c=((d&67108863)<<6|e>>>26)+f|0;x[a+4>>2]=c;c=a;a=e&-67108864;x[c>>2]=b-a}function qg(a,b){var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0;g=x[b+12>>2];c=g<<1;s=c;t=c>>31;k=x[b+4>>2];c=k<<1;u=c;o=c>>31;c=Fj(s,t,c,o);e=Y;d=c;G=x[b+8>>2];c=G;l=c>>31;R=c;f=Fj(c,l,c,l);d=d+f|0;c=Y+e|0;c=d>>>0<f>>>0?c+1|0:c;f=d;H=x[b+16>>2];d=H;p=d;v=d>>31;L=x[b>>2];d=L<<1;w=d;q=d>>31;e=Fj(p,v,d,q);d=f+e|0;c=Y+c|0;c=d>>>0<e>>>0?c+1|0:c;i=d;e=x[b+28>>2];d=D(e,38);M=d;I=d>>31;$=e;S=e>>31;f=Fj(d,I,e,S);d=i+f|0;c=Y+c|0;c=d>>>0<f>>>0?c+1|0:c;h=d;i=x[b+32>>2];d=D(i,19);z=d;A=d>>31;f=x[b+24>>2];d=f<<1;j=Fj(z,A,d,d>>31);m=h+j|0;d=Y+c|0;d=j>>>0>m>>>0?d+1|0:d;h=m;B=x[b+36>>2];c=D(B,38);y=c;r=c>>31;m=x[b+20>>2];b=m<<1;J=b;E=b>>31;j=Fj(c,r,b,E);c=h+j|0;b=Y+d|0;T=c<<1;c=(c>>>0<j>>>0?b+1|0:b)<<1|c>>>31;ea=c;b=T+33554432|0;c=b>>>0<33554432?c+1|0:c;aa=b;fa=c;b=c>>26;c=(c&67108863)<<6|aa>>>26;d=Fj(u,o,p,v);j=Y;h=c;c=G<<1;K=c;F=c>>31;N=g;U=g>>31;g=Fj(c,F,g,U);d=g+d|0;c=Y+j|0;c=d>>>0<g>>>0?c+1|0:c;G=m;O=m>>31;j=Fj(m,O,w,q);g=j+d|0;d=Y+c|0;d=g>>>0<j>>>0?d+1|0:d;H=g;c=e<<1;ba=c;V=c>>31;g=Fj(z,A,c,V);e=H+g|0;c=Y+d|0;c=e>>>0<g>>>0?c+1|0:c;d=e;g=f;C=f>>31;e=Fj(y,r,f,C);d=d+e|0;c=Y+c|0;c=d>>>0<e>>>0?c+1|0:c;e=d;d=c<<1|d>>>31;e=e<<1;c=h+e|0;b=b+d|0;P=c;c=c>>>0<e>>>0?b+1|0:b;b=P+16777216|0;c=b>>>0<16777216?c+1|0:c;ga=b;b=(c&33554431)<<7|b>>>25;e=c>>25;c=Fj(s,t,N,U);d=Y;h=b;j=Fj(p,v,K,F);b=j+c|0;c=Y+d|0;c=b>>>0<j>>>0?c+1|0:c;d=Fj(u,o,J,E);b=d+b|0;c=Y+c|0;c=b>>>0<d>>>0?c+1|0:c;j=Fj(w,q,f,C);d=j+b|0;b=Y+c|0;b=d>>>0<j>>>0?b+1|0:b;j=i;Q=i>>31;i=Fj(z,A,i,Q);d=i+d|0;c=Y+b|0;c=d>>>0<i>>>0?c+1|0:c;i=Fj(y,r,ba,V);b=i+d|0;d=Y+c|0;c=b;b=(c>>>0<i>>>0?d+1|0:d)<<1|c>>>31;i=c<<1;d=h+i|0;c=b+e|0;c=d>>>0<i>>>0?c+1|0:c;b=d;d=b+33554432|0;c=d>>>0<33554432?c+1|0:c;W=d;e=c;c=d&-67108864;x[a+24>>2]=b-c;i=a;b=D(m,38);b=Fj(b,b>>31,m,O);c=Y;h=b;b=L;d=b>>31;m=Fj(b,d,b,d);b=h+m|0;d=Y+c|0;d=b>>>0<m>>>0?d+1|0:d;c=b;b=D(f,19);n=b;X=b>>31;b=p<<1;ca=b;Z=b>>31;f=Fj(n,X,b,Z);b=c+f|0;c=Y+d|0;c=b>>>0<f>>>0?c+1|0:c;d=Fj(s,t,M,I);b=d+b|0;c=Y+c|0;c=b>>>0<d>>>0?c+1|0:c;f=Fj(z,A,K,F);d=f+b|0;b=Y+c|0;b=d>>>0<f>>>0?b+1|0:b;f=Fj(u,o,y,r);d=f+d|0;c=Y+b|0;b=d;m=b<<1;c=(b>>>0<f>>>0?c+1|0:c)<<1|b>>>31;ha=c;b=m+33554432|0;d=b>>>0<33554432?c+1|0:c;L=b;H=d;b=(d&67108863)<<6|b>>>26;f=d>>26;c=Fj(n,X,J,E);d=Y;_=b;h=k;da=h>>31;k=Fj(w,q,h,da);b=k+c|0;c=Y+d|0;c=b>>>0<k>>>0?c+1|0:c;k=Fj(p,v,M,I);d=k+b|0;b=Y+c|0;b=d>>>0<k>>>0?b+1|0:b;k=Fj(z,A,s,t);d=k+d|0;c=Y+b|0;c=d>>>0<k>>>0?c+1|0:c;k=Fj(y,r,R,l);b=k+d|0;d=Y+c|0;c=b;b=(c>>>0<k>>>0?d+1|0:d)<<1|c>>>31;k=c<<1;d=_+k|0;c=b+f|0;c=d>>>0<k>>>0?c+1|0:c;k=d;b=d+16777216|0;if(b>>>0<16777216){c=c+1|0}_=b;d=b;b=c>>25;c=(c&33554431)<<7|d>>>25;f=b;b=Fj(w,q,R,l);d=Y;ia=c;h=Fj(u,o,h,da);b=h+b|0;c=Y+d|0;c=b>>>0<h>>>0?c+1|0:c;h=Fj(n,X,g,C);b=h+b|0;d=Y+c|0;d=b>>>0<h>>>0?d+1|0:d;h=Fj(J,E,M,I);b=h+b|0;c=Y+d|0;c=b>>>0<h>>>0?c+1|0:c;d=Fj(z,A,ca,Z);b=d+b|0;c=Y+c|0;c=b>>>0<d>>>0?c+1|0:c;h=Fj(y,r,s,t);d=h+b|0;b=Y+c|0;b=d>>>0<h>>>0?b+1|0:b;c=b<<1|d>>>31;d=d<<1;b=ia+d|0;c=c+f|0;c=b>>>0<d>>>0?c+1|0:c;d=c;c=b+33554432|0;d=c>>>0<33554432?d+1|0:d;h=c;f=d;c=c&-67108864;x[i+8>>2]=b-c;b=Fj(K,F,G,O);d=Y;n=Fj(p,v,s,t);c=n+b|0;b=Y+d|0;b=c>>>0<n>>>0?b+1|0:b;n=Fj(u,o,g,C);d=n+c|0;c=Y+b|0;c=d>>>0<n>>>0?c+1|0:c;n=Fj(w,q,$,S);b=n+d|0;d=Y+c|0;d=b>>>0<n>>>0?d+1|0:d;n=Fj(y,r,j,Q);b=n+b|0;c=Y+d|0;c=b>>>0<n>>>0?c+1|0:c;c=c<<1|b>>>31;d=e>>26;e=(e&67108863)<<6|W>>>26;b=e+(b<<1)|0;c=c+d|0;c=b>>>0<e>>>0?c+1|0:c;d=b;b=c;c=d+16777216|0;b=c>>>0<16777216?b+1|0:b;W=c;e=b;b=c&-33554432;x[i+28>>2]=d-b;b=Fj(w,q,N,U);c=Y;d=Fj(u,o,R,l);b=d+b|0;c=Y+c|0;c=b>>>0<d>>>0?c+1|0:c;d=Fj(g,C,M,I);b=d+b|0;c=Y+c|0;c=b>>>0<d>>>0?c+1|0:c;l=Fj(z,A,J,E);d=l+b|0;b=Y+c|0;b=d>>>0<l>>>0?b+1|0:b;l=Fj(y,r,p,v);c=l+d|0;d=Y+b|0;b=c;c=(c>>>0<l>>>0?d+1|0:d)<<1|c>>>31;d=b<<1;b=f>>26;f=(f&67108863)<<6|h>>>26;d=d+f|0;c=b+c|0;c=d>>>0<f>>>0?c+1|0:c;b=d;d=b+16777216|0;c=d>>>0<16777216?c+1|0:c;N=d;f=c;c=d&-33554432;x[i+12>>2]=b-c;l=a;b=Fj(g,C,K,F);c=Y;d=Fj(p,v,p,v);b=d+b|0;c=Y+c|0;c=b>>>0<d>>>0?c+1|0:c;d=Fj(s,t,J,E);b=d+b|0;c=Y+c|0;c=b>>>0<d>>>0?c+1|0:c;d=Fj(u,o,ba,V);b=d+b|0;c=Y+c|0;c=b>>>0<d>>>0?c+1|0:c;i=Fj(w,q,j,Q);d=i+b|0;b=Y+c|0;b=d>>>0<i>>>0?b+1|0:b;i=B;h=i>>31;B=Fj(y,r,i,h);c=B+d|0;d=Y+b|0;b=c;c=(c>>>0<B>>>0?d+1|0:d)<<1|c>>>31;a=b<<1;b=e>>25;e=(e&33554431)<<7|W>>>25;d=a+e|0;c=b+c|0;c=d>>>0<e>>>0?c+1|0:c;b=d;d=b+33554432|0;c=d>>>0<33554432?c+1|0:c;B=d;e=c;c=d&-67108864;x[l+32>>2]=b-c;P=P-(ga&-33554432)|0;c=f>>25;f=(f&33554431)<<7|N>>>25;b=aa&-67108864;d=f+(T-b|0)|0;b=c+(ea-((b>>>0>T>>>0)+fa|0)|0)|0;b=d>>>0<f>>>0?b+1|0:b;c=b;b=d+33554432|0;c=b>>>0<33554432?c+1|0:c;f=b;b=((c&67108863)<<6|b>>>26)+P|0;x[l+20>>2]=b;b=f&-67108864;x[l+16>>2]=d-b;b=Fj(s,t,g,C);d=Y;g=Fj(G,O,ca,Z);c=g+b|0;b=Y+d|0;b=c>>>0<g>>>0?b+1|0:b;g=Fj(K,F,$,S);d=g+c|0;c=Y+b|0;c=d>>>0<g>>>0?c+1|0:c;g=Fj(u,o,j,Q);b=g+d|0;d=Y+c|0;d=b>>>0<g>>>0?d+1|0:d;g=Fj(w,q,i,h);b=g+b|0;c=Y+d|0;c=b>>>0<g>>>0?c+1|0:c;c=c<<1|b>>>31;d=e>>26;e=(e&67108863)<<6|B>>>26;b=e+(b<<1)|0;c=c+d|0;c=b>>>0<e>>>0?c+1|0:c;d=b;e=b;b=c;c=d+16777216|0;b=c>>>0<16777216?b+1|0:b;d=c&-33554432;x[l+36>>2]=e-d;f=k-(_&-33554432)|0;c=Fj((b&33554431)<<7|c>>>25,b>>25,19,0);d=L&-67108864;b=c+(m-d|0)|0;d=Y+(ha-((d>>>0>m>>>0)+H|0)|0)|0;d=b>>>0<c>>>0?d+1|0:d;c=b;b=d;d=c+33554432|0;b=d>>>0<33554432?b+1|0:b;b=((b&67108863)<<6|d>>>26)+f|0;x[l+4>>2]=b;a=d&-67108864;x[l>>2]=c-a}function Ec(a,b,c){var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,W=0,X=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0;r=V-2048|0;V=r;pb(r+1024|0,b);xb(r+1024|0,a);pb(r,r+1024|0);xb(r,c);b=0;while(1){a=v<<7;m=(r+1024|0)+(a|64)|0;d=m;g=x[d>>2];l=(r+1024|0)+(a|96)|0;f=l;k=x[f>>2];f=x[f+4>>2];h=g;q=x[d+4>>2];j=k;d=a+(r+1024|0)|0;g=(r+1024|0)+(a|32)|0;i=x[g>>2];k=x[g+4>>2];u=ka(x[d>>2],x[d+4>>2],i,k);e=f;f=Y;j=ia(j^u,e^f,32);e=Y;p=ka(h,q,j,e);h=p^i;i=Y;k=ia(h,k^i,24);h=f;f=Y;D=ka(u,h,k,f);o=Y;K=ia(D^j,o^e,16);G=Y;L=ka(p,i,K,G);H=Y;f=ia(k^L,H^f,63);k=Y;i=(r+1024|0)+(a|104)|0;j=x[i>>2];p=x[i+4>>2];u=(r+1024|0)+(a|72)|0;e=u;A=x[e>>2];n=x[e+4>>2];w=j;j=(r+1024|0)+(a|8)|0;e=j;t=x[e>>2];q=x[e+4>>2];e=(r+1024|0)+(a|40)|0;F=x[e>>2];h=x[e+4>>2];y=ka(t,q,F,h);q=p;p=Y;w=ia(w^y,q^p,32);q=Y;t=ka(A,n,w,q);n=t^F;F=Y;h=ia(n,h^F,24);n=p;p=Y;I=ka(y,n,h,p);M=Y;S=ia(I^w,M^q,16);W=Y;Z=ka(t,F,S,W);_=Y;p=ia(h^Z,_^p,63);h=Y;F=(r+1024|0)+(a|112)|0;y=F;w=x[y>>2];t=x[y+4>>2];y=(r+1024|0)+(a|80)|0;E=x[y>>2];s=x[y+4>>2];A=w;w=(r+1024|0)+(a|16)|0;q=(r+1024|0)+(a|48)|0;C=q;B=x[C>>2];C=x[C+4>>2];J=ka(x[w>>2],x[w+4>>2],B,C);n=t;t=Y;A=ia(A^J,n^t,32);z=Y;n=ka(E,s,A,z);s=n^B;B=Y;C=ia(s,C^B,24);s=t;t=Y;$=ka(J,s,C,t);aa=Y;ba=ia($^A,aa^z,16);ca=Y;T=ka(n,B,ba,ca);Q=Y;t=ia(C^T,Q^t,63);C=Y;B=(r+1024|0)+(a|120)|0;A=x[B>>2];z=x[B+4>>2];J=(r+1024|0)+(a|88)|0;n=J;da=x[n>>2];R=x[n+4>>2];E=A;A=(r+1024|0)+(a|24)|0;n=A;X=x[n>>2];s=x[n+4>>2];a=(r+1024|0)+(a|56)|0;N=x[a>>2];n=x[a+4>>2];U=ka(X,s,N,n);s=z;z=Y;O=ia(E^U,s^z,32);P=Y;R=ka(da,R,O,P);s=R^N;N=Y;n=ia(s,n^N,24);E=N;s=z;z=Y;N=ka(U,s,n,z);U=Y;O=ia(N^O,U^P,16);P=Y;R=ka(R,E,O,P);X=Y;z=ia(n^R,X^z,63);n=Y;E=T;s=Q;D=ka(D,o,p,h);o=Y;T=ia(O^D,P^o,32);Q=Y;O=ka(E,s,T,Q);P=Y;p=ia(O^p,P^h,24);h=D;D=Y;h=ka(h,o,p,D);o=Y;x[d>>2]=h;x[d+4>>2]=o;d=ia(h^T,Q^o,16);h=Y;x[B>>2]=d;x[B+4>>2]=h;d=ka(O,P,d,h);h=Y;x[y>>2]=d;x[y+4>>2]=h;ea=e,fa=ia(d^p,h^D,63),x[ea>>2]=fa;x[e+4>>2]=Y;o=t;e=ka(I,M,t,C);p=Y;h=ia(K^e,G^p,32);y=Y;t=ka(R,X,h,y);d=C;C=Y;d=ia(o^t,d^C,24);o=p;p=Y;e=ka(e,o,d,p);B=Y;x[j>>2]=e;x[j+4>>2]=B;j=ia(e^h,y^B,16);e=Y;x[l>>2]=j;x[l+4>>2]=e;l=ka(t,C,j,e);x[J>>2]=l;j=Y;x[J+4>>2]=j;ea=q,fa=ia(d^l,j^p,63),x[ea>>2]=fa;x[q+4>>2]=Y;d=ka($,aa,z,n);j=Y;e=ia(S^d,W^j,32);p=Y;h=ka(L,H,e,p);y=Y;l=ia(h^z,y^n,24);q=j;j=Y;d=ka(d,q,l,j);q=Y;t=q;x[w>>2]=d;x[w+4>>2]=t;d=ia(d^e,p^t,16);e=Y;x[i>>2]=d;x[i+4>>2]=e;d=ka(h,y,d,e);x[m>>2]=d;e=m;m=Y;x[e+4>>2]=m;ea=a,fa=ia(d^l,m^j,63),x[ea>>2]=fa;x[a+4>>2]=Y;e=f;m=ka(N,U,f,k);l=Y;d=ia(ba^m,ca^l,32);f=Y;i=ka(Z,_,d,f);a=k;k=Y;a=ia(e^i,a^k,24);e=l;l=Y;m=ka(m,e,a,l);j=Y;e=j;x[A>>2]=m;x[A+4>>2]=e;m=ia(d^m,f^e,16);d=Y;x[F>>2]=m;x[F+4>>2]=d;m=ka(i,k,m,d);x[u>>2]=m;d=Y;x[u+4>>2]=d;ea=g,fa=ia(a^m,d^l,63),x[ea>>2]=fa;x[g+4>>2]=Y;v=v+1|0;if((v|0)!=8){continue}break}while(1){l=b<<4;a=l+(r+1024|0)|0;v=x[a+768>>2];m=x[a+772>>2];d=a+512|0;h=x[d>>2];j=x[d+4>>2];e=v;v=x[a+256>>2];d=x[a+260>>2];g=ka(x[a>>2],x[a+4>>2],v,d);f=m;m=Y;f=ia(e^g,f^m,32);k=Y;i=ka(h,j,f,k);e=i^v;v=Y;d=ia(e,d^v,24);q=v;v=Y;j=ka(g,m,d,v);e=Y;p=ia(j^f,e^k,16);h=Y;F=ka(i,q,p,h);y=Y;v=ia(d^F,y^v,63);m=Y;d=x[a+780>>2];t=x[a+520>>2];o=x[a+524>>2];w=x[a+776>>2];l=(r+1024|0)+(l|8)|0;g=l;q=x[g>>2];k=x[g+4>>2];g=x[a+264>>2];f=x[a+268>>2];k=ka(q,k,g,f);q=d;d=Y;i=ia(w^k,q^d,32);u=Y;w=ka(t,o,i,u);q=w^g;g=Y;f=ia(q,f^g,24);o=w;q=d;d=Y;w=ka(k,q,f,d);q=Y;t=ia(w^i,q^u,16);C=Y;B=ka(o,g,t,C);J=Y;d=ia(f^B,J^d,63);g=Y;f=x[a+900>>2];s=x[a+640>>2];D=x[a+644>>2];n=x[a+896>>2];k=x[a+384>>2];i=x[a+388>>2];u=ka(x[a+128>>2],x[a+132>>2],k,i);o=f;f=Y;A=ia(n^u,o^f,32);z=Y;n=ka(s,D,A,z);o=n^k;k=Y;i=ia(o,i^k,24);s=n;n=A;o=f;f=Y;A=ka(u,o,i,f);o=z;z=Y;n=ia(n^A,o^z,16);D=Y;o=ka(s,k,n,D);K=Y;f=ia(i^o,K^f,63);k=Y;i=x[a+908>>2];Q=x[a+648>>2];W=x[a+652>>2];E=x[a+904>>2];u=x[a+392>>2];G=x[a+396>>2];L=ka(x[a+136>>2],x[a+140>>2],u,G);s=i;i=Y;H=ia(E^L,s^i,32);I=Y;M=ka(Q,W,H,I);s=M^u;u=Y;G=ia(s,G^u,24);E=G;s=i;i=Y;G=ka(L,s,G,i);L=Y;H=ia(G^H,L^I,16);I=Y;M=ka(M,u,H,I);S=Y;i=ia(E^M,S^i,63);u=Y;E=o;s=K;j=ka(j,e,d,g);e=Y;o=ia(H^j,I^e,32);K=Y;H=ka(E,s,o,K);I=Y;d=ia(H^d,I^g,24);g=j;j=Y;g=ka(g,e,d,j);e=Y;x[a>>2]=g;x[a+4>>2]=e;g=ia(g^o,K^e,16);e=Y;x[a+904>>2]=g;x[a+908>>2]=e;g=ka(H,I,g,e);e=Y;x[a+640>>2]=g;x[a+644>>2]=e;ea=a,fa=ia(d^g,j^e,63),x[ea+264>>2]=fa;x[a+268>>2]=Y;o=f;g=ka(w,q,f,k);f=Y;j=ia(p^g,h^f,32);e=Y;p=ka(M,S,j,e);d=k;k=Y;d=ia(o^p,d^k,24);h=f;f=Y;g=ka(g,h,d,f);h=Y;x[l>>2]=g;x[l+4>>2]=h;l=ia(g^j,e^h,16);g=Y;x[a+768>>2]=l;x[a+772>>2]=g;l=ka(p,k,l,g);x[a+648>>2]=l;g=Y;x[a+652>>2]=g;ea=a,fa=ia(d^l,g^f,63),x[ea+384>>2]=fa;x[a+388>>2]=Y;j=i;d=ka(A,z,i,u);g=Y;f=ia(t^d,C^g,32);k=Y;i=ka(F,y,f,k);e=u;u=Y;l=ia(j^i,e^u,24);e=g;g=Y;d=ka(d,e,l,g);j=Y;e=j;x[a+128>>2]=d;x[a+132>>2]=e;d=ia(d^f,e^k,16);f=Y;x[a+776>>2]=d;x[a+780>>2]=f;d=ka(i,u,d,f);x[a+512>>2]=d;f=Y;x[a+516>>2]=f;ea=a,fa=ia(d^l,g^f,63),x[ea+392>>2]=fa;x[a+396>>2]=Y;l=ka(G,L,v,m);d=Y;g=ia(n^l,D^d,32);f=Y;k=ka(B,J,g,f);i=Y;v=ia(k^v,i^m,24);e=l;l=Y;m=ka(e,d,v,l);d=Y;x[a+136>>2]=m;x[a+140>>2]=d;m=ia(g^m,f^d,16);d=Y;x[a+896>>2]=m;x[a+900>>2]=d;m=ka(k,i,m,d);x[a+520>>2]=m;d=Y;x[a+524>>2]=d;ea=a,fa=ia(m^v,d^l,63),x[ea+256>>2]=fa;x[a+260>>2]=Y;b=b+1|0;if((b|0)!=8){continue}break}pb(c,r);xb(c,r+1024|0);V=r+2048|0}function hc(a,b,c,d){var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;while(1){f=g<<2;n=f+b|0;n=y[n|0]|y[n+1|0]<<8|(y[n+2|0]<<16|y[n+3|0]<<24);x[c+f>>2]=n<<8&16711680|n<<24|(n>>>8&65280|n>>>24);g=g+1|0;if((g|0)!=16){continue}break}b=a;n=x[b+28>>2];x[d+24>>2]=x[b+24>>2];x[d+28>>2]=n;n=x[b+20>>2];x[d+16>>2]=x[b+16>>2];x[d+20>>2]=n;n=x[b+12>>2];x[d+8>>2]=x[b+8>>2];x[d+12>>2]=n;n=x[b+4>>2];x[d>>2]=x[b>>2];x[d+4>>2]=n;while(1){b=v<<2;n=b+c|0;i=x[d+16>>2];g=x[n>>2]+(ja(i,6)^ja(i,11)^ja(i,25))|0;f=x[d+24>>2];l=x[d+20>>2];g=x[d+28>>2]+((x[b+35984>>2]+g|0)+(i&(f^l)^f)|0)|0;j=g+x[d+12>>2]|0;x[d+12>>2]=j;h=x[d>>2];g=g+(ja(h,2)^ja(h,13)^ja(h,22))|0;k=x[d+8>>2];e=x[d+4>>2];g=g+(h&(k|e)|e&k)|0;x[d+28>>2]=g;o=(f+(l^j&(i^l))|0)+(ja(j,6)^ja(j,11)^ja(j,25))|0;f=b|4;s=f+c|0;f=(o+x[s>>2]|0)+x[f+35984>>2]|0;k=f+k|0;x[d+8>>2]=k;f=(f+(g&(e|h)|e&h)|0)+(ja(g,2)^ja(g,13)^ja(g,22))|0;x[d+24>>2]=f;m=e;e=b|8;o=e+c|0;e=(((l+(i^k&(j^i))|0)+(ja(k,6)^ja(k,11)^ja(k,25))|0)+x[o>>2]|0)+x[e+35984>>2]|0;l=m+e|0;x[d+4>>2]=l;e=(e+(f&(g|h)|g&h)|0)+(ja(f,2)^ja(f,13)^ja(f,22))|0;x[d+20>>2]=e;m=h;h=b|12;t=h+c|0;h=(((i+(j^l&(j^k))|0)+(ja(l,6)^ja(l,11)^ja(l,25))|0)+x[t>>2]|0)+x[h+35984>>2]|0;i=m+h|0;x[d>>2]=i;h=(h+(e&(f|g)|f&g)|0)+(ja(e,2)^ja(e,13)^ja(e,22))|0;x[d+16>>2]=h;m=g;g=b|16;p=g+c|0;g=(((j+(k^i&(k^l))|0)+(ja(i,6)^ja(i,11)^ja(i,25))|0)+x[p>>2]|0)+x[g+35984>>2]|0;j=m+g|0;x[d+28>>2]=j;g=(g+(h&(e|f)|e&f)|0)+(ja(h,2)^ja(h,13)^ja(h,22))|0;x[d+12>>2]=g;m=f;f=b|20;q=f+c|0;f=(((k+(l^j&(i^l))|0)+(ja(j,6)^ja(j,11)^ja(j,25))|0)+x[q>>2]|0)+x[f+35984>>2]|0;k=m+f|0;x[d+24>>2]=k;f=(f+(g&(e|h)|e&h)|0)+(ja(g,2)^ja(g,13)^ja(g,22))|0;x[d+8>>2]=f;m=e;e=b|24;r=e+c|0;e=(((l+(i^k&(j^i))|0)+(ja(k,6)^ja(k,11)^ja(k,25))|0)+x[r>>2]|0)+x[e+35984>>2]|0;l=m+e|0;x[d+20>>2]=l;e=(e+(f&(g|h)|g&h)|0)+(ja(f,2)^ja(f,13)^ja(f,22))|0;x[d+4>>2]=e;m=h;h=b|28;u=h+c|0;h=(((i+(j^l&(j^k))|0)+(ja(l,6)^ja(l,11)^ja(l,25))|0)+x[u>>2]|0)+x[h+35984>>2]|0;i=m+h|0;x[d+16>>2]=i;h=(h+(e&(f|g)|f&g)|0)+(ja(e,2)^ja(e,13)^ja(e,22))|0;x[d>>2]=h;m=g;g=b|32;z=g+c|0;g=(((j+(k^i&(k^l))|0)+(ja(i,6)^ja(i,11)^ja(i,25))|0)+x[z>>2]|0)+x[g+35984>>2]|0;j=m+g|0;x[d+12>>2]=j;g=(g+(h&(e|f)|e&f)|0)+(ja(h,2)^ja(h,13)^ja(h,22))|0;x[d+28>>2]=g;m=f;f=b|36;A=f+c|0;f=(((k+(l^j&(i^l))|0)+(ja(j,6)^ja(j,11)^ja(j,25))|0)+x[A>>2]|0)+x[f+35984>>2]|0;k=m+f|0;x[d+8>>2]=k;f=(f+(g&(e|h)|e&h)|0)+(ja(g,2)^ja(g,13)^ja(g,22))|0;x[d+24>>2]=f;m=e;e=b|40;B=e+c|0;e=(((l+(i^k&(j^i))|0)+(ja(k,6)^ja(k,11)^ja(k,25))|0)+x[B>>2]|0)+x[e+35984>>2]|0;l=m+e|0;x[d+4>>2]=l;e=(e+(f&(g|h)|g&h)|0)+(ja(f,2)^ja(f,13)^ja(f,22))|0;x[d+20>>2]=e;m=h;h=b|44;C=h+c|0;h=(((i+(j^l&(j^k))|0)+(ja(l,6)^ja(l,11)^ja(l,25))|0)+x[C>>2]|0)+x[h+35984>>2]|0;i=m+h|0;x[d>>2]=i;h=(h+(e&(f|g)|f&g)|0)+(ja(e,2)^ja(e,13)^ja(e,22))|0;x[d+16>>2]=h;m=g;g=b|48;D=g+c|0;g=(((j+(k^i&(k^l))|0)+(ja(i,6)^ja(i,11)^ja(i,25))|0)+x[D>>2]|0)+x[g+35984>>2]|0;j=m+g|0;x[d+28>>2]=j;g=(g+(h&(e|f)|e&f)|0)+(ja(h,2)^ja(h,13)^ja(h,22))|0;x[d+12>>2]=g;m=f;f=b|52;E=f+c|0;f=(((k+(l^j&(i^l))|0)+(ja(j,6)^ja(j,11)^ja(j,25))|0)+x[E>>2]|0)+x[f+35984>>2]|0;k=m+f|0;x[d+24>>2]=k;f=(f+(g&(e|h)|e&h)|0)+(ja(g,2)^ja(g,13)^ja(g,22))|0;x[d+8>>2]=f;m=e;e=b|56;F=e+c|0;l=(((l+(i^k&(j^i))|0)+(ja(k,6)^ja(k,11)^ja(k,25))|0)+x[F>>2]|0)+x[e+35984>>2]|0;e=m+l|0;x[d+20>>2]=e;l=(l+(f&(g|h)|g&h)|0)+(ja(f,2)^ja(f,13)^ja(f,22))|0;x[d+4>>2]=l;e=(i+(j^e&(j^k))|0)+(ja(e,6)^ja(e,11)^ja(e,25))|0;b=b|60;j=b+c|0;b=(e+x[j>>2]|0)+x[b+35984>>2]|0;x[d+16>>2]=b+h;G=d,H=(b+(l&(f|g)|f&g)|0)+(ja(l,2)^ja(l,13)^ja(l,22))|0,x[G>>2]=H;if((v|0)==48){while(1){b=w<<2;c=b+a|0;x[c>>2]=x[c>>2]+x[b+d>>2];w=w+1|0;if((w|0)!=8){continue}break}}else{v=v+16|0;b=x[F>>2];g=b>>>10^ja(b,17)^ja(b,19);e=x[A>>2];f=x[s>>2];g=((g+e|0)+x[n>>2]|0)+(f>>>3^ja(f,7)^ja(f,18))|0;x[(v<<2)+c>>2]=g;h=x[B>>2];k=h+f|0;f=x[j>>2];i=k+(f>>>10^ja(f,17)^ja(f,19))|0;k=x[o>>2];j=i+(k>>>3^ja(k,7)^ja(k,18))|0;x[n+68>>2]=j;i=k;k=x[C>>2];o=(i+k|0)+(ja(g,17)^g>>>10^ja(g,19))|0;i=x[t>>2];l=o+(i>>>3^ja(i,7)^ja(i,18))|0;x[n+72>>2]=l;o=i;i=x[D>>2];m=(o+i|0)+(ja(j,17)^j>>>10^ja(j,19))|0;o=x[p>>2];s=m+(o>>>3^ja(o,7)^ja(o,18))|0;x[n+76>>2]=s;m=o;o=x[E>>2];m=(m+o|0)+(ja(l,17)^l>>>10^ja(l,19))|0;p=x[q>>2];t=m+(p>>>3^ja(p,7)^ja(p,18))|0;x[n+80>>2]=t;m=(b+p|0)+(ja(s,17)^s>>>10^ja(s,19))|0;q=x[r>>2];p=m+(q>>>3^ja(q,7)^ja(q,18))|0;x[n+84>>2]=p;m=(f+q|0)+(ja(t,17)^t>>>10^ja(t,19))|0;r=x[u>>2];q=m+(r>>>3^ja(r,7)^ja(r,18))|0;x[n+88>>2]=q;m=(g+r|0)+(ja(p,17)^p>>>10^ja(p,19))|0;u=x[z>>2];r=m+(u>>>3^ja(u,7)^ja(u,18))|0;x[n+92>>2]=r;j=((j+u|0)+(ja(q,17)^q>>>10^ja(q,19))|0)+(ja(e,7)^e>>>3^ja(e,18))|0;x[n+96>>2]=j;e=((e+l|0)+(ja(r,17)^r>>>10^ja(r,19))|0)+(ja(h,7)^h>>>3^ja(h,18))|0;x[n+100>>2]=e;h=((h+s|0)+(ja(j,17)^j>>>10^ja(j,19))|0)+(ja(k,7)^k>>>3^ja(k,18))|0;x[n+104>>2]=h;e=((k+t|0)+(ja(e,17)^e>>>10^ja(e,19))|0)+(ja(i,7)^i>>>3^ja(i,18))|0;x[n+108>>2]=e;h=((i+p|0)+(ja(h,17)^h>>>10^ja(h,19))|0)+(ja(o,7)^o>>>3^ja(o,18))|0;x[n+112>>2]=h;e=((o+q|0)+(ja(e,17)^e>>>10^ja(e,19))|0)+(ja(b,7)^b>>>3^ja(b,18))|0;x[n+116>>2]=e;G=n,H=((b+r|0)+(ja(h,17)^h>>>10^ja(h,19))|0)+(ja(f,7)^f>>>3^ja(f,18))|0,x[G+120>>2]=H;G=n,H=((f+j|0)+(ja(e,17)^e>>>10^ja(e,19))|0)+(ja(g,7)^g>>>3^ja(g,18))|0,x[G+124>>2]=H;continue}break}}function qa(a,b){var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0;h=a;c=x[b+12>>2];d=c<<1;y=d;s=d>>31;j=c;S=c>>31;c=Fj(d,s,c,S);f=Y;d=c;T=x[b+16>>2];c=T;n=c;t=c>>31;l=x[b+8>>2];c=l<<1;J=c;E=c>>31;g=Fj(n,t,c,E);d=d+g|0;c=Y+f|0;c=d>>>0<g>>>0?c+1|0:c;f=d;g=x[b+20>>2];d=g<<1;F=d;G=d>>31;m=x[b+4>>2];d=m<<1;u=d;o=d>>31;e=Fj(F,G,d,o);f=f+e|0;d=Y+c|0;d=f>>>0<e>>>0?d+1|0:d;i=x[b+24>>2];c=i;O=c;z=c>>31;K=x[b>>2];c=K<<1;v=c;p=c>>31;e=Fj(i,z,c,p);f=e+f|0;c=Y+d|0;c=f>>>0<e>>>0?c+1|0:c;k=f;d=x[b+32>>2];f=D(d,19);H=f;A=f>>31;U=d;P=d>>31;f=Fj(f,A,d,P);d=k+f|0;c=Y+c|0;c=d>>>0<f>>>0?c+1|0:c;k=d;B=x[b+36>>2];d=D(B,38);w=d;q=d>>31;f=x[b+28>>2];b=f<<1;_=b;V=b>>31;e=Fj(d,q,b,V);d=k+e|0;b=Y+c|0;C=d;r=d>>>0<e>>>0?b+1|0:b;b=Fj(u,o,n,t);c=Y;d=Fj(J,E,j,S);b=d+b|0;c=Y+c|0;c=b>>>0<d>>>0?c+1|0:c;$=g;Q=g>>31;e=Fj(g,Q,v,p);b=e+b|0;d=Y+c|0;d=b>>>0<e>>>0?d+1|0:d;e=Fj(H,A,_,V);b=e+b|0;c=Y+d|0;c=b>>>0<e>>>0?c+1|0:c;d=Fj(w,q,i,z);b=d+b|0;c=Y+c|0;k=b;L=b>>>0<d>>>0?c+1|0:c;b=Fj(u,o,y,s);d=Y;e=l;M=e>>31;l=Fj(e,M,e,M);c=l+b|0;b=Y+d|0;b=c>>>0<l>>>0?b+1|0:b;l=Fj(v,p,n,t);d=l+c|0;c=Y+b|0;c=d>>>0<l>>>0?c+1|0:c;b=D(f,38);R=b;N=b>>31;l=f;W=f>>31;f=Fj(b,N,f,W);b=f+d|0;d=Y+c|0;d=b>>>0<f>>>0?d+1|0:d;c=b;b=i<<1;f=Fj(H,A,b,b>>31);b=c+f|0;c=Y+d|0;c=b>>>0<f>>>0?c+1|0:c;d=Fj(w,q,F,G);b=d+b|0;c=Y+c|0;X=b;c=b>>>0<d>>>0?c+1|0:c;ca=c;b=c;c=X+33554432|0;b=c>>>0<33554432?b+1|0:b;aa=c;da=b;c=b>>26;d=(b&67108863)<<6|aa>>>26;b=d+k|0;c=c+L|0;L=b;d=b>>>0<d>>>0?c+1|0:c;b=b+16777216|0;d=b>>>0<16777216?d+1|0:d;ea=b;c=d>>25;d=(d&33554431)<<7|b>>>25;b=d+C|0;c=c+r|0;c=b>>>0<d>>>0?c+1|0:c;d=b;b=c;c=d+33554432|0;b=c>>>0<33554432?b+1|0:b;k=c;f=b;b=c&-67108864;x[h+24>>2]=d-b;b=Fj(v,p,e,M);c=Y;h=m;I=h>>31;m=Fj(u,o,h,I);b=m+b|0;d=Y+c|0;d=b>>>0<m>>>0?d+1|0:d;c=b;b=D(i,19);m=b;C=b>>31;i=Fj(b,C,i,z);b=c+i|0;c=Y+d|0;c=b>>>0<i>>>0?c+1|0:c;i=Fj(F,G,R,N);d=i+b|0;b=Y+c|0;b=d>>>0<i>>>0?b+1|0:b;c=n<<1;ba=c;Z=c>>31;i=Fj(H,A,c,Z);d=i+d|0;c=Y+b|0;c=d>>>0<i>>>0?c+1|0:c;b=d;d=Fj(w,q,y,s);b=b+d|0;c=Y+c|0;r=b;i=b>>>0<d>>>0?c+1|0:c;b=Fj(F,G,m,C);c=Y;h=Fj(v,p,h,I);b=h+b|0;d=Y+c|0;d=b>>>0<h>>>0?d+1|0:d;h=Fj(n,t,R,N);b=h+b|0;c=Y+d|0;c=b>>>0<h>>>0?c+1|0:c;h=Fj(H,A,y,s);d=h+b|0;b=Y+c|0;b=d>>>0<h>>>0?b+1|0:b;h=Fj(w,q,e,M);d=h+d|0;c=Y+b|0;I=d;h=d>>>0<h>>>0?c+1|0:c;b=D(g,38);b=Fj(b,b>>31,g,Q);c=Y;g=b;b=K;d=b>>31;d=Fj(b,d,b,d);b=g+d|0;c=Y+c|0;c=b>>>0<d>>>0?c+1|0:c;g=Fj(m,C,ba,Z);b=g+b|0;d=Y+c|0;d=b>>>0<g>>>0?d+1|0:d;g=Fj(y,s,R,N);b=g+b|0;c=Y+d|0;c=b>>>0<g>>>0?c+1|0:c;g=Fj(H,A,J,E);d=g+b|0;b=Y+c|0;b=d>>>0<g>>>0?b+1|0:b;g=Fj(u,o,w,q);d=g+d|0;c=Y+b|0;m=d;c=d>>>0<g>>>0?c+1|0:c;C=c;b=d+33554432|0;c=b>>>0<33554432?c+1|0:c;K=b;T=c;b=c>>26;g=(c&67108863)<<6|K>>>26;c=g+I|0;d=b+h|0;h=c;c=c>>>0<g>>>0?d+1|0:d;b=h+16777216|0;c=b>>>0<16777216?c+1|0:c;I=b;g=(c&33554431)<<7|b>>>25;d=g+r|0;c=(c>>25)+i|0;c=d>>>0<g>>>0?c+1|0:c;b=d;d=b+33554432|0;c=d>>>0<33554432?c+1|0:c;i=d;g=c;c=d&-67108864;x[a+8>>2]=b-c;b=Fj(J,E,$,Q);c=Y;d=Fj(n,t,y,s);b=d+b|0;c=Y+c|0;c=b>>>0<d>>>0?c+1|0:c;d=Fj(u,o,O,z);b=d+b|0;c=Y+c|0;c=b>>>0<d>>>0?c+1|0:c;d=Fj(v,p,l,W);b=d+b|0;c=Y+c|0;c=b>>>0<d>>>0?c+1|0:c;r=Fj(w,q,U,P);d=r+b|0;b=Y+c|0;b=d>>>0<r>>>0?b+1|0:b;c=f>>26;k=(f&67108863)<<6|k>>>26;f=k+d|0;d=b+c|0;d=f>>>0<k>>>0?d+1|0:d;b=f;c=d;d=b+16777216|0;c=d>>>0<16777216?c+1|0:c;k=d;f=c;c=d&-33554432;x[a+28>>2]=b-c;b=Fj(v,p,j,S);d=Y;e=Fj(u,o,e,M);c=e+b|0;b=Y+d|0;b=c>>>0<e>>>0?b+1|0:b;e=Fj(O,z,R,N);c=e+c|0;d=Y+b|0;d=c>>>0<e>>>0?d+1|0:d;e=Fj(H,A,F,G);b=e+c|0;c=Y+d|0;c=b>>>0<e>>>0?c+1|0:c;d=Fj(w,q,n,t);b=d+b|0;c=Y+c|0;c=b>>>0<d>>>0?c+1|0:c;d=g>>26;g=(g&67108863)<<6|i>>>26;b=g+b|0;c=c+d|0;c=b>>>0<g>>>0?c+1|0:c;d=b;b=c;c=d+16777216|0;b=c>>>0<16777216?b+1|0:b;i=c;g=b;b=c&-33554432;x[a+12>>2]=d-b;e=a;b=Fj(O,z,J,E);c=Y;d=Fj(n,t,n,t);b=d+b|0;c=Y+c|0;c=b>>>0<d>>>0?c+1|0:c;d=Fj(y,s,F,G);b=d+b|0;c=Y+c|0;c=b>>>0<d>>>0?c+1|0:c;j=Fj(u,o,_,V);d=j+b|0;b=Y+c|0;b=d>>>0<j>>>0?b+1|0:b;j=Fj(v,p,U,P);c=j+d|0;d=Y+b|0;d=c>>>0<j>>>0?d+1|0:d;j=B;r=j>>31;B=Fj(w,q,j,r);b=B+c|0;c=Y+d|0;c=b>>>0<B>>>0?c+1|0:c;a=b;b=f>>25;f=(f&33554431)<<7|k>>>25;d=a+f|0;c=b+c|0;c=d>>>0<f>>>0?c+1|0:c;b=d;d=b+33554432|0;c=d>>>0<33554432?c+1|0:c;B=d;f=c;c=d&-67108864;x[e+32>>2]=b-c;L=L-(ea&-33554432)|0;c=g>>25;g=(g&33554431)<<7|i>>>25;b=aa&-67108864;d=g+(X-b|0)|0;b=c+(ca-((b>>>0>X>>>0)+da|0)|0)|0;b=d>>>0<g>>>0?b+1|0:b;c=b;b=d+33554432|0;c=b>>>0<33554432?c+1|0:c;g=b;b=((c&67108863)<<6|b>>>26)+L|0;x[e+20>>2]=b;b=g&-67108864;x[e+16>>2]=d-b;g=e;b=Fj(y,s,O,z);d=Y;e=Fj($,Q,ba,Z);c=e+b|0;b=Y+d|0;b=c>>>0<e>>>0?b+1|0:b;e=Fj(J,E,l,W);d=e+c|0;c=Y+b|0;c=d>>>0<e>>>0?c+1|0:c;e=Fj(u,o,U,P);b=e+d|0;d=Y+c|0;d=b>>>0<e>>>0?d+1|0:d;e=Fj(v,p,j,r);b=e+b|0;c=Y+d|0;d=b;b=b>>>0<e>>>0?c+1|0:c;c=f>>26;f=(f&67108863)<<6|B>>>26;d=f+d|0;c=b+c|0;c=d>>>0<f>>>0?c+1|0:c;f=d;b=c;c=d+16777216|0;b=c>>>0<16777216?b+1|0:b;d=c&-33554432;x[g+36>>2]=f-d;e=Fj((b&33554431)<<7|c>>>25,b>>25,19,0);d=K&-67108864;b=e+(m-d|0)|0;c=Y+(C-((d>>>0>m>>>0)+T|0)|0)|0;d=b;b=b>>>0<e>>>0?c+1|0:c;c=d+33554432|0;b=c>>>0<33554432?b+1|0:b;b=(h-(I&-33554432)|0)+((b&67108863)<<6|c>>>26)|0;x[g+4>>2]=b;a=c&-67108864;x[g>>2]=d-a}function Eg(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;f=e;g=y[f+4|0]|y[f+5|0]<<8|(y[f+6|0]<<16|y[f+7|0]<<24);h=y[f|0]|y[f+1|0]<<8|(y[f+2|0]<<16|y[f+3|0]<<24);e=h^1886610805;j=g^1936682341;l=h^1852142177;n=g^1819895653;g=y[f+8|0]|y[f+9|0]<<8|(y[f+10|0]<<16|y[f+11|0]<<24);i=g^1852075907;f=y[f+12|0]|y[f+13|0]<<8|(y[f+14|0]<<16|y[f+15|0]<<24);k=f^1685025377;m=g^2037671283;o=f^1952801890;f=c;p=c&7;g=(b+c|0)-p|0;if((g|0)!=(b|0)){while(1){t=y[b|0]|y[b+1|0]<<8|(y[b+2|0]<<16|y[b+3|0]<<24);u=y[b+4|0]|y[b+5|0]<<8|(y[b+6|0]<<16|y[b+7|0]<<24);d=na(i,k,13);r=Y;c=j+k|0;h=e+i|0;c=h>>>0<e>>>0?c+1|0:c;j=h;h=c;k=na(j,c,32);q=Y;e=o^u;o=e;c=m^t;e=na(c,e,16);m=Y;s=e;e=c;i=c+l|0;c=n+o|0;c=e>>>0>i>>>0?c+1|0:c;e=s^i;l=c^m;n=l;l=na(e,l,21);m=Y;h=h^r;j=d^j;d=na(j,h,17);r=Y;c=c+h|0;h=i+j|0;c=h>>>0<i>>>0?c+1|0:c;i=h;h=na(h,c,32);o=Y;j=d^i;c=c^r;d=na(j,c,13);r=Y;i=c;s=j;c=n+q|0;j=e+k|0;c=j>>>0<e>>>0?c+1|0:c;n=j;k=j;j=s+j|0;e=c;c=c+i|0;c=j>>>0<k>>>0?c+1|0:c;k=j;i=c;c=na(j,c,32);q=Y;e=e^m;j=e;l=l^n;e=na(l,e,16);n=Y;m=c;s=e;c=j+o|0;e=h+l|0;c=e>>>0<h>>>0?c+1|0:c;l=s^e;j=m+l|0;h=c;n=c^n;c=n+q|0;c=j>>>0<l>>>0?c+1|0:c;q=j;m=na(l,n,21)^j;j=c;o=c^Y;c=i^r;l=c;i=d^k;c=na(i,c,17);k=Y;d=c;c=h+l|0;i=e+i|0;c=i>>>0<e>>>0?c+1|0:c;h=i;i=d^h;k=c^k;e=q^t;j=j^u;l=na(h,c,32);n=Y;b=b+8|0;if((g|0)!=(b|0)){continue}break}b=g}h=0;d=f<<24;a:{switch(p-1|0){case 6:d=d|y[b+6|0]<<16;case 5:d=d|y[b+5|0]<<8;case 4:d=d|y[b+4|0];case 3:f=y[b+3|0];c=f>>>8|0;h=h|f<<24;d=c|d;case 2:f=y[b+2|0];c=f>>>16|0;h=h|f<<16;d=c|d;case 1:f=y[b+1|0];c=f>>>24|0;h=h|f<<8;d=c|d;case 0:h=y[b|0]|h;break;default:break a}}p=na(i,k,13);t=Y;c=j+k|0;b=e+i|0;c=b>>>0<e>>>0?c+1|0:c;g=b;e=c;i=na(b,c,32);j=Y;c=d^o;k=c;b=h^m;c=na(b,c,16);m=Y;o=c;c=k+n|0;f=b+l|0;c=f>>>0<b>>>0?c+1|0:c;b=o^f;k=c^m;l=k;k=na(b,k,21);n=Y;e=e^t;g=g^p;o=na(g,e,17);p=Y;c=c+e|0;e=f+g|0;c=e>>>0<f>>>0?c+1|0:c;f=e;e=na(f,c,32);m=Y;g=f^o;c=c^p;o=na(g,c,13);p=Y;f=c;q=g;c=j+l|0;g=b+i|0;c=g>>>0<b>>>0?c+1|0:c;j=g;i=g;g=q+g|0;b=c;c=c+f|0;c=g>>>0<i>>>0?c+1|0:c;i=g;f=c;g=na(g,c,32);l=Y;b=b^n;c=b;j=j^k;b=na(j,c,16);k=Y;n=b;c=c+m|0;b=e+j|0;c=b>>>0<e>>>0?c+1|0:c;e=n^b;j=c^k;k=j;j=na(e,j,21);n=Y;f=f^p;i=i^o;o=na(i,f,17);p=Y;c=c+f|0;f=b+i|0;c=f>>>0<b>>>0?c+1|0:c;b=f;i=na(b,c,32);m=Y;f=b^o;b=c^p;o=na(f,b,13);p=Y;q=f;c=k+l|0;e=e+g|0;c=e>>>0<g>>>0?c+1|0:c;g=e;f=e^h;e=q+f|0;h=b;b=c;c=h+(c^d)|0;c=e>>>0<f>>>0?c+1|0:c;f=e;d=c;h=na(f,c,32);k=Y;c=b^n;l=c;b=g^j;c=na(b,c,16);g=Y;j=c;c=m+l|0;e=b+(i^238)|0;c=e>>>0<b>>>0?c+1|0:c;b=j^e;g=c^g;i=g;j=na(b,g,21);l=Y;d=d^p;f=f^o;n=na(f,d,17);m=Y;c=c+d|0;d=e+f|0;c=d>>>0<e>>>0?c+1|0:c;e=d;d=na(d,c,32);o=Y;f=e^n;c=c^m;n=na(f,c,13);m=Y;e=c;q=f;c=i+k|0;f=b+h|0;c=f>>>0<b>>>0?c+1|0:c;h=f;g=f;f=q+f|0;b=c;c=c+e|0;c=f>>>0<g>>>0?c+1|0:c;g=f;e=c;f=na(f,c,32);i=Y;b=b^l;c=b;h=h^j;b=na(h,c,16);j=Y;l=b;c=c+o|0;b=d+h|0;c=b>>>0<d>>>0?c+1|0:c;d=l^b;h=c^j;j=h;h=na(d,h,21);k=Y;e=e^m;g=g^n;n=na(g,e,17);m=Y;c=c+e|0;e=b+g|0;c=e>>>0<b>>>0?c+1|0:c;b=e;g=na(b,c,32);l=Y;e=b^n;b=c^m;n=na(e,b,13);m=Y;o=e;c=i+j|0;d=d+f|0;c=d>>>0<f>>>0?c+1|0:c;i=d;e=d;d=o+d|0;f=b;b=c;c=f+c|0;f=d;c=f>>>0<e>>>0?c+1|0:c;d=c;e=na(f,c,32);j=Y;c=b^k;k=c;b=h^i;c=na(b,c,16);h=Y;i=c;c=k+l|0;g=b+g|0;c=g>>>0<b>>>0?c+1|0:c;b=g;g=i^b;h=c^h;i=h;h=na(g,h,21);k=Y;d=d^m;f=f^n;n=na(f,d,17);m=Y;c=c+d|0;d=b+f|0;c=d>>>0<b>>>0?c+1|0:c;b=d;f=na(b,c,32);l=Y;d=b^n;b=c^m;n=na(d,b,13);m=Y;o=d;c=i+j|0;d=e+g|0;c=d>>>0<e>>>0?c+1|0:c;i=d;e=d;d=o+d|0;g=b;b=c;c=g+c|0;g=d;c=d>>>0<e>>>0?c+1|0:c;d=c;e=na(g,c,32);j=Y;c=b^k;k=c;b=h^i;c=na(b,c,16);i=Y;h=c;c=k+l|0;f=b+f|0;c=f>>>0<b>>>0?c+1|0:c;b=f;h=h^b;f=c^i;k=f;l=na(h,f,21);o=Y;d=d^m;i=d;g=g^n;d=na(g,d,17);n=Y;f=d;c=c+i|0;d=b+g|0;c=d>>>0<b>>>0?c+1|0:c;m=d;g=f^d;b=c;c=c^n;i=c;d=c;c=j+k|0;f=e+h|0;c=f>>>0<e>>>0?c+1|0:c;b=na(m,b,32);e=f;f=f^l;h=c^o;j=Y;Ba(a,b^(e^g)^f,h^(j^(c^d)));d=g^221;k=na(d,i,13);l=Y;c=c+i|0;e=d+e|0;c=e>>>0<d>>>0?c+1|0:c;g=e;d=c;e=na(e,c,32);i=Y;c=na(f,h,16);n=Y;m=c;c=h+j|0;f=b+f|0;c=f>>>0<b>>>0?c+1|0:c;b=f;f=m^b;h=c^n;j=h;h=na(f,h,21);n=Y;d=d^l;g=g^k;k=na(g,d,17);m=Y;c=c+d|0;d=b+g|0;c=d>>>0<b>>>0?c+1|0:c;b=d;g=na(b,c,32);l=Y;d=b^k;b=c^m;k=na(d,b,13);m=Y;o=d;c=i+j|0;d=e+f|0;c=d>>>0<e>>>0?c+1|0:c;i=d;e=d;d=o+d|0;f=b;b=c;c=f+c|0;f=d;c=f>>>0<e>>>0?c+1|0:c;d=c;e=na(f,c,32);j=Y;c=b^n;n=c;b=h^i;c=na(b,c,16);h=Y;i=c;c=l+n|0;g=b+g|0;c=g>>>0<b>>>0?c+1|0:c;b=g;g=i^b;h=c^h;i=h;h=na(g,h,21);l=Y;d=d^m;f=f^k;k=na(f,d,17);m=Y;c=c+d|0;d=b+f|0;c=d>>>0<b>>>0?c+1|0:c;b=d;f=na(b,c,32);n=Y;d=b^k;b=c^m;k=na(d,b,13);m=Y;o=d;c=i+j|0;d=e+g|0;c=d>>>0<e>>>0?c+1|0:c;i=d;e=d;d=o+d|0;g=b;b=c;c=g+c|0;g=d;c=d>>>0<e>>>0?c+1|0:c;d=c;e=na(g,c,32);j=Y;c=b^l;l=c;b=h^i;c=na(b,c,16);i=Y;h=c;c=l+n|0;f=b+f|0;c=f>>>0<b>>>0?c+1|0:c;b=f;h=h^b;f=c^i;i=f;l=na(h,f,21);f=Y;d=d^m;g=g^k;k=na(g,d,17);m=Y;c=c+d|0;d=b+g|0;c=d>>>0<b>>>0?c+1|0:c;b=d;g=na(b,c,32);n=Y;c=c^m;m=c;k=b^k;o=na(k,c,13);b=Y;p=a+8|0;c=i+j|0;a=e+h|0;c=a>>>0<e>>>0?c+1|0:c;d=a;a=d^l;e=c;c=c^f;h=c;c=na(a,c,16);i=Y;j=c;c=h+n|0;f=a+g|0;c=f>>>0<a>>>0?c+1|0:c;a=f;f=c;c=na(j^a,c^i,21);h=Y;i=c;c=e+m|0;g=d+k|0;c=g>>>0<d>>>0?c+1|0:c;e=g^o;d=a+e|0;b=b^c;c=f+b|0;c=a>>>0>d>>>0?c+1|0:c;a=d;b=i^d^na(e,b,17);d=Y^(c^h);Ba(p,na(a,c,32)^b,Y^d);return 0}function Yd(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;d=a;a=y[e|0]|y[e+1|0]<<8|(y[e+2|0]<<16|y[e+3|0]<<24);g=a^1886610805;f=y[e+4|0]|y[e+5|0]<<8|(y[e+6|0]<<16|y[e+7|0]<<24);i=f^1936682341;h=a^1852142177;l=f^1819895653;a=y[e+8|0]|y[e+9|0]<<8|(y[e+10|0]<<16|y[e+11|0]<<24);f=a^1852075885;j=y[e+12|0]|y[e+13|0]<<8|(y[e+14|0]<<16|y[e+15|0]<<24);e=j^1685025377;k=a^2037671283;j=j^1952801890;p=c&7;a=(b+c|0)-p|0;if((a|0)!=(b|0)){while(1){m=y[b|0]|y[b+1|0]<<8|(y[b+2|0]<<16|y[b+3|0]<<24);o=y[b+4|0]|y[b+5|0]<<8|(y[b+6|0]<<16|y[b+7|0]<<24);n=na(f,e,13);q=Y;e=e+i|0;f=f+g|0;i=f>>>0<g>>>0?e+1|0:e;r=na(f,i,32);s=Y;e=j^o;j=e;k=k^m;g=na(k,e,16);e=h+k|0;g=g^e;h=l+j|0;h=e>>>0<k>>>0?h+1|0:h;l=h^Y;k=l;l=na(g,k,21);j=Y;i=i^q;f=f^n;n=na(f,i,17);t=Y;i=h+i|0;f=e+f|0;e=e>>>0>f>>>0?i+1|0:i;i=na(f,e,32);h=Y;f=f^n;n=e^t;q=na(f,n,13);t=Y;e=k+s|0;s=e+1|0;k=e;e=g+r|0;g=e>>>0<g>>>0?s:k;f=e+f|0;r=f;k=g+n|0;n=e>>>0>f>>>0?k+1|0:k;k=na(f,n,32);s=Y;g=g^j;f=g;e=e^l;g=na(e,f,16);f=f+h|0;e=e+i|0;f=e>>>0<i>>>0?f+1|0:f;h=e^g;g=k+h|0;k=f^Y;i=s+k|0;k=na(h,k,21)^g;i=g>>>0<h>>>0?i+1|0:i;j=i^Y;h=n^t;n=q^r;q=na(n,h,17);f=f+h|0;h=e+n|0;l=h>>>0<e>>>0?f+1|0:f;f=h^q;e=l^Y;g=g^m;i=i^o;h=na(h,l,32);l=Y;b=b+8|0;if((a|0)!=(b|0)){continue}break}b=a}a=c<<24;c=0;a:{switch(p-1|0){case 6:a=a|y[b+6|0]<<16;case 5:a=a|y[b+5|0]<<8;case 4:a=a|y[b+4|0];case 3:c=y[b+3|0];m=c>>>8|0;c=c<<24;a=a|m;case 2:m=y[b+2|0];o=m>>>16|0;c=c|m<<16;a=a|o;case 1:m=y[b+1|0];o=m>>>24|0;c=c|m<<8;a=a|o;case 0:c=y[b|0]|c;break;default:break a}}m=na(f,e,13);o=Y;b=e+i|0;e=f+g|0;g=e>>>0<g>>>0?b+1|0:b;i=na(e,g,32);p=Y;b=a^j;f=c^k;k=na(f,b,16);b=l+b|0;j=b+1|0;l=b;b=f+h|0;h=f>>>0>b>>>0?j:l;l=h^Y;j=l;f=b^k;l=na(f,j,21);k=Y;g=g^o;e=e^m;m=na(e,g,17);n=Y;g=h+g|0;e=b+e|0;b=b>>>0>e>>>0?g+1|0:g;g=na(e,b,32);h=Y;m=e^m;o=b^n;n=na(m,o,13);q=Y;b=j+p|0;j=b+1|0;e=b;b=f+i|0;e=b>>>0<f>>>0?j:e;f=b+m|0;i=f;j=e+o|0;j=b>>>0>f>>>0?j+1|0:j;f=na(f,j,32);m=Y;e=e^k;k=e;b=b^l;e=na(b,e,16);h=h+k|0;b=b+g|0;g=b>>>0<g>>>0?h+1|0:h;h=g^Y;l=h;k=b^e;h=na(k,h,21);o=Y;e=j^q;i=i^n;p=na(i,e,17);n=Y;e=g+e|0;g=e+1|0;j=e;e=b+i|0;b=b>>>0>e>>>0?g:j;g=na(e,b,32);i=Y;j=e^p;p=b^n;n=na(j,p,13);q=Y;b=l+m|0;l=b+1|0;e=b;b=f+k|0;e=b>>>0<f>>>0?l:e;c=b^c;f=j+c|0;l=f;a=p+(a^e)|0;f=c>>>0>f>>>0?a+1|0:a;c=na(l,f,32);k=Y;a=e^o;e=a;b=b^h;h=na(b,e,16);a=e+i|0;j=a+1|0;e=a;a=b+(g^255)|0;b=b>>>0>a>>>0?j:e;e=b^Y;g=e;i=a^h;e=na(i,e,21);h=Y;f=f^q;j=f;l=l^n;f=na(l,f,17);m=Y;b=b+j|0;r=b+1|0;j=b;b=a+l|0;a=a>>>0>b>>>0?r:j;l=na(b,a,32);j=Y;b=b^f;a=a^m;f=na(b,a,13);m=Y;r=a;a=g+k|0;k=a+1|0;g=a;a=c+i|0;g=a>>>0<c>>>0?k:g;c=r+g|0;b=a+b|0;c=b>>>0<a>>>0?c+1|0:c;i=c;c=na(b,c,32);k=Y;g=g^h;h=g;e=a^e;g=na(e,g,16);a=h+j|0;h=a+1|0;j=a;a=e+l|0;e=e>>>0>a>>>0?h:j;h=e^Y;l=h;g=a^g;h=na(g,h,21);j=Y;i=i^m;m=i;b=b^f;f=na(b,i,17);i=Y;e=e+m|0;b=a+b|0;a=a>>>0>b>>>0?e+1|0:e;m=na(b,a,32);o=Y;b=b^f;a=a^i;f=na(b,a,13);i=Y;r=a;a=k+l|0;l=a+1|0;e=a;a=c+g|0;e=a>>>0<c>>>0?l:e;c=r+e|0;b=a+b|0;c=b>>>0<a>>>0?c+1|0:c;g=c;c=na(b,g,32);l=Y;k=e^j;e=a^h;h=na(e,k,16);a=k+o|0;k=a+1|0;j=a;a=e+m|0;e=e>>>0>a>>>0?k:j;k=e^Y;j=k;h=a^h;k=na(h,k,21);m=Y;g=g^i;i=g;b=b^f;g=na(b,g,17);f=Y;e=e+i|0;b=a+b|0;a=a>>>0>b>>>0?e+1|0:e;e=na(b,a,32);i=Y;a=a^f;f=a;g=b^g;o=na(g,a,13);p=Y;a=l+j|0;l=a+1|0;b=a;a=c+h|0;h=a>>>0<c>>>0?l:b;b=m^h;c=a^k;k=na(c,b,16);b=i+b|0;j=b+1|0;l=b;b=c+e|0;c=c>>>0>b>>>0?j:l;e=na(b^k,c^Y,21);i=Y;f=f+h|0;g=a+g|0;f=(a>>>0>g>>>0?f+1|0:f)^p;a=c+f|0;j=a+1|0;l=a;c=g^o;a=b+c|0;b=a>>>0<b>>>0?j:l;c=na(c,f,17)^(a^e);e=Y^(b^i);Ba(d,na(a,b,32)^c,Y^e);return 0}function Bj(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,w=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;e=V-336|0;V=e;f=-1;g=V-16|0;v[g+11|0]=0;v[g+12|0]=0;v[g+13|0]=0;v[g+14|0]=0;x[g+8>>2]=0;while(1){h=y[c+j|0];d=0;while(1){k=(g+8|0)+d|0;v[k|0]=y[k|0]|h^y[((d<<5)+34752|0)+j|0];d=d+1|0;if((d|0)!=7){continue}break}j=j+1|0;if((j|0)!=31){continue}break}h=y[c+31|0]&127;j=0;d=0;while(1){k=(g+8|0)+d|0;v[k|0]=y[k|0]|h^y[(d<<5)+34783|0];d=d+1|0;if((d|0)!=7){continue}break}d=0;while(1){d=y[(g+8|0)+j|0]-1|d;j=j+1|0;if((j|0)!=7){continue}break}if(!(d>>>8&1)){f=0;while(1){v[a+f|0]=y[b+f|0];f=f+1|0;if((f|0)!=32){continue}break}v[a|0]=y[a|0]&248;v[a+31|0]=y[a+31|0]&63|64;db(e+288|0,c);Ea(e+240|0);vb(e+192|0);La(e+144|0,e+288|0);Ea(e+96|0);c=254;b=0;while(1){d=b;k=c;b=y[(c>>>3|0)+a|0]>>>(c&7)&1;d=d^b;xc(e+240|0,e+144|0,d);xc(e+192|0,e+96|0,d);c=c-1|0;xa(e+48|0,e+144|0,e+96|0);xa(e,e+240|0,e+192|0);va(e+240|0,e+240|0,e+192|0);va(e+192|0,e+144|0,e+96|0);ma(e+96|0,e+48|0,e+240|0);ma(e+192|0,e+192|0,e);qa(e+48|0,e);qa(e,e+240|0);va(e+144|0,e+96|0,e+192|0);xa(e+192|0,e+96|0,e+192|0);ma(e+240|0,e,e+48|0);xa(e,e,e+48|0);qa(e+192|0,e+192|0);d=x[e+4>>2];p=d;m=d>>31;d=x[e+8>>2];q=d;w=d>>31;d=x[e+12>>2];r=d;n=d>>31;d=x[e+16>>2];s=d;z=d>>31;d=x[e+20>>2];l=d;o=d>>31;d=x[e+24>>2];t=d;A=d>>31;d=x[e>>2];B=d;C=d>>31;d=x[e+36>>2];g=Fj(d,d>>31,121666,0);f=g;d=Y;g=f+16777216|0;d=g>>>0<16777216?d+1|0:d;D=g;j=d;u=f-(g&-33554432)|0;d=x[e+32>>2];d=Fj(d,d>>31,121666,0);g=Y;f=x[e+28>>2];h=Fj(f,f>>31,121666,0);f=Y;E=d;d=h+16777216|0;f=d>>>0<16777216?f+1|0:f;F=d;i=d;d=f>>25;i=(f&33554431)<<7|i>>>25;f=E+i|0;g=d+g|0;g=f>>>0<i>>>0?g+1|0:g;d=g;g=f+33554432|0;d=g>>>0<33554432?d+1|0:d;d=((d&67108863)<<6|g>>>26)+u|0;x[e+132>>2]=d;d=g&-67108864;x[e+128>>2]=f-d;u=h-(F&-33554432)|0;f=Fj(t,A,121666,0);t=Y;g=Fj(l,o,121666,0);d=Y;i=f;f=g+16777216|0;d=f>>>0<16777216?d+1|0:d;l=f;o=(d&33554431)<<7|f>>>25;h=i+o|0;d=(d>>25)+t|0;d=h>>>0<o>>>0?d+1|0:d;f=d;d=h+33554432|0;f=d>>>0<33554432?f+1|0:f;i=d;d=((f&67108863)<<6|d>>>26)+u|0;x[e+124>>2]=d;d=i&-67108864;x[e+120>>2]=h-d;l=g-(l&-33554432)|0;g=Fj(s,z,121666,0);s=Y;h=Fj(r,n,121666,0);f=Y;d=g;g=h+16777216|0;f=g>>>0<16777216?f+1|0:f;r=g;n=(f&33554431)<<7|g>>>25;i=d+n|0;f=(f>>25)+s|0;g=i;d=g>>>0<n>>>0?f+1|0:f;f=g+33554432|0;d=f>>>0<33554432?d+1|0:d;d=((d&67108863)<<6|f>>>26)+l|0;x[e+116>>2]=d;d=f&-67108864;x[e+112>>2]=g-d;i=h-(r&-33554432)|0;d=Fj(q,w,121666,0);q=Y;h=Fj(p,m,121666,0);g=Y;f=d;d=h+16777216|0;g=d>>>0<16777216?g+1|0:g;p=d;m=d;d=g>>25;m=(g&33554431)<<7|m>>>25;g=f+m|0;d=d+q|0;d=g>>>0<m>>>0?d+1|0:d;l=i;f=d;d=g+33554432|0;f=d>>>0<33554432?f+1|0:f;i=d;d=l+((f&67108863)<<6|d>>>26)|0;x[e+108>>2]=d;d=i&-67108864;x[e+104>>2]=g-d;h=h-(p&-33554432)|0;d=Fj((j&33554431)<<7|D>>>25,j>>25,19,0);j=Y;i=Fj(B,C,121666,0);g=i+d|0;d=Y+j|0;d=g>>>0<i>>>0?d+1|0:d;f=d;d=g+33554432|0;f=d>>>0<33554432?f+1|0:f;j=d;d=((f&67108863)<<6|d>>>26)+h|0;x[e+100>>2]=d;d=j&-67108864;x[e+96>>2]=g-d;qa(e+144|0,e+144|0);va(e+48|0,e+48|0,e+96|0);ma(e+96|0,e+288|0,e+192|0);ma(e+192|0,e,e+48|0);if(k){continue}break}xc(e+240|0,e+144|0,b);xc(e+192|0,e+96|0,b);wb(e+192|0,e+192|0);ma(e+240|0,e+240|0,e+192|0);cb(a,e+240|0);f=0}V=e+336|0;return f|0}function Ka(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0;a:{if(!a){break a}d=a-8|0;b=x[a-4>>2];a=b&-8;f=d+a|0;b:{if(b&1){break b}if(!(b&3)){break a}b=x[d>>2];d=d-b|0;if(d>>>0<A[9306]){break a}a=a+b|0;if(x[9307]!=(d|0)){if(b>>>0<=255){e=x[d+8>>2];b=b>>>3|0;c=x[d+12>>2];if((c|0)==(e|0)){i=37208,j=x[9302]&Gj(-2,b),x[i>>2]=j;break b}x[e+12>>2]=c;x[c+8>>2]=e;break b}h=x[d+24>>2];b=x[d+12>>2];c:{if((d|0)!=(b|0)){c=x[d+8>>2];x[c+12>>2]=b;x[b+8>>2]=c;break c}d:{e=d+20|0;c=x[e>>2];if(c){break d}e=d+16|0;c=x[e>>2];if(c){break d}b=0;break c}while(1){g=e;b=c;e=b+20|0;c=x[e>>2];if(c){continue}e=b+16|0;c=x[b+16>>2];if(c){continue}break}x[g>>2]=0}if(!h){break b}e=x[d+28>>2];c=(e<<2)+37512|0;e:{if(x[c>>2]==(d|0)){x[c>>2]=b;if(b){break e}i=37212,j=x[9303]&Gj(-2,e),x[i>>2]=j;break b}x[h+(x[h+16>>2]==(d|0)?16:20)>>2]=b;if(!b){break b}}x[b+24>>2]=h;c=x[d+16>>2];if(c){x[b+16>>2]=c;x[c+24>>2]=b}c=x[d+20>>2];if(!c){break b}x[b+20>>2]=c;x[c+24>>2]=b;break b}b=x[f+4>>2];if((b&3)!=3){break b}x[9304]=a;x[f+4>>2]=b&-2;x[d+4>>2]=a|1;x[a+d>>2]=a;return}if(d>>>0>=f>>>0){break a}b=x[f+4>>2];if(!(b&1)){break a}f:{if(!(b&2)){if(x[9308]==(f|0)){x[9308]=d;a=x[9305]+a|0;x[9305]=a;x[d+4>>2]=a|1;if(x[9307]!=(d|0)){break a}x[9304]=0;x[9307]=0;return}if(x[9307]==(f|0)){x[9307]=d;a=x[9304]+a|0;x[9304]=a;x[d+4>>2]=a|1;x[a+d>>2]=a;return}a=(b&-8)+a|0;g:{if(b>>>0<=255){e=x[f+8>>2];b=b>>>3|0;c=x[f+12>>2];if((c|0)==(e|0)){i=37208,j=x[9302]&Gj(-2,b),x[i>>2]=j;break g}x[e+12>>2]=c;x[c+8>>2]=e;break g}h=x[f+24>>2];b=x[f+12>>2];h:{if((f|0)!=(b|0)){c=x[f+8>>2];x[c+12>>2]=b;x[b+8>>2]=c;break h}i:{e=f+20|0;c=x[e>>2];if(c){break i}e=f+16|0;c=x[e>>2];if(c){break i}b=0;break h}while(1){g=e;b=c;e=b+20|0;c=x[e>>2];if(c){continue}e=b+16|0;c=x[b+16>>2];if(c){continue}break}x[g>>2]=0}if(!h){break g}e=x[f+28>>2];c=(e<<2)+37512|0;j:{if(x[c>>2]==(f|0)){x[c>>2]=b;if(b){break j}i=37212,j=x[9303]&Gj(-2,e),x[i>>2]=j;break g}x[h+(x[h+16>>2]==(f|0)?16:20)>>2]=b;if(!b){break g}}x[b+24>>2]=h;c=x[f+16>>2];if(c){x[b+16>>2]=c;x[c+24>>2]=b}c=x[f+20>>2];if(!c){break g}x[b+20>>2]=c;x[c+24>>2]=b}x[d+4>>2]=a|1;x[a+d>>2]=a;if(x[9307]!=(d|0)){break f}x[9304]=a;return}x[f+4>>2]=b&-2;x[d+4>>2]=a|1;x[a+d>>2]=a}if(a>>>0<=255){a=a>>>3|0;b=(a<<3)+37248|0;c=x[9302];a=1<<a;k:{if(!(c&a)){x[9302]=a|c;a=b;break k}a=x[b+8>>2]}x[b+8>>2]=d;x[a+12>>2]=d;x[d+12>>2]=b;x[d+8>>2]=a;return}e=31;x[d+16>>2]=0;x[d+20>>2]=0;if(a>>>0<=16777215){b=a>>>8|0;g=b+1048320>>>16&8;b=b<<g;e=b+520192>>>16&4;b=b<<e;c=b+245760>>>16&2;b=(b<<c>>>15|0)-(c|(e|g))|0;e=(b<<1|a>>>b+21&1)+28|0}x[d+28>>2]=e;g=(e<<2)+37512|0;l:{m:{c=x[9303];b=1<<e;n:{if(!(c&b)){x[9303]=b|c;x[g>>2]=d;x[d+24>>2]=g;break n}e=a<<((e|0)==31?0:25-(e>>>1|0)|0);b=x[g>>2];while(1){c=b;if((x[b+4>>2]&-8)==(a|0)){break m}b=e>>>29|0;e=e<<1;g=c+(b&4)|0;b=x[g+16>>2];if(b){continue}break}x[g+16>>2]=d;x[d+24>>2]=c}x[d+12>>2]=d;x[d+8>>2]=d;break l}a=x[c+8>>2];x[a+12>>2]=d;x[c+8>>2]=d;x[d+24>>2]=0;x[d+12>>2]=c;x[d+8>>2]=a}a=x[9310]-1|0;x[9310]=a?a:-1}}function Gf(a,b){var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0;f=a+b|0;c=x[a+4>>2];a:{b:{if(c&1){break b}if(!(c&3)){break a}c=x[a>>2];b=c+b|0;c:{a=a-c|0;if((a|0)!=x[9307]){if(c>>>0<=255){e=x[a+8>>2];c=c>>>3|0;d=x[a+12>>2];if((d|0)!=(e|0)){break c}i=37208,j=x[9302]&Gj(-2,c),x[i>>2]=j;break b}h=x[a+24>>2];c=x[a+12>>2];d:{if((c|0)!=(a|0)){d=x[a+8>>2];x[d+12>>2]=c;x[c+8>>2]=d;break d}e:{e=a+20|0;d=x[e>>2];if(d){break e}e=a+16|0;d=x[e>>2];if(d){break e}c=0;break d}while(1){g=e;c=d;e=c+20|0;d=x[e>>2];if(d){continue}e=c+16|0;d=x[c+16>>2];if(d){continue}break}x[g>>2]=0}if(!h){break b}e=x[a+28>>2];d=(e<<2)+37512|0;f:{if(x[d>>2]==(a|0)){x[d>>2]=c;if(c){break f}i=37212,j=x[9303]&Gj(-2,e),x[i>>2]=j;break b}x[h+(x[h+16>>2]==(a|0)?16:20)>>2]=c;if(!c){break b}}x[c+24>>2]=h;d=x[a+16>>2];if(d){x[c+16>>2]=d;x[d+24>>2]=c}d=x[a+20>>2];if(!d){break b}x[c+20>>2]=d;x[d+24>>2]=c;break b}c=x[f+4>>2];if((c&3)!=3){break b}x[9304]=b;x[f+4>>2]=c&-2;x[a+4>>2]=b|1;x[f>>2]=b;return}x[e+12>>2]=d;x[d+8>>2]=e}c=x[f+4>>2];g:{if(!(c&2)){if(x[9308]==(f|0)){x[9308]=a;b=x[9305]+b|0;x[9305]=b;x[a+4>>2]=b|1;if(x[9307]!=(a|0)){break a}x[9304]=0;x[9307]=0;return}if(x[9307]==(f|0)){x[9307]=a;b=x[9304]+b|0;x[9304]=b;x[a+4>>2]=b|1;x[a+b>>2]=b;return}b=(c&-8)+b|0;h:{if(c>>>0<=255){e=x[f+8>>2];c=c>>>3|0;d=x[f+12>>2];if((d|0)==(e|0)){i=37208,j=x[9302]&Gj(-2,c),x[i>>2]=j;break h}x[e+12>>2]=d;x[d+8>>2]=e;break h}h=x[f+24>>2];c=x[f+12>>2];i:{if((f|0)!=(c|0)){d=x[f+8>>2];x[d+12>>2]=c;x[c+8>>2]=d;break i}j:{d=f+20|0;e=x[d>>2];if(e){break j}d=f+16|0;e=x[d>>2];if(e){break j}c=0;break i}while(1){g=d;c=e;d=c+20|0;e=x[d>>2];if(e){continue}d=c+16|0;e=x[c+16>>2];if(e){continue}break}x[g>>2]=0}if(!h){break h}e=x[f+28>>2];d=(e<<2)+37512|0;k:{if(x[d>>2]==(f|0)){x[d>>2]=c;if(c){break k}i=37212,j=x[9303]&Gj(-2,e),x[i>>2]=j;break h}x[h+(x[h+16>>2]==(f|0)?16:20)>>2]=c;if(!c){break h}}x[c+24>>2]=h;d=x[f+16>>2];if(d){x[c+16>>2]=d;x[d+24>>2]=c}d=x[f+20>>2];if(!d){break h}x[c+20>>2]=d;x[d+24>>2]=c}x[a+4>>2]=b|1;x[a+b>>2]=b;if(x[9307]!=(a|0)){break g}x[9304]=b;return}x[f+4>>2]=c&-2;x[a+4>>2]=b|1;x[a+b>>2]=b}if(b>>>0<=255){b=b>>>3|0;c=(b<<3)+37248|0;d=x[9302];b=1<<b;l:{if(!(d&b)){x[9302]=b|d;b=c;break l}b=x[c+8>>2]}x[c+8>>2]=a;x[b+12>>2]=a;x[a+12>>2]=c;x[a+8>>2]=b;return}e=31;x[a+16>>2]=0;x[a+20>>2]=0;if(b>>>0<=16777215){c=b>>>8|0;g=c+1048320>>>16&8;c=c<<g;e=c+520192>>>16&4;c=c<<e;d=c+245760>>>16&2;c=(c<<d>>>15|0)-(d|(e|g))|0;e=(c<<1|b>>>c+21&1)+28|0}x[a+28>>2]=e;g=(e<<2)+37512|0;m:{d=x[9303];c=1<<e;n:{if(!(d&c)){x[9303]=c|d;x[g>>2]=a;x[a+24>>2]=g;break n}e=b<<((e|0)==31?0:25-(e>>>1|0)|0);c=x[g>>2];while(1){d=c;if((x[c+4>>2]&-8)==(b|0)){break m}c=e>>>29|0;e=e<<1;g=d+(c&4)|0;c=x[g+16>>2];if(c){continue}break}x[g+16>>2]=a;x[a+24>>2]=d}x[a+12>>2]=a;x[a+8>>2]=a;return}b=x[d+8>>2];x[b+12>>2]=a;x[d+8>>2]=a;x[a+24>>2]=0;x[a+12>>2]=d;x[a+8>>2]=b}}function rc(a,b,c,d,e){var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,w=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0;I=V+-64|0;V=I;J=x[a+60>>2];K=x[a+56>>2];w=x[a+52>>2];u=x[a+48>>2];L=x[a+44>>2];M=x[a+40>>2];N=x[a+36>>2];O=x[a+32>>2];P=x[a+28>>2];Q=x[a+24>>2];R=x[a+20>>2];S=x[a+16>>2];T=x[a+12>>2];U=x[a+8>>2];W=x[a+4>>2];X=x[a>>2];while(1){a:{if(!e&d>>>0>63|e){i=c;break a}f=0;A=ya(I,0,64);i=A;if(d|e){while(1){v[f+A|0]=y[b+f|0];f=f+1|0;if(!e&f>>>0<d>>>0|e){continue}break}}b=i;A=c}z=18;n=X;p=W;q=U;o=T;f=S;r=R;c=Q;s=P;l=O;k=N;B=M;C=J;j=K;g=w;h=u;m=L;while(1){t=f;f=f+n|0;n=la(f^h,16);l=n+l|0;h=la(t^l,12);t=n;n=f+h|0;D=la(t^n,8);E=D+l|0;F=la(h^E,7);f=k;l=r+p|0;k=la(l^g,16);g=f+k|0;h=la(g^r,12);p=h+l|0;l=la(p^k,8);G=l+g|0;r=la(h^G,7);k=j;j=c+q|0;g=la(k^j,16);h=g+B|0;c=la(h^c,12);k=c+j|0;f=la(k^g,8);j=f+h|0;H=la(c^j,7);g=o+s|0;h=la(g^C,16);m=h+m|0;c=la(m^s,12);t=c;o=c+g|0;c=la(o^h,8);g=c+m|0;q=la(t^g,7);h=n+r|0;m=la(h^c,16);c=m+j|0;j=la(c^r,12);n=h+j|0;C=la(m^n,8);B=c+C|0;r=la(j^B,7);h=p+H|0;m=la(h^D,16);c=m+g|0;g=la(c^H,12);p=g+h|0;h=la(m^p,8);m=c+h|0;c=la(g^m,7);k=k+q|0;g=la(k^l,16);j=g+E|0;s=la(j^q,12);q=k+s|0;g=la(g^q,8);l=j+g|0;s=la(s^l,7);o=o+F|0;j=la(o^f,16);k=j+G|0;f=la(k^F,12);o=f+o|0;j=la(j^o,8);k=k+j|0;f=la(f^k,7);if(z){z=z-2|0;continue}break}Y=y[b+4|0]|y[b+5|0]<<8|(y[b+6|0]<<16|y[b+7|0]<<24);Z=y[b+8|0]|y[b+9|0]<<8|(y[b+10|0]<<16|y[b+11|0]<<24);_=y[b+12|0]|y[b+13|0]<<8|(y[b+14|0]<<16|y[b+15|0]<<24);$=y[b+16|0]|y[b+17|0]<<8|(y[b+18|0]<<16|y[b+19|0]<<24);aa=y[b+20|0]|y[b+21|0]<<8|(y[b+22|0]<<16|y[b+23|0]<<24);ba=y[b+24|0]|y[b+25|0]<<8|(y[b+26|0]<<16|y[b+27|0]<<24);ca=y[b+28|0]|y[b+29|0]<<8|(y[b+30|0]<<16|y[b+31|0]<<24);da=y[b+32|0]|y[b+33|0]<<8|(y[b+34|0]<<16|y[b+35|0]<<24);t=y[b+36|0]|y[b+37|0]<<8|(y[b+38|0]<<16|y[b+39|0]<<24);z=y[b+40|0]|y[b+41|0]<<8|(y[b+42|0]<<16|y[b+43|0]<<24);F=y[b+44|0]|y[b+45|0]<<8|(y[b+46|0]<<16|y[b+47|0]<<24);H=y[b+48|0]|y[b+49|0]<<8|(y[b+50|0]<<16|y[b+51|0]<<24);D=y[b+52|0]|y[b+53|0]<<8|(y[b+54|0]<<16|y[b+55|0]<<24);E=y[b+56|0]|y[b+57|0]<<8|(y[b+58|0]<<16|y[b+59|0]<<24);G=y[b+60|0]|y[b+61|0]<<8|(y[b+62|0]<<16|y[b+63|0]<<24);ra(i,n+X^(y[b|0]|y[b+1|0]<<8|(y[b+2|0]<<16|y[b+3|0]<<24)));ra(i+4|0,p+W^Y);ra(i+8|0,q+U^Z);ra(i+12|0,o+T^_);ra(i+16|0,f+S^$);ra(i+20|0,r+R^aa);ra(i+24|0,c+Q^ba);ra(i+28|0,s+P^ca);ra(i+32|0,l+O^da);ra(i+36|0,k+N^t);ra(i+40|0,z^B+M);ra(i+44|0,F^m+L);ra(i+48|0,H^h+u);ra(i+52|0,D^g+w);ra(i+56|0,E^j+K);ra(i+60|0,G^C+J);c=u;u=c+1|0;w=(u>>>0<c>>>0)+w|0;if(!e&d>>>0<=64){if(!(!d|(!e&d>>>0>63|(e|0)!=0))){f=0;while(1){v[f+A|0]=y[f+i|0];f=f+1|0;if((d|0)!=(f|0)){continue}break}}x[a+52>>2]=w;x[a+48>>2]=u;V=I- -64|0}else{b=b- -64|0;c=i- -64|0;e=e-1|0;d=d+-64|0;e=d>>>0<4294967232?e+1|0:e;continue}break}}function Bc(a,b,c,d){var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,z=0,A=0,B=0,C=0,E=0,F=0,G=0,H=0;n=x[a+36>>2];l=x[a+32>>2];g=x[a+28>>2];j=x[a+24>>2];e=x[a+20>>2];if(!d&c>>>0>=16|d){C=!y[a+80|0]<<24;t=x[a+16>>2];E=t;i=x[a+12>>2];A=i;h=x[a+8>>2];w=h;f=x[a+4>>2];u=f;F=D(f,5);B=D(h,5);z=D(i,5);v=D(t,5);o=x[a>>2];while(1){m=((y[b+3|0]|y[b+4|0]<<8|(y[b+5|0]<<16|y[b+6|0]<<24))>>>2&67108863)+j|0;h=Fj(m,0,A,0);f=Y;j=h;p=((y[b|0]|y[b+1|0]<<8|(y[b+2|0]<<16|y[b+3|0]<<24))&67108863)+e|0;h=Fj(p,0,E,0);i=j+h|0;f=Y+f|0;f=h>>>0>i>>>0?f+1|0:f;q=((y[b+6|0]|y[b+7|0]<<8|(y[b+8|0]<<16|y[b+9|0]<<24))>>>4&67108863)+g|0;h=Fj(q,0,w,0);i=h+i|0;e=Y+f|0;e=h>>>0>i>>>0?e+1|0:e;r=((y[b+9|0]|y[b+10|0]<<8|(y[b+11|0]<<16|y[b+12|0]<<24))>>>6|0)+l|0;f=Fj(r,0,u,0);h=f+i|0;e=Y+e|0;e=f>>>0>h>>>0?e+1|0:e;s=n+C+((y[b+12|0]|y[b+13|0]<<8|(y[b+14|0]<<16|y[b+15|0]<<24))>>>8)|0;f=Fj(s,0,o,0);h=f+h|0;e=Y+e|0;G=h;t=f>>>0>h>>>0?e+1|0:e;f=Fj(m,0,w,0);h=Y;g=f;f=Fj(p,0,A,0);i=g+f|0;k=Y+h|0;k=f>>>0>i>>>0?k+1|0:k;h=Fj(q,0,u,0);i=h+i|0;f=Y+k|0;f=h>>>0>i>>>0?f+1|0:f;h=Fj(r,0,o,0);i=h+i|0;e=Y+f|0;e=h>>>0>i>>>0?e+1|0:e;f=Fj(s,0,v,0);h=f+i|0;e=Y+e|0;n=h;i=f>>>0>h>>>0?e+1|0:e;f=Fj(m,0,u,0);h=Y;g=f;f=Fj(p,0,w,0);g=g+f|0;e=Y+h|0;e=f>>>0>g>>>0?e+1|0:e;f=Fj(q,0,o,0);h=f+g|0;k=Y+e|0;k=f>>>0>h>>>0?k+1|0:k;f=h;h=Fj(r,0,v,0);e=f+h|0;f=Y+k|0;f=e>>>0<h>>>0?f+1|0:f;h=Fj(s,0,z,0);g=h+e|0;e=Y+f|0;l=g;h=h>>>0>g>>>0?e+1|0:e;f=Fj(m,0,o,0);e=Y;g=f;f=Fj(p,0,u,0);g=g+f|0;e=Y+e|0;e=f>>>0>g>>>0?e+1|0:e;f=Fj(q,0,v,0);g=f+g|0;e=Y+e|0;e=f>>>0>g>>>0?e+1|0:e;f=Fj(r,0,z,0);g=f+g|0;k=Y+e|0;k=f>>>0>g>>>0?k+1|0:k;e=Fj(s,0,B,0);g=e+g|0;f=Y+k|0;f=e>>>0>g>>>0?f+1|0:f;j=g;g=Fj(m,0,v,0);e=Y;m=l;H=j;j=g;g=Fj(p,0,o,0);j=j+g|0;e=Y+e|0;e=g>>>0>j>>>0?e+1|0:e;g=Fj(q,0,z,0);j=g+j|0;e=Y+e|0;e=g>>>0>j>>>0?e+1|0:e;g=Fj(r,0,B,0);j=g+j|0;e=Y+e|0;e=g>>>0>j>>>0?e+1|0:e;g=Fj(s,0,F,0);j=g+j|0;k=Y+e|0;l=j;e=j;k=g>>>0>e>>>0?k+1|0:k;e=(k&67108863)<<6|e>>>26;g=H+e|0;f=e>>>0>g>>>0?f+1|0:f;j=g;e=g;f=(f&67108863)<<6|e>>>26;g=m+f|0;e=h;e=f>>>0>g>>>0?e+1|0:e;f=g;f=(e&67108863)<<6|f>>>26;h=f+n|0;k=f>>>0>h>>>0?i+1|0:i;e=h;h=(k&67108863)<<6|e>>>26;i=h+G|0;f=t;f=h>>>0>i>>>0?f+1|0:f;h=i;f=D((f&67108863)<<6|h>>>26,5)+(l&67108863)|0;j=(j&67108863)+(f>>>26|0)|0;g=g&67108863;l=e&67108863;n=h&67108863;e=f&67108863;b=b+16|0;d=d-(c>>>0<16)|0;c=c-16|0;if(!d&c>>>0>15|d){continue}break}}x[a+20>>2]=e;x[a+36>>2]=n;x[a+32>>2]=l;x[a+28>>2]=g;x[a+24>>2]=j}function yd(a,b,c,d,e){var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0;E=y[c|0]|y[c+1|0]<<8|(y[c+2|0]<<16|y[c+3|0]<<24);F=y[c+4|0]|y[c+5|0]<<8|(y[c+6|0]<<16|y[c+7|0]<<24);G=y[c+8|0]|y[c+9|0]<<8|(y[c+10|0]<<16|y[c+11|0]<<24);H=y[c+12|0]|y[c+13|0]<<8|(y[c+14|0]<<16|y[c+15|0]<<24);I=y[c+16|0]|y[c+17|0]<<8|(y[c+18|0]<<16|y[c+19|0]<<24);J=y[c+24|0]|y[c+25|0]<<8|(y[c+26|0]<<16|y[c+27|0]<<24);K=y[c+28|0]|y[c+29|0]<<8|(y[c+30|0]<<16|y[c+31|0]<<24);L=y[c+20|0]|y[c+21|0]<<8|(y[c+22|0]<<16|y[c+23|0]<<24);c=L;f=J;k=K;a:{if(!d){v=1634760805;w=2036477234;x=857760878;z=1797285236;break a}v=y[d|0]|y[d+1|0]<<8|(y[d+2|0]<<16|y[d+3|0]<<24);x=y[d+4|0]|y[d+5|0]<<8|(y[d+6|0]<<16|y[d+7|0]<<24);w=y[d+8|0]|y[d+9|0]<<8|(y[d+10|0]<<16|y[d+11|0]<<24);z=y[d+12|0]|y[d+13|0]<<8|(y[d+14|0]<<16|y[d+15|0]<<24)}d=z;n=I;q=w;A=y[b+12|0]|y[b+13|0]<<8|(y[b+14|0]<<16|y[b+15|0]<<24);l=A;M=y[b+8|0]|y[b+9|0]<<8|(y[b+10|0]<<16|y[b+11|0]<<24);m=M;N=y[b+4|0]|y[b+5|0]<<8|(y[b+6|0]<<16|y[b+7|0]<<24);g=N;O=y[b|0]|y[b+1|0]<<8|(y[b+2|0]<<16|y[b+3|0]<<24);b=O;r=x;o=H;h=G;i=F;p=E;j=v;b:{if((e|0)<1){break b}B=2;l=A;while(1){s=la(c+j|0,7)^o;C=la(s+j|0,9)^m;P=la(s+C|0,13)^c;m=la(C+P|0,18);t=la(r+p|0,7)^l;D=la(t+r|0,9)^f;f=la(t+D|0,13)^p;o=la(D+f|0,18);u=la(b+q|0,7)^k;i=la(u+q|0,9)^i;b=la(i+u|0,13)^b;l=la(i+b|0,18);h=la(d+n|0,7)^h;g=la(h+d|0,9)^g;k=la(g+h|0,13)^n;c=la(g+k|0,18);j=j^m;p=la(j+h|0,7)^f;i=la(p+j|0,9)^i;h=la(i+p|0,13)^h;j=la(h+i|0,18)^j;f=r^o;b=la(f+s|0,7)^b;g=la(b+f|0,9)^g;o=la(b+g|0,13)^s;r=la(g+o|0,18)^f;f=l^q;n=la(f+t|0,7)^k;m=la(n+f|0,9)^C;l=la(m+n|0,13)^t;q=la(l+m|0,18)^f;d=c^d;c=la(d+u|0,7)^P;f=la(c+d|0,9)^D;k=la(c+f|0,13)^u;d=la(f+k|0,18)^d;if((e|0)<=(B|0)){break b}B=B+2|0;continue}}ra(a,j+v|0);ra(a+4|0,p+E|0);ra(a+8|0,i+F|0);ra(a+12|0,h+G|0);ra(a+16|0,o+H|0);ra(a+20|0,r+x|0);ra(a+24|0,b+O|0);ra(a+28|0,g+N|0);ra(a+32|0,m+M|0);ra(a+36|0,l+A|0);ra(a+40|0,q+w|0);ra(a+44|0,n+I|0);ra(a+48|0,c+L|0);ra(a+52|0,f+J|0);ra(a+56|0,k+K|0);ra(a+60|0,d+z|0)}function Tc(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;k=V-160|0;V=k;Qb(b,c,32,0);v[b|0]=y[b|0]&248;v[b+31|0]=y[b+31|0]&63|64;Yb(k,b);mb(a,k);f=c;g=y[f+8|0]|y[f+9|0]<<8|(y[f+10|0]<<16|y[f+11|0]<<24);e=y[f+12|0]|y[f+13|0]<<8|(y[f+14|0]<<16|y[f+15|0]<<24);h=y[f+16|0]|y[f+17|0]<<8|(y[f+18|0]<<16|y[f+19|0]<<24);i=y[f+20|0]|y[f+21|0]<<8|(y[f+22|0]<<16|y[f+23|0]<<24);j=y[f|0]|y[f+1|0]<<8|(y[f+2|0]<<16|y[f+3|0]<<24);c=y[f+4|0]|y[f+5|0]<<8|(y[f+6|0]<<16|y[f+7|0]<<24);d=b;l=y[f+28|0]|y[f+29|0]<<8|(y[f+30|0]<<16|y[f+31|0]<<24);b=y[f+24|0]|y[f+25|0]<<8|(y[f+26|0]<<16|y[f+27|0]<<24);v[d+24|0]=b;v[d+25|0]=b>>>8;v[d+26|0]=b>>>16;v[d+27|0]=b>>>24;v[d+28|0]=l;v[d+29|0]=l>>>8;v[d+30|0]=l>>>16;v[d+31|0]=l>>>24;v[d+16|0]=h;v[d+17|0]=h>>>8;v[d+18|0]=h>>>16;v[d+19|0]=h>>>24;v[d+20|0]=i;v[d+21|0]=i>>>8;v[d+22|0]=i>>>16;v[d+23|0]=i>>>24;v[d+8|0]=g;v[d+9|0]=g>>>8;v[d+10|0]=g>>>16;v[d+11|0]=g>>>24;v[d+12|0]=e;v[d+13|0]=e>>>8;v[d+14|0]=e>>>16;v[d+15|0]=e>>>24;v[d|0]=j;v[d+1|0]=j>>>8;v[d+2|0]=j>>>16;v[d+3|0]=j>>>24;v[d+4|0]=c;v[d+5|0]=c>>>8;v[d+6|0]=c>>>16;v[d+7|0]=c>>>24;e=a;h=y[e+8|0]|y[e+9|0]<<8|(y[e+10|0]<<16|y[e+11|0]<<24);i=y[e+12|0]|y[e+13|0]<<8|(y[e+14|0]<<16|y[e+15|0]<<24);j=y[e+16|0]|y[e+17|0]<<8|(y[e+18|0]<<16|y[e+19|0]<<24);c=y[e+20|0]|y[e+21|0]<<8|(y[e+22|0]<<16|y[e+23|0]<<24);b=y[e|0]|y[e+1|0]<<8|(y[e+2|0]<<16|y[e+3|0]<<24);a=y[e+4|0]|y[e+5|0]<<8|(y[e+6|0]<<16|y[e+7|0]<<24);g=y[e+28|0]|y[e+29|0]<<8|(y[e+30|0]<<16|y[e+31|0]<<24);e=y[e+24|0]|y[e+25|0]<<8|(y[e+26|0]<<16|y[e+27|0]<<24);v[d+56|0]=e;v[d+57|0]=e>>>8;v[d+58|0]=e>>>16;v[d+59|0]=e>>>24;v[d+60|0]=g;v[d+61|0]=g>>>8;v[d+62|0]=g>>>16;v[d+63|0]=g>>>24;v[d+48|0]=j;v[d+49|0]=j>>>8;v[d+50|0]=j>>>16;v[d+51|0]=j>>>24;v[d+52|0]=c;v[d+53|0]=c>>>8;v[d+54|0]=c>>>16;v[d+55|0]=c>>>24;v[d+40|0]=h;v[d+41|0]=h>>>8;v[d+42|0]=h>>>16;v[d+43|0]=h>>>24;v[d+44|0]=i;v[d+45|0]=i>>>8;v[d+46|0]=i>>>16;v[d+47|0]=i>>>24;v[d+32|0]=b;v[d+33|0]=b>>>8;v[d+34|0]=b>>>16;v[d+35|0]=b>>>24;v[d+36|0]=a;v[d+37|0]=a>>>8;v[d+38|0]=a>>>16;v[d+39|0]=a>>>24;V=k+160|0;return 0}function bb(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;a:{if(!d){e=2036477234;f=857760878;o=1634760805;g=1797285236;break a}o=y[d|0]|y[d+1|0]<<8|(y[d+2|0]<<16|y[d+3|0]<<24);f=y[d+4|0]|y[d+5|0]<<8|(y[d+6|0]<<16|y[d+7|0]<<24);e=y[d+8|0]|y[d+9|0]<<8|(y[d+10|0]<<16|y[d+11|0]<<24);g=y[d+12|0]|y[d+13|0]<<8|(y[d+14|0]<<16|y[d+15|0]<<24)}d=y[c|0]|y[c+1|0]<<8|(y[c+2|0]<<16|y[c+3|0]<<24);h=y[c+4|0]|y[c+5|0]<<8|(y[c+6|0]<<16|y[c+7|0]<<24);i=y[c+8|0]|y[c+9|0]<<8|(y[c+10|0]<<16|y[c+11|0]<<24);k=y[c+12|0]|y[c+13|0]<<8|(y[c+14|0]<<16|y[c+15|0]<<24);q=y[c+16|0]|y[c+17|0]<<8|(y[c+18|0]<<16|y[c+19|0]<<24);m=y[c+20|0]|y[c+21|0]<<8|(y[c+22|0]<<16|y[c+23|0]<<24);s=y[c+24|0]|y[c+25|0]<<8|(y[c+26|0]<<16|y[c+27|0]<<24);t=y[c+28|0]|y[c+29|0]<<8|(y[c+30|0]<<16|y[c+31|0]<<24);n=y[b|0]|y[b+1|0]<<8|(y[b+2|0]<<16|y[b+3|0]<<24);p=y[b+4|0]|y[b+5|0]<<8|(y[b+6|0]<<16|y[b+7|0]<<24);j=y[b+8|0]|y[b+9|0]<<8|(y[b+10|0]<<16|y[b+11|0]<<24);b=y[b+12|0]|y[b+13|0]<<8|(y[b+14|0]<<16|y[b+15|0]<<24);c=1;while(1){l=d;d=d+o|0;o=la(d^n,16);n=o+q|0;q=la(l^n,12);l=q;r=n;n=o;o=d+q|0;n=la(n^o,8);q=r+n|0;d=la(l^q,7);l=h;f=f+h|0;h=la(f^p,16);p=h+m|0;m=la(l^p,12);l=m;r=p;p=f+m|0;m=la(p^h,8);r=r+m|0;f=la(l^r,7);l=i;e=e+i|0;h=la(e^j,16);i=h+s|0;j=la(l^i,12);l=j;j=e+j|0;u=la(h^j,8);h=u+i|0;e=la(l^h,7);i=b;b=g+k|0;g=la(i^b,16);i=g+t|0;k=la(i^k,12);v=b+k|0;b=la(g^v,8);i=b+i|0;g=la(k^i,7);l=h;h=b;b=f+o|0;h=la(h^b,16);k=l+h|0;f=la(k^f,12);o=b+f|0;b=la(h^o,8);s=k+b|0;h=la(f^s,7);l=i;f=e+p|0;i=la(f^n,16);k=l+i|0;e=la(k^e,12);f=e+f|0;n=la(i^f,8);t=k+n|0;i=la(e^t,7);e=g+j|0;k=la(e^m,16);j=k+q|0;g=la(j^g,12);e=e+g|0;p=la(k^e,8);q=j+p|0;k=la(g^q,7);g=d+v|0;j=la(g^u,16);m=j+r|0;d=la(m^d,12);g=d+g|0;j=la(j^g,8);m=m+j|0;d=la(d^m,7);if((c|0)!=10){c=c+1|0;continue}break}ra(a,o);ra(a+4|0,f);ra(a+8|0,e);ra(a+12|0,g);ra(a+16|0,n);ra(a+20|0,p);ra(a+24|0,j);ra(a+28|0,b);return 0}function Gc(a,b,c){var d=0,e=0,f=0,g=0;e=V+-64|0;V=e;d=-1;a:{if((c-1&255)>>>0<64){if(!(y[a+80|0]|y[a+81|0]<<8|(y[a+82|0]<<16|y[a+83|0]<<24)|(y[a+84|0]|y[a+85|0]<<8|(y[a+86|0]<<16|y[a+87|0]<<24)))){f=a;d=y[a+352|0]|y[a+353|0]<<8|(y[a+354|0]<<16|y[a+355|0]<<24);if(d>>>0>=129){Jc(a,128);g=a+96|0;Wc(a,g);d=(y[a+352|0]|y[a+353|0]<<8|(y[a+354|0]<<16|y[a+355|0]<<24))-128|0;v[a+352|0]=d;v[a+353|0]=d>>>8;v[a+354|0]=d>>>16;v[a+355|0]=d>>>24;if(d>>>0>=129){break a}za(g,a+224|0,d);d=y[a+352|0]|y[a+353|0]<<8|(y[a+354|0]<<16|y[a+355|0]<<24)}Jc(f,d);if(y[a+356|0]){v[a+88|0]=255;v[a+89|0]=255;v[a+90|0]=255;v[a+91|0]=255;v[a+92|0]=255;v[a+93|0]=255;v[a+94|0]=255;v[a+95|0]=255}v[a+80|0]=255;v[a+81|0]=255;v[a+82|0]=255;v[a+83|0]=255;v[a+84|0]=255;v[a+85|0]=255;v[a+86|0]=255;v[a+87|0]=255;d=a+96|0;f=y[a+352|0]|y[a+353|0]<<8|(y[a+354|0]<<16|y[a+355|0]<<24);ya(d+f|0,0,256-f|0);Wc(a,d);Ba(e,y[a|0]|y[a+1|0]<<8|(y[a+2|0]<<16|y[a+3|0]<<24),y[a+4|0]|y[a+5|0]<<8|(y[a+6|0]<<16|y[a+7|0]<<24));Ba(e|8,y[a+8|0]|y[a+9|0]<<8|(y[a+10|0]<<16|y[a+11|0]<<24),y[a+12|0]|y[a+13|0]<<8|(y[a+14|0]<<16|y[a+15|0]<<24));Ba(e+16|0,y[a+16|0]|y[a+17|0]<<8|(y[a+18|0]<<16|y[a+19|0]<<24),y[a+20|0]|y[a+21|0]<<8|(y[a+22|0]<<16|y[a+23|0]<<24));Ba(e+24|0,y[a+24|0]|y[a+25|0]<<8|(y[a+26|0]<<16|y[a+27|0]<<24),y[a+28|0]|y[a+29|0]<<8|(y[a+30|0]<<16|y[a+31|0]<<24));Ba(e+32|0,y[a+32|0]|y[a+33|0]<<8|(y[a+34|0]<<16|y[a+35|0]<<24),y[a+36|0]|y[a+37|0]<<8|(y[a+38|0]<<16|y[a+39|0]<<24));Ba(e+40|0,y[a+40|0]|y[a+41|0]<<8|(y[a+42|0]<<16|y[a+43|0]<<24),y[a+44|0]|y[a+45|0]<<8|(y[a+46|0]<<16|y[a+47|0]<<24));Ba(e+48|0,y[a+48|0]|y[a+49|0]<<8|(y[a+50|0]<<16|y[a+51|0]<<24),y[a+52|0]|y[a+53|0]<<8|(y[a+54|0]<<16|y[a+55|0]<<24));Ba(e+56|0,y[a+56|0]|y[a+57|0]<<8|(y[a+58|0]<<16|y[a+59|0]<<24),y[a+60|0]|y[a+61|0]<<8|(y[a+62|0]<<16|y[a+63|0]<<24));za(b,e,c);oa(a,64);oa(d,256);d=0}V=e- -64|0;return d}Aa();N()}Q(1369,1217,306,1142);N()}function db(a,b){var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;n=y[b|0]|y[b+1|0]<<8|(y[b+2|0]<<16|y[b+3|0]<<24);k=sa(b+4|0);c=Y;i=sa(b+7|0);e=Y;j=sa(b+10|0);d=Y;o=sa(b+13|0);g=Y;f=y[b+16|0]|y[b+17|0]<<8|(y[b+18|0]<<16|y[b+19|0]<<24);p=sa(b+20|0);l=Y;q=sa(b+23|0);r=Y;s=sa(b+26|0);t=Y;u=sa(b+29|0);b=d<<3|j>>>29;d=j<<3;m=d;d=d+16777216|0;b=d>>>0<16777216?b+1|0:b;j=d;d=b;b=e<<5|i>>>27;h=i<<5;e=b;i=k;b=c<<6|i>>>26;i=i<<6;v=a;w=h;c=b;b=i+16777216|0;c=b>>>0<16777216?c+1|0:c;k=b;h=b;b=c>>25;h=(c&33554431)<<7|h>>>25;c=w+h|0;b=b+e|0;b=c>>>0<h>>>0?b+1|0:b;e=c+33554432|0;if(e>>>0<33554432){b=b+1|0}b=(m-(j&-33554432)|0)+((b&67108863)<<6|e>>>26)|0;x[v+12>>2]=b;b=e&-67108864;x[a+8>>2]=c-b;e=f;b=0;f=e+16777216|0;b=f>>>0<16777216?1:b;h=f;f=b;m=e-(h&-33554432)|0;e=o;b=g<<2|e>>>30;g=e<<2;e=b;c=g;b=d>>25;g=(d&33554431)<<7|j>>>25;d=c+g|0;b=b+e|0;b=d>>>0<g>>>0?b+1|0:b;c=b;b=d+33554432|0;c=b>>>0<33554432?c+1|0:c;e=b;b=((c&67108863)<<6|b>>>26)+m|0;x[a+20>>2]=b;b=e&-67108864;x[a+16>>2]=d-b;d=a;c=p;b=l<<7|c>>>25;g=c<<7;c=f>>25;e=(f&33554431)<<7|h>>>25;f=g+e|0;b=b+c|0;b=f>>>0<e>>>0?b+1|0:b;c=f;f=c;c=c+33554432|0;b=c>>>0<33554432?b+1|0:b;e=c;c=b;b=e&-67108864;x[d+24>>2]=f-b;f=d;d=q;b=r<<5|d>>>27;d=d<<5;l=d;d=d+16777216|0;b=d>>>0<16777216?b+1|0:b;g=d;d=b;b=(l-(g&-33554432)|0)+((c&67108863)<<6|e>>>26)|0;x[f+28>>2]=b;c=s;b=t<<4|c>>>28;e=c<<4;c=b;h=e;b=d>>25;e=(d&33554431)<<7|g>>>25;d=h+e|0;b=b+c|0;b=d>>>0<e>>>0?b+1|0:b;c=d;d=c;c=c+33554432|0;b=c>>>0<33554432?b+1|0:b;e=c;c=b;b=e&-67108864;x[f+32>>2]=d-b;b=0;f=u;f=f<<2&33554428;d=f;f=f+16777216|0;b=f>>>0<16777216?b+1|0:b;c=(d-(f&33554432)|0)+((c&67108863)<<6|e>>>26)|0;x[a+36>>2]=c;f=Fj((b&33554431)<<7|f>>>25,b>>>25|0,19,0);c=f+n|0;b=Y;b=c>>>0<f>>>0?b+1|0:b;d=c+33554432|0;if(d>>>0<33554432){b=b+1|0}b=(i-(k&-33554432)|0)+((b&67108863)<<6|d>>>26)|0;x[a+4>>2]=b;b=a;a=d&-67108864;x[b>>2]=c-a}function ig(a,b){var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0;c=b;d=x[c+4>>2];m=d;k=d>>31;d=x[c+8>>2];n=d;r=d>>31;d=x[c+12>>2];i=d;l=d>>31;d=x[c+16>>2];o=d;s=d>>31;d=x[c+20>>2];j=d;h=d>>31;d=x[c+24>>2];p=d;t=d>>31;d=x[c>>2];u=d;v=d>>31;c=x[c+36>>2];d=Fj(c,c>>31,486662,0);f=d;c=Y;d=d+16777216|0;c=d>>>0<16777216?c+1|0:c;q=d;d=c;w=f-(q&-33554432)|0;c=x[b+32>>2];e=Fj(c,c>>31,486662,0);y=Y;b=x[b+28>>2];f=Fj(b,b>>31,486662,0);c=Y;g=e;b=f+16777216|0;c=b>>>0<16777216?c+1|0:c;z=b;e=b;b=c>>25;e=(c&33554431)<<7|e>>>25;c=g+e|0;b=b+y|0;b=c>>>0<e>>>0?b+1|0:b;e=c;c=b;b=e+33554432|0;c=b>>>0<33554432?c+1|0:c;g=b;b=((c&67108863)<<6|b>>>26)+w|0;x[a+36>>2]=b;b=g&-67108864;x[a+32>>2]=e-b;g=f-(z&-33554432)|0;c=Fj(p,t,486662,0);p=Y;f=Fj(j,h,486662,0);b=Y;e=c;c=f+16777216|0;b=c>>>0<16777216?b+1|0:b;j=c;h=c;c=b>>25;h=(b&33554431)<<7|h>>>25;b=e+h|0;c=c+p|0;c=b>>>0<h>>>0?c+1|0:c;e=b+33554432|0;if(e>>>0<33554432){c=c+1|0}c=g+((c&67108863)<<6|e>>>26)|0;x[a+28>>2]=c;c=e&-67108864;x[a+24>>2]=b-c;j=f-(j&-33554432)|0;b=Fj(o,s,486662,0);o=Y;f=Fj(i,l,486662,0);c=Y;g=b;b=f+16777216|0;c=b>>>0<16777216?c+1|0:c;i=b;l=(c&33554431)<<7|b>>>25;e=g+l|0;c=(c>>25)+o|0;c=e>>>0<l>>>0?c+1|0:c;b=c;c=e+33554432|0;b=c>>>0<33554432?b+1|0:b;b=((b&67108863)<<6|c>>>26)+j|0;x[a+20>>2]=b;b=c&-67108864;x[a+16>>2]=e-b;i=f-(i&-33554432)|0;c=Fj(n,r,486662,0);n=Y;f=Fj(m,k,486662,0);b=Y;g=c;c=f+16777216|0;b=c>>>0<16777216?b+1|0:b;m=c;k=(b&33554431)<<7|c>>>25;e=g+k|0;b=(b>>25)+n|0;b=e>>>0<k>>>0?b+1|0:b;c=b;b=e+33554432|0;c=b>>>0<33554432?c+1|0:c;g=b;b=((c&67108863)<<6|b>>>26)+i|0;x[a+12>>2]=b;b=g&-67108864;x[a+8>>2]=e-b;b=Fj((d&33554431)<<7|q>>>25,d>>25,19,0);c=Y;g=f-(m&-33554432)|0;d=Fj(u,v,486662,0);b=d+b|0;c=Y+c|0;c=b>>>0<d>>>0?c+1|0:c;d=b+33554432|0;if(d>>>0<33554432){c=c+1|0}c=g+((c&67108863)<<6|d>>>26)|0;x[a+4>>2]=c;c=a;a=d&-67108864;x[c>>2]=b-a}function Fc(a,b,c,d){var e=0,f=0;e=V;f=e;e=e-576&-64;V=e;x[e+188>>2]=0;ra(e+188|0,b);a:{if(b>>>0<=64){if((Ib(e+192|0,0,0,b)|0)<0){break a}if((Ja(e+192|0,e+188|0,4,0)|0)<0){break a}if((Ja(e+192|0,c,d,0)|0)<0){break a}Hb(e+192|0,a,b);break a}if((Ib(e+192|0,0,0,64)|0)<0){break a}if((Ja(e+192|0,e+188|0,4,0)|0)<0){break a}if((Ja(e+192|0,c,d,0)|0)<0){break a}if((Hb(e+192|0,e+112|0,64)|0)<0){break a}c=x[e+116>>2];d=x[e+112>>2];v[a|0]=d;v[a+1|0]=d>>>8;v[a+2|0]=d>>>16;v[a+3|0]=d>>>24;v[a+4|0]=c;v[a+5|0]=c>>>8;v[a+6|0]=c>>>16;v[a+7|0]=c>>>24;c=x[e+124>>2];d=x[e+120>>2];v[a+8|0]=d;v[a+9|0]=d>>>8;v[a+10|0]=d>>>16;v[a+11|0]=d>>>24;v[a+12|0]=c;v[a+13|0]=c>>>8;v[a+14|0]=c>>>16;v[a+15|0]=c>>>24;c=x[e+140>>2];d=x[e+136>>2];v[a+24|0]=d;v[a+25|0]=d>>>8;v[a+26|0]=d>>>16;v[a+27|0]=d>>>24;v[a+28|0]=c;v[a+29|0]=c>>>8;v[a+30|0]=c>>>16;v[a+31|0]=c>>>24;c=x[e+132>>2];d=x[e+128>>2];v[a+16|0]=d;v[a+17|0]=d>>>8;v[a+18|0]=d>>>16;v[a+19|0]=d>>>24;v[a+20|0]=c;v[a+21|0]=c>>>8;v[a+22|0]=c>>>16;v[a+23|0]=c>>>24;a=a+32|0;b=b-32|0;if(b>>>0>=65){while(1){za(e+48|0,e+112|0,64);if((ac(e+112|0,64,e+48|0,64,0,0,0)|0)<0){break a}c=x[e+116>>2];d=x[e+112>>2];v[a|0]=d;v[a+1|0]=d>>>8;v[a+2|0]=d>>>16;v[a+3|0]=d>>>24;v[a+4|0]=c;v[a+5|0]=c>>>8;v[a+6|0]=c>>>16;v[a+7|0]=c>>>24;c=x[e+124>>2];d=x[e+120>>2];v[a+8|0]=d;v[a+9|0]=d>>>8;v[a+10|0]=d>>>16;v[a+11|0]=d>>>24;v[a+12|0]=c;v[a+13|0]=c>>>8;v[a+14|0]=c>>>16;v[a+15|0]=c>>>24;c=x[e+140>>2];d=x[e+136>>2];v[a+24|0]=d;v[a+25|0]=d>>>8;v[a+26|0]=d>>>16;v[a+27|0]=d>>>24;v[a+28|0]=c;v[a+29|0]=c>>>8;v[a+30|0]=c>>>16;v[a+31|0]=c>>>24;c=x[e+132>>2];d=x[e+128>>2];v[a+16|0]=d;v[a+17|0]=d>>>8;v[a+18|0]=d>>>16;v[a+19|0]=d>>>24;v[a+20|0]=c;v[a+21|0]=c>>>8;v[a+22|0]=c>>>16;v[a+23|0]=c>>>24;a=a+32|0;b=b-32|0;if(b>>>0>64){continue}break}}za(e+48|0,e+112|0,64);if((ac(e+112|0,b,e+48|0,64,0,0,0)|0)<0){break a}za(a,e+112|0,b)}oa(e+192|0,384);V=f}function De(a,b,c,d,e,f){var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;g=V-592|0;V=g;j=-1;h=a+32|0;a:{if(!kg(h)){break a}if(Wb(a)){break a}if(!Ad(e)){break a}if(Wb(e)){break a}if(Fd(g+128|0,e)){break a}hd(g+384|0,f);Na(g+384|0,a,32,0);Na(g+384|0,e,32,0);Na(g+384|0,b,c,d);_a(g+384|0,g+320|0);Eb(g+320|0);d=V-2272|0;V=d;rg(d+2016|0,g+320|0);rg(d+1760|0,h);b=g+128|0;Ca(d+480|0,b);kb(d+320|0,b);wa(d,d+320|0);Da(d+320|0,d,d+480|0);wa(d+160|0,d+320|0);b=d+640|0;Ca(b,d+160|0);Da(d+320|0,d,b);wa(d+160|0,d+320|0);b=d+800|0;Ca(b,d+160|0);Da(d+320|0,d,b);wa(d+160|0,d+320|0);b=d+960|0;Ca(b,d+160|0);Da(d+320|0,d,b);wa(d+160|0,d+320|0);b=d+1120|0;Ca(b,d+160|0);Da(d+320|0,d,b);wa(d+160|0,d+320|0);b=d+1280|0;Ca(b,d+160|0);Da(d+320|0,d,b);wa(d+160|0,d+320|0);b=d+1440|0;Ca(b,d+160|0);Da(d+320|0,d,b);wa(d+160|0,d+320|0);Ca(d+1600|0,d+160|0);f=g+8|0;vb(f);Ea(f+40|0);Ea(f+80|0);e=255;b:{while(1){b=e;if(!(y[b+(d+2016|0)|0]|y[(d+1760|0)+b|0])){e=b-1|0;if(b){continue}break b}break}if((b|0)<0){break b}while(1){Va(d+320|0,f);c=b;b=v[(d+2016|0)+b|0];c:{if((b|0)>=1){wa(d+160|0,d+320|0);Da(d+320|0,d+160|0,(d+480|0)+D((b&254)>>>1|0,160)|0);break c}if((b|0)>-1){break c}wa(d+160|0,d+320|0);zc(d+320|0,d+160|0,(d+480|0)+D((0-b&254)>>>1|0,160)|0)}i=v[c+(d+1760|0)|0];d:{if((i|0)>=1){wa(d+160|0,d+320|0);Ed(d+320|0,d+160|0,D((i&254)>>>1|0,120)+2320|0);break d}if((i|0)>-1){break d}wa(d+160|0,d+320|0);j=V-48|0;V=j;b=d+320|0;h=d+160|0;k=h+40|0;va(b,k,h);e=b+40|0;xa(e,k,h);k=b+80|0;l=D((0-i&254)>>>1|0,120)+2320|0;ma(k,b,l+40|0);ma(e,e,l);i=b+120|0;ma(i,l+80|0,h+120|0);h=h+80|0;va(j,h,h);xa(b,k,e);va(e,k,e);xa(k,j,i);va(i,j,i);V=j+48|0}ab(f,d+320|0);b=c-1|0;if((c|0)>0){continue}break}}V=d+2272|0;mb(g+288|0,g+8|0);j=(m=-1,n=_b(g+288|0,a),o=(g+288|0)==(a|0),o?m:n)|rb(a,g+288|0,32)}V=g+592|0;return j}function Ab(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;a:{if(!d){e=2036477234;f=857760878;g=1634760805;d=1797285236;break a}g=y[d|0]|y[d+1|0]<<8|(y[d+2|0]<<16|y[d+3|0]<<24);f=y[d+4|0]|y[d+5|0]<<8|(y[d+6|0]<<16|y[d+7|0]<<24);e=y[d+8|0]|y[d+9|0]<<8|(y[d+10|0]<<16|y[d+11|0]<<24);d=y[d+12|0]|y[d+13|0]<<8|(y[d+14|0]<<16|y[d+15|0]<<24)}r=20;k=y[c|0]|y[c+1|0]<<8|(y[c+2|0]<<16|y[c+3|0]<<24);q=y[c+4|0]|y[c+5|0]<<8|(y[c+6|0]<<16|y[c+7|0]<<24);s=y[c+8|0]|y[c+9|0]<<8|(y[c+10|0]<<16|y[c+11|0]<<24);p=y[c+12|0]|y[c+13|0]<<8|(y[c+14|0]<<16|y[c+15|0]<<24);l=y[c+16|0]|y[c+17|0]<<8|(y[c+18|0]<<16|y[c+19|0]<<24);i=y[c+20|0]|y[c+21|0]<<8|(y[c+22|0]<<16|y[c+23|0]<<24);m=y[c+24|0]|y[c+25|0]<<8|(y[c+26|0]<<16|y[c+27|0]<<24);n=y[c+28|0]|y[c+29|0]<<8|(y[c+30|0]<<16|y[c+31|0]<<24);c=y[b|0]|y[b+1|0]<<8|(y[b+2|0]<<16|y[b+3|0]<<24);j=y[b+4|0]|y[b+5|0]<<8|(y[b+6|0]<<16|y[b+7|0]<<24);h=y[b+8|0]|y[b+9|0]<<8|(y[b+10|0]<<16|y[b+11|0]<<24);b=y[b+12|0]|y[b+13|0]<<8|(y[b+14|0]<<16|y[b+15|0]<<24);while(1){o=h;h=la(g+i|0,7)^p;o=o^la(h+g|0,9);t=la(h+o|0,13)^i;p=la(o+t|0,18);b=la(f+k|0,7)^b;m=la(b+f|0,9)^m;k=la(b+m|0,13)^k;v=la(m+k|0,18);n=la(c+e|0,7)^n;i=la(n+e|0,9)^q;u=la(i+n|0,13)^c;w=la(i+u|0,18);c=la(d+l|0,7)^s;j=la(c+d|0,9)^j;l=la(c+j|0,13)^l;x=la(j+l|0,18);g=g^p;k=la(g+c|0,7)^k;q=la(k+g|0,9)^i;s=la(k+q|0,13)^c;g=la(q+s|0,18)^g;f=f^v;c=la(f+h|0,7)^u;j=la(c+f|0,9)^j;p=la(c+j|0,13)^h;f=la(j+p|0,18)^f;e=e^w;l=la(e+b|0,7)^l;h=la(l+e|0,9)^o;b=la(h+l|0,13)^b;e=la(b+h|0,18)^e;d=d^x;i=la(d+n|0,7)^t;m=la(i+d|0,9)^m;n=la(i+m|0,13)^n;d=la(m+n|0,18)^d;o=r>>>0>2;r=r-2|0;if(o){continue}break}ra(a,g);ra(a+4|0,f);ra(a+8|0,e);ra(a+12|0,d);ra(a+16|0,c);ra(a+20|0,j);ra(a+24|0,h);ra(a+28|0,b);return 0}function nd(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;m=V-16|0;V=m;pd(h);a:{b:{if(!d){break b}q=h&4;c:while(1){k=j;while(1){i=v[c+k|0];d:{e:{if(q){l=i-65|0;l=i+4&(i+65488>>>8^-1)&(57-i>>>8^-1)&255|((l>>>8^-1)&l&(90-i>>>8^-1)&255|(i+185&(i+65439>>>8^-1)&(122-i>>>8^-1)&255|(((i^16288)+1>>>8^-1)&63|((i^16338)+1>>>8^-1)&62)));l=(0-l>>>8^-1)&(i^65470)+1>>>8&255|l;break e}l=i-65|0;l=i+4&(i+65488>>>8^-1)&(57-i>>>8^-1)&255|((l>>>8^-1)&l&(90-i>>>8^-1)&255|(i+185&(i+65439>>>8^-1)&(122-i>>>8^-1)&255|(((i^16336)+1>>>8^-1)&63|((i^16340)+1>>>8^-1)&62)));l=(0-l>>>8^-1)&(i^65470)+1>>>8&255|l}if((l|0)==255){if(!e){break b}if(Pb(e,i)){break d}j=k;break b}p=l+(p<<6)|0;j=n+6|0;f:{if(j>>>0<8){n=j;break f}n=n-2|0;if(b>>>0<=o>>>0){x[m+12>>2]=k;x[9301]=68;r=1;j=k;break a}v[a+o|0]=p>>>n;o=o+1|0}j=k+1|0;if(j>>>0<d>>>0){continue c}break b}k=k+1|0;if(k>>>0<d>>>0){continue}break}break}a=j+1|0;j=a>>>0<d>>>0?d:a}x[m+12>>2]=j}g:{if(n>>>0>4){a=0;k=-1;break g}k=-1;a=0;if((-1<<n^-1)&p|r){break g}if(!(h&2)){h:{i:{h=n>>>1|0;if(h){b=x[m+12>>2];while(1){if(b>>>0>=d>>>0){j=68;break i}k=v[b+c|0];j:{if((k|0)==61){h=h-1|0;break j}j=28;if(!e){break i}if(!Pb(e,k)){break i}}b=b+1|0;x[m+12>>2]=b;if(h){continue}break}}k=0;break h}x[9301]=j;k=-1}if(k){break g}j=x[m+12>>2]}k=0;if(!(!e|d>>>0<=j>>>0)){k:{if(!Pb(e,v[c+j|0])){break k}a=d-1|0;while(1){if((a|0)!=(j|0)){j=j+1|0;if(Pb(e,v[j+c|0])){continue}break k}break}j=d}x[m+12>>2]=j}a=o}b=x[m+12>>2];l:{if(g){x[g>>2]=b+c;break l}if((b|0)==(d|0)){break l}x[9301]=28;k=-1}if(f){x[f>>2]=a}V=m+16|0;return k|0}function Wf(a,b){a=a|0;b=b|0;var c=0,d=0;c=V-128|0;V=c;x[c+80>>2]=0;x[c+84>>2]=0;x[c+88>>2]=0;x[c+92>>2]=0;x[c+40>>2]=0;x[c+44>>2]=0;x[c+48>>2]=0;x[c+52>>2]=0;x[c+56>>2]=0;x[c+60>>2]=0;d=x[8751];x[c+104>>2]=x[8750];x[c+108>>2]=d;d=x[8753];x[c+112>>2]=x[8752];x[c+116>>2]=d;d=x[8755];x[c+120>>2]=x[8754];x[c+124>>2]=d;x[c+64>>2]=0;x[c+68>>2]=0;x[c+72>>2]=0;x[c+76>>2]=0;v[c+64|0]=1;x[c+32>>2]=0;x[c+36>>2]=0;d=x[8749];x[c+96>>2]=x[8748];x[c+100>>2]=d;d=y[b+28|0]|y[b+29|0]<<8|(y[b+30|0]<<16|y[b+31|0]<<24);x[c+24>>2]=y[b+24|0]|y[b+25|0]<<8|(y[b+26|0]<<16|y[b+27|0]<<24);x[c+28>>2]=d;d=y[b+20|0]|y[b+21|0]<<8|(y[b+22|0]<<16|y[b+23|0]<<24);x[c+16>>2]=y[b+16|0]|y[b+17|0]<<8|(y[b+18|0]<<16|y[b+19|0]<<24);x[c+20>>2]=d;d=y[b+12|0]|y[b+13|0]<<8|(y[b+14|0]<<16|y[b+15|0]<<24);x[c+8>>2]=y[b+8|0]|y[b+9|0]<<8|(y[b+10|0]<<16|y[b+11|0]<<24);x[c+12>>2]=d;d=y[b+4|0]|y[b+5|0]<<8|(y[b+6|0]<<16|y[b+7|0]<<24);x[c>>2]=y[b|0]|y[b+1|0]<<8|(y[b+2|0]<<16|y[b+3|0]<<24);x[c+4>>2]=d;bf(c- -64|0,c);Eb(c- -64|0);b=x[c+92>>2];d=x[c+88>>2];v[a+24|0]=d;v[a+25|0]=d>>>8;v[a+26|0]=d>>>16;v[a+27|0]=d>>>24;v[a+28|0]=b;v[a+29|0]=b>>>8;v[a+30|0]=b>>>16;v[a+31|0]=b>>>24;b=x[c+84>>2];d=x[c+80>>2];v[a+16|0]=d;v[a+17|0]=d>>>8;v[a+18|0]=d>>>16;v[a+19|0]=d>>>24;v[a+20|0]=b;v[a+21|0]=b>>>8;v[a+22|0]=b>>>16;v[a+23|0]=b>>>24;b=x[c+76>>2];d=x[c+72>>2];v[a+8|0]=d;v[a+9|0]=d>>>8;v[a+10|0]=d>>>16;v[a+11|0]=d>>>24;v[a+12|0]=b;v[a+13|0]=b>>>8;v[a+14|0]=b>>>16;v[a+15|0]=b>>>24;b=x[c+68>>2];d=x[c+64>>2];v[a|0]=d;v[a+1|0]=d>>>8;v[a+2|0]=d>>>16;v[a+3|0]=d>>>24;v[a+4|0]=b;v[a+5|0]=b>>>8;v[a+6|0]=b>>>16;v[a+7|0]=b>>>24;V=c+128|0}function ud(a,b){a=a|0;b=b|0;var c=0,d=0;c=V-128|0;V=c;x[c+80>>2]=0;x[c+84>>2]=0;x[c+88>>2]=0;x[c+92>>2]=0;x[c+40>>2]=0;x[c+44>>2]=0;x[c+48>>2]=0;x[c+52>>2]=0;x[c+56>>2]=0;x[c+60>>2]=0;d=x[8751];x[c+104>>2]=x[8750];x[c+108>>2]=d;d=x[8753];x[c+112>>2]=x[8752];x[c+116>>2]=d;d=x[8755];x[c+120>>2]=x[8754];x[c+124>>2]=d;x[c+64>>2]=0;x[c+68>>2]=0;x[c+72>>2]=0;x[c+76>>2]=0;x[c+32>>2]=0;x[c+36>>2]=0;d=x[8749];x[c+96>>2]=x[8748];x[c+100>>2]=d;d=y[b+20|0]|y[b+21|0]<<8|(y[b+22|0]<<16|y[b+23|0]<<24);x[c+16>>2]=y[b+16|0]|y[b+17|0]<<8|(y[b+18|0]<<16|y[b+19|0]<<24);x[c+20>>2]=d;d=y[b+28|0]|y[b+29|0]<<8|(y[b+30|0]<<16|y[b+31|0]<<24);x[c+24>>2]=y[b+24|0]|y[b+25|0]<<8|(y[b+26|0]<<16|y[b+27|0]<<24);x[c+28>>2]=d;d=y[b+4|0]|y[b+5|0]<<8|(y[b+6|0]<<16|y[b+7|0]<<24);x[c>>2]=y[b|0]|y[b+1|0]<<8|(y[b+2|0]<<16|y[b+3|0]<<24);x[c+4>>2]=d;d=y[b+12|0]|y[b+13|0]<<8|(y[b+14|0]<<16|y[b+15|0]<<24);x[c+8>>2]=y[b+8|0]|y[b+9|0]<<8|(y[b+10|0]<<16|y[b+11|0]<<24);x[c+12>>2]=d;bf(c- -64|0,c);Eb(c- -64|0);b=x[c+92>>2];d=x[c+88>>2];v[a+24|0]=d;v[a+25|0]=d>>>8;v[a+26|0]=d>>>16;v[a+27|0]=d>>>24;v[a+28|0]=b;v[a+29|0]=b>>>8;v[a+30|0]=b>>>16;v[a+31|0]=b>>>24;b=x[c+84>>2];d=x[c+80>>2];v[a+16|0]=d;v[a+17|0]=d>>>8;v[a+18|0]=d>>>16;v[a+19|0]=d>>>24;v[a+20|0]=b;v[a+21|0]=b>>>8;v[a+22|0]=b>>>16;v[a+23|0]=b>>>24;b=x[c+76>>2];d=x[c+72>>2];v[a+8|0]=d;v[a+9|0]=d>>>8;v[a+10|0]=d>>>16;v[a+11|0]=d>>>24;v[a+12|0]=b;v[a+13|0]=b>>>8;v[a+14|0]=b>>>16;v[a+15|0]=b>>>24;b=x[c+68>>2];d=x[c+64>>2];v[a|0]=d;v[a+1|0]=d>>>8;v[a+2|0]=d>>>16;v[a+3|0]=d>>>24;v[a+4|0]=b;v[a+5|0]=b>>>8;v[a+6|0]=b>>>16;v[a+7|0]=b>>>24;V=c+128|0}function Xe(a,b,c,d,e,f,g,h,i,j,k){var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;n=Fj(i,0,h,0);l=Y;if(!l&n>>>0>=1073741824|l){x[9301]=22;return-1}if((g|0)==1|g>>>0>1){x[9301]=22;return-1}p=!g&f>>>0>=2|(g|0)!=0;n=f;o=g;l=0;while(1){m=l;r=q;if(n|o){m=n;n=m-1&m;o=o-(m>>>0<1)&o;l=l+1|0;q=l>>>0<1?q+1|0:q;continue}break}Y=r;if(!(!Y&m>>>0<2?p:0)){x[9301]=28;return-1}if(!(i?h:0)){x[9301]=28;return-1}a:{if(!g&f>>>0<=33554431/(h>>>0)>>>0?33554431/(i>>>0)>>>0<h>>>0|h>>>0>16777215:1){break a}u=h<<7;q=D(u,i);p=D(f,u);l=p+q|0;if(q>>>0>l>>>0){break a}n=l+(h<<8|64)|0;if(l>>>0>n>>>0){break a}b:{if(n>>>0>A[a+8>>2]){o=-1;if(af(a)){break b}l=V-16|0;V=l;m=Lf(l+12|0,n);x[9301]=m;m=m?0:x[l+12>>2];x[a+4>>2]=m;x[a>>2]=m;x[a+8>>2]=m?n:0;V=l+16|0;if(!m){break b}}t=x[a+4>>2];Ye(b,c,d,e,t,q);r=q+t|0;l=p+r|0;a=0;while(1){v=D(a,u)+t|0;e=0;n=0;m=h<<5;if(m){while(1){d=e<<2;o=d+l|0;d=d+v|0;x[o>>2]=y[d|0]|y[d+1|0]<<8|(y[d+2|0]<<16|y[d+3|0]<<24);e=e+1|0;if((m|0)!=(e|0)){continue}break}}c:{if(!(f|g)){break c}p=l+(h<<8)|0;s=h<<7;o=s+l|0;e=2;d=0;while(1){We(r+(D(n,m)<<2)|0,l,s);ec(l,o,p,h);We(r+(D(m,n|1)<<2)|0,o,s);ec(o,l,p,h);if((d|0)==(g|0)&e>>>0<f>>>0|d>>>0<g>>>0){n=e;e=e+2|0;d=e>>>0<2?d+1|0:d;continue}break}n=f-1|0;e=2;d=0;while(1){Ue(l,r+(D(m,Ve(l,h)&n)<<2)|0,s);ec(l,o,p,h);Ue(o,r+(D(m,Ve(o,h)&n)<<2)|0,s);ec(o,l,p,h);if((d|0)==(g|0)&e>>>0>=f>>>0|d>>>0>g>>>0){break c}e=e+2|0;d=e>>>0<2?d+1|0:d;continue}}if(m){e=0;while(1){d=e<<2;ra(d+v|0,x[d+l>>2]);e=e+1|0;if((m|0)!=(e|0)){continue}break}}a=a+1|0;if((i|0)!=(a|0)){continue}break}Ye(b,c,t,q,j,k);o=0}return o}x[9301]=48;return-1}function td(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0;d=V-128|0;V=d;x[d+104>>2]=0;x[d+108>>2]=0;x[d+112>>2]=0;x[d+116>>2]=0;x[d+120>>2]=0;x[d+124>>2]=0;x[d+96>>2]=0;x[d+100>>2]=0;e=y[b+20|0]|y[b+21|0]<<8|(y[b+22|0]<<16|y[b+23|0]<<24);x[d+80>>2]=y[b+16|0]|y[b+17|0]<<8|(y[b+18|0]<<16|y[b+19|0]<<24);x[d+84>>2]=e;e=y[b+28|0]|y[b+29|0]<<8|(y[b+30|0]<<16|y[b+31|0]<<24);x[d+88>>2]=y[b+24|0]|y[b+25|0]<<8|(y[b+26|0]<<16|y[b+27|0]<<24);x[d+92>>2]=e;e=y[b+8|0]|y[b+9|0]<<8|(y[b+10|0]<<16|y[b+11|0]<<24);f=y[b+12|0]|y[b+13|0]<<8|(y[b+14|0]<<16|y[b+15|0]<<24);g=y[b|0]|y[b+1|0]<<8|(y[b+2|0]<<16|y[b+3|0]<<24);b=y[b+4|0]|y[b+5|0]<<8|(y[b+6|0]<<16|y[b+7|0]<<24);x[d+40>>2]=0;x[d+44>>2]=0;x[d+48>>2]=0;x[d+52>>2]=0;x[d+56>>2]=0;x[d+60>>2]=0;x[d+64>>2]=g;x[d+68>>2]=b;x[d+72>>2]=e;x[d+76>>2]=f;x[d+32>>2]=0;x[d+36>>2]=0;b=y[c+20|0]|y[c+21|0]<<8|(y[c+22|0]<<16|y[c+23|0]<<24);x[d+16>>2]=y[c+16|0]|y[c+17|0]<<8|(y[c+18|0]<<16|y[c+19|0]<<24);x[d+20>>2]=b;b=y[c+28|0]|y[c+29|0]<<8|(y[c+30|0]<<16|y[c+31|0]<<24);x[d+24>>2]=y[c+24|0]|y[c+25|0]<<8|(y[c+26|0]<<16|y[c+27|0]<<24);x[d+28>>2]=b;b=y[c+4|0]|y[c+5|0]<<8|(y[c+6|0]<<16|y[c+7|0]<<24);x[d>>2]=y[c|0]|y[c+1|0]<<8|(y[c+2|0]<<16|y[c+3|0]<<24);x[d+4>>2]=b;b=y[c+12|0]|y[c+13|0]<<8|(y[c+14|0]<<16|y[c+15|0]<<24);x[d+8>>2]=y[c+8|0]|y[c+9|0]<<8|(y[c+10|0]<<16|y[c+11|0]<<24);x[d+12>>2]=b;e=d- -64|0;b=0;c=0;while(1){f=b+e|0;c=y[b+d|0]+(y[f|0]+c|0)|0;v[f|0]=c;c=c>>>8|0;b=b+1|0;if((b|0)!=32){continue}break}sd(a,d- -64|0);V=d+128|0}function Mc(a){a=a|0;var b=0,c=0,d=0;c=V-48|0;V=c;b=y[a+28|0]|y[a+29|0]<<8|(y[a+30|0]<<16|y[a+31|0]<<24);x[c+24>>2]=y[a+24|0]|y[a+25|0]<<8|(y[a+26|0]<<16|y[a+27|0]<<24);x[c+28>>2]=b;b=y[a+20|0]|y[a+21|0]<<8|(y[a+22|0]<<16|y[a+23|0]<<24);x[c+16>>2]=y[a+16|0]|y[a+17|0]<<8|(y[a+18|0]<<16|y[a+19|0]<<24);x[c+20>>2]=b;b=y[a+4|0]|y[a+5|0]<<8|(y[a+6|0]<<16|y[a+7|0]<<24);x[c>>2]=y[a|0]|y[a+1|0]<<8|(y[a+2|0]<<16|y[a+3|0]<<24);x[c+4>>2]=b;b=y[a+12|0]|y[a+13|0]<<8|(y[a+14|0]<<16|y[a+15|0]<<24);x[c+8>>2]=y[a+8|0]|y[a+9|0]<<8|(y[a+10|0]<<16|y[a+11|0]<<24);x[c+12>>2]=b;b=y[a+40|0]|y[a+41|0]<<8|(y[a+42|0]<<16|y[a+43|0]<<24);x[c+32>>2]=y[a+36|0]|y[a+37|0]<<8|(y[a+38|0]<<16|y[a+39|0]<<24);x[c+36>>2]=b;cg(c,c,40,0,a+32|0,a);b=x[c+28>>2];d=x[c+24>>2];v[a+24|0]=d;v[a+25|0]=d>>>8;v[a+26|0]=d>>>16;v[a+27|0]=d>>>24;v[a+28|0]=b;v[a+29|0]=b>>>8;v[a+30|0]=b>>>16;v[a+31|0]=b>>>24;b=x[c+20>>2];d=x[c+16>>2];v[a+16|0]=d;v[a+17|0]=d>>>8;v[a+18|0]=d>>>16;v[a+19|0]=d>>>24;v[a+20|0]=b;v[a+21|0]=b>>>8;v[a+22|0]=b>>>16;v[a+23|0]=b>>>24;b=x[c+12>>2];d=x[c+8>>2];v[a+8|0]=d;v[a+9|0]=d>>>8;v[a+10|0]=d>>>16;v[a+11|0]=d>>>24;v[a+12|0]=b;v[a+13|0]=b>>>8;v[a+14|0]=b>>>16;v[a+15|0]=b>>>24;b=x[c+4>>2];d=x[c>>2];v[a|0]=d;v[a+1|0]=d>>>8;v[a+2|0]=d>>>16;v[a+3|0]=d>>>24;v[a+4|0]=b;v[a+5|0]=b>>>8;v[a+6|0]=b>>>16;v[a+7|0]=b>>>24;b=x[c+36>>2];d=x[c+32>>2];v[a+36|0]=d;v[a+37|0]=d>>>8;v[a+38|0]=d>>>16;v[a+39|0]=d>>>24;v[a+40|0]=b;v[a+41|0]=b>>>8;v[a+42|0]=b>>>16;v[a+43|0]=b>>>24;Nc(a);V=c+48|0}function yj(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0;j=V-112|0;V=j;if(c|d){i=y[h+28|0]|y[h+29|0]<<8|(y[h+30|0]<<16|y[h+31|0]<<24);x[j+24>>2]=y[h+24|0]|y[h+25|0]<<8|(y[h+26|0]<<16|y[h+27|0]<<24);x[j+28>>2]=i;i=y[h+20|0]|y[h+21|0]<<8|(y[h+22|0]<<16|y[h+23|0]<<24);x[j+16>>2]=y[h+16|0]|y[h+17|0]<<8|(y[h+18|0]<<16|y[h+19|0]<<24);x[j+20>>2]=i;i=y[h+4|0]|y[h+5|0]<<8|(y[h+6|0]<<16|y[h+7|0]<<24);x[j>>2]=y[h|0]|y[h+1|0]<<8|(y[h+2|0]<<16|y[h+3|0]<<24);x[j+4>>2]=i;i=8;k=y[h+12|0]|y[h+13|0]<<8|(y[h+14|0]<<16|y[h+15|0]<<24);x[j+8>>2]=y[h+8|0]|y[h+9|0]<<8|(y[h+10|0]<<16|y[h+11|0]<<24);x[j+12>>2]=k;h=y[e+4|0]|y[e+5|0]<<8|(y[e+6|0]<<16|y[e+7|0]<<24);x[j+96>>2]=y[e|0]|y[e+1|0]<<8|(y[e+2|0]<<16|y[e+3|0]<<24);x[j+100>>2]=h;while(1){v[(j+96|0)+i|0]=f;f=(g&255)<<24|f>>>8;g=g>>>8|0;i=i+1|0;if((i|0)!=16){continue}break}if(!d&c>>>0>63|d){while(1){i=0;Ub(j+32|0,j+96|0,j,0);while(1){v[a+i|0]=y[(j+32|0)+i|0]^y[b+i|0];h=1;i=i+1|0;if((i|0)!=64){continue}break}i=8;while(1){f=(j+96|0)+i|0;e=y[f|0]+h|0;v[f|0]=e;h=e>>>8|0;i=i+1|0;if((i|0)!=16){continue}break}b=b- -64|0;a=a- -64|0;d=d-1|0;c=c+-64|0;d=c>>>0<4294967232?d+1|0:d;if(!d&c>>>0>63|d){continue}break}}if(c|d){i=0;Ub(j+32|0,j+96|0,j,0);while(1){v[a+i|0]=y[(j+32|0)+i|0]^y[b+i|0];i=i+1|0;if((c|0)!=(i|0)){continue}break}}oa(j+32|0,64);oa(j,32)}V=j+112|0;return 0}function Cg(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;g=V-112|0;V=g;i=c;h=d;if(c|h){c=y[f+28|0]|y[f+29|0]<<8|(y[f+30|0]<<16|y[f+31|0]<<24);x[g+24>>2]=y[f+24|0]|y[f+25|0]<<8|(y[f+26|0]<<16|y[f+27|0]<<24);x[g+28>>2]=c;c=y[f+20|0]|y[f+21|0]<<8|(y[f+22|0]<<16|y[f+23|0]<<24);x[g+16>>2]=y[f+16|0]|y[f+17|0]<<8|(y[f+18|0]<<16|y[f+19|0]<<24);x[g+20>>2]=c;c=y[f+4|0]|y[f+5|0]<<8|(y[f+6|0]<<16|y[f+7|0]<<24);x[g>>2]=y[f|0]|y[f+1|0]<<8|(y[f+2|0]<<16|y[f+3|0]<<24);x[g+4>>2]=c;c=y[f+12|0]|y[f+13|0]<<8|(y[f+14|0]<<16|y[f+15|0]<<24);x[g+8>>2]=y[f+8|0]|y[f+9|0]<<8|(y[f+10|0]<<16|y[f+11|0]<<24);x[g+12>>2]=c;c=y[e|0]|y[e+1|0]<<8|(y[e+2|0]<<16|y[e+3|0]<<24);d=y[e+4|0]|y[e+5|0]<<8|(y[e+6|0]<<16|y[e+7|0]<<24);x[g+104>>2]=0;x[g+108>>2]=0;x[g+96>>2]=c;x[g+100>>2]=d;a:{if(!h&i>>>0>=64|h){while(1){c=0;Tb(g+32|0,g+96|0,g,0);while(1){v[a+c|0]=y[(g+32|0)+c|0]^y[b+c|0];d=1;c=c+1|0;if((c|0)!=64){continue}break}c=8;while(1){e=(g+96|0)+c|0;d=y[e|0]+d|0;v[e|0]=d;d=d>>>8|0;c=c+1|0;if((c|0)!=16){continue}break}b=b- -64|0;a=a- -64|0;h=h-1|0;c=i+-64|0;h=c>>>0<4294967232?h+1|0:h;i=c;if(!h&c>>>0>63|h){continue}break}if(!(h|i)){break a}}c=0;Tb(g+32|0,g+96|0,g,0);while(1){v[a+c|0]=y[(g+32|0)+c|0]^y[b+c|0];c=c+1|0;if((i|0)!=(c|0)){continue}break}}oa(g+32|0,64);oa(g,32)}V=g+112|0;return 0}function Ag(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;g=V-112|0;V=g;i=c;h=d;if(c|h){c=y[f+28|0]|y[f+29|0]<<8|(y[f+30|0]<<16|y[f+31|0]<<24);x[g+24>>2]=y[f+24|0]|y[f+25|0]<<8|(y[f+26|0]<<16|y[f+27|0]<<24);x[g+28>>2]=c;c=y[f+20|0]|y[f+21|0]<<8|(y[f+22|0]<<16|y[f+23|0]<<24);x[g+16>>2]=y[f+16|0]|y[f+17|0]<<8|(y[f+18|0]<<16|y[f+19|0]<<24);x[g+20>>2]=c;c=y[f+4|0]|y[f+5|0]<<8|(y[f+6|0]<<16|y[f+7|0]<<24);x[g>>2]=y[f|0]|y[f+1|0]<<8|(y[f+2|0]<<16|y[f+3|0]<<24);x[g+4>>2]=c;c=y[f+12|0]|y[f+13|0]<<8|(y[f+14|0]<<16|y[f+15|0]<<24);x[g+8>>2]=y[f+8|0]|y[f+9|0]<<8|(y[f+10|0]<<16|y[f+11|0]<<24);x[g+12>>2]=c;c=y[e|0]|y[e+1|0]<<8|(y[e+2|0]<<16|y[e+3|0]<<24);d=y[e+4|0]|y[e+5|0]<<8|(y[e+6|0]<<16|y[e+7|0]<<24);x[g+104>>2]=0;x[g+108>>2]=0;x[g+96>>2]=c;x[g+100>>2]=d;a:{if(!h&i>>>0>=64|h){while(1){c=0;Sb(g+32|0,g+96|0,g,0);while(1){v[a+c|0]=y[(g+32|0)+c|0]^y[b+c|0];d=1;c=c+1|0;if((c|0)!=64){continue}break}c=8;while(1){e=(g+96|0)+c|0;d=y[e|0]+d|0;v[e|0]=d;d=d>>>8|0;c=c+1|0;if((c|0)!=16){continue}break}b=b- -64|0;a=a- -64|0;h=h-1|0;c=i+-64|0;h=c>>>0<4294967232?h+1|0:h;i=c;if(!h&c>>>0>63|h){continue}break}if(!(h|i)){break a}}c=0;Sb(g+32|0,g+96|0,g,0);while(1){v[a+c|0]=y[(g+32|0)+c|0]^y[b+c|0];c=c+1|0;if((i|0)!=(c|0)){continue}break}}oa(g+32|0,64);oa(g,32)}V=g+112|0;return 0}function jg(a,b,c){var d=0,e=0;d=V-832|0;V=d;qg(d+688|0,b);x[d+688>>2]=x[d+688>>2]+1;wb(d+688|0,d+688|0);ig(d+640|0,d+688|0);Wa(d+640|0,d+640|0);qa(d+592|0,d+640|0);ma(d+544|0,d+640|0,d+592|0);va(d+784|0,d+544|0,d+640|0);ig(d+592|0,d+592|0);va(d+784|0,d+592|0,d+784|0);b=V-464|0;V=b;e=d+784|0;ma(b+416|0,e,e);ma(b+368|0,e,b+416|0);qa(b+320|0,b+368|0);qa(b+320|0,b+320|0);ma(b+272|0,b+368|0,b+320|0);qa(b+224|0,b+272|0);qa(b+224|0,b+224|0);qa(b+224|0,b+224|0);qa(b+224|0,b+224|0);ma(b+176|0,b+272|0,b+224|0);La(b+128|0,b+176|0);lb(b+128|0,2,b+368|0);La(b+80|0,b+128|0);lb(b+128|0,10,b+80|0);lb(b+128|0,10,b+80|0);La(b+32|0,b+128|0);lb(b+128|0,30,b+32|0);La(b+32|0,b+128|0);lb(b+128|0,60,b+32|0);La(b+32|0,b+128|0);lb(b+128|0,120,b+32|0);lb(b+128|0,10,b+80|0);lb(b+128|0,3,b+368|0);qa(b+128|0,b+128|0);cb(b,b+128|0);V=b+464|0;b=v[b+1|0]&1;Wa(d+736|0,d+640|0);Ma(d+640|0,d+736|0,b);vb(d+592|0);Ma(d+592|0,34560,b);xa(d+640|0,d+640|0,d+592|0);Ea(d+384|0);va(d+224|0,d+640|0,d+384|0);xa(d+48|0,d+640|0,d+384|0);wb(d+96|0,d+224|0);ma(d,d+48|0,d+96|0);cb(a,d);v[a+31|0]=y[a+31|0]|c;if(ob(d+384|0,a)){R();N()}kb(d+224|0,d+384|0);ab(d+96|0,d+224|0);Va(d+224|0,d+96|0);ab(d+96|0,d+224|0);Va(d+224|0,d+96|0);wa(d+384|0,d+224|0);mb(a,d+384|0);V=d+832|0}function Se(a){var b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0;b=V+-64|0;V=b;dc(b,a);h=x[b+28>>2];i=x[b+12>>2];d=x[b+44>>2];e=x[b+60>>2];j=x[b+8>>2];r=x[b+56>>2];f=x[b+24>>2];o=x[b+40>>2];p=x[b+52>>2];s=x[b+36>>2];g=x[b+4>>2];q=x[b+20>>2];m=x[b+32>>2];k=x[b+16>>2];n=x[b+48>>2];c=x[b>>2];while(1){l=Gj(g+q|0,7)^s;t=Gj(l+q|0,9)^p;k=Gj(c+n|0,7)^k;u=Gj(k+c|0,9)^m;v=Gj(u+k|0,13)^n;i=Gj(d+e|0,7)^i;h=Gj(i+e|0,9)^h;m=Gj(h+i|0,13)^d;e=Gj(h+m|0,18)^e;d=Gj(f+o|0,7)^r;n=v^Gj(e+d|0,7);p=t^Gj(n+e|0,9);r=Gj(n+p|0,13)^d;e=Gj(p+r|0,18)^e;j=Gj(d+o|0,9)^j;w=Gj(j+d|0,13)^f;f=Gj(w+j|0,18)^o;d=Gj(f+l|0,7)^m;m=Gj(d+f|0,9)^u;s=Gj(d+m|0,13)^l;o=Gj(m+s|0,18)^f;l=Gj(l+t|0,13)^g;g=Gj(l+t|0,18)^q;f=Gj(g+k|0,7)^w;h=Gj(f+g|0,9)^h;k=Gj(f+h|0,13)^k;q=Gj(h+k|0,18)^g;c=Gj(u+v|0,18)^c;g=Gj(c+i|0,7)^l;j=Gj(g+c|0,9)^j;i=Gj(j+g|0,13)^i;c=Gj(j+i|0,18)^c;l=y>>>0<6;y=y+2|0;if(l){continue}break}x[b+48>>2]=n;x[b+32>>2]=m;x[b+16>>2]=k;x[b+20>>2]=q;x[b+52>>2]=p;x[b+36>>2]=s;x[b+4>>2]=g;x[b+40>>2]=o;x[b+56>>2]=r;x[b+24>>2]=f;x[b+60>>2]=e;x[b+8>>2]=j;x[b+44>>2]=d;x[b+28>>2]=h;x[b+12>>2]=i;x[b>>2]=c;x[a>>2]=x[a>>2]+c;c=1;while(1){d=c<<2;e=d+a|0;x[e>>2]=x[e>>2]+x[b+d>>2];c=c+1|0;if((c|0)!=16){continue}break}V=b- -64|0}function pg(a,b,c){var d=0,e=0,f=0,g=0;d=V-4032|0;V=d;Ca(d+160|0,c);kb(d+3528|0,c);wa(d+2408|0,d+3528|0);e=d+320|0;Ca(e,d+2408|0);Da(d+3368|0,c,e);wa(d+2248|0,d+3368|0);Ca(d+480|0,d+2248|0);kb(d+3208|0,d+2408|0);wa(d+2088|0,d+3208|0);e=d+640|0;Ca(e,d+2088|0);Da(d+3048|0,c,e);wa(d+1928|0,d+3048|0);Ca(d+800|0,d+1928|0);kb(d+2888|0,d+2248|0);wa(d+1768|0,d+2888|0);e=d+960|0;Ca(e,d+1768|0);Da(d+2728|0,c,e);wa(d+1608|0,d+2728|0);Ca(d+1120|0,d+1608|0);kb(d+2568|0,d+2088|0);wa(d+1448|0,d+2568|0);Ca(d+1280|0,d+1448|0);e=0;c=0;while(1){f=c<<1;g=y[b+c|0];v[f+(d+3968|0)|0]=g&15;v[(d+3968|0)+(f|1)|0]=g>>>4;c=c+1|0;if((c|0)!=32){continue}break}c=0;while(1){b=c;c=(d+3968|0)+e|0;f=b+y[c|0]|0;b=(f<<24)- -134217728|0;v[c|0]=f-(b>>24&240);c=b>>28;e=e+1|0;if((e|0)!=63){continue}break}e=y[d+4031|0]+c|0;v[d+4031|0]=e;Cd(a);c=62;while(1){og(d,d+160|0,e<<24>>24);Da(d+3808|0,a,d);ab(d+3688|0,d+3808|0);Va(d+3808|0,d+3688|0);ab(d+3688|0,d+3808|0);Va(d+3808|0,d+3688|0);ab(d+3688|0,d+3808|0);Va(d+3808|0,d+3688|0);ab(d+3688|0,d+3808|0);Va(d+3808|0,d+3688|0);wa(a,d+3808|0);if(c){e=y[(d+3968|0)+c|0];c=c-1|0;continue}break}og(d,d+160|0,v[d+3968|0]);Da(d+3808|0,a,d);wa(a,d+3808|0);V=d+4032|0}function Dg(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=V-112|0;V=f;h=b;g=c;if(b|g){b=y[e+28|0]|y[e+29|0]<<8|(y[e+30|0]<<16|y[e+31|0]<<24);x[f+24>>2]=y[e+24|0]|y[e+25|0]<<8|(y[e+26|0]<<16|y[e+27|0]<<24);x[f+28>>2]=b;b=y[e+20|0]|y[e+21|0]<<8|(y[e+22|0]<<16|y[e+23|0]<<24);x[f+16>>2]=y[e+16|0]|y[e+17|0]<<8|(y[e+18|0]<<16|y[e+19|0]<<24);x[f+20>>2]=b;b=y[e+4|0]|y[e+5|0]<<8|(y[e+6|0]<<16|y[e+7|0]<<24);x[f>>2]=y[e|0]|y[e+1|0]<<8|(y[e+2|0]<<16|y[e+3|0]<<24);x[f+4>>2]=b;b=y[e+12|0]|y[e+13|0]<<8|(y[e+14|0]<<16|y[e+15|0]<<24);x[f+8>>2]=y[e+8|0]|y[e+9|0]<<8|(y[e+10|0]<<16|y[e+11|0]<<24);x[f+12>>2]=b;b=y[d|0]|y[d+1|0]<<8|(y[d+2|0]<<16|y[d+3|0]<<24);c=y[d+4|0]|y[d+5|0]<<8|(y[d+6|0]<<16|y[d+7|0]<<24);x[f+104>>2]=0;x[f+108>>2]=0;x[f+96>>2]=b;x[f+100>>2]=c;a:{if(!g&h>>>0>=64|g){while(1){Tb(a,f+96|0,f,0);b=8;c=1;while(1){d=(f+96|0)+b|0;c=y[d|0]+c|0;v[d|0]=c;c=c>>>8|0;b=b+1|0;if((b|0)!=16){continue}break}a=a- -64|0;g=g-1|0;b=h+-64|0;g=b>>>0<4294967232?g+1|0:g;h=b;if(!g&b>>>0>63|g){continue}break}if(!(g|h)){break a}}b=0;Tb(f+32|0,f+96|0,f,0);while(1){v[a+b|0]=y[(f+32|0)+b|0];b=b+1|0;if((h|0)!=(b|0)){continue}break}}oa(f+32|0,64);oa(f,32)}V=f+112|0;return 0}function Bg(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=V-112|0;V=f;h=b;g=c;if(b|g){b=y[e+28|0]|y[e+29|0]<<8|(y[e+30|0]<<16|y[e+31|0]<<24);x[f+24>>2]=y[e+24|0]|y[e+25|0]<<8|(y[e+26|0]<<16|y[e+27|0]<<24);x[f+28>>2]=b;b=y[e+20|0]|y[e+21|0]<<8|(y[e+22|0]<<16|y[e+23|0]<<24);x[f+16>>2]=y[e+16|0]|y[e+17|0]<<8|(y[e+18|0]<<16|y[e+19|0]<<24);x[f+20>>2]=b;b=y[e+4|0]|y[e+5|0]<<8|(y[e+6|0]<<16|y[e+7|0]<<24);x[f>>2]=y[e|0]|y[e+1|0]<<8|(y[e+2|0]<<16|y[e+3|0]<<24);x[f+4>>2]=b;b=y[e+12|0]|y[e+13|0]<<8|(y[e+14|0]<<16|y[e+15|0]<<24);x[f+8>>2]=y[e+8|0]|y[e+9|0]<<8|(y[e+10|0]<<16|y[e+11|0]<<24);x[f+12>>2]=b;b=y[d|0]|y[d+1|0]<<8|(y[d+2|0]<<16|y[d+3|0]<<24);c=y[d+4|0]|y[d+5|0]<<8|(y[d+6|0]<<16|y[d+7|0]<<24);x[f+104>>2]=0;x[f+108>>2]=0;x[f+96>>2]=b;x[f+100>>2]=c;a:{if(!g&h>>>0>=64|g){while(1){Sb(a,f+96|0,f,0);b=8;c=1;while(1){d=(f+96|0)+b|0;c=y[d|0]+c|0;v[d|0]=c;c=c>>>8|0;b=b+1|0;if((b|0)!=16){continue}break}a=a- -64|0;g=g-1|0;b=h+-64|0;g=b>>>0<4294967232?g+1|0:g;h=b;if(!g&b>>>0>63|g){continue}break}if(!(g|h)){break a}}b=0;Sb(f+32|0,f+96|0,f,0);while(1){v[a+b|0]=y[(f+32|0)+b|0];b=b+1|0;if((h|0)!=(b|0)){continue}break}}oa(f+32|0,64);oa(f,32)}V=f+112|0;return 0}function zj(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0;f=V-112|0;V=f;if(b|c){g=y[e+28|0]|y[e+29|0]<<8|(y[e+30|0]<<16|y[e+31|0]<<24);x[f+24>>2]=y[e+24|0]|y[e+25|0]<<8|(y[e+26|0]<<16|y[e+27|0]<<24);x[f+28>>2]=g;g=y[e+20|0]|y[e+21|0]<<8|(y[e+22|0]<<16|y[e+23|0]<<24);x[f+16>>2]=y[e+16|0]|y[e+17|0]<<8|(y[e+18|0]<<16|y[e+19|0]<<24);x[f+20>>2]=g;g=y[e+4|0]|y[e+5|0]<<8|(y[e+6|0]<<16|y[e+7|0]<<24);x[f>>2]=y[e|0]|y[e+1|0]<<8|(y[e+2|0]<<16|y[e+3|0]<<24);x[f+4>>2]=g;g=y[e+12|0]|y[e+13|0]<<8|(y[e+14|0]<<16|y[e+15|0]<<24);x[f+8>>2]=y[e+8|0]|y[e+9|0]<<8|(y[e+10|0]<<16|y[e+11|0]<<24);x[f+12>>2]=g;e=y[d|0]|y[d+1|0]<<8|(y[d+2|0]<<16|y[d+3|0]<<24);d=y[d+4|0]|y[d+5|0]<<8|(y[d+6|0]<<16|y[d+7|0]<<24);x[f+104>>2]=0;x[f+108>>2]=0;x[f+96>>2]=e;x[f+100>>2]=d;a:{if(!c&b>>>0>=64|c){while(1){Ub(a,f+96|0,f,0);e=8;d=1;while(1){g=(f+96|0)+e|0;d=y[g|0]+d|0;v[g|0]=d;d=d>>>8|0;e=e+1|0;if((e|0)!=16){continue}break}a=a- -64|0;c=c-1|0;b=b+-64|0;c=b>>>0<4294967232?c+1|0:c;if(!c&b>>>0>63|c){continue}break}if(!(b|c)){break a}}e=0;Ub(f+32|0,f+96|0,f,0);while(1){v[a+e|0]=y[(f+32|0)+e|0];e=e+1|0;if((b|0)!=(e|0)){continue}break}}oa(f+32|0,64);oa(f,32)}V=f+112|0;return 0}function Na(a,b,c,d){var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;k=V-704|0;V=k;a:{if(!(c|d)){break a}f=a;g=c;e=d<<3|g>>>29;j=x[f+72>>2];i=g<<3;g=j+i|0;h=x[f+76>>2];e=e+h|0;l=g;x[f+72>>2]=g;e=g>>>0<i>>>0?e+1|0:e;x[f+76>>2]=e;g=f- -64|0;f=g;i=(e|0)==(h|0)&l>>>0<j>>>0|e>>>0<h>>>0;l=i+x[f>>2]|0;e=x[f+4>>2];e=i>>>0>l>>>0?e+1|0:e;i=d>>>29|0;g=i+l|0;x[f>>2]=g;x[f+4>>2]=g>>>0<i>>>0?e+1|0:e;f=0;e=0;h=((h&7)<<29|j>>>3)&127;g=128-h|0;j=0-(h>>>0>128)|0;i=j;if((i|0)==(d|0)&c>>>0<g>>>0|d>>>0<i>>>0){while(1){l=f+h|0;v[(a+l|0)+80|0]=y[b+f|0];f=f+1|0;e=f>>>0<1?e+1|0:e;if((c|0)!=(f|0)|(d|0)!=(e|0)){continue}break a}}while(1){i=f+h|0;v[(a+i|0)+80|0]=y[b+f|0];f=f+1|0;e=f>>>0<1?e+1|0:e;if((g|0)!=(f|0)|(e|0)!=(j|0)){continue}break}e=k+640|0;pc(a,a+80|0,k,e);b=b+g|0;d=d-((c>>>0<g>>>0)+j|0)|0;c=c-g|0;if(!d&c>>>0>127|d){while(1){pc(a,b,k,e);b=b+128|0;d=d-(c>>>0<128)|0;c=c-128|0;if(!d&c>>>0>127|d){continue}break}}b:{if(!(c|d)){break b}h=0;f=1;e=0;while(1){v[(a+h|0)+80|0]=y[b+h|0];if((c|0)==(f|0)&(d|0)==(e|0)){break b}h=f;f=f+1|0;e=f>>>0<1?e+1|0:e;continue}}oa(k,704)}V=k+704|0;return 0}function Zf(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=V-48|0;V=e;c=y[b+28|0]|y[b+29|0]<<8|(y[b+30|0]<<16|y[b+31|0]<<24);d=y[b+24|0]|y[b+25|0]<<8|(y[b+26|0]<<16|y[b+27|0]<<24);v[a+24|0]=d;v[a+25|0]=d>>>8;v[a+26|0]=d>>>16;v[a+27|0]=d>>>24;v[a+28|0]=c;v[a+29|0]=c>>>8;v[a+30|0]=c>>>16;v[a+31|0]=c>>>24;c=y[b+4|0]|y[b+5|0]<<8|(y[b+6|0]<<16|y[b+7|0]<<24);d=y[b|0]|y[b+1|0]<<8|(y[b+2|0]<<16|y[b+3|0]<<24);v[a|0]=d;v[a+1|0]=d>>>8;v[a+2|0]=d>>>16;v[a+3|0]=d>>>24;v[a+4|0]=c;v[a+5|0]=c>>>8;v[a+6|0]=c>>>16;v[a+7|0]=c>>>24;c=y[b+20|0]|y[b+21|0]<<8|(y[b+22|0]<<16|y[b+23|0]<<24);d=y[b+16|0]|y[b+17|0]<<8|(y[b+18|0]<<16|y[b+19|0]<<24);v[a+16|0]=d;v[a+17|0]=d>>>8;v[a+18|0]=d>>>16;v[a+19|0]=d>>>24;v[a+20|0]=c;v[a+21|0]=c>>>8;v[a+22|0]=c>>>16;v[a+23|0]=c>>>24;c=y[b+12|0]|y[b+13|0]<<8|(y[b+14|0]<<16|y[b+15|0]<<24);b=y[b+8|0]|y[b+9|0]<<8|(y[b+10|0]<<16|y[b+11|0]<<24);v[a+8|0]=b;v[a+9|0]=b>>>8;v[a+10|0]=b>>>16;v[a+11|0]=b>>>24;v[a+12|0]=c;v[a+13|0]=c>>>8;v[a+14|0]=c>>>16;v[a+15|0]=c>>>24;b=y[a+31|0];v[a+31|0]=b&127;db(e,a);jg(a,e,b&128);V=e+48|0;return 0}function Ci(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0;c=b;d=y[c+32|0]|y[c+33|0]<<8|(y[c+34|0]<<16|y[c+35|0]<<24);e=y[c+36|0]|y[c+37|0]<<8|(y[c+38|0]<<16|y[c+39|0]<<24);f=y[c+40|0]|y[c+41|0]<<8|(y[c+42|0]<<16|y[c+43|0]<<24);g=y[c+44|0]|y[c+45|0]<<8|(y[c+46|0]<<16|y[c+47|0]<<24);h=y[c+48|0]|y[c+49|0]<<8|(y[c+50|0]<<16|y[c+51|0]<<24);b=y[c+52|0]|y[c+53|0]<<8|(y[c+54|0]<<16|y[c+55|0]<<24);i=y[c+60|0]|y[c+61|0]<<8|(y[c+62|0]<<16|y[c+63|0]<<24);c=y[c+56|0]|y[c+57|0]<<8|(y[c+58|0]<<16|y[c+59|0]<<24);v[a+24|0]=c;v[a+25|0]=c>>>8;v[a+26|0]=c>>>16;v[a+27|0]=c>>>24;v[a+28|0]=i;v[a+29|0]=i>>>8;v[a+30|0]=i>>>16;v[a+31|0]=i>>>24;v[a+16|0]=h;v[a+17|0]=h>>>8;v[a+18|0]=h>>>16;v[a+19|0]=h>>>24;v[a+20|0]=b;v[a+21|0]=b>>>8;v[a+22|0]=b>>>16;v[a+23|0]=b>>>24;v[a+8|0]=f;v[a+9|0]=f>>>8;v[a+10|0]=f>>>16;v[a+11|0]=f>>>24;v[a+12|0]=g;v[a+13|0]=g>>>8;v[a+14|0]=g>>>16;v[a+15|0]=g>>>24;v[a|0]=d;v[a+1|0]=d>>>8;v[a+2|0]=d>>>16;v[a+3|0]=d>>>24;v[a+4|0]=e;v[a+5|0]=e>>>8;v[a+6|0]=e>>>16;v[a+7|0]=e>>>24;return 0}function Di(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0;c=b;d=y[c+8|0]|y[c+9|0]<<8|(y[c+10|0]<<16|y[c+11|0]<<24);e=y[c+12|0]|y[c+13|0]<<8|(y[c+14|0]<<16|y[c+15|0]<<24);f=y[c+16|0]|y[c+17|0]<<8|(y[c+18|0]<<16|y[c+19|0]<<24);g=y[c+20|0]|y[c+21|0]<<8|(y[c+22|0]<<16|y[c+23|0]<<24);h=y[c|0]|y[c+1|0]<<8|(y[c+2|0]<<16|y[c+3|0]<<24);b=y[c+4|0]|y[c+5|0]<<8|(y[c+6|0]<<16|y[c+7|0]<<24);i=y[c+28|0]|y[c+29|0]<<8|(y[c+30|0]<<16|y[c+31|0]<<24);c=y[c+24|0]|y[c+25|0]<<8|(y[c+26|0]<<16|y[c+27|0]<<24);v[a+24|0]=c;v[a+25|0]=c>>>8;v[a+26|0]=c>>>16;v[a+27|0]=c>>>24;v[a+28|0]=i;v[a+29|0]=i>>>8;v[a+30|0]=i>>>16;v[a+31|0]=i>>>24;v[a+16|0]=f;v[a+17|0]=f>>>8;v[a+18|0]=f>>>16;v[a+19|0]=f>>>24;v[a+20|0]=g;v[a+21|0]=g>>>8;v[a+22|0]=g>>>16;v[a+23|0]=g>>>24;v[a+8|0]=d;v[a+9|0]=d>>>8;v[a+10|0]=d>>>16;v[a+11|0]=d>>>24;v[a+12|0]=e;v[a+13|0]=e>>>8;v[a+14|0]=e>>>16;v[a+15|0]=e>>>24;v[a|0]=h;v[a+1|0]=h>>>8;v[a+2|0]=h>>>16;v[a+3|0]=h>>>24;v[a+4|0]=b;v[a+5|0]=b>>>8;v[a+6|0]=b>>>16;v[a+7|0]=b>>>24;return 0}function wb(a,b){var c=0;c=V-192|0;V=c;qa(c+144|0,b);qa(c+96|0,c+144|0);qa(c+96|0,c+96|0);ma(c+96|0,b,c+96|0);ma(c+144|0,c+144|0,c+96|0);qa(c+48|0,c+144|0);ma(c+96|0,c+96|0,c+48|0);qa(c+48|0,c+96|0);b=2;while(1){qa(c+48|0,c+48|0);if((b|0)!=5){b=b+1|0;continue}break}ma(c+96|0,c+48|0,c+96|0);qa(c+48|0,c+96|0);b=2;while(1){qa(c+48|0,c+48|0);if((b|0)!=10){b=b+1|0;continue}break}ma(c+48|0,c+48|0,c+96|0);qa(c,c+48|0);b=2;while(1){qa(c,c);if((b|0)!=20){b=b+1|0;continue}break}ma(c+48|0,c,c+48|0);b=2;while(1){qa(c+48|0,c+48|0);if((b|0)!=11){b=b+1|0;continue}break}ma(c+96|0,c+48|0,c+96|0);qa(c+48|0,c+96|0);b=2;while(1){qa(c+48|0,c+48|0);if((b|0)!=50){b=b+1|0;continue}break}ma(c+48|0,c+48|0,c+96|0);qa(c,c+48|0);b=2;while(1){qa(c,c);if((b|0)!=100){b=b+1|0;continue}break}ma(c+48|0,c,c+48|0);b=2;while(1){qa(c+48|0,c+48|0);if((b|0)!=51){b=b+1|0;continue}break}ma(c+96|0,c+48|0,c+96|0);b=2;while(1){qa(c+96|0,c+96|0);if((b|0)!=6){b=b+1|0;continue}break}ma(a,c+96|0,c+144|0);V=c+192|0}function If(a,b,c){var d=0,e=0,f=0,g=0;d=V-16|0;V=d;f=x[a+20>>2];x[a+20>>2]=0;g=x[a+4>>2];x[a+4>>2]=0;e=-26;a:{b:{c:{d:{switch(c-1|0){case 1:e=-32;if(Ya(b,1165,9)){break a}b=b+9|0;break c;case 0:break d;default:break a}}e=-32;if(Ya(b,1156,8)){break a}b=b+8|0}if(Ya(b,1422,3)){break b}b=mc(b+3|0,d+12|0);if(!b){break b}e=-26;if(x[d+12>>2]!=19){break a}if(Ya(b,1434,3)){break b}b=mc(b+3|0,d+12|0);if(!b){break b}x[a+44>>2]=x[d+12>>2];if(Ya(b,1426,3)){break b}b=mc(b+3|0,d+12|0);if(!b){break b}x[a+40>>2]=x[d+12>>2];if(Ya(b,1430,3)){break b}b=mc(b+3|0,d+12|0);if(!b){break b}c=x[d+12>>2];x[a+48>>2]=c;x[a+52>>2]=c;c=y[b|0];if((c|0)!=36){break b}x[d+12>>2]=f;b=(c|0)==36?b+1|0:b;if(nd(x[a+16>>2],f,b,Ta(b),0,d+12|0,d+8|0,3)){break b}x[a+20>>2]=x[d+12>>2];b=x[d+8>>2];c=y[b|0];if((c|0)!=36){break b}x[d+12>>2]=g;b=(c|0)==36?b+1|0:b;if(nd(x[a>>2],g,b,Ta(b),0,d+12|0,d+8|0,3)){break b}x[a+4>>2]=x[d+12>>2];b=x[d+8>>2];e=Dc(a);if(e){break a}e=y[b|0]?-32:0;break a}e=-32}V=d+16|0;return e}function Ej(a,b,c){var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;a:{b:{c:{d:{e:{f:{g:{h:{i:{e=b;if(e){d=c;if(!d){break i}break h}b=a;a=(a>>>0)/(c>>>0)|0;W=b-D(a,c)|0;X=0;Y=0;return a}if(!a){break g}break f}g=d-1|0;if(!(g&d)){break e}g=(G(d)+33|0)-G(e)|0;i=0-g|0;break c}W=0;a=(e>>>0)/0|0;X=e-D(a,0)|0;Y=0;return a}d=32-G(e)|0;if(d>>>0<31){break d}break b}W=a&g;X=0;if((d|0)==1){break a}if(d){d=31-G(d-1^d)|0}else{d=32}c=d&31;if((d&63)>>>0>=32){e=0;a=b>>>c|0}else{e=b>>>c|0;a=((1<<c)-1&b)<<32-c|a>>>c}Y=e;return a}g=d+1|0;i=63-d|0}d=b;e=g&63;f=e&31;if(e>>>0>=32){e=0;f=d>>>f|0}else{e=d>>>f|0;f=((1<<f)-1&d)<<32-f|a>>>f}i=i&63;d=i&31;if(i>>>0>=32){b=a<<d;a=0}else{b=(1<<d)-1&a>>>32-d|b<<d;a=a<<d}if(g){d=c-1|0;i=(d|0)!=-1?0:-1;while(1){h=f<<1|b>>>31;j=h;e=e<<1|f>>>31;h=i-(e+(d>>>0<h>>>0)|0)>>31;k=c&h;f=j-k|0;e=e-(j>>>0<k>>>0)|0;b=b<<1|a>>>31;a=l|a<<1;h=h&1;l=h;g=g-1|0;if(g){continue}break}}W=f;X=e;Y=b<<1|a>>>31;return h|a<<1}W=a;X=b;a=0;b=0}Y=b;return a}function Kd(a,b){var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;e=x[a+60>>2];d=e;c=x[a+56>>2];if(d|c){e=c;g=c+a|0;v[g- -64|0]=1;c=c+1|0;d=c>>>0<1?d+1|0:d;if(!d&c>>>0<=15){ya(g+65|0,0,15-e|0)}v[a+80|0]=1;Bc(a,a- -64|0,16,0)}q=x[a+52>>2];r=x[a+48>>2];s=x[a+44>>2];f=x[a+24>>2];h=x[a+28>>2]+(f>>>26|0)|0;c=x[a+32>>2]+(h>>>26|0)|0;k=x[a+36>>2]+(c>>>26|0)|0;d=x[a+20>>2]+D(k>>>26|0,5)|0;g=d&67108863;m=g+5|0;n=c&67108863;e=h&67108863;c=(f&67108863)+(d>>>26|0)|0;d=c+(m>>>26|0)|0;f=e+(d>>>26|0)|0;o=n+(f>>>26|0)|0;l=(k|-67108864)+(o>>>26|0)|0;i=l>>31;p=(l>>>31|0)-1|0;j=p&67108863;h=c&i|j&d;c=h<<26|(j&m|g&i);g=c+x[a+40>>2]|0;d=0;d=c>>>0>g>>>0?1:d;ra(b,g);f=e&i|f&j;c=f<<20|h>>>6;h=c+s|0;e=0;e=c>>>0>h>>>0?1:e;c=d;h=c+h|0;d=e;d=c>>>0>h>>>0?d+1|0:d;ra(b+4|0,h);g=i&n|j&o;c=g<<14|f>>>12;f=c+r|0;e=0;e=c>>>0>f>>>0?1:e;c=d;f=c+f|0;d=e;d=c>>>0>f>>>0?d+1|0:d;ra(b+8|0,f);e=b+12|0;b=(l&p|i&k)<<8|g>>>18;g=b+q|0;d=d+g|0;ra(e,d);oa(a,88)}function Ac(a,b){var c=0,d=0;c=V-144|0;V=c;qa(c+96|0,b);qa(c+48|0,c+96|0);qa(c+48|0,c+48|0);ma(c+48|0,b,c+48|0);ma(c+96|0,c+96|0,c+48|0);qa(c+96|0,c+96|0);ma(c+96|0,c+48|0,c+96|0);qa(c+48|0,c+96|0);d=2;while(1){qa(c+48|0,c+48|0);if((d|0)!=5){d=d+1|0;continue}break}ma(c+96|0,c+48|0,c+96|0);qa(c+48|0,c+96|0);d=2;while(1){qa(c+48|0,c+48|0);if((d|0)!=10){d=d+1|0;continue}break}ma(c+48|0,c+48|0,c+96|0);qa(c,c+48|0);d=2;while(1){qa(c,c);if((d|0)!=20){d=d+1|0;continue}break}ma(c+48|0,c,c+48|0);d=2;while(1){qa(c+48|0,c+48|0);if((d|0)!=11){d=d+1|0;continue}break}ma(c+96|0,c+48|0,c+96|0);qa(c+48|0,c+96|0);d=2;while(1){qa(c+48|0,c+48|0);if((d|0)!=50){d=d+1|0;continue}break}ma(c+48|0,c+48|0,c+96|0);qa(c,c+48|0);d=2;while(1){qa(c,c);if((d|0)!=100){d=d+1|0;continue}break}ma(c+48|0,c,c+48|0);d=2;while(1){qa(c+48|0,c+48|0);if((d|0)!=51){d=d+1|0;continue}break}ma(c+96|0,c+48|0,c+96|0);qa(c+96|0,c+96|0);qa(c+96|0,c+96|0);ma(a,c+96|0,b);V=c+144|0}function qb(a,b,c,d){var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;k=V-288|0;V=k;a:{if(!(c|d)){break a}e=x[a+36>>2];i=e;l=x[a+32>>2];f=c<<3;j=l+f|0;e=e+(d<<3|c>>>29)|0;x[a+32>>2]=j;x[a+36>>2]=f>>>0>j>>>0?e+1|0:e;f=((i&7)<<29|l>>>3)&63;i=64-f|0;j=0-(f>>>0>64)|0;if((j|0)==(d|0)&c>>>0<i>>>0|d>>>0<j>>>0){while(1){e=h+f|0;v[(a+e|0)+40|0]=y[b+h|0];e=g;g=h+1|0;e=g>>>0<1?e+1|0:e;h=g;g=e;if((c|0)!=(h|0)|(d|0)!=(e|0)){continue}break a}}while(1){e=h+f|0;v[(a+e|0)+40|0]=y[b+h|0];e=h+1|0;g=e>>>0<1?g+1|0:g;h=e;if((i|0)!=(e|0)|(g|0)!=(j|0)){continue}break}f=k+256|0;hc(a,a+40|0,k,f);b=b+i|0;g=c;c=i;d=d-((g>>>0<c>>>0)+j|0)|0;c=g-c|0;if(!d&c>>>0>63|d){while(1){hc(a,b,k,f);b=b- -64|0;d=d-1|0;c=c+-64|0;d=c>>>0<4294967232?d+1|0:d;if(!d&c>>>0>63|d){continue}break}}b:{if(!(c|d)){break b}f=0;h=1;g=0;while(1){v[(a+f|0)+40|0]=y[b+f|0];if((c|0)==(h|0)&(d|0)==(g|0)){break b}f=h;e=f+1|0;g=e>>>0<1?g+1|0:g;h=e;continue}}oa(k,288)}V=k+288|0;return 0}function od(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;pd(e);f=(d>>>0)/3|0;g=f<<2;f=D(f,-3)+d|0;a:{if(!f){break a}if(!(e&2)){g=g+4|0;break a}g=(g|2)+(f>>>1|0)|0}b:{c:{d:{e:{if(b>>>0>g>>>0){f:{if(e&4){if(!d){break c}f=8;e=0;break f}if(!d){break c}f=8;e=0;break e}while(1){j=y[c+h|0];k=j|i;while(1){i=f;f=f-6|0;l=a+e|0,m=Kf(k>>>f&63),v[l|0]=m;e=e+1|0;if(f>>>0>5){continue}break}h=h+1|0;if((h|0)!=(d|0)){f=f+8|0;i=k<<8;continue}break}if(!f){break b}c=Kf(j<<12-i&63);break d}Aa();N()}while(1){j=y[c+h|0];k=j|i;while(1){i=f;f=f-6|0;l=a+e|0,m=Jf(k>>>f&63),v[l|0]=m;e=e+1|0;if(f>>>0>5){continue}break}h=h+1|0;if((h|0)!=(d|0)){f=f+8|0;i=k<<8;continue}break}if(!f){break b}c=Jf(j<<12-i&63)}v[a+e|0]=c;e=e+1|0;break b}e=0}g:{h:{if(e>>>0<=g>>>0){if(e>>>0<g>>>0){break h}g=e;break g}Q(1104,1201,230,1505);N()}ya(a+e|0,61,g-e|0)}c=g+1|0;ya(a+g|0,0,(b>>>0>c>>>0?b:c)-g|0);return a|0}function gh(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0;n=i;p=j;k=V-352|0;V=k;if(c){x[c>>2]=0;x[c+4>>2]=0}if(d){v[d|0]=255}i=-1;a:{b:{c:{if(!g&f>>>0<17){break c}j=f;l=g-(j>>>0<17)|0;m=j-17|0;j=l;if(!j&m>>>0>=4294967279|j){break b}l=a+32|0;Bb(k+32|0,64,0,l,a);Sa(k+96|0,k+32|0);oa(k+32|0,64);ta(k+96|0,h,n,p);ta(k+96|0,36304,0-n&15,0);ya(k+32|0,0,64);v[k+32|0]=y[e|0];ub(k+32|0,k+32|0,64,0,l,1,a);h=y[k+32|0];v[k+32|0]=y[e|0];ta(k+96|0,k+32|0,64,0);o=e+1|0;ta(k+96|0,o,m,j);ta(k+96|0,36304,f-1&15,0);Ba(k+24|0,n,p);ta(k+96|0,k+24|0,8,0);e=f+47|0;g=e>>>0<47?g+1|0:g;Ba(k+24|0,e,g);ta(k+96|0,k+24|0,8,0);Ra(k+96|0,k);oa(k+96|0,256);if(rb(k,m+o|0,16)){oa(k,16);break c}ub(b,o,m,j,l,2,a);oe(a+36|0,k);gf(l);d:{if(!(h&2)){if(!fb(l,4)){break d}}Mc(a)}if(c){x[c>>2]=m;x[c+4>>2]=j}i=0;if(!d){break c}v[d|0]=h}V=k+352|0;break a}Aa();N()}return i|0}function Xf(a,b){a=a|0;b=b|0;var c=0;c=V-736|0;V=c;Fb(c+704|0,b);Ga(c+224|0,b,c+704|0);Ga(c+672|0,b,c+224|0);Fb(c+640|0,c+672|0);Ga(c+416|0,c+704|0,c+640|0);Ga(c+320|0,b,c+416|0);Fb(c+608|0,c+640|0);Fb(c+288|0,c+320|0);Ga(c+576|0,c+416|0,c+288|0);Ga(c+448|0,c+608|0,c+288|0);Fb(c+544|0,c+576|0);Ga(c+384|0,c+608|0,c+544|0);Ga(c+352|0,c+224|0,c+384|0);Ga(c+192|0,c+608|0,c+352|0);Ga(c+160|0,c+672|0,c+192|0);Ga(c+96|0,c+672|0,c+160|0);Ga(c+512|0,c+544|0,c+352|0);Ga(c+480|0,c+672|0,c+512|0);Ga(c+256|0,c+448|0,c+480|0);Ga(c+128|0,c+288|0,c+256|0);Ga(c- -64|0,c+384|0,c+480|0);Ga(c+32|0,c+672|0,c- -64|0);Ga(c,c+416|0,c+32|0);Ga(a,c+320|0,c);Qa(a,126,c+352|0);Qa(a,9,c+704|0);Ga(a,a,c);Qa(a,7,c+160|0);Qa(a,9,c);Qa(a,11,c+256|0);Qa(a,8,c- -64|0);Qa(a,9,c+96|0);Qa(a,6,c+320|0);Qa(a,14,c+512|0);Qa(a,10,c+192|0);Qa(a,9,c+480|0);Qa(a,10,c);Qa(a,8,c+128|0);Qa(a,8,c+32|0);V=c+736|0;return 0-fb(b,32)|0}function Bd(a){var b=0,c=0,d=0;c=V-160|0;V=c;b=V-1760|0;V=b;Ca(b+480|0,a);kb(b+320|0,a);wa(b,b+320|0);Da(b+320|0,b,b+480|0);wa(b+160|0,b+320|0);a=b+640|0;Ca(a,b+160|0);Da(b+320|0,b,a);wa(b+160|0,b+320|0);a=b+800|0;Ca(a,b+160|0);Da(b+320|0,b,a);wa(b+160|0,b+320|0);a=b+960|0;Ca(a,b+160|0);Da(b+320|0,b,a);wa(b+160|0,b+320|0);a=b+1120|0;Ca(a,b+160|0);Da(b+320|0,b,a);wa(b+160|0,b+320|0);a=b+1280|0;Ca(a,b+160|0);Da(b+320|0,b,a);wa(b+160|0,b+320|0);a=b+1440|0;Ca(a,b+160|0);Da(b+320|0,b,a);wa(b+160|0,b+320|0);Ca(b+1600|0,b+160|0);Cd(c);a=252;while(1){kb(b+320|0,c);d=a;a=v[a+34304|0];a:{if((a|0)>=1){wa(b+160|0,b+320|0);Da(b+320|0,b+160|0,(b+480|0)+D((a&254)>>>1|0,160)|0);break a}if((a|0)>-1){break a}wa(b+160|0,b+320|0);zc(b+320|0,b+160|0,(b+480|0)+D((0-a&254)>>>1|0,160)|0)}wa(c,b+320|0);a=d-1|0;if(d){continue}break}V=b+1760|0;a=Xa(c);V=c+160|0;return a}function Ld(a,b,c,d){var e=0,f=0,g=0,h=0,i=0,j=0;a:{g=x[a+56>>2];i=x[a+60>>2];if(g|i){e=g;h=16-e|0;e=0-((e>>>0>16)+i|0)|0;f=(e|0)==(d|0)&c>>>0<h>>>0|d>>>0<e>>>0;h=f?c:h;e=f?d:e;j=e;if(e|h){f=0;e=0;while(1){i=f+g|0;v[(a+i|0)- -64|0]=y[b+f|0];g=x[a+56>>2];i=x[a+60>>2];f=f+1|0;e=f>>>0<1?e+1|0:e;if((h|0)!=(f|0)|(e|0)!=(j|0)){continue}break}}e=g;g=h;f=e+g|0;e=i+j|0;e=g>>>0>f>>>0?e+1|0:e;g=f;x[a+56>>2]=g;x[a+60>>2]=e;if(!e&g>>>0<16){break a}Bc(a,a- -64|0,16,0);x[a+56>>2]=0;x[a+60>>2]=0;e=c;g=h;c=e-g|0;d=d-((e>>>0<g>>>0)+j|0)|0;b=b+g|0}if(!d&c>>>0>=16|d){e=c&-16;Bc(a,b,e,d);c=c&15;d=0;b=b+e|0}if(!(c|d)){break a}f=0;e=0;while(1){g=f+x[a+56>>2]|0;v[(a+g|0)- -64|0]=y[b+f|0];h=f+1|0;e=h>>>0<1?e+1|0:e;f=h;if((c|0)!=(f|0)|(d|0)!=(e|0)){continue}break}b=a;e=c+x[a+56>>2]|0;a=d+x[a+60>>2]|0;x[b+56>>2]=e;x[b+60>>2]=c>>>0>e>>>0?a+1|0:a}}function Ng(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0;g=c;c=d;f=V-96|0;V=f;d=-1;if(!oc(f+32|0,f)){ic(f- -64|0,f+32|0,e);d=kf(a+32|0,b,g,c,f- -64|0,e,f);b=x[f+60>>2];c=x[f+56>>2];v[a+24|0]=c;v[a+25|0]=c>>>8;v[a+26|0]=c>>>16;v[a+27|0]=c>>>24;v[a+28|0]=b;v[a+29|0]=b>>>8;v[a+30|0]=b>>>16;v[a+31|0]=b>>>24;b=x[f+52>>2];c=x[f+48>>2];v[a+16|0]=c;v[a+17|0]=c>>>8;v[a+18|0]=c>>>16;v[a+19|0]=c>>>24;v[a+20|0]=b;v[a+21|0]=b>>>8;v[a+22|0]=b>>>16;v[a+23|0]=b>>>24;b=x[f+44>>2];c=x[f+40>>2];v[a+8|0]=c;v[a+9|0]=c>>>8;v[a+10|0]=c>>>16;v[a+11|0]=c>>>24;v[a+12|0]=b;v[a+13|0]=b>>>8;v[a+14|0]=b>>>16;v[a+15|0]=b>>>24;b=x[f+36>>2];c=x[f+32>>2];v[a|0]=c;v[a+1|0]=c>>>8;v[a+2|0]=c>>>16;v[a+3|0]=c>>>24;v[a+4|0]=b;v[a+5|0]=b>>>8;v[a+6|0]=b>>>16;v[a+7|0]=b>>>24;oa(f,32);oa(f+32|0,32);oa(f- -64|0,24)}V=f+96|0;return d|0}function Bh(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0;g=c;c=d;f=V-96|0;V=f;d=-1;if(!ve(f+32|0,f)){ic(f- -64|0,f+32|0,e);d=te(a+32|0,b,g,c,f- -64|0,e,f);b=x[f+60>>2];c=x[f+56>>2];v[a+24|0]=c;v[a+25|0]=c>>>8;v[a+26|0]=c>>>16;v[a+27|0]=c>>>24;v[a+28|0]=b;v[a+29|0]=b>>>8;v[a+30|0]=b>>>16;v[a+31|0]=b>>>24;b=x[f+52>>2];c=x[f+48>>2];v[a+16|0]=c;v[a+17|0]=c>>>8;v[a+18|0]=c>>>16;v[a+19|0]=c>>>24;v[a+20|0]=b;v[a+21|0]=b>>>8;v[a+22|0]=b>>>16;v[a+23|0]=b>>>24;b=x[f+44>>2];c=x[f+40>>2];v[a+8|0]=c;v[a+9|0]=c>>>8;v[a+10|0]=c>>>16;v[a+11|0]=c>>>24;v[a+12|0]=b;v[a+13|0]=b>>>8;v[a+14|0]=b>>>16;v[a+15|0]=b>>>24;b=x[f+36>>2];c=x[f+32>>2];v[a|0]=c;v[a+1|0]=c>>>8;v[a+2|0]=c>>>16;v[a+3|0]=c>>>24;v[a+4|0]=b;v[a+5|0]=b>>>8;v[a+6|0]=b>>>16;v[a+7|0]=b>>>24;oa(f,32);oa(f+32|0,32);oa(f- -64|0,24)}V=f+96|0;return d|0}function xc(a,b,c){var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0;m=x[b+4>>2];n=x[a+4>>2];o=x[b+8>>2];e=x[a+8>>2];p=x[b+12>>2];f=x[a+12>>2];q=x[b+16>>2];g=x[a+16>>2];r=x[b+20>>2];h=x[a+20>>2];s=x[b+24>>2];i=x[a+24>>2];t=x[b+28>>2];j=x[a+28>>2];u=x[b+32>>2];k=x[a+32>>2];v=x[b+36>>2];l=x[a+36>>2];c=0-c|0;w=x[b>>2];d=x[a>>2];y=c&(w^d);x[a>>2]=y^d;d=l;l=c&(l^v);x[a+36>>2]=d^l;d=k;k=c&(k^u);x[a+32>>2]=d^k;d=j;j=c&(j^t);x[a+28>>2]=d^j;d=i;i=c&(i^s);x[a+24>>2]=d^i;d=h;h=c&(h^r);x[a+20>>2]=d^h;d=g;g=c&(g^q);x[a+16>>2]=d^g;d=f;f=c&(f^p);x[a+12>>2]=d^f;d=e;e=c&(e^o);x[a+8>>2]=d^e;d=a;a=c&(m^n);x[d+4>>2]=a^n;x[b+36>>2]=l^v;x[b+32>>2]=k^u;x[b+28>>2]=j^t;x[b+24>>2]=i^s;x[b+20>>2]=h^r;x[b+16>>2]=g^q;x[b+12>>2]=f^p;x[b+8>>2]=e^o;x[b+4>>2]=a^m;x[b>>2]=w^y}function gg(a,b){var c=0,d=0;c=V-672|0;V=c;Ea(c+528|0);qa(c+480|0,b);ma(c+480|0,2224,c+480|0);va(c+240|0,c+480|0,c+528|0);ma(c+240|0,c+240|0,34608);Ea(c+624|0);Wa(c+624|0,c+624|0);va(c+432|0,c+480|0,2176);ma(c+192|0,c+480|0,2176);xa(c+192|0,c+624|0,c+192|0);ma(c+192|0,c+192|0,c+432|0);d=zd(c+384|0,c+240|0,c+192|0);ma(c+336|0,c+384|0,b);yc(c+336|0,c+336|0);Wa(c+336|0,c+336|0);b=1-d|0;Ma(c+384|0,c+336|0,b);Ma(c+624|0,c+480|0,b);xa(c+576|0,c+480|0,c+528|0);ma(c+576|0,c+576|0,c+624|0);ma(c+576|0,c+576|0,34656);xa(c+576|0,c+576|0,c+192|0);va(c+144|0,c+384|0,c+384|0);ma(c+144|0,c+144|0,c+192|0);ma(c+96|0,c+576|0,34704);qa(c+288|0,c+384|0);xa(c+48|0,c+528|0,c+288|0);va(c,c+528|0,c+288|0);ma(a,c+144|0,c);ma(a+40|0,c+48|0,c+96|0);ma(a+80|0,c+96|0,c);ma(a+120|0,c+144|0,c+48|0);V=c+672|0}function Md(a,b){var c=0;x[a>>2]=(y[b|0]|y[b+1|0]<<8|(y[b+2|0]<<16|y[b+3|0]<<24))&67108863;x[a+4>>2]=(y[b+3|0]|y[b+4|0]<<8|(y[b+5|0]<<16|y[b+6|0]<<24))>>>2&67108611;x[a+8>>2]=(y[b+6|0]|y[b+7|0]<<8|(y[b+8|0]<<16|y[b+9|0]<<24))>>>4&67092735;x[a+12>>2]=(y[b+9|0]|y[b+10|0]<<8|(y[b+11|0]<<16|y[b+12|0]<<24))>>>6&66076671;c=y[b+12|0]|y[b+13|0]<<8|(y[b+14|0]<<16|y[b+15|0]<<24);x[a+20>>2]=0;x[a+24>>2]=0;x[a+28>>2]=0;x[a+32>>2]=0;x[a+36>>2]=0;x[a+16>>2]=c>>>8&1048575;x[a+40>>2]=y[b+16|0]|y[b+17|0]<<8|(y[b+18|0]<<16|y[b+19|0]<<24);x[a+44>>2]=y[b+20|0]|y[b+21|0]<<8|(y[b+22|0]<<16|y[b+23|0]<<24);x[a+48>>2]=y[b+24|0]|y[b+25|0]<<8|(y[b+26|0]<<16|y[b+27|0]<<24);b=y[b+28|0]|y[b+29|0]<<8|(y[b+30|0]<<16|y[b+31|0]<<24);v[a+80|0]=0;x[a+56>>2]=0;x[a+60>>2]=0;x[a+52>>2]=b}function hh(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0;k=e;e=f;f=k|0;k=V-336|0;V=k;if(c){x[c>>2]=0;x[c+4>>2]=0}a:{if(!e&f>>>0<4294967279){l=a+32|0;Bb(k+16|0,64,0,l,a);Sa(k+80|0,k+16|0);oa(k+16|0,64);ta(k+80|0,g,h,i);ta(k+80|0,36304,0-h&15,0);ya(k+16|0,0,64);v[k+16|0]=j;ub(k+16|0,k+16|0,64,0,l,1,a);ta(k+80|0,k+16|0,64,0);v[b|0]=y[k+16|0];g=b+1|0;ub(g,d,f,e,l,2,a);ta(k+80|0,g,f,e);ta(k+80|0,36304,f&15,0);Ba(k+8|0,h,i);ta(k+80|0,k+8|0,8,0);Ba(k+8|0,f- -64|0,e-((f>>>0<4294967232)-1|0)|0);ta(k+80|0,k+8|0,8,0);b=f+g|0;Ra(k+80|0,b);oa(k+80|0,256);oe(a+36|0,b);gf(l);b:{if(!(j&2)){if(!fb(l,4)){break b}}Mc(a)}if(c){a=f+17|0;e=a>>>0<17?e+1|0:e;x[c>>2]=a;x[c+4>>2]=e}V=k+336|0;break a}Aa();N()}return 0}function kj(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;a:{b:{if(!d){break b}c:{d:{e:while(1){i=h;while(1){f:{m=y[c+i|0];j=(m&223)-55&255;n=(j+65526^j+65520)>>>8|0;o=m^48;p=o+65526>>>8|0;if(!((n|p)&255)){j=1;if(!e|l&255){break d}if(Pb(e,m)){break f}h=i;break b}if(b>>>0<=k>>>0){x[9301]=68;j=0;break d}h=j&n|o&p;g:{if(!(l&255)){q=h<<4;break g}v[a+k|0]=h|q;k=k+1|0}l=l^-1;j=1;h=i+1|0;if(h>>>0<d>>>0){continue e}break c}l=0;i=i+1|0;if(i>>>0<d>>>0){continue}break}break}a=h+1|0;h=a>>>0<d>>>0?d:a;break b}h=i}if(l&255){x[9301]=28;h=h-1|0;k=0;i=-1;break a}if(j){break b}k=0;i=-1;break a}i=0}h:{if(g){x[g>>2]=c+h;break h}if((d|0)==(h|0)){break h}x[9301]=28;i=-1}if(f){x[f>>2]=k}return i|0}function cb(a,b){var c=0,d=0;d=V-48|0;V=d;Hd(d,b);b=x[d>>2];v[a|0]=b;v[a+2|0]=b>>>16;v[a+1|0]=b>>>8;c=x[d+4>>2];v[a+5|0]=c>>>14;v[a+4|0]=c>>>6;v[a+3|0]=c<<2|b>>>24;b=x[d+8>>2];v[a+8|0]=b>>>13;v[a+7|0]=b>>>5;v[a+6|0]=b<<3|c>>>22;c=x[d+12>>2];v[a+11|0]=c>>>11;v[a+10|0]=c>>>3;v[a+9|0]=c<<5|b>>>21;b=x[d+16>>2];v[a+15|0]=b>>>18;v[a+14|0]=b>>>10;v[a+13|0]=b>>>2;v[a+12|0]=b<<6|c>>>19;b=x[d+20>>2];v[a+16|0]=b;v[a+18|0]=b>>>16;v[a+17|0]=b>>>8;c=x[d+24>>2];v[a+21|0]=c>>>15;v[a+20|0]=c>>>7;v[a+19|0]=c<<1|b>>>24;b=x[d+28>>2];v[a+24|0]=b>>>13;v[a+23|0]=b>>>5;v[a+22|0]=b<<3|c>>>23;c=x[d+32>>2];v[a+27|0]=c>>>12;v[a+26|0]=c>>>4;v[a+25|0]=c<<4|b>>>21;b=x[d+36>>2];v[a+31|0]=b>>>18;v[a+30|0]=b>>>10;v[a+29|0]=b>>>2;v[a+28|0]=b<<6|c>>>20;V=d+48|0}function Jb(a,b,c,d){var e=0,f=0,g=0,h=0,i=0,j=0;a:{if(!(c|d)){break a}j=a+224|0;g=a+96|0;e=y[a+352|0]|y[a+353|0]<<8|(y[a+354|0]<<16|y[a+355|0]<<24);while(1){h=(a+e|0)+96|0;f=256-e|0;i=f;if(!d&c>>>0<=f>>>0){za(h,b,c);b=c+(y[a+352|0]|y[a+353|0]<<8|(y[a+354|0]<<16|y[a+355|0]<<24))|0;v[a+352|0]=b;v[a+353|0]=b>>>8;v[a+354|0]=b>>>16;v[a+355|0]=b>>>24;break a}za(h,b,f);e=(y[a+352|0]|y[a+353|0]<<8|(y[a+354|0]<<16|y[a+355|0]<<24))+f|0;v[a+352|0]=e;v[a+353|0]=e>>>8;v[a+354|0]=e>>>16;v[a+355|0]=e>>>24;Jc(a,128);Wc(a,g);za(g,j,128);e=(y[a+352|0]|y[a+353|0]<<8|(y[a+354|0]<<16|y[a+355|0]<<24))-128|0;v[a+352|0]=e;v[a+353|0]=e>>>8;v[a+354|0]=e>>>16;v[a+355|0]=e>>>24;b=b+f|0;f=c;c=f-i|0;d=d-(f>>>0<i>>>0)|0;if(c|d){continue}break}}return 0}function Uc(a,b,c,d,e,f){var g=0,h=0,i=0;x[f>>2]=8;i=d;a:{b:{h=a;a=!b&a>>>0>32768|(b|0)!=0;g=a?h:32768;h=a?b:0;a=h;if(!a&c>>>5>>>0<=g>>>0|a){c=c>>>11|0;a=1;b=0;while(1){if(!((a&63)>>>0>=32?0:c>>>a|0)){break b}a=a+1|0;b=a>>>0<1?b+1|0:b;if(b|(a|0)!=63){continue}break}a=63;break b}x[e>>2]=1;a=Ej(g,h,x[f>>2]<<2);b=Y;c=b>>>1|0;f=(b&1)<<31|a>>>1;a=1;b=0;while(1){d=c;h=f;g=a&31;if((a&63)>>>0>=32){e=0;d=d>>>g|0}else{e=d>>>g|0;d=((1<<g)-1&d)<<32-g|h>>>g}if(!(d|e)){break a}a=a+1|0;b=a>>>0<1?b+1|0:b;if(b|(a|0)!=63){continue}break}a=63;break a}x[d>>2]=a;c=h>>>2|0;d=(h&3)<<30|g>>>2;b=a&31;if((a&63)>>>0>=32){a=0;b=c>>>b|0}else{a=c>>>b|0;b=((1<<b)-1&c)<<32-b|d>>>b}x[e>>2]=((!a&b>>>0<1073741823?b:1073741823)>>>0)/A[f>>2];return}x[i>>2]=a}function Ei(a,b){a=a|0;b=b|0;var c=0,d=0;d=V+-64|0;V=d;Qb(d,b,32,0);v[d|0]=y[d|0]&248;v[d+31|0]=y[d+31|0]&63|64;b=x[d+20>>2];c=x[d+16>>2];v[a+16|0]=c;v[a+17|0]=c>>>8;v[a+18|0]=c>>>16;v[a+19|0]=c>>>24;v[a+20|0]=b;v[a+21|0]=b>>>8;v[a+22|0]=b>>>16;v[a+23|0]=b>>>24;b=x[d+12>>2];c=x[d+8>>2];v[a+8|0]=c;v[a+9|0]=c>>>8;v[a+10|0]=c>>>16;v[a+11|0]=c>>>24;v[a+12|0]=b;v[a+13|0]=b>>>8;v[a+14|0]=b>>>16;v[a+15|0]=b>>>24;b=x[d+4>>2];c=x[d>>2];v[a|0]=c;v[a+1|0]=c>>>8;v[a+2|0]=c>>>16;v[a+3|0]=c>>>24;v[a+4|0]=b;v[a+5|0]=b>>>8;v[a+6|0]=b>>>16;v[a+7|0]=b>>>24;b=x[d+28>>2];c=x[d+24>>2];v[a+24|0]=c;v[a+25|0]=c>>>8;v[a+26|0]=c>>>16;v[a+27|0]=c>>>24;v[a+28|0]=b;v[a+29|0]=b>>>8;v[a+30|0]=b>>>16;v[a+31|0]=b>>>24;oa(d,64);V=d- -64|0;return 0}function Yb(a,b){var c=0,d=0,e=0,f=0,g=0;c=V-464|0;V=c;while(1){e=d<<1;g=y[b+d|0];v[e+(c+400|0)|0]=g&15;v[(c+400|0)+(e|1)|0]=g>>>4;d=d+1|0;if((d|0)!=32){continue}break}d=0;while(1){b=d;d=(c+400|0)+f|0;e=b+y[d|0]|0;b=(e<<24)- -134217728|0;v[d|0]=e-(b>>24&240);d=b>>28;f=f+1|0;if((f|0)!=63){continue}break}v[c+463|0]=y[c+463|0]+d;Cd(a);d=1;while(1){mg(c,d>>>1|0,v[(c+400|0)+d|0]);Ed(c+240|0,a,c);wa(a,c+240|0);b=d>>>0<62;d=d+2|0;if(b){continue}break}kb(c+240|0,a);ab(c+120|0,c+240|0);Va(c+240|0,c+120|0);ab(c+120|0,c+240|0);Va(c+240|0,c+120|0);ab(c+120|0,c+240|0);Va(c+240|0,c+120|0);wa(a,c+240|0);d=0;while(1){mg(c,d>>>1|0,v[(c+400|0)+d|0]);Ed(c+240|0,a,c);wa(a,c+240|0);b=d>>>0<62;d=d+2|0;if(b){continue}break}V=c+464|0}function qd(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;e=V+-64|0;V=e;Qb(e,c,32,0);c=x[e+28>>2];d=x[e+24>>2];v[b+24|0]=d;v[b+25|0]=d>>>8;v[b+26|0]=d>>>16;v[b+27|0]=d>>>24;v[b+28|0]=c;v[b+29|0]=c>>>8;v[b+30|0]=c>>>16;v[b+31|0]=c>>>24;c=x[e+20>>2];d=x[e+16>>2];v[b+16|0]=d;v[b+17|0]=d>>>8;v[b+18|0]=d>>>16;v[b+19|0]=d>>>24;v[b+20|0]=c;v[b+21|0]=c>>>8;v[b+22|0]=c>>>16;v[b+23|0]=c>>>24;c=x[e+12>>2];d=x[e+8>>2];v[b+8|0]=d;v[b+9|0]=d>>>8;v[b+10|0]=d>>>16;v[b+11|0]=d>>>24;v[b+12|0]=c;v[b+13|0]=c>>>8;v[b+14|0]=c>>>16;v[b+15|0]=c>>>24;c=x[e+4>>2];d=x[e>>2];v[b|0]=d;v[b+1|0]=d>>>8;v[b+2|0]=d>>>16;v[b+3|0]=d>>>24;v[b+4|0]=c;v[b+5|0]=c>>>8;v[b+6|0]=c>>>16;v[b+7|0]=c>>>24;oa(e,64);a=vc(a,b);V=e- -64|0;return a|0}function Vb(a,b){var c=0,d=0,e=0,f=0;c=V-864|0;V=c;f=b+80|0;e=b+40|0;va(c+336|0,f,e);xa(c,f,e);ma(c+336|0,c+336|0,c);ma(c+288|0,b,e);qa(c+240|0,c+288|0);ma(c+240|0,c+336|0,c+240|0);Ea(c+480|0);zd(c+624|0,c+480|0,c+240|0);ma(c+816|0,c+624|0,c+336|0);ma(c+768|0,c+624|0,c+288|0);ma(c+48|0,c+816|0,c+768|0);d=b+120|0;ma(c+48|0,c+48|0,d);ma(c+576|0,b,2224);ma(c+528|0,e,2224);ma(c+672|0,c+816|0,3536);ma(c+384|0,d,c+48|0);d=nb(c+384|0);La(c+192|0,b);La(c+144|0,e);La(c+720|0,c+768|0);Ma(c+192|0,c+528|0,d);Ma(c+144|0,c+576|0,d);Ma(c+720|0,c+672|0,d);ma(c+96|0,c+192|0,c+48|0);hg(c+144|0,c+144|0,nb(c+96|0));xa(c+432|0,f,c+144|0);ma(c+432|0,c+720|0,c+432|0);yc(c+432|0,c+432|0);cb(a,c+432|0);V=c+864|0}function Jg(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;h=e;e=V-128|0;V=e;j=ya(a,0,102);k=c;a:{b:{if((d|0)==1|d>>>0>1){x[9301]=22;break b}Uc(h,f,g,e+12|0,e+8|0,e+4|0);Pa(e+96|0,32);g=e+96|0;c=e+32|0;a=0;d=x[e+12>>2];h=x[e+8>>2];f=x[e+4>>2];l=Fj(h,0,f,0);i=Y;c:{if(d>>>0>63|(!i&l>>>0>1073741823|i)){break c}v[c|0]=36;v[c+1|0]=55;v[c+2|0]=36;v[c+3|0]=y[d+1024|0];d=Vc(c+4|0,54,f,30);if(!d){break c}f=c+58|0;d=Vc(d,f-d|0,h,30);if(!d){break c}d=Ne(d,f-d|0,g);if(!d|d>>>0>=f>>>0){break c}v[d|0]=0;a=c}if(!a){x[9301]=28;break b}a=-1;if(_c(e+16|0)){break a}b=Oe(e+16|0,b,k,e+32|0,j);Zc(e+16|0);a=0;if(b){break a}x[9301]=28}a=-1}V=e+128|0;return a|0}function sd(a,b){a=a|0;b=b|0;var c=0,d=0;c=V+-64|0;V=c;b=za(c,b,64);Eb(b);c=x[b+28>>2];d=x[b+24>>2];v[a+24|0]=d;v[a+25|0]=d>>>8;v[a+26|0]=d>>>16;v[a+27|0]=d>>>24;v[a+28|0]=c;v[a+29|0]=c>>>8;v[a+30|0]=c>>>16;v[a+31|0]=c>>>24;c=x[b+20>>2];d=x[b+16>>2];v[a+16|0]=d;v[a+17|0]=d>>>8;v[a+18|0]=d>>>16;v[a+19|0]=d>>>24;v[a+20|0]=c;v[a+21|0]=c>>>8;v[a+22|0]=c>>>16;v[a+23|0]=c>>>24;c=x[b+12>>2];d=x[b+8>>2];v[a+8|0]=d;v[a+9|0]=d>>>8;v[a+10|0]=d>>>16;v[a+11|0]=d>>>24;v[a+12|0]=c;v[a+13|0]=c>>>8;v[a+14|0]=c>>>16;v[a+15|0]=c>>>24;c=x[b+4>>2];d=x[b>>2];v[a|0]=d;v[a+1|0]=d>>>8;v[a+2|0]=d>>>16;v[a+3|0]=d>>>24;v[a+4|0]=c;v[a+5|0]=c>>>8;v[a+6|0]=c>>>16;v[a+7|0]=c>>>24;oa(b,64);V=b- -64|0}function Db(a,b){var c=0,d=0,e=0,f=0;c=V-480|0;V=c;f=y[b+31|0];e=(f^-1)&127;d=30;while(1){e=y[b+d|0]^-1|e;d=d-1|0;if(d){continue}break}d=(e&255)-1|0;e=y[b|0];if((((d&236-e)>>>8|(e|f>>>7))^-1)&1){db(c+336|0,b);qa(c+288|0,c+336|0);Ea(c+240|0);xa(c+240|0,c+240|0,c+288|0);qa(c+144|0,c+240|0);Ea(c+192|0);va(c+192|0,c+192|0,c+288|0);qa(c+96|0,c+192|0);ma(c+48|0,2176,c+144|0);Wa(c+48|0,c+48|0);xa(c+48|0,c+48|0,c+96|0);ma(c,c+48|0,c+96|0);Ea(c+384|0);e=zd(c+432|0,c+384|0,c);ma(a,c+432|0,c+192|0);b=a+40|0;ma(b,c+432|0,a);ma(b,b,c+48|0);ma(a,a,c+336|0);va(a,a,a);yc(a,a);ma(b,c+240|0,b);Ea(a+80|0);d=a+120|0;ma(d,a,b);a=0-(nb(d)|1-e|Xa(b))|0}else{a=-1}V=c+480|0;return a}function ke(a,b){a=a|0;b=b|0;var c=0,d=0;d=V+-64|0;V=d;ed(a,d);c=x[d+28>>2];a=x[d+24>>2];v[b+24|0]=a;v[b+25|0]=a>>>8;v[b+26|0]=a>>>16;v[b+27|0]=a>>>24;v[b+28|0]=c;v[b+29|0]=c>>>8;v[b+30|0]=c>>>16;v[b+31|0]=c>>>24;c=x[d+20>>2];a=x[d+16>>2];v[b+16|0]=a;v[b+17|0]=a>>>8;v[b+18|0]=a>>>16;v[b+19|0]=a>>>24;v[b+20|0]=c;v[b+21|0]=c>>>8;v[b+22|0]=c>>>16;v[b+23|0]=c>>>24;c=x[d+12>>2];a=x[d+8>>2];v[b+8|0]=a;v[b+9|0]=a>>>8;v[b+10|0]=a>>>16;v[b+11|0]=a>>>24;v[b+12|0]=c;v[b+13|0]=c>>>8;v[b+14|0]=c>>>16;v[b+15|0]=c>>>24;c=x[d+4>>2];a=x[d>>2];v[b|0]=a;v[b+1|0]=a>>>8;v[b+2|0]=a>>>16;v[b+3|0]=a>>>24;v[b+4|0]=c;v[b+5|0]=c>>>8;v[b+6|0]=c>>>16;v[b+7|0]=c>>>24;V=d- -64|0;return 0}function Lf(a,b){var c=0,d=0,e=0,f=0,g=0,h=0;if(b>>>0>4294967168){a=48}else{a:{if(b>>>0>=4294967168){x[9301]=48;c=0;break a}f=b>>>0<11?16:b+11&-8;b=Za(f+76|0);c=0;if(!b){break a}c=b-8|0;b:{if(!(b&63)){b=c;break b}g=b-4|0;h=x[g>>2];b=(b+63&-64)-8|0;b=b-c>>>0>15?b:b- -64|0;d=b-c|0;e=(h&-8)-d|0;if(!(h&3)){c=x[c>>2];x[b+4>>2]=e;x[b>>2]=c+d;break b}x[b+4>>2]=e|x[b+4>>2]&1|2;e=b+e|0;x[e+4>>2]=x[e+4>>2]|1;x[g>>2]=d|x[g>>2]&1|2;e=c+d|0;x[e+4>>2]=x[e+4>>2]|1;Gf(c,d)}c=x[b+4>>2];c:{if(!(c&3)){break c}d=c&-8;if(d>>>0<=f+16>>>0){break c}x[b+4>>2]=f|c&1|2;c=b+f|0;f=d-f|0;x[c+4>>2]=f|3;d=b+d|0;x[d+4>>2]=x[d+4>>2]|1;Gf(c,f)}c=b+8|0}if(!c){return 48}x[a>>2]=c;a=0}return a}function Hd(a,b){var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=x[b+28>>2];f=x[b+24>>2];g=x[b+20>>2];h=x[b+16>>2];i=x[b+12>>2];j=x[b+8>>2];k=x[b+4>>2];c=x[b>>2];d=x[b+36>>2];b=x[b+32>>2];c=D(((e+(f+(g+(h+(i+(j+(k+(c+(D(d,19)+16777216>>>25|0)>>26)>>25)>>26)>>25)>>26)>>25)>>26)>>25)+b>>26)+d>>25,19)+c|0;x[a>>2]=c&67108863;c=k+(c>>26)|0;x[a+4>>2]=c&33554431;c=j+(c>>25)|0;x[a+8>>2]=c&67108863;c=i+(c>>26)|0;x[a+12>>2]=c&33554431;c=h+(c>>25)|0;x[a+16>>2]=c&67108863;c=g+(c>>26)|0;x[a+20>>2]=c&33554431;c=f+(c>>25)|0;x[a+24>>2]=c&67108863;c=e+(c>>26)|0;x[a+28>>2]=c&33554431;b=b+(c>>25)|0;x[a+32>>2]=b&67108863;x[a+36>>2]=d+(b>>26)&33554431}function df(a,b,c,d,e,f,g,h,i,j){var k=0;k=V-48|0;V=k;x[k+8>>2]=0;x[k>>2]=0;x[k+4>>2]=0;bb(k+16|0,i,j,0);j=y[i+20|0]|y[i+21|0]<<8|(y[i+22|0]<<16|y[i+23|0]<<24);x[k+4>>2]=y[i+16|0]|y[i+17|0]<<8|(y[i+18|0]<<16|y[i+19|0]<<24);x[k+8>>2]=j;i=V-352|0;V=i;j=k+16|0;wd(i+32|0,64,0,k,j);Sa(i+96|0,i+32|0);oa(i+32|0,64);ta(i+96|0,f,g,h);ta(i+96|0,35936,0-g&15,0);ta(i+96|0,b,c,d);ta(i+96|0,35936,0-c&15,0);Ba(i+24|0,g,h);ta(i+96|0,i+24|0,8,0);Ba(i+24|0,c,d);ta(i+96|0,i+24|0,8,0);Ra(i+96|0,i);oa(i+96|0,256);e=Gb(i,e);oa(i,16);a:{if(!a){break a}if(e){ya(a,0,c);e=-1;break a}vd(a,b,c,d,k,1,j);e=0}V=i+352|0;oa(k+16|0,32);V=k+48|0;return e}function dd(a,b,c,d,e,f,g){var h=0,i=0,j=0,k=0,l=0;h=V-352|0;V=h;bb(h,f,g,0);if(!e&d>>>0<=c-a>>>0|a>>>0>=c>>>0?!e&d>>>0>a-c>>>0|e?a>>>0>c>>>0:0:1){c=yb(a,c,d)}x[h+56>>2]=0;x[h+60>>2]=0;x[h+48>>2]=0;x[h+52>>2]=0;x[h+40>>2]=0;x[h+44>>2]=0;x[h+32>>2]=0;x[h+36>>2]=0;i=!e&d>>>0>32|(e|0)!=0;g=i?32:d;j=i?0:e;i=j;k=!(g|i);if(!k){za(h- -64|0,c,g)}j=f+16|0;l=g+32|0;f=l>>>0<32?i+1|0:i;qc(h+32|0,h+32|0,l,f,j,h);Sa(h+96|0,h+32|0);if(!k){za(a,h- -64|0,g)}oa(h+32|0,64);if(!e&d>>>0>=33|e){f=c+g|0;c=d;Cb(a+g|0,f,c-g|0,e-(i+(c>>>0<g>>>0)|0)|0,j,1,0,h)}oa(h,32);ta(h+96|0,a,d,e);Ra(h+96|0,b);oa(h+96|0,256);V=h+352|0;return 0}function Rc(a,b,c,d,e,f,g){var h=0,i=0,j=0,k=0,l=0;h=V-352|0;V=h;Ab(h,f,g,0);if(!e&d>>>0<=c-a>>>0|a>>>0>=c>>>0?!e&d>>>0>a-c>>>0|e?a>>>0>c>>>0:0:1){c=yb(a,c,d)}x[h+56>>2]=0;x[h+60>>2]=0;x[h+48>>2]=0;x[h+52>>2]=0;x[h+40>>2]=0;x[h+44>>2]=0;x[h+32>>2]=0;x[h+36>>2]=0;i=!e&d>>>0>32|(e|0)!=0;g=i?32:d;j=i?0:e;i=j;k=!(g|i);if(!k){za(h- -64|0,c,g)}j=f+16|0;l=g+32|0;f=l>>>0<32?i+1|0:i;tc(h+32|0,h+32|0,l,f,j,h);Sa(h+96|0,h+32|0);if(!k){za(a,h- -64|0,g)}oa(h+32|0,64);if(!e&d>>>0>=33|e){f=c+g|0;c=d;uc(a+g|0,f,c-g|0,e-(i+(c>>>0<g>>>0)|0)|0,j,1,0,h)}oa(h,32);ta(h+96|0,a,d,e);Ra(h+96|0,b);oa(h+96|0,256);V=h+352|0;return 0}function Jc(a,b){var c=0,d=0,e=0,f=0,g=0;c=a- -64|0;d=c;e=y[c+4|0]|y[c+5|0]<<8|(y[c+6|0]<<16|y[c+7|0]<<24);f=e;g=f+1|0;f=y[c|0]|y[c+1|0]<<8|(y[c+2|0]<<16|y[c+3|0]<<24);c=f;b=b+c|0;c=b>>>0<c>>>0?g:e;v[d|0]=b;v[d+1|0]=b>>>8;v[d+2|0]=b>>>16;v[d+3|0]=b>>>24;v[d+4|0]=c;v[d+5|0]=c>>>8;v[d+6|0]=c>>>16;v[d+7|0]=c>>>24;c=(c|0)==(e|0)&b>>>0<f>>>0|c>>>0<e>>>0;b=c+(y[a+72|0]|y[a+73|0]<<8|(y[a+74|0]<<16|y[a+75|0]<<24))|0;d=y[a+76|0]|y[a+77|0]<<8|(y[a+78|0]<<16|y[a+79|0]<<24);c=b>>>0<c>>>0?d+1|0:d;v[a+72|0]=b;v[a+73|0]=b>>>8;v[a+74|0]=b>>>16;v[a+75|0]=b>>>24;v[a+76|0]=c;v[a+77|0]=c>>>8;v[a+78|0]=c>>>16;v[a+79|0]=c>>>24}function sc(a,b){x[a>>2]=1634760805;x[a+4>>2]=857760878;x[a+8>>2]=2036477234;x[a+12>>2]=1797285236;x[a+16>>2]=y[b|0]|y[b+1|0]<<8|(y[b+2|0]<<16|y[b+3|0]<<24);x[a+20>>2]=y[b+4|0]|y[b+5|0]<<8|(y[b+6|0]<<16|y[b+7|0]<<24);x[a+24>>2]=y[b+8|0]|y[b+9|0]<<8|(y[b+10|0]<<16|y[b+11|0]<<24);x[a+28>>2]=y[b+12|0]|y[b+13|0]<<8|(y[b+14|0]<<16|y[b+15|0]<<24);x[a+32>>2]=y[b+16|0]|y[b+17|0]<<8|(y[b+18|0]<<16|y[b+19|0]<<24);x[a+36>>2]=y[b+20|0]|y[b+21|0]<<8|(y[b+22|0]<<16|y[b+23|0]<<24);x[a+40>>2]=y[b+24|0]|y[b+25|0]<<8|(y[b+26|0]<<16|y[b+27|0]<<24);x[a+44>>2]=y[b+28|0]|y[b+29|0]<<8|(y[b+30|0]<<16|y[b+31|0]<<24)}function Oe(a,b,c,d,e){var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;f=V-48|0;V=f;j=Re(d,f+12|0,f+8|0,f+4|0);a:{if(!j){break a}k=x[f+12>>2];g=Ta(j)+1|0;while(1){b:{h=0;if(!g){break b}g=g-1|0;h=g+j|0;if(y[h|0]!=36){continue}}break}i=h-j|0;c:{if(h){break c}i=Ta(j)}h=i;g=h+(j-d|0)|0;i=g+45|0;if(i>>>0>102|h>>>0>i>>>0){break a}i=a;l=b;a=k&31;if((k&63)>>>0>=32){b=1<<a;a=0}else{b=(1<<a)-1&1>>>32-a;a=1<<a}if(Xe(i,l,c,j,h,a,b,x[f+8>>2],x[f+4>>2],f+16|0,32)){break a}a=za(e,d,g);b=a+g|0;v[b|0]=36;b=b+1|0;c=a+102|0;b=Ne(b,c-b|0,f+16|0);oa(f+16|0,32);if(!b|b>>>0>=c>>>0){break a}v[b|0]=0;m=a}V=f+48|0;return m}function ef(a,b,c,d,e,f,g,h,i,j,k){var l=0;l=V-48|0;V=l;x[l+8>>2]=0;x[l>>2]=0;x[l+4>>2]=0;bb(l+16|0,j,k,0);k=y[j+20|0]|y[j+21|0]<<8|(y[j+22|0]<<16|y[j+23|0]<<24);x[l+4>>2]=y[j+16|0]|y[j+17|0]<<8|(y[j+18|0]<<16|y[j+19|0]<<24);x[l+8>>2]=k;j=V-336|0;V=j;k=l+16|0;wd(j+16|0,64,0,l,k);Sa(j+80|0,j+16|0);oa(j+16|0,64);ta(j+80|0,g,h,i);ta(j+80|0,35936,0-h&15,0);vd(a,d,e,f,l,1,k);ta(j+80|0,a,e,f);ta(j+80|0,35936,0-e&15,0);Ba(j+8|0,h,i);ta(j+80|0,j+8|0,8,0);Ba(j+8|0,e,f);ta(j+80|0,j+8|0,8,0);Ra(j+80|0,b);oa(j+80|0,256);if(c){x[c>>2]=16;x[c+4>>2]=0}V=j+336|0;oa(l+16|0,32);V=l+48|0;return 0}function Dc(a){var b=0,c=0,d=0;if(!a){return-25}if(!x[a>>2]){return-1}a:{b=-2;b:{if(A[a+4>>2]<16){break b}if(!x[a+8>>2]){b=-18;if(x[a+12>>2]){break b}}c=x[a+20>>2];if(!x[a+16>>2]){break a}b=-6;if(c>>>0<8){break b}if(!x[a+24>>2]){b=-20;if(x[a+28>>2]){break b}}if(!x[a+32>>2]){b=-21;if(x[a+36>>2]){break b}}c=x[a+48>>2];if(!c){return-16}b=-17;if(c>>>0>16777215){break b}d=x[a+44>>2];b=-14;if(d>>>0<8){break b}b=-15;if(d>>>0>2097152){break b}b=-14;if(c<<3>>>0>d>>>0){break b}if(!x[a+40>>2]){return-12}a=x[a+52>>2];if(!a){return-28}b=a>>>0>16777215?-29:0}return b}return c?-19:-6}function gd(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0;d=V-192|0;V=d;if(c>>>0>=129){sb(a);Na(a,b,c,0);_a(a,d);c=64;b=d}sb(a);ya(d- -64|0,54,128);a:{if(!c){break a}v[d+64|0]=y[b|0]^54;e=1;if((c|0)==1){break a}while(1){f=(d- -64|0)+e|0;v[f|0]=y[f|0]^y[b+e|0];e=e+1|0;if((e|0)!=(c|0)){continue}break}}Na(a,d- -64|0,128,0);a=a+208|0;sb(a);ya(d- -64|0,92,128);b:{if(!c){break b}v[d+64|0]=y[b|0]^92;e=1;if((c|0)==1){break b}while(1){f=(d- -64|0)+e|0;v[f|0]=y[f|0]^y[b+e|0];e=e+1|0;if((e|0)!=(c|0)){continue}break}}Na(a,d- -64|0,128,0);oa(d- -64|0,128);oa(d,64);V=d+192|0;return 0}function cd(a,b,c,d,e,f,g){var h=0,i=0,j=0,k=0;h=V-96|0;V=h;bb(h,f,g,0);j=f+16|0;Rb(h+32|0,32,0,j,h);f=-1;a:{b:{if(Zb(c,b,d,e,h+32|0)){break b}f=0;if(!a){break a}if(!e&d>>>0<=a-b>>>0|a>>>0<=b>>>0?!e&d>>>0>b-a>>>0|e?a>>>0<b>>>0:0:1){b=yb(a,b,d)}f=!e&d>>>0>32|(e|0)!=0;c=f?32:d;f=f?0:e;g=f;c:{if(!(c|f)){f=g;i=c+32|0;f=i>>>0<32?f+1|0:f;qc(h+32|0,h+32|0,i,f,j,h);break c}k=za(h- -64|0,b,c);f=g;i=c+32|0;f=i>>>0<32?f+1|0:f;qc(h+32|0,h+32|0,i,f,j,h);za(a,k,c)}f=0;if(!e&d>>>0<33){break b}i=a;a=c;Cb(i+a|0,a+b|0,d-a|0,e-(g+(a>>>0>d>>>0)|0)|0,j,1,0,h)}oa(h,32)}V=h+96|0;return f}function Qc(a,b,c,d,e,f,g){var h=0,i=0,j=0,k=0;h=V-96|0;V=h;Ab(h,f,g,0);j=f+16|0;xd(h+32|0,32,0,j,h);f=-1;a:{b:{if(Zb(c,b,d,e,h+32|0)){break b}f=0;if(!a){break a}if(!e&d>>>0<=a-b>>>0|a>>>0<=b>>>0?!e&d>>>0>b-a>>>0|e?a>>>0<b>>>0:0:1){b=yb(a,b,d)}f=!e&d>>>0>32|(e|0)!=0;c=f?32:d;f=f?0:e;g=f;c:{if(!(c|f)){f=g;i=c+32|0;f=i>>>0<32?f+1|0:f;tc(h+32|0,h+32|0,i,f,j,h);break c}k=za(h- -64|0,b,c);f=g;i=c+32|0;f=i>>>0<32?f+1|0:f;tc(h+32|0,h+32|0,i,f,j,h);za(a,k,c)}f=0;if(!e&d>>>0<33){break b}i=a;a=c;uc(i+a|0,a+b|0,d-a|0,e-(g+(a>>>0>d>>>0)|0)|0,j,1,0,h)}oa(h,32)}V=h+96|0;return f}function Af(a,b,c,d,e){var f=0,g=0,h=0,i=0;f=V+-64|0;V=f;a:{b:{g=Ta(a);c:{if(g>>>0<128?c:1){x[9301]=28;break c}x[f+56>>2]=0;x[f+48>>2]=0;x[f+52>>2]=0;x[f+40>>2]=0;x[f+44>>2]=0;h=0;d:{if(!g){break d}c=g;i=c;h=c;if((c|1)>>>0<65536){break d}h=i}i=h;c=Za(h);if(!(!c|!(y[c-4|0]&3))){ya(c,0,i)}if(c){break b}}a=-1;break a}x[f+32>>2]=0;x[f+36>>2]=0;x[f+8>>2]=c;x[f+16>>2]=c;x[f+20>>2]=g;x[f>>2]=c;x[f+12>>2]=g;x[f+24>>2]=0;x[f+28>>2]=0;x[f+4>>2]=g;e:{if(If(f,a,e)){x[9301]=28;a=-1;break e}a=1;if((b|0)!=x[f+40>>2]){break e}a=x[f+44>>2]!=(d>>>10|0)}Ka(c)}V=f- -64|0;return a}function Ma(a,b,c){var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;n=x[b+4>>2];d=x[a+4>>2];o=x[b+8>>2];e=x[a+8>>2];p=x[b+12>>2];f=x[a+12>>2];q=x[b+16>>2];g=x[a+16>>2];r=x[b+20>>2];h=x[a+20>>2];s=x[b+24>>2];i=x[a+24>>2];t=x[b+28>>2];j=x[a+28>>2];u=x[b+32>>2];k=x[a+32>>2];v=x[b+36>>2];l=x[a+36>>2];m=x[a>>2];w=x[b>>2]^m;b=0-c|0;x[a>>2]=m^w&b;x[a+36>>2]=b&(l^v)^l;x[a+32>>2]=b&(k^u)^k;x[a+28>>2]=b&(j^t)^j;x[a+24>>2]=b&(i^s)^i;x[a+20>>2]=b&(h^r)^h;x[a+16>>2]=b&(g^q)^g;x[a+12>>2]=b&(f^p)^f;x[a+8>>2]=b&(e^o)^e;x[a+4>>2]=b&(d^n)^d}function wj(){var a=0,b=0;if(x[9432]){b=1}else{x[9289]=0;a=V-16|0;V=a;Gd(a);if(x[a>>2]){Gd(a);ya(37160,0,40)}V=a+16|0;x[9288]=1;lg();b=w[830];a:{if(!b){x[9301]=28;a=-1;break a}b:{c:{if((b|0)>-2){break c}a=200809;d:{switch((b&255)-1|0){case 1:a=131072;break a;case 2:a=32768;break a;case 3:a=65536;break a;case 4:a=2147483647;break a;case 5:case 6:a=1;break a;case 7:case 8:a=T()>>>16|0;break a;case 9:break d;case 0:break b;default:break c}}a=0;break a}a=b}}e:{if((a|0)>=1){x[9081]=a;break e}a=x[9081]}if(a>>>0<=15){Aa();N()}Pa(37712,16);x[9432]=1;b=0}return b|0}function Of(a,b,c,d,e,f){var g=0,h=0;g=V-32|0;V=g;h=-1;a:{if(!d&c>>>0<32){break a}Rf(g,32,0,e,f);if(Zb(b+16|0,b+32|0,c-32|0,d-(c>>>0<32)|0,g)){break a}rd(a,b,c,d,e,f);v[a+24|0]=0;v[a+25|0]=0;v[a+26|0]=0;v[a+27|0]=0;v[a+28|0]=0;v[a+29|0]=0;v[a+30|0]=0;v[a+31|0]=0;v[a+16|0]=0;v[a+17|0]=0;v[a+18|0]=0;v[a+19|0]=0;v[a+20|0]=0;v[a+21|0]=0;v[a+22|0]=0;v[a+23|0]=0;v[a+8|0]=0;v[a+9|0]=0;v[a+10|0]=0;v[a+11|0]=0;v[a+12|0]=0;v[a+13|0]=0;v[a+14|0]=0;v[a+15|0]=0;v[a|0]=0;v[a+1|0]=0;v[a+2|0]=0;v[a+3|0]=0;v[a+4|0]=0;v[a+5|0]=0;v[a+6|0]=0;v[a+7|0]=0;h=0}V=g+32|0;return h}function rg(a,b){var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0;while(1){v[a+c|0]=y[(c>>>3|0)+b|0]>>>(c&7)&1;c=c+1|0;if((c|0)!=256){continue}break}while(1){b=h;h=b+1|0;g=a+b|0;a:{if(!y[g|0]){break a}c=h;e=1;if(b>>>0>254){break a}while(1){d=a+c|0;f=v[d|0];b:{if(!f){break b}i=v[g|0];f=f<<e;j=i+f|0;if((j|0)<=15){v[g|0]=j;v[d|0]=0;break b}d=i-f|0;if((d|0)<-15){break a}v[g|0]=d;while(1){d=a+c|0;if(!y[d|0]){v[d|0]=1;break b}v[d|0]=0;d=c>>>0<255;c=c+1|0;if(d){continue}break}}if(e>>>0>5){break a}e=e+1|0;c=b+e|0;if(c>>>0<256){continue}break}}if((h|0)!=256){continue}break}}function Yc(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0;d=V-96|0;V=d;if(c>>>0>=65){Lb(a);qb(a,b,c,0);Kb(a,d);c=32;b=d}Lb(a);ya(d+32|0,54,64);a:{if(!c){break a}v[d+32|0]=y[b|0]^54;e=1;if((c|0)==1){break a}while(1){f=(d+32|0)+e|0;v[f|0]=y[f|0]^y[b+e|0];e=e+1|0;if((e|0)!=(c|0)){continue}break}}qb(a,d+32|0,64,0);a=a+104|0;Lb(a);ya(d+32|0,92,64);b:{if(!c){break b}v[d+32|0]=y[b|0]^92;e=1;if((c|0)==1){break b}while(1){f=(d+32|0)+e|0;v[f|0]=y[f|0]^y[b+e|0];e=e+1|0;if((e|0)!=(c|0)){continue}break}}qb(a,d+32|0,64,0);oa(d+32|0,64);oa(d,32);V=d+96|0;return 0}function Hf(a,b,c,d){var e=0,f=0,g=0,h=0,i=0;e=V+-64|0;V=e;ya(e+8|0,0,52);f=Ta(a);x[e+20>>2]=f;x[e+36>>2]=f;x[e+4>>2]=f;g=Za(f);x[e+32>>2]=g;h=Za(f);x[e+16>>2]=h;i=Za(f);x[e>>2]=i;a:{b:{if(!i|(!g|!h)){break b}f=Za(f);if(!f){break b}a=If(e,a,d);if(a){Ka(x[e+32>>2]);Ka(x[e+16>>2]);Ka(x[e>>2]);Ka(f);break a}a=0;b=Ob(x[e+40>>2],x[e+44>>2],x[e+52>>2],b,c,x[e+16>>2],x[e+20>>2],f,x[e+4>>2],0,0,d);Ka(x[e+32>>2]);Ka(x[e+16>>2]);c:{if(!b){if(!rb(f,x[e>>2],x[e+4>>2])){break c}}a=-35}Ka(f);Ka(x[e>>2]);break a}Ka(g);Ka(h);Ka(i);a=-22}V=e- -64|0;return a}function ob(a,b){var c=0,d=0,e=0,f=0;c=V-384|0;V=c;e=a+40|0;db(e,b);d=a+80|0;Ea(d);qa(c+336|0,e);ma(c+288|0,c+336|0,2176);xa(c+336|0,c+336|0,d);va(c+288|0,c+288|0,d);qa(c+240|0,c+288|0);ma(c+240|0,c+240|0,c+288|0);qa(a,c+240|0);ma(a,a,c+288|0);ma(a,a,c+336|0);Ac(a,a);ma(a,a,c+240|0);ma(a,a,c+336|0);qa(c+192|0,a);ma(c+192|0,c+192|0,c+288|0);xa(c+144|0,c+192|0,c+336|0);va(c+96|0,c+192|0,c+336|0);d=Xa(c+144|0);f=Xa(c+96|0);ma(c,a,2224);Ma(a,c,1-d|0);Wa(c+48|0,a);Ma(a,c+48|0,nb(a)^y[b+31|0]>>>7);ma(a+120|0,a,e);V=c+384|0;return(d|f)-1|0}function Fd(a,b){var c=0,d=0,e=0;c=V-288|0;V=c;e=a+40|0;db(e,b);d=a+80|0;Ea(d);qa(c+240|0,e);ma(c+192|0,c+240|0,2176);xa(c+240|0,c+240|0,d);va(c+192|0,c+192|0,d);qa(c+144|0,c+192|0);ma(c+144|0,c+144|0,c+192|0);qa(a,c+144|0);ma(a,a,c+192|0);ma(a,a,c+240|0);Ac(a,a);ma(a,a,c+144|0);ma(a,a,c+240|0);qa(c+96|0,a);ma(c+96|0,c+96|0,c+192|0);xa(c+48|0,c+96|0,c+240|0);a:{if(!Xa(c+48|0)){va(c,c+96|0,c+240|0);d=-1;if(!Xa(c)){break a}ma(a,a,2224)}if((nb(a)|0)==(y[b+31|0]>>>7|0)){Wa(a,a)}ma(a+120|0,a,e);d=0}V=c+288|0;return d}function ge(a,b,c,d,e,f){var g=0;g=V-192|0;V=g;if(!(!c|(b-1&255)>>>0>=64|(!d|d>>>0>=65))){w[g+130>>1]=257;v[g+129|0]=d;v[g+128|0]=b;bc(g+128|4);Ba(g+128|8,0,0);x[g+152>>2]=0;x[g+156>>2]=0;x[g+144>>2]=0;x[g+148>>2]=0;a:{if(e){se(g+128|0,e);break a}x[g+168>>2]=0;x[g+172>>2]=0;x[g+160>>2]=0;x[g+164>>2]=0}b:{if(f){pe(g+128|0,f);break b}x[g+184>>2]=0;x[g+188>>2]=0;x[g+176>>2]=0;x[g+180>>2]=0}cc(a,g+128|0);ya(d+g|0,0,d<<24>>24<0?0:128-d|0);b=a;a=za(g,c,d);Jb(b,a,128,0);oa(a,128);V=a+192|0;return 0}Aa();N()}function Ye(a,b,c,d,e,f){var g=0,h=0;g=V-496|0;V=g;Yc(g+288|0,a,b);fc(g+288|0,c,d,0);a:{if(!f){break a}d=1;while(1){_e(g+76|0,d);za(g+80|0,g+288|0,208);fc(g+80|0,g+76|0,4,0);Xc(g+80|0,g+32|0);a=x[g+60>>2];x[g+24>>2]=x[g+56>>2];x[g+28>>2]=a;a=x[g+52>>2];x[g+16>>2]=x[g+48>>2];x[g+20>>2]=a;a=x[g+44>>2];x[g+8>>2]=x[g+40>>2];x[g+12>>2]=a;a=x[g+36>>2];x[g>>2]=x[g+32>>2];x[g+4>>2]=a;a=f-h|0;za(e+h|0,g,a>>>0<32?a:32);h=d<<5;if(h>>>0>=f>>>0){break a}d=d+1|0;continue}}oa(g+288|0,208);V=g+496|0}function se(a,b){var c=0,d=0;c=y[b+4|0]|y[b+5|0]<<8|(y[b+6|0]<<16|y[b+7|0]<<24);d=y[b|0]|y[b+1|0]<<8|(y[b+2|0]<<16|y[b+3|0]<<24);v[a+32|0]=d;v[a+33|0]=d>>>8;v[a+34|0]=d>>>16;v[a+35|0]=d>>>24;v[a+36|0]=c;v[a+37|0]=c>>>8;v[a+38|0]=c>>>16;v[a+39|0]=c>>>24;c=y[b+12|0]|y[b+13|0]<<8|(y[b+14|0]<<16|y[b+15|0]<<24);b=y[b+8|0]|y[b+9|0]<<8|(y[b+10|0]<<16|y[b+11|0]<<24);v[a+40|0]=b;v[a+41|0]=b>>>8;v[a+42|0]=b>>>16;v[a+43|0]=b>>>24;v[a+44|0]=c;v[a+45|0]=c>>>8;v[a+46|0]=c>>>16;v[a+47|0]=c>>>24}function pe(a,b){var c=0,d=0;c=y[b+4|0]|y[b+5|0]<<8|(y[b+6|0]<<16|y[b+7|0]<<24);d=y[b|0]|y[b+1|0]<<8|(y[b+2|0]<<16|y[b+3|0]<<24);v[a+48|0]=d;v[a+49|0]=d>>>8;v[a+50|0]=d>>>16;v[a+51|0]=d>>>24;v[a+52|0]=c;v[a+53|0]=c>>>8;v[a+54|0]=c>>>16;v[a+55|0]=c>>>24;c=y[b+12|0]|y[b+13|0]<<8|(y[b+14|0]<<16|y[b+15|0]<<24);b=y[b+8|0]|y[b+9|0]<<8|(y[b+10|0]<<16|y[b+11|0]<<24);v[a+56|0]=b;v[a+57|0]=b>>>8;v[a+58|0]=b>>>16;v[a+59|0]=b>>>24;v[a+60|0]=c;v[a+61|0]=c>>>8;v[a+62|0]=c>>>16;v[a+63|0]=c>>>24}function xa(a,b,c){var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;d=x[c+4>>2];e=x[b+4>>2];f=x[c+8>>2];g=x[b+8>>2];h=x[c+12>>2];i=x[b+12>>2];j=x[c+16>>2];k=x[b+16>>2];l=x[c+20>>2];m=x[b+20>>2];n=x[c+24>>2];o=x[b+24>>2];p=x[c+28>>2];q=x[b+28>>2];r=x[c+32>>2];s=x[b+32>>2];t=x[c+36>>2];u=x[b+36>>2];x[a>>2]=x[b>>2]-x[c>>2];x[a+36>>2]=u-t;x[a+32>>2]=s-r;x[a+28>>2]=q-p;x[a+24>>2]=o-n;x[a+20>>2]=m-l;x[a+16>>2]=k-j;x[a+12>>2]=i-h;x[a+8>>2]=g-f;x[a+4>>2]=e-d}function va(a,b,c){var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;d=x[c+4>>2];e=x[b+4>>2];f=x[c+8>>2];g=x[b+8>>2];h=x[c+12>>2];i=x[b+12>>2];j=x[c+16>>2];k=x[b+16>>2];l=x[c+20>>2];m=x[b+20>>2];n=x[c+24>>2];o=x[b+24>>2];p=x[c+28>>2];q=x[b+28>>2];r=x[c+32>>2];s=x[b+32>>2];t=x[c+36>>2];u=x[b+36>>2];x[a>>2]=x[c>>2]+x[b>>2];x[a+36>>2]=t+u;x[a+32>>2]=r+s;x[a+28>>2]=p+q;x[a+24>>2]=n+o;x[a+20>>2]=l+m;x[a+16>>2]=j+k;x[a+12>>2]=h+i;x[a+8>>2]=f+g;x[a+4>>2]=d+e}function nj(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;c=V-160|0;V=c;f=y[b|0];while(1){e=b-d|0;v[(c+128|0)+d|0]=y[e+63|0];v[(c+96|0)+d|0]=y[e+31|0];d=d+1|0;if((d|0)!=32){continue}break}v[c+159|0]=y[c+159|0]&127;v[c+127|0]=y[c+127|0]&127;db(c+48|0,c+128|0);db(c,c+96|0);x[c+48>>2]=(x[c+48>>2]+(v[b+32|0]>>>7&19)|0)+D(x[c>>2],38);d=1;while(1){b=d<<2;e=b+(c+48|0)|0;x[e>>2]=x[e>>2]+D(x[b+c>>2],38);d=d+1|0;if((d|0)!=10){continue}break}Hd(c+48|0,c+48|0);jg(a,c+48|0,f&128);V=c+160|0;return 0}function Wb(a){var b=0,c=0,d=0,e=0,f=0;c=V-16|0;v[c+11|0]=0;v[c+12|0]=0;v[c+13|0]=0;v[c+14|0]=0;x[c+8>>2]=0;while(1){e=y[a+d|0];b=0;while(1){f=(c+8|0)+b|0;v[f|0]=y[f|0]|e^y[((b<<5)+3280|0)+d|0];b=b+1|0;if((b|0)!=7){continue}break}d=d+1|0;if((d|0)!=31){continue}break}d=y[a+31|0]&127;a=0;b=0;while(1){e=(c+8|0)+b|0;v[e|0]=y[e|0]|d^y[(b<<5)+3311|0];b=b+1|0;if((b|0)!=7){continue}break}b=0;while(1){b=y[(c+8|0)+a|0]-1|b;a=a+1|0;if((a|0)!=7){continue}break}return b>>>8&1}function cc(a,b){var c=0,d=0,e=0,f=0,g=0;ya(za(a,2112,64)- -64|0,0,293);while(1){c=f<<3;d=c+a|0;e=d;c=b+c|0;g=y[d|0]|y[d+1|0]<<8|(y[d+2|0]<<16|y[d+3|0]<<24);d=(y[c+4|0]|y[c+5|0]<<8|(y[c+6|0]<<16|y[c+7|0]<<24))^(y[d+4|0]|y[d+5|0]<<8|(y[d+6|0]<<16|y[d+7|0]<<24));c=(y[c|0]|y[c+1|0]<<8|(y[c+2|0]<<16|y[c+3|0]<<24))^g;v[e|0]=c;v[e+1|0]=c>>>8;v[e+2|0]=c>>>16;v[e+3|0]=c>>>24;v[e+4|0]=d;v[e+5|0]=d>>>8;v[e+6|0]=d>>>16;v[e+7|0]=d>>>24;f=f+1|0;if((f|0)!=8){continue}break}}function Pb(a,b){var c=0,d=0;d=b&255;a:{if(d){if(a&3){while(1){c=y[a|0];if(!c|(c|0)==(b&255)){break a}a=a+1|0;if(a&3){continue}break}}c=x[a>>2];b:{if((c^-1)&c-16843009&-2139062144){break b}d=D(d,16843009);while(1){c=c^d;if((c^-1)&c-16843009&-2139062144){break b}c=x[a+4>>2];a=a+4|0;if(!(c-16843009&(c^-1)&-2139062144)){continue}break}}while(1){c=a;d=y[a|0];if(d){a=c+1|0;if((d|0)!=(b&255)){continue}}break}a=c;break a}a=Ta(a)+a|0}return y[a|0]==(b&255)?a:0}function Kg(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0;k=h;h=i;l=k|0;k=V-16|0;V=k;i=a;a=b;b=a;i=ya(i,0,a);a:{if(c>>>0<1?f:1){x[9301]=22;a=-1;break a}if(!c&a>>>0>=16|c){Uc(l,h,j,k+12|0,k+8|0,k+4|0);if((d|0)==(i|0)){x[9301]=28;a=-1;break a}c=x[k+12>>2];a=c&31;if((c&63)>>>0>=32){h=1<<a;a=0}else{h=(1<<a)-1&1>>>32-a;a=1<<a}a=Me(d,e,g,32,a,h,x[k+4>>2],x[k+8>>2],i,b);break a}x[9301]=28;a=-1}V=k+16|0;return a|0}function Ti(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;g=V-16|0;V=g;a:{b:{if(!d){i=-1;break b}f=d-1|0;c:{if(!(f&d)){h=c&f;break c}h=(c>>>0)%(d>>>0)|0}i=-1;f=f-h|0;if(f>>>0>=(c^-1)>>>0){break a}c=c+f|0;if(c>>>0>=e>>>0){break b}if(a){x[a>>2]=c+1}a=b+c|0;i=0;v[g+15|0]=0;c=0;while(1){b=a-c|0;e=b;h=y[b|0]&y[g+15|0];b=(c^f)-1>>>24|0;v[e|0]=h|b&128;v[g+15|0]=b|y[g+15|0];c=c+1|0;if((d|0)!=(c|0)){continue}break}}V=g+16|0;return i|0}Aa();N()}function gi(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;f=V;i=f;f=f-512&-64;V=f;g=a?a:b;if(g){h=-1;if(!Kc(f+96|0,d,e)){b=b?b:a;a=0;kc(f+128|0,0,0,64);gb(f+128|0,f+96|0,32,0);oa(f+96|0,32);gb(f+128|0,c,32,0);gb(f+128|0,e,32,0);jc(f+128|0,f+32|0,64);oa(f+128|0,384);while(1){c=(f+32|0)+a|0;v[a+g|0]=y[c|0];v[a+b|0]=y[c+32|0];a=a+1|0;if((a|0)!=32){continue}break}oa(f+32|0,64);h=0}V=i;return h|0}Aa();N()}function fi(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;f=V;i=f;f=f-512&-64;V=f;g=a?a:b;if(g){h=-1;if(!Kc(f+96|0,d,e)){b=b?b:a;a=0;kc(f+128|0,0,0,64);gb(f+128|0,f+96|0,32,0);oa(f+96|0,32);gb(f+128|0,e,32,0);gb(f+128|0,c,32,0);jc(f+128|0,f+32|0,64);oa(f+128|0,384);while(1){c=(f+32|0)+a|0;v[a+b|0]=y[c|0];v[a+g|0]=y[c+32|0];a=a+1|0;if((a|0)!=32){continue}break}oa(f+32|0,64);h=0}V=i;return h|0}Aa();N()}function ia(a,b,c){var d=0,e=0,f=0,g=0,h=0;g=a;f=c&63;a=f;d=a&31;if(a>>>0>=32){a=-1<<d;d=0}else{a=(1<<d)-1&-1>>>32-d|-1<<d;d=-1<<d}h=d&g;e=a&b;d=f&31;if(f>>>0>=32){a=0;f=e>>>d|0}else{a=e>>>d|0;f=((1<<d)-1&e)<<32-d|h>>>d}d=a;e=0-c&63;a=e;c=a&31;if(a>>>0>=32){a=0;c=-1>>>c|0}else{a=-1>>>c|0;c=(1<<c)-1<<32-c|-1>>>c}c=c&g;b=a&b;a=e&31;if(e>>>0>=32){b=c<<a;a=0}else{b=(1<<a)-1&c>>>32-a|b<<a;a=c<<a}a=a|f;Y=b|d;return a}function na(a,b,c){var d=0,e=0,f=0,g=0;g=a;f=c&63;d=f;a=d&31;if(d>>>0>=32){a=-1>>>a|0}else{e=-1>>>a|0;a=(1<<a)-1<<32-a|-1>>>a}d=a&g;a=b&e;e=f&31;if(f>>>0>=32){a=d<<e;f=0}else{a=(1<<e)-1&d>>>32-e|a<<e;f=d<<e}e=a;d=0-c&63;a=d;c=a&31;if(a>>>0>=32){a=-1<<c;c=0}else{a=(1<<c)-1&-1>>>32-c|-1<<c;c=-1<<c}g=c&g;b=a&b;a=d&31;if(d>>>0>=32){c=0;a=b>>>a|0}else{c=b>>>a|0;a=((1<<a)-1&b)<<32-a|g>>>a}a=a|f;Y=c|e;return a}function oi(a,b,c){a=a|0;b=b|0;c=c|0;Pa(b,24);bb(a,b,c,0);Nc(a);c=y[b+16|0]|y[b+17|0]<<8|(y[b+18|0]<<16|y[b+19|0]<<24);b=y[b+20|0]|y[b+21|0]<<8|(y[b+22|0]<<16|y[b+23|0]<<24);v[a+44|0]=0;v[a+45|0]=0;v[a+46|0]=0;v[a+47|0]=0;v[a+48|0]=0;v[a+49|0]=0;v[a+50|0]=0;v[a+51|0]=0;v[a+36|0]=c;v[a+37|0]=c>>>8;v[a+38|0]=c>>>16;v[a+39|0]=c>>>24;v[a+40|0]=b;v[a+41|0]=b>>>8;v[a+42|0]=b>>>16;v[a+43|0]=b>>>24;return 0}function _f(a,b,c,d,e,f,g,h,i,j){var k=0;k=V-352|0;V=k;Bb(k+32|0,64,0,i,j);Sa(k+96|0,k+32|0);oa(k+32|0,64);ta(k+96|0,f,g,h);ta(k+96|0,34976,0-g&15,0);ta(k+96|0,b,c,d);ta(k+96|0,34976,0-c&15,0);Ba(k+24|0,g,h);ta(k+96|0,k+24|0,8,0);Ba(k+24|0,c,d);ta(k+96|0,k+24|0,8,0);Ra(k+96|0,k);oa(k+96|0,256);e=Gb(k,e);oa(k,16);a:{if(!a){break a}if(e){ya(a,0,c);e=-1;break a}ub(a,b,c,d,i,1,j);e=0}V=k+352|0;return e}function Kb(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;e=V-288|0;V=e;d=x[a+36>>2];f=x[a+32>>2];c=f>>>3&63;a:{if(c>>>0<=55){za((a+c|0)+40|0,36240,56-c|0);break a}d=a+40|0;za(d+c|0,36240,64-c|0);hc(a,d,e,e+256|0);ya(d,0,56);f=x[a+32>>2];d=x[a+36>>2]}Sf(a+96|0,f,d);hc(a,a+40|0,e,e+256|0);c=0;while(1){d=c<<2;_e(d+b|0,x[a+d>>2]);c=c+1|0;if((c|0)!=8){continue}break}oa(e,288);oa(a,104);V=e+288|0;return 0}function ni(a,b,c){a=a|0;b=b|0;c=c|0;bb(a,b,c,0);Nc(a);c=y[b+16|0]|y[b+17|0]<<8|(y[b+18|0]<<16|y[b+19|0]<<24);b=y[b+20|0]|y[b+21|0]<<8|(y[b+22|0]<<16|y[b+23|0]<<24);v[a+44|0]=0;v[a+45|0]=0;v[a+46|0]=0;v[a+47|0]=0;v[a+48|0]=0;v[a+49|0]=0;v[a+50|0]=0;v[a+51|0]=0;v[a+36|0]=c;v[a+37|0]=c>>>8;v[a+38|0]=c>>>16;v[a+39|0]=c>>>24;v[a+40|0]=b;v[a+41|0]=b>>>8;v[a+42|0]=b>>>16;v[a+43|0]=b>>>24;return 0}function Wd(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;a:{b:{c:{d:{if(!e&d>>>0<64){break d}e=e-1|0;h=e+1|0;g=e;e=d+-64|0;d=e>>>0<4294967232?h:g;if(d|!d&e>>>0>4294967231){break d}g=c;c=c- -64|0;if(!Ce(g,c,e,d,f)){break c}if(!a){break d}ya(a,0,e)}d=-1;if(!b){break b}x[b>>2]=0;x[b+4>>2]=0;d=-1;break a}if(b){x[b>>2]=e;x[b+4>>2]=d}d=0;if(!a){break b}yb(a,c,e)}}return d|0}function og(a,b,c){var d=0,e=0;d=V-160|0;V=d;e=ng(c);Ea(a);Ea(a+40|0);Ea(a+80|0);vb(a+120|0);c=c-((0-e&c)<<1)<<24>>24;jb(a,b,Oa(c,1));jb(a,b+160|0,Oa(c,2));jb(a,b+320|0,Oa(c,3));jb(a,b+480|0,Oa(c,4));jb(a,b+640|0,Oa(c,5));jb(a,b+800|0,Oa(c,6));jb(a,b+960|0,Oa(c,7));jb(a,b+1120|0,Oa(c,8));La(d,a+40|0);La(d+40|0,a);La(d+80|0,a+80|0);Wa(d+120|0,a+120|0);jb(a,d,e);V=d+160|0}function we(a,b,c,d){var e=0;e=V+-64|0;V=e;if((b-1&255)>>>0<64){v[e+3|0]=1;v[e+1|0]=0;v[e+2|0]=1;v[e|0]=b;bc(e|4);Ba(e|8,0,0);x[e+24>>2]=0;x[e+28>>2]=0;x[e+16>>2]=0;x[e+20>>2]=0;a:{if(c){se(e,c);break a}x[e+40>>2]=0;x[e+44>>2]=0;x[e+32>>2]=0;x[e+36>>2]=0}b:{if(d){pe(e,d);break b}x[e+56>>2]=0;x[e+60>>2]=0;x[e+48>>2]=0;x[e+52>>2]=0}cc(a,e);V=e- -64|0;return 0}Aa();N()}function ce(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=V-32|0;V=g;h=y[e|0]|y[e+1|0]<<8|(y[e+2|0]<<16|y[e+3|0]<<24);e=y[e+4|0]|y[e+5|0]<<8|(y[e+6|0]<<16|y[e+7|0]<<24);x[g+24>>2]=0;x[g+28>>2]=0;x[g+16>>2]=h;x[g+20>>2]=e;Ba(g,c,d);x[g+8>>2]=0;x[g+12>>2]=0;a:{if(b-16>>>0>=49){x[9301]=28;a=-1;break a}a=Zd(a,b,0,0,0,f,32,g,g+16|0)}V=g+32|0;return a|0}function zd(a,b,c){var d=0,e=0;d=V-288|0;V=d;qa(d+240|0,c);ma(d+240|0,d+240|0,c);qa(a,d+240|0);ma(a,a,c);ma(a,a,b);Ac(a,a);ma(a,a,d+240|0);ma(a,a,b);qa(d+192|0,a);ma(d+192|0,d+192|0,c);xa(d+144|0,d+192|0,b);va(d+96|0,d+192|0,b);ma(d+48|0,b,2224);va(d+48|0,d+192|0,d+48|0);c=Xa(d+144|0);b=Xa(d+96|0);e=Xa(d+48|0);ma(d,a,2224);Ma(a,d,b|e);yc(a,a);V=d+288|0;return b|c}function mg(a,b,c){var d=0,e=0;d=V-128|0;V=d;e=ng(c);Ea(a);Ea(a+40|0);vb(a+80|0);b=D(b,960)+3584|0;c=c-((0-e&c)<<1)<<24>>24;ib(a,b,Oa(c,1));ib(a,b+120|0,Oa(c,2));ib(a,b+240|0,Oa(c,3));ib(a,b+360|0,Oa(c,4));ib(a,b+480|0,Oa(c,5));ib(a,b+600|0,Oa(c,6));ib(a,b+720|0,Oa(c,7));ib(a,b+840|0,Oa(c,8));La(d+8|0,a+40|0);La(d+48|0,a);Wa(d+88|0,a+80|0);ib(a,d+8|0,e);V=d+128|0}function Ef(a,b,c,d,e,f,g,h,i,j,k){var l=0;l=a;a=b;l=ya(l,0,a);a:{if((c|0)==1|c>>>0>1){x[9301]=22;break a}if(!c&b>>>0<=15){x[9301]=28;break a}if(j>>>0<2147483649?f|i:1){x[9301]=22;break a}if(!(j>>>0>8191?!i&h>>>0>=3|(i|0)!=0:0)){x[9301]=28;break a}if((d|0)==(l|0)){x[9301]=28;break a}if((k|0)==1){return Ob(h,j>>>10|0,1,d,e,g,16,l,a,0,0,1)?-1:0}x[9301]=28}return-1}function vf(a,b,c,d,e,f,g,h,i,j,k){var l=0;l=a;a=b;l=ya(l,0,b);a:{if((c|0)==1|c>>>0>1){x[9301]=22;break a}if(!c&b>>>0<=15){x[9301]=28;break a}if(j>>>0<2147483649?f|i:1){x[9301]=22;break a}b=j>>>0>8191;if(!((b?h:0)|(b?i:0))){x[9301]=28;break a}if((d|0)==(l|0)){x[9301]=28;break a}if((k|0)==2){return Ob(h,j>>>10|0,1,d,e,g,16,l,a,0,0,2)?-1:0}x[9301]=28}return-1}function ag(a,b,c,d,e,f,g,h,i,j,k){var l=0;l=V-336|0;V=l;Bb(l+16|0,64,0,j,k);Sa(l+80|0,l+16|0);oa(l+16|0,64);ta(l+80|0,g,h,i);ta(l+80|0,34976,0-h&15,0);ub(a,d,e,f,j,1,k);ta(l+80|0,a,e,f);ta(l+80|0,34976,0-e&15,0);Ba(l+8|0,h,i);ta(l+80|0,l+8|0,8,0);Ba(l+8|0,e,f);ta(l+80|0,l+8|0,8,0);Ra(l+80|0,b);oa(l+80|0,256);if(c){x[c>>2]=16;x[c+4>>2]=0}V=l+336|0;return 0}function lj(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0;a:{if(!(d>>>0>2147483646|d<<1>>>0>=b>>>0)){if(d){b=0;while(1){e=b<<1;g=y[b+c|0];f=g>>>4|0;v[e+a|0]=(f+(f+65526>>>8&217)|0)+87;f=(e|1)+a|0;e=g&15;v[f|0]=((e<<8)+(e+65526&55552)|0)+22272>>>8;b=b+1|0;if((d|0)!=(b|0)){continue}break}b=(d<<1)+a|0;break a}b=a;break a}Aa();N()}v[b|0]=0;return a|0}function $f(a,b,c,d,e,f,g,h,i,j){var k=0;k=V-352|0;V=k;Rb(k+32|0,64,0,i,j);Sa(k+96|0,k+32|0);oa(k+32|0,64);ta(k+96|0,f,g,h);Ba(k+24|0,g,h);ta(k+96|0,k+24|0,8,0);ta(k+96|0,b,c,d);Ba(k+24|0,c,d);ta(k+96|0,k+24|0,8,0);Ra(k+96|0,k);oa(k+96|0,256);e=Gb(k,e);oa(k,16);a:{if(!a){break a}if(e){ya(a,0,c);e=-1;break a}Cb(a,b,c,d,i,1,0,j);e=0}V=k+352|0;return e}function Qe(a,b){var c=0,d=0,e=0,f=0;f=a;c=65;a=1024;a:{if(y[1024]==(b&255)){break a}d=D(b&255,16843009);while(1){e=x[a>>2]^d;if((e^-1)&e-16843009&-2139062144){break a}a=a+4|0;c=c-4|0;if(c>>>0>3){continue}break}}b:{if(c){d=b&255;while(1){b=a;if((d|0)==y[a|0]){break b}a=a+1|0;c=c-1|0;if(c){continue}break}}b=0}x[f>>2]=b?b-1024|0:0;return b?0:-1}function mc(a,b){var c=0,d=0,e=0,f=0,g=0,h=0;e=y[a|0];a:{if((e-48&255)>>>0>9){break a}d=e;c=a;while(1){g=c;if(f>>>0>429496729){break a}d=(d&255)-48|0;c=D(f,10);if(d>>>0>(c^-1)>>>0){break a}f=c+d|0;c=g+1|0;d=y[c|0];if((d-48&255)>>>0<10){continue}break}if((a|0)==(c|0)|((a|0)!=(g|0)?(e|0)==48:0)){break a}x[b>>2]=f;h=c}return h}function Si(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;e=V-16|0;x[e+12>>2]=0;if(d-1>>>0<c>>>0){f=c-1|0;j=f+b|0;c=0;b=0;while(1){g=y[j-c|0];i=((g^128)-1&(x[e+12>>2]-1&h-1))>>>8&1;x[e+12>>2]=x[e+12>>2]|0-i&c;b=b|i;h=h|g;c=c+1|0;if((d|0)!=(c|0)){continue}break}x[a>>2]=f-x[e+12>>2];a=b-1|0}else{a=-1}return a|0}function Wa(a,b){var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;c=x[b+4>>2];d=x[b+8>>2];e=x[b+12>>2];f=x[b+16>>2];g=x[b+20>>2];h=x[b+24>>2];i=x[b+28>>2];j=x[b+32>>2];k=x[b+36>>2];x[a>>2]=0-x[b>>2];x[a+36>>2]=0-k;x[a+32>>2]=0-j;x[a+28>>2]=0-i;x[a+24>>2]=0-h;x[a+20>>2]=0-g;x[a+16>>2]=0-f;x[a+12>>2]=0-e;x[a+8>>2]=0-d;x[a+4>>2]=0-c}function Sf(a,b,c){var d=0,e=0,f=0,g=0;d=b<<8&16711680|b<<24;e=c<<24|b>>>8;f=e&65280;e=c<<8|b>>>24;d=e&255|f|d;b=((c&255)<<24|b>>>8)&-16777216|((c&16777215)<<8|b>>>24)&16711680|(c>>>8&65280|c>>>24)|g;v[a|0]=b;v[a+1|0]=b>>>8;v[a+2|0]=b>>>16;v[a+3|0]=b>>>24;b=d;v[a+4|0]=b;v[a+5|0]=b>>>8;v[a+6|0]=b>>>16;v[a+7|0]=b>>>24}function Je(a,b,c,d){var e=0,f=0;e=V-320|0;V=e;f=-1;a:{if(!Ad(c)){break a}if(Wb(c)){break a}if(ob(e,c)){break a}if(!Bd(e)){break a}c=0;while(1){v[a+c|0]=y[b+c|0];c=c+1|0;if((c|0)!=32){continue}break}if(d){Ie(a)}v[a+31|0]=y[a+31|0]&127;pg(e+160|0,a,e);mb(a,e+160|0);if(He(a)){break a}f=fb(b,32)?-1:0}V=e+320|0;return f}function Xd(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=V-16|0;V=g;h=c;c=d;of(a,g+8|0,yb(a- -64|0,h,d),d,e,f);a:{if(x[g+12>>2]|x[g+8>>2]!=64){if(b){x[b>>2]=0;x[b+4>>2]=0}ya(a,0,c- -64|0);a=-1;break a}a=0;if(!b){break a}x[b>>2]=d- -64;x[b+4>>2]=e-((d>>>0<4294967232)-1|0)}V=g+16|0;return a|0}function bg(a,b,c,d,e,f,g,h,i,j,k){var l=0;l=V-336|0;V=l;Rb(l+16|0,64,0,j,k);Sa(l+80|0,l+16|0);oa(l+16|0,64);ta(l+80|0,g,h,i);Ba(l+8|0,h,i);ta(l+80|0,l+8|0,8,0);Cb(a,d,e,f,j,1,0,k);ta(l+80|0,a,e,f);Ba(l+8|0,e,f);ta(l+80|0,l+8|0,8,0);Ra(l+80|0,b);oa(l+80|0,256);if(c){x[c>>2]=16;x[c+4>>2]=0}V=l+336|0;return 0}function fg(a,b,c){var d=0;d=a;a:{if(c){x[a+48>>2]=y[c|0]|y[c+1|0]<<8|(y[c+2|0]<<16|y[c+3|0]<<24);c=y[c+4|0]|y[c+5|0]<<8|(y[c+6|0]<<16|y[c+7|0]<<24);break a}x[a+48>>2]=0;c=0}x[d+52>>2]=c;x[a+56>>2]=y[b|0]|y[b+1|0]<<8|(y[b+2|0]<<16|y[b+3|0]<<24);x[a+60>>2]=y[b+4|0]|y[b+5|0]<<8|(y[b+6|0]<<16|y[b+7|0]<<24)}function Pf(a,b,c,d,e,f){if(!d&c>>>0>=32|d){rd(a,b,c,d,e,f);Jd(a+16|0,a+32|0,c-32|0,d-(c>>>0<32)|0,a);v[a+8|0]=0;v[a+9|0]=0;v[a+10|0]=0;v[a+11|0]=0;v[a+12|0]=0;v[a+13|0]=0;v[a+14|0]=0;v[a+15|0]=0;v[a|0]=0;v[a+1|0]=0;v[a+2|0]=0;v[a+3|0]=0;v[a+4|0]=0;v[a+5|0]=0;v[a+6|0]=0;v[a+7|0]=0;a=0}else{a=-1}return a}function Hg(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=V-32|0;V=e;Uc(b,c,d,e+28|0,e+20|0,e+12|0);a:{if((Ke(a)|0)!=101){x[9301]=28;a=-1;break a}if(!Re(a,e+24|0,e+8|0,e+16|0)){x[9301]=28;a=-1;break a}a=1;if(x[e+28>>2]!=x[e+24>>2]|x[e+12>>2]!=x[e+8>>2]){break a}a=x[e+20>>2]!=x[e+16>>2]}V=e+32|0;return a|0}function La(a,b){var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;c=x[b+8>>2];d=x[b+12>>2];e=x[b+16>>2];f=x[b+20>>2];g=x[b+24>>2];h=x[b+28>>2];i=x[b>>2];j=x[b+4>>2];k=x[b+36>>2];x[a+32>>2]=x[b+32>>2];x[a+36>>2]=k;x[a+24>>2]=g;x[a+28>>2]=h;x[a+16>>2]=e;x[a+20>>2]=f;x[a+8>>2]=c;x[a+12>>2]=d;x[a>>2]=i;x[a+4>>2]=j}function _a(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=V-704|0;V=c;d=x[a+72>>2]>>>3&127;a:{if(d>>>0<=111){za((a+d|0)+80|0,35728,112-d|0);break a}e=a+80|0;za(e+d|0,35728,128-d|0);pc(a,e,c,c+640|0);ya(e,0,112)}Tf(a+192|0,a- -64|0,16);pc(a,a+80|0,c,c+640|0);Tf(b,a,64);oa(c,704);oa(a,208);V=c+704|0;return 0}function Aj(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=V-208|0;V=c;while(1){v[a+d|0]=y[b+d|0];d=d+1|0;if((d|0)!=32){continue}break}v[a|0]=y[a|0]&248;v[a+31|0]=y[a+31|0]&63|64;Yb(c+48|0,a);b=V-96|0;V=b;d=c+128|0;e=c+88|0;va(b+48|0,d,e);xa(b,d,e);wb(b,b);ma(c,b+48|0,b);V=b+96|0;cb(a,c);V=c+208|0;return 0}function Zd(a,b,c,d,e,f,g,h,i){var j=0,k=0;if(b-1>>>0>63|g>>>0>64){a=-1}else{j=V;k=j;j=j-384&-64;V=j;a:{b=b&255;g=g&255;if(!(!(d|e?c:1)|(!a|(b-1&255)>>>0>=64)|(!(g?f:1)|g>>>0>=65))){b:{if(g){ge(j,b,f,g,h,i);break b}we(j,b,h,i)}Jb(j,c,d,e);Gc(j,a,b);V=k;break a}Aa();N()}a=0}return a}function Ta(a){var b=0,c=0,d=0;b=a;a:{if(b&3){while(1){if(!y[b|0]){break a}b=b+1|0;if(b&3){continue}break}}while(1){c=b;b=b+4|0;d=x[c>>2];if(!((d^-1)&d-16843009&-2139062144)){continue}break}if(!(d&255)){return c-a|0}while(1){d=y[c+1|0];b=c+1|0;c=b;if(d){continue}break}}return b-a|0}function ne(a,b,c,d){var e=0;e=V-192|0;V=e;if(!(!c|(b-1&255)>>>0>=64|(!d|d>>>0>=65))){w[e+130>>1]=257;v[e+129|0]=d;v[e+128|0]=b;bc(e+128|4);Ba(e+128|8,0,0);ya(e+144|0,0,48);cc(a,e+128|0);ya(d+e|0,0,128-d|0);b=a;a=za(e,c,d);Jb(b,a,128,0);oa(a,128);V=a+192|0;return 0}Aa();N()}function ac(a,b,c,d,e,f,g){var h=0,i=0;if(b-1>>>0>63|g>>>0>64){a=-1}else{h=V;i=h;h=h-384&-64;V=h;a:{b=b&255;g=g&255;if(!(!(d|e?c:1)|(!a|(b-1&255)>>>0>=64)|(!(g?f:1)|g>>>0>=65))){b:{if(g){ne(h,b,f,g);break b}Ee(h,b)}Jb(h,c,d,e);Gc(h,a,b);V=i;break a}Aa();N()}a=0}return a}function pj(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=V-800|0;V=d;e=-1;a:{if(ob(d+640|0,b)){break a}if(!Xb(d+640|0)){break a}if(ob(d+480|0,c)){break a}if(!Xb(d+480|0)){break a}Ca(d,d+480|0);Da(d+160|0,d+640|0,d);wa(d+320|0,d+160|0);mb(a,d+320|0);e=0}V=d+800|0;return e|0}function oj(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=V-800|0;V=d;e=-1;a:{if(ob(d+640|0,b)){break a}if(!Xb(d+640|0)){break a}if(ob(d+480|0,c)){break a}if(!Xb(d+480|0)){break a}Ca(d,d+480|0);zc(d+160|0,d+640|0,d);wa(d+320|0,d+160|0);mb(a,d+320|0);e=0}V=d+800|0;return e|0}function Xb(a){var b=0;b=V-288|0;V=b;qa(b+240|0,a);qa(b+192|0,a+40|0);qa(b+144|0,a+80|0);xa(b+48|0,b+192|0,b+240|0);ma(b+48|0,b+48|0,b+144|0);ma(b,b+240|0,b+192|0);ma(b,b,2176);qa(b+96|0,b+144|0);va(b,b,b+96|0);xa(b+48|0,b+48|0,b);a=Xa(b+48|0);V=b+288|0;return a}function eg(a,b,c){x[a+48>>2]=c?y[c|0]|y[c+1|0]<<8|(y[c+2|0]<<16|y[c+3|0]<<24):0;x[a+52>>2]=y[b|0]|y[b+1|0]<<8|(y[b+2|0]<<16|y[b+3|0]<<24);x[a+56>>2]=y[b+4|0]|y[b+5|0]<<8|(y[b+6|0]<<16|y[b+7|0]<<24);x[a+60>>2]=y[b+8|0]|y[b+9|0]<<8|(y[b+10|0]<<16|y[b+11|0]<<24)}function Ne(a,b,c){var d=0,e=0,f=0,g=0,h=0;a:{while(1){f=0;e=0;if(d>>>0>=32){break a}while(1){b:{g=e+8|0;h=d+1|0;f=y[c+d|0]<<e|f;if(e>>>0>15){break b}e=g;d=h;if(d>>>0<32){continue}}break}d=a+b|0;a=Vc(a,b,f,g);b=d-a|0;d=h;if(a){continue}break}a=0}return a}function _h(a,b,c,d,e,f,g,h,i,j,k){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;i=d;d=e;e=i|0;a:{if(!d&e>>>0<4294967280){bg(a,a+e|0,0,c,e,d,f,g,h,j,k);if(b){a=e+16|0;d=a>>>0<16?d+1|0:d;x[b>>2]=a;x[b+4>>2]=d}break a}Aa();N()}return 0}function Yh(a,b,c,d,e,f,g,h,i,j,k){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;i=d;d=e;e=i|0;a:{if(!d&e>>>0<4294967280){ag(a,a+e|0,0,c,e,d,f,g,h,j,k);if(b){a=e+16|0;d=a>>>0<16?d+1|0:d;x[b>>2]=a;x[b+4>>2]=d}break a}Aa();N()}return 0}function Sh(a,b,c,d,e,f,g,h,i,j,k){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;i=d;d=e;e=i|0;a:{if(!d&e>>>0<4294967280){ef(a,a+e|0,0,c,e,d,f,g,h,j,k);if(b){a=e+16|0;d=a>>>0<16?d+1|0:d;x[b>>2]=a;x[b+4>>2]=d}break a}Aa();N()}return 0}function Df(a,b,c,d,e,f,g){var h=0;h=V-16|0;V=h;a=ya(a,0,128);a:{if(g>>>0<2147483649?d|f:1){x[9301]=22;a=-1;break a}if(!(g>>>0>8191?!f&e>>>0>=3|(f|0)!=0:0)){x[9301]=28;a=-1;break a}Pa(h,16);a=Ob(e,g>>>10|0,1,b,c,h,16,0,32,a,128,1)?-1:0}V=h+16|0;return a}function Fi(a,b){a=a|0;b=b|0;var c=0,d=0;c=V-256|0;V=c;d=-1;a:{if(Wb(b)){break a}if(Fd(c+96|0,b)){break a}if(!Bd(c+96|0)){break a}Ea(c);b=c+136|0;xa(c,c,b);Ea(c+48|0);va(c+48|0,c+48|0,b);wb(c,c);ma(c+48|0,c+48|0,c);cb(a,c+48|0);d=0}V=c+256|0;return d|0}function nh(a,b,c,d,e,f,g,h,i,j,k){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;a:{b:{switch(k-1|0){case 0:a=Ef(a,b,c,d,e,f,g,h,i,j,1);break a;case 1:a=vf(a,b,c,d,e,f,g,h,i,j,2);break a;default:break b}}x[9301]=28;a=-1}return a|0}function uf(a,b,c,d,e,f,g){var h=0;h=V-16|0;V=h;a=ya(a,0,128);a:{if(g>>>0<2147483649?d|f:1){x[9301]=22;a=-1;break a}d=g>>>0>8191;if(!((d?e:0)|(d?f:0))){x[9301]=28;a=-1;break a}Pa(h,16);a=Ob(e,g>>>10|0,1,b,c,h,16,0,32,a,128,2)?-1:0}V=h+16|0;return a}function Wh(a,b,c,d,e,f,g,h,i,j,k){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;c=-1;if(!f&e>>>0>=16|f){c=$f(a,d,e-16|0,f-(e>>>0<16)|0,(d+e|0)-16|0,g,h,i,j,k)}if(b){x[b>>2]=c?0:e-16|0;x[b+4>>2]=c?0:f-(e>>>0<16)|0}return c|0}function Uh(a,b,c,d,e,f,g,h,i,j,k){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;c=-1;if(!f&e>>>0>=16|f){c=_f(a,d,e-16|0,f-(e>>>0<16)|0,(d+e|0)-16|0,g,h,i,j,k)}if(b){x[b>>2]=c?0:e-16|0;x[b+4>>2]=c?0:f-(e>>>0<16)|0}return c|0}function Qh(a,b,c,d,e,f,g,h,i,j,k){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;c=-1;if(!f&e>>>0>=16|f){c=df(a,d,e-16|0,f-(e>>>0<16)|0,(d+e|0)-16|0,g,h,i,j,k)}if(b){x[b>>2]=c?0:e-16|0;x[b+4>>2]=c?0:f-(e>>>0<16)|0}return c|0}function vi(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;e=V-320|0;V=e;d=-1;if(!Db(e,c)){d=0;while(1){v[a+d|0]=y[b+d|0];d=d+1|0;if((d|0)!=32){continue}break}v[a+31|0]=y[a+31|0]&127;pg(e+160|0,a,e);Vb(a,e+160|0);d=fb(a,32)?-1:0}V=e+320|0;return d|0}function Qd(a,b){var c=0;a:{if(!(b&4)){break a}b=x[a>>2];if(b){oa(x[b+4>>2],x[a+16>>2]<<10)}b=x[a+4>>2];if(!b){break a}oa(b,x[a+20>>2]<<3)}Ka(x[a+4>>2]);x[a+4>>2]=0;b=x[a>>2];b:{if(!b){break b}c=x[b>>2];if(!c){break b}Ka(c)}Ka(b);x[a>>2]=0}function lc(a,b){var c=0,d=0,e=0,f=0,g=0,h=0,i=0;d=V-16|0;V=d;c=10;while(1){a:{g=c;c=c-1|0;e=c+(d+6|0)|0;f=(b>>>0)/10|0;v[e|0]=b-D(f,10)|48;if(b>>>0<10){break a}b=f;if(c){continue}}break}b=a;a=11-g|0;h=za(b,e,a)+a|0,i=0,v[h|0]=i;V=d+16|0}function Ig(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=c;c=V-128|0;V=c;d=-1;a:{if((Ke(a)|0)!=101){break a}if(_c(c)){break a}ya(c+16|0,0,102);b=Oe(c,b,e,a,c+16|0);Zc(c);if(!b){break a}d=rb(c+16|0,a,102);oa(c+16|0,102)}V=c+128|0;return d|0}function zc(a,b,c){var d=0,e=0,f=0,g=0;f=V-48|0;V=f;d=b+40|0;va(a,d,b);e=a+40|0;xa(e,d,b);d=a+80|0;ma(d,a,c+40|0);ma(e,e,c);g=a+120|0;ma(g,c+120|0,b+120|0);ma(a,b+80|0,c+80|0);va(f,a,a);xa(a,d,e);va(e,d,e);xa(d,f,g);va(g,f,g);V=f+48|0}function Da(a,b,c){var d=0,e=0,f=0,g=0;f=V-48|0;V=f;d=b+40|0;va(a,d,b);e=a+40|0;xa(e,d,b);d=a+80|0;ma(d,a,c);ma(e,e,c+40|0);g=a+120|0;ma(g,c+120|0,b+120|0);ma(a,b+80|0,c+80|0);va(f,a,a);xa(a,d,e);va(e,d,e);va(d,f,g);xa(g,f,g);V=f+48|0}function wc(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0;d=V-16|0;V=d;v[d+15|0]=0;f=-1;if(!(Z[x[9087]](a,b,c)|0)){while(1){v[d+15|0]=y[a+e|0]|y[d+15|0];e=e+1|0;if((e|0)!=32){continue}break}f=0-(y[d+15|0]-1>>>8&1)|0}V=d+16|0;return f|0}function Pd(a,b){var c=0,d=0,e=0,f=0;while(1){c=d<<3;e=c+a|0;c=b+c|0;f=y[c|0]|y[c+1|0]<<8|(y[c+2|0]<<16|y[c+3|0]<<24);c=y[c+4|0]|y[c+5|0]<<8|(y[c+6|0]<<16|y[c+7|0]<<24);x[e>>2]=f;x[e+4>>2]=c;d=d+1|0;if((d|0)!=128){continue}break}}function Ya(a,b,c){var d=0,e=0;if(!c){return 0}d=y[a|0];a:{if(d){while(1){e=y[b|0];if(!e){break a}c=c-1|0;if(!c){break a}b:{if((d|0)==(e|0)){break b}break a}b=b+1|0;d=y[a+1|0];a=a+1|0;if(d){continue}break}}d=0}return d-y[b|0]|0}function Lb(a){a=a|0;var b=0;x[a+32>>2]=0;x[a+36>>2]=0;b=x[8989];x[a>>2]=x[8988];x[a+4>>2]=b;b=x[8991];x[a+8>>2]=x[8990];x[a+12>>2]=b;b=x[8993];x[a+16>>2]=x[8992];x[a+20>>2]=b;b=x[8995];x[a+24>>2]=x[8994];x[a+28>>2]=b;return 0}function ec(a,b,c,d){var e=0,f=0,g=0;dc(c,((d<<7)+a|0)+-64|0);e=d<<1;if(e){g=d<<4;d=0;while(1){f=d<<6;Te(c,f+a|0);Se(c);dc((d<<5)+b|0,c);Te(c,(f|64)+a|0);Se(c);dc(((d<<3)+g<<2)+b|0,c);d=d+2|0;if(e>>>0>d>>>0){continue}break}}}function Cc(a,b,c){var d=0;d=V-16|0;x[d+12>>2]=a;x[d+8>>2]=b;b=0;x[d+4>>2]=0;if((c|0)>=1){while(1){x[d+4>>2]=x[d+4>>2]|y[x[d+8>>2]+b|0]^y[x[d+12>>2]+b|0];b=b+1|0;if((c|0)!=(b|0)){continue}break}}return(x[d+4>>2]-1>>>8&1)-1|0}function Ed(a,b,c){var d=0,e=0,f=0,g=0;f=V-48|0;V=f;d=b+40|0;va(a,d,b);e=a+40|0;xa(e,d,b);d=a+80|0;ma(d,a,c);ma(e,e,c+40|0);g=a+120|0;ma(g,c+80|0,b+120|0);b=b+80|0;va(f,b,b);xa(a,d,e);va(e,d,e);va(d,f,g);xa(g,f,g);V=f+48|0}function cj(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=V-800|0;V=d;e=-1;a:{if(Db(d+640|0,b)){break a}if(Db(d+480|0,c)){break a}Ca(d,d+480|0);Da(d+160|0,d+640|0,d);wa(d+320|0,d+160|0);Vb(a,d+320|0);e=0}V=d+800|0;return e|0}function bj(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=V-800|0;V=d;e=-1;a:{if(Db(d+640|0,b)){break a}if(Db(d+480|0,c)){break a}Ca(d,d+480|0);zc(d+160|0,d+640|0,d);wa(d+320|0,d+160|0);Vb(a,d+320|0);e=0}V=d+800|0;return e|0}function Fj(a,b,c,d){var e=0,f=0,g=0,h=0,i=0,j=0;e=c>>>16|0;f=a>>>16|0;j=D(e,f);g=c&65535;h=a&65535;i=D(g,h);f=(i>>>16|0)+D(f,g)|0;e=(f&65535)+D(e,h)|0;Y=(D(b,c)+j|0)+D(a,d)+(f>>>16)+(e>>>16)|0;return i&65535|e<<16}function sj(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0;i=V-80|0;V=i;if(c|d){ra(i+8|0,f);ra(i+12|0,g);sc(i+16|0,h);fg(i+16|0,e,i+8|0);rc(i+16|0,b,a,c,d);oa(i+16|0,64)}V=i+80|0;return 0}function rb(a,b,c){var d=0;d=V-16|0;x[d+12>>2]=a;x[d+8>>2]=b;b=0;v[d+7|0]=0;if(c){while(1){v[d+7|0]=y[d+7|0]|y[x[d+8>>2]+b|0]^y[x[d+12>>2]+b|0];b=b+1|0;if((c|0)!=(b|0)){continue}break}}return(y[d+7|0]-1>>>8&1)-1|0}function eh(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0;g=-1;a:{if(d-1>>>0>63|c>>>0>64){break a}b:{if(!(c?b:0)){if(!we(a,d&255,e,f)){break b}break a}if(ge(a,d&255,b,c&255,e,f)){break a}}g=0}return g|0}function cf(a,b){a=a|0;b=b|0;var c=0;c=V-896|0;V=c;db(c+848|0,b);db(c+800|0,b+32|0);gg(c+320|0,c+848|0);gg(c+160|0,c+800|0);Ca(c+640|0,c+160|0);Da(c+480|0,c+320|0,c+640|0);wa(c,c+480|0);Vb(a,c);V=c+896|0;return 0}function Ge(a,b,c){var d=0,e=0;e=V-160|0;V=e;while(1){v[a+d|0]=y[b+d|0];d=d+1|0;if((d|0)!=32){continue}break}if(c){Ie(a)}v[a+31|0]=y[a+31|0]&127;Yb(e,a);mb(a,e);d=-1;if(!He(a)){d=fb(b,32)?-1:0}V=e+160|0;return d}function Pe(a,b){var c=0,d=0,e=0,f=0;c=V-16|0;V=c;a:{while(1){if(Qe(c+12|0,y[b|0])){b=0;x[a>>2]=0;break a}b=b+1|0;e=x[c+12>>2]<<d|e;f=d>>>0<24;d=d+6|0;if(f){continue}break}x[a>>2]=e}V=c+16|0;return b}function ui(a,b){a=a|0;b=b|0;var c=0,d=0;c=V-160|0;V=c;while(1){v[a+d|0]=y[b+d|0];d=d+1|0;if((d|0)!=32){continue}break}v[a+31|0]=y[a+31|0]&127;Yb(c,a);Vb(a,c);a=fb(a,32);V=c+160|0;return(a?-1:0)|0}function mh(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;a:{b:{switch(h-1|0){case 1:a=uf(a,b,c,d,e,f,g);break a;default:Aa();N();case 0:break b}}a=Df(a,b,c,d,e,f,g)}return a|0}function rj(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0;h=V-80|0;V=h;if(c|d){ra(h+12|0,f);sc(h+16|0,g);eg(h+16|0,e,h+12|0);rc(h+16|0,b,a,c,d);oa(h+16|0,64)}V=h+80|0;return 0}function Mg(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;g=V-32|0;V=g;h=-1;i=d;if(!d&c>>>0>=48|d){ic(g,b,e);h=hf(a,b+32|0,c-32|0,i-(c>>>0<32)|0,g,b,f)}V=g+32|0;return h|0}function Ah(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;g=V-32|0;V=g;h=-1;i=d;if(!d&c>>>0>=48|d){ic(g,b,e);h=qe(a,b+32|0,c-32|0,i-(c>>>0<32)|0,g,b,f)}V=g+32|0;return h|0}function Ib(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=-1;a:{if(d-1>>>0>63|c>>>0>64){break a}b:{if(!(c?b:0)){if(!Ee(a,d&255)){break b}break a}if(ne(a,d&255,b,c&255)){break a}}e=0}return e|0}function Va(a,b){var c=0,d=0,e=0,f=0,g=0;d=V-48|0;V=d;qa(a,b);c=a+80|0;g=b+40|0;qa(c,g);f=a+120|0;qg(f,b+80|0);e=a+40|0;va(e,b,g);qa(d,e);va(e,c,a);xa(c,c,a);xa(a,d,e);xa(f,f,c);V=d+48|0}function ub(a,b,c,d,e,f,g){var h=0,i=0,j=0;h=d;i=c+63|0;h=i>>>0<63?h+1|0:h;j=h>>>6|0;h=(h&63)<<26|i>>>6;i=0-h|0;if((j+((h|0)!=0)|0)==1&i>>>0<f>>>0){Aa();N()}return vd(a,b,c,d,e,f,g)}function Ee(a,b){var c=0;c=V+-64|0;V=c;if((b-1&255)>>>0>=64){Aa();N()}v[c+3|0]=1;v[c+1|0]=0;v[c+2|0]=1;v[c|0]=b;bc(c|4);Ba(c|8,0,0);ya(c+16|0,0,48);cc(a,c);V=c- -64|0;return 0}function tb(a){var b=0,c=0;b=x[9080];c=a+3&-4;a=b+c|0;a:{if(a>>>0<=b>>>0?c:0){break a}if(a>>>0>_()<<16>>>0){if(!(U(a|0)|0)){break a}}x[9080]=a;return b}x[9301]=48;return-1}function xb(a,b){var c=0,d=0,e=0,f=0;while(1){c=e<<3;d=c+a|0;c=b+c|0;f=x[c>>2];c=x[d+4>>2]^x[c+4>>2];x[d>>2]=x[d>>2]^f;x[d+4>>2]=c;e=e+1|0;if((e|0)!=128){continue}break}}function Kf(a){var b=0,c=0;b=a+65510>>>8&255;c=a+65484>>>8|0;return((a^32704)+1>>>8^-1)&95|(((a^16321)+1>>>8^-1)&45|b&a+65)|c&a+71&(b^255)|a+252&a+65474>>>8&(c^-1)&255}function Jf(a){var b=0,c=0;b=a+65510>>>8&255;c=a+65484>>>8|0;return((a^16320)+1>>>8^-1)&47|(((a^16321)+1>>>8^-1)&43|b&a+65)|c&a+71&(b^255)|a+252&a+65474>>>8&(c^-1)&255}function kg(a){var b=0,c=0,d=0,e=0,f=0;d=1;b=31;while(1){e=y[a+b|0];f=y[b+3504|0];c=e-f>>8&d|c;if(b){d=(e^f)+65535>>>8&d;b=b-1|0;c=c&255;continue}break}return(c|0)!=0}function mb(a,b){var c=0,d=0,e=0;c=V-144|0;V=c;wb(c+96|0,b+80|0);ma(c+48|0,b,c+96|0);ma(c,b+40|0,c+96|0);cb(a,c);d=a,e=nb(c+48|0)<<7^y[a+31|0],v[d+31|0]=e;V=c+144|0}function qj(a){a=a|0;var b=0,c=0;b=V-160|0;V=b;a:{if(!Ad(a)){break a}if(Wb(a)){break a}if(ob(b,a)){break a}if(!Xb(b)){break a}c=(Bd(b)|0)!=0}V=b+160|0;return c|0}function fe(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;h=V-32|0;V=h;i=-1;if(!nc(h,f,g)){i=Nf(a,b,c,d,e,h);oa(h,32)}V=h+32|0;return i|0}function ee(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;h=V-32|0;V=h;i=-1;if(!nc(h,f,g)){i=Mf(a,b,c,d,e,h);oa(h,32)}V=h+32|0;return i|0}function yb(a,b,c){var d=0;if(a>>>0<b>>>0){return za(a,b,c)}if(c){d=a+c|0;b=b+c|0;while(1){d=d-1|0;b=b-1|0;v[d|0]=y[b|0];c=c-1|0;if(c){continue}break}}return a}function fb(a,b){var c=0,d=0;c=V-16|0;v[c+15|0]=0;if(b){while(1){v[c+15|0]=y[a+d|0]|y[c+15|0];d=d+1|0;if((d|0)!=(b|0)){continue}break}}return y[c+15|0]-1>>>8&1}function Vc(a,b,c,d){var e=0;if(d){while(1){if(!b){return 0}v[a|0]=y[(c&63)+1024|0];c=c>>>6|0;b=b-1|0;a=a+1|0;e=e+6|0;if(e>>>0<d>>>0){continue}break}}return a}
function Tf(a,b,c){var d=0,e=0,f=0;if(c>>>0>=8){e=c>>>3|0;c=0;while(1){d=c<<3;f=d+a|0;d=b+d|0;Sf(f,x[d>>2],x[d+4>>2]);c=c+1|0;if((e|0)!=(c|0)){continue}break}}}function vj(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;f=V+-64|0;V=f;if(b|c){sc(f,e);fg(f,d,0);a=ya(a,0,b);rc(f,a,a,b,c);oa(f,64)}V=f- -64|0;return 0}function tj(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;f=V+-64|0;V=f;if(b|c){sc(f,e);eg(f,d,0);a=ya(a,0,b);rc(f,a,a,b,c);oa(f,64)}V=f- -64|0;return 0}function lh(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a:{if(!Ya(a,1559,10)){a=tf(a,b,c,d);break a}if(!Ya(a,1549,9)){a=Cf(a,b,c,d);break a}x[9301]=28;a=-1}return a|0}function kh(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a:{if(!Ya(a,1559,10)){a=zf(a,b,c,d);break a}if(!Ya(a,1549,9)){a=Bf(a,b,c,d);break a}x[9301]=28;a=-1}return a|0}function ih(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0;g=d;if(!d&c>>>0>=16|d){a=Qc(a,b+16|0,b,c-16|0,g-(c>>>0<16)|0,e,f)}else{a=-1}return a|0}function Re(a,b,c,d){var e=0;a:{if(y[a|0]!=36|y[a+1|0]!=55|y[a+2|0]!=36){break a}if(Qe(b,y[a+3|0])){break a}a=Pe(c,a+4|0);if(!a){break a}e=Pe(d,a)}return e}function Pg(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0;g=d;if(!d&c>>>0>=16|d){a=$c(a,b+16|0,b,c-16|0,g-(c>>>0<16)|0,e,f)}else{a=-1}return a|0}function Fg(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0;g=d;if(!d&c>>>0>=16|d){a=cd(a,b+16|0,b,c-16|0,g-(c>>>0<16)|0,e,f)}else{a=-1}return a|0}function Dh(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0;g=d;if(!d&c>>>0>=16|d){a=Oc(a,b+16|0,b,c-16|0,g-(c>>>0<16)|0,e,f)}else{a=-1}return a|0}function Me(a,b,c,d,e,f,g,h,i,j){var k=0,l=0,m=0,n=0,o=0;k=V-16|0;V=k;l=-1;if(!_c(k)){l=(m=-1,n=Xe(k,a,b,c,d,e,f,g,h,i,j),o=Zc(k),o?m:n)}V=k+16|0;return l}function Cj(a){a=a|0;var b=0,c=0;if(a>>>0>=2){c=(0-a>>>0)%(a>>>0)|0;while(1){b=Dd();if(b>>>0<c>>>0){continue}break}a=(b>>>0)%(a>>>0)|0}else{a=0}return a|0}function ka(a,b,c,d){var e=0;d=b+d|0;e=a+c|0;d=e>>>0<c>>>0?d+1|0:d;b=b<<1|a>>>31;c=Fj(a<<1&-2,b&1,c,0);b=c+e|0;a=Y+d|0;a=b>>>0<c>>>0?a+1|0:a;Y=a;return b}function Ue(a,b,c){var d=0,e=0,f=0;if(c>>>0>=4){f=c>>>2|0;c=0;while(1){d=c<<2;e=d+a|0;x[e>>2]=x[e>>2]^x[b+d>>2];c=c+1|0;if((f|0)!=(c|0)){continue}break}}}function Lh(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;f=V+-64|0;V=f;mf(f,b,c,d,e);b=Od(a,f);c=rb(f,a,64);V=f- -64|0;return c|((a|0)==(f|0)?-1:b)}function he(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;f=V-32|0;V=f;je(f,b,c,d,e);b=_b(a,f);c=rb(f,a,32);V=f+32|0;return c|((a|0)==(f|0)?-1:b)}function Nh(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;f=V-32|0;V=f;Ze(f,b,c,d,e);b=_b(a,f);c=rb(f,a,32);V=f+32|0;return c|((a|0)==(f|0)?-1:b)}function Ad(a){var b=0,c=0;c=(y[a+31|0]^-1)&127;b=30;while(1){c=y[a+b|0]^-1|c;b=b-1|0;if(b){continue}break}return(((c&255)-1&236-y[a|0])>>>8^-1)&1}function tf(a,b,c,d){a:{b:{if((d|0)==1|d>>>0>1){x[9301]=22;break b}a=Hf(a,b,c,2);if(!a){break a}if((a|0)!=-35){break b}x[9301]=28}a=-1}return a}function Zh(a,b,c,d,e,f,g,h,i,j,k,l){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;return ag(a,b,c,d,e,f,g,h,i,k,l)|0}function Th(a,b,c,d,e,f,g,h,i,j,k,l){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;return ef(a,b,c,d,e,f,g,h,i,k,l)|0}function Cf(a,b,c,d){a:{b:{if((d|0)==1|d>>>0>1){x[9301]=22;break b}a=Hf(a,b,c,1);if(!a){break a}if((a|0)!=-35){break b}x[9301]=28}a=-1}return a}function $h(a,b,c,d,e,f,g,h,i,j,k,l){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;return bg(a,b,c,d,e,f,g,h,i,k,l)|0}function jh(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0;g=d;if(!d&c>>>0>=4294967280|d){Aa();N()}Rc(a+16|0,a,b,c,g,e,f);return 0}function Tg(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0;g=d;if(!d&c>>>0>=4294967280|d){Aa();N()}return ad(a+16|0,a,b,c,g,e,f)|0}function Hh(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0;g=d;if(!d&c>>>0>=4294967280|d){Aa();N()}return Pc(a+16|0,a,b,c,g,e,f)|0}function Gg(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0;g=d;if(!d&c>>>0>=4294967280|d){Aa();N()}dd(a+16|0,a,b,c,g,e,f);return 0}function He(a){var b=0,c=0;c=y[a|0]^1;b=1;while(1){c=y[a+b|0]|c;b=b+1|0;if((b|0)!=31){continue}break}return(y[a+31|0]&127|c&255)-1>>>8&1}function uh(a,b,c,d,e,f,g,h,i,j,k){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;return Ef(a,b,c,d,e,f,g,h,i,j,k)|0}function ph(a,b,c,d,e,f,g,h,i,j,k){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;return vf(a,b,c,d,e,f,g,h,i,j,k)|0}function We(a,b,c){var d=0,e=0;if(c>>>0>=4){e=c>>>2|0;c=0;while(1){d=c<<2;x[d+a>>2]=x[b+d>>2];c=c+1|0;if((e|0)!=(c|0)){continue}break}}}function Xh(a,b,c,d,e,f,g,h,i,j,k){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;return $f(a,c,d,e,f,g,h,i,j,k)|0}function Vh(a,b,c,d,e,f,g,h,i,j,k){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;return _f(a,c,d,e,f,g,h,i,j,k)|0}function Rh(a,b,c,d,e,f,g,h,i,j,k){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;return df(a,c,d,e,f,g,h,i,j,k)|0}function bf(a,b){var c=0,d=0,e=0;while(1){e=a+c|0;d=y[e|0]-(y[b+c|0]+d|0)|0;v[e|0]=d;d=d>>>8&1;c=c+1|0;if((c|0)!=64){continue}break}}function Ba(a,b,c){v[a|0]=b;v[a+1|0]=b>>>8;v[a+2|0]=b>>>16;v[a+3|0]=b>>>24;v[a+4|0]=c;v[a+5|0]=c>>>8;v[a+6|0]=c>>>16;v[a+7|0]=c>>>24}function oa(a,b){var c=0;c=V-16|0;x[c+12>>2]=a;if(b){a=0;while(1){v[x[c+12>>2]+a|0]=0;a=a+1|0;if((b|0)!=(a|0)){continue}break}}}function zg(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;f=V-32|0;V=f;bb(f,d,e,0);a=Rb(a,b,c,d+16|0,f);V=f+32|0;return a|0}function jj(a,b){a=a|0;b=b|0;var c=0;pd(b);c=(a>>>0)/3|0;a=D(c,-3)+a|0;return D(4-(3-a&0-(b>>>1&1))|0,(a|a>>>1)&1)+(c<<2|1)|0}function Pa(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;if(b){while(1){d=a+c|0,e=Dd(),v[d|0]=e;c=c+1|0;if((c|0)!=(b|0)){continue}break}}}function Nd(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0;g=V;f=g-128&-64;V=f;Md(f,e);Ld(f,b,c,d);Kd(f,a);V=g;return 0}function Lg(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;return Me(a,b,c,d,e,f,g,h,i,j)|0}function vh(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=V-112|0;V=e;Lb(e+8|0);qb(e+8|0,b,c,d);Kb(e+8|0,a);V=e+112|0;return 0}function lb(a,b,c){var d=0;a:{if((b|0)<1){break a}d=1;while(1){qa(a,a);if((b|0)==(d|0)){break a}d=d+1|0;continue}}ma(a,a,c)}function Qa(a,b,c){var d=0;a:{if((b|0)<1){break a}d=1;while(1){Fb(a,a);if((b|0)==(d|0)){break a}d=d+1|0;continue}}Ga(a,a,c)}function ue(a,b,c,d,e,f,g,h){var i=0,j=0;i=V-32|0;V=i;j=-1;if(!Sc(i,g,h)){j=Pc(a,b,c,d,e,f,i);oa(i,32)}V=i+32|0;return j}function re(a,b,c,d,e,f,g,h){var i=0,j=0;i=V-32|0;V=i;j=-1;if(!Sc(i,g,h)){j=Oc(a,b,c,d,e,f,i);oa(i,32)}V=i+32|0;return j}function lf(a,b,c,d,e,f,g,h){var i=0,j=0;i=V-32|0;V=i;j=-1;if(!bd(i,g,h)){j=ad(a,b,c,d,e,f,i);oa(i,32)}V=i+32|0;return j}function jf(a,b,c,d,e,f,g,h){var i=0,j=0;i=V-32|0;V=i;j=-1;if(!bd(i,g,h)){j=$c(a,b,c,d,e,f,i);oa(i,32)}V=i+32|0;return j}function gf(a){var b=0,c=0,d=0;b=1;while(1){d=a+c|0;b=y[d|0]+b|0;v[d|0]=b;b=b>>>8|0;c=c+1|0;if((c|0)!=4){continue}break}}function Te(a,b){var c=0,d=0,e=0;while(1){d=c<<2;e=d+a|0;x[e>>2]=x[e>>2]^x[b+d>>2];c=c+1|0;if((c|0)!=16){continue}break}}function nc(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=V-32|0;V=d;e=-1;if(!wc(d,c,b)){e=Ab(a,35856,d,0)}V=d+32|0;return e|0}function bd(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=V-32|0;V=d;e=-1;if(!wc(d,c,b)){e=bb(a,35920,d,0)}V=d+32|0;return e|0}function ed(a,b){a=a|0;b=b|0;var c=0;c=V+-64|0;V=c;_a(a,c);a=a+208|0;Na(a,c,64,0);_a(a,b);oa(c,64);V=c- -64|0;return 0}function ze(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=V+-64|0;V=e;_a(a,e);a=pf(b,c,e,64,0,d,1);V=e- -64|0;return a|0}function wg(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;f=V-16|0;V=f;Nd(f,b,c,d,e);a=Gb(a,f);V=f+16|0;return a|0}function wa(a,b){var c=0,d=0,e=0;c=b+120|0;ma(a,b,c);d=b+40|0;e=b+80|0;ma(a+40|0,d,e);ma(a+80|0,e,c);ma(a+120|0,b,d)}function kb(a,b){var c=0,d=0;c=V-128|0;V=c;d=c+8|0;La(d,b);La(d+40|0,b+40|0);La(d+80|0,b+80|0);Va(a,c+8|0);V=c+128|0}function xh(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;return Zd(a,b,c,d,e,f,g,h,i)|0}function _e(a,b){b=b<<8&16711680|b<<24|(b>>>8&65280|b>>>24);v[a|0]=b;v[a+1|0]=b>>>8;v[a+2|0]=b>>>16;v[a+3|0]=b>>>24}function Xc(a,b){a=a|0;b=b|0;var c=0;c=V-32|0;V=c;Kb(a,c);a=a+104|0;qb(a,c,32,0);Kb(a,b);oa(c,32);V=c+32|0;return 0}function Qf(a,b,c,d,e,f,g,h){var i=0;i=V-32|0;V=i;Ab(i,e,h,0);a=uc(a,b,c,d,e+16|0,f,g,i);oa(i,32);V=i+32|0;return a}function za(a,b,c){var d=0;if(c){d=a;while(1){v[d|0]=y[b|0];d=d+1|0;b=b+1|0;c=c-1|0;if(c){continue}break}}return a}function Yf(a){a=a|0;while(1){Pa(a,32);v[a+31|0]=y[a+31|0]&31;if(!kg(a)){continue}if(fb(a,32)){continue}break}}function qe(a,b,c,d,e,f,g){if(!d&c>>>0>=16|d){a=re(a,b+16|0,b,c-16|0,d-(c>>>0<16)|0,e,f,g)}else{a=-1}return a}function hf(a,b,c,d,e,f,g){if(!d&c>>>0>=16|d){a=jf(a,b+16|0,b,c-16|0,d-(c>>>0<16)|0,e,f,g)}else{a=-1}return a}function ye(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=V+-64|0;V=d;_a(a,d);a=De(b,d,64,0,c,1);V=d- -64|0;return a|0}function xe(a,b,c,d,e,f,g,h){var i=0;i=V-32|0;V=i;bb(i,e,h,0);a=Cb(a,b,c,d,e+16|0,f,g,i);V=i+32|0;return a}function yg(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;return xe(a,b,c,d,e,f,g,h)|0}function uj(){var a=0,b=0;a=x[9300];a:{if(!a){break a}a=x[a+20>>2];if(!a){break a}b=Z[a|0]()|0}return b|0}function oe(a,b){var c=0,d=0;while(1){d=a+c|0;v[d|0]=y[d|0]^y[b+c|0];c=c+1|0;if((c|0)!=8){continue}break}}function dh(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;return Cb(a,b,c,d,e,f,g,h)|0}function Zg(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;return uc(a,b,c,d,e,f,g,h)|0}function Xg(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;return Qf(a,b,c,d,e,f,g,h)|0}function Ug(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;return lf(a,b,c,d,e,f,g,h)|0}function Qg(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;return jf(a,b,c,d,e,f,g,h)|0}function Ih(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;return ue(a,b,c,d,e,f,g,h)|0}function Eh(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;return re(a,b,c,d,e,f,g,h)|0}function ic(a,b,c){var d=0,e=0;e=V;d=e-384&-64;V=d;kc(d,0,0,24);gb(d,b,32,0);gb(d,c,32,0);jc(d,a,24);V=e}function Rf(a,b,c,d,e){var f=0;f=V-32|0;V=f;Ab(f,d,e,0);a=xd(a,b,c,d+16|0,f);oa(f,32);V=f+32|0;return a}function Ke(a){var b=0;while(1){if(!y[a+b|0]){return b}b=b+1|0;if((b|0)!=102){continue}break}return 102}function dc(a,b){var c=0,d=0;while(1){d=c<<2;x[d+a>>2]=x[b+d>>2];c=c+1|0;if((c|0)!=16){continue}break}}function ya(a,b,c){var d=0;if(c){d=a;while(1){v[d|0]=b;d=d+1|0;c=c-1|0;if(c){continue}break}}return a}function Ca(a,b){var c=0;c=b+40|0;va(a,c,b);xa(a+40|0,c,b);La(a+80|0,b+80|0);ma(a+120|0,b+120|0,2272)}function Hb(a,b,c){a=a|0;b=b|0;c=c|0;if(c>>>0>=256){Q(1349,1262,107,1123);N()}return Gc(a,b,c&255)|0}function sb(a){a=a|0;x[a+64>>2]=0;x[a+68>>2]=0;x[a+72>>2]=0;x[a+76>>2]=0;za(a,35024,64);return 0}function ab(a,b){var c=0,d=0;c=b+120|0;ma(a,b,c);d=b+40|0;b=b+80|0;ma(a+40|0,d,b);ma(a+80|0,b,c)}function zh(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return qf(a,b,c,d,e,f,g)|0}function th(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return Df(a,b,c,d,e,f,g)|0}function ah(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return ub(a,b,c,d,e,f,g)|0}function _d(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return uf(a,b,c,d,e,f,g)|0}function Vg(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return ad(a,b,c,d,e,f,g)|0}function Sg(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return kf(a,b,c,d,e,f,g)|0}function Rg(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return $c(a,b,c,d,e,f,g)|0}function Og(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return hf(a,b,c,d,e,f,g)|0}function Jh(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return Pc(a,b,c,d,e,f,g)|0}function Gh(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return te(a,b,c,d,e,f,g)|0}function Fh(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return Oc(a,b,c,d,e,f,g)|0}function Fe(a,b){a=a|0;b=b|0;var c=0;c=V-32|0;V=c;Pa(c,32);Tc(a,b,c);oa(c,32);V=c+32|0;return 0}function Ch(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return qe(a,b,c,d,e,f,g)|0}function Cb(a,b,c,d,e,f,g,h){if((d|0)==1|d>>>0>1){Aa();N()}return Z[x[9093]](a,b,c,d,e,f,g,h)|0}function te(a,b,c,d,e,f,g){if(!d&c>>>0>=4294967280|d){Aa();N()}return ue(a+16|0,a,b,c,d,e,f,g)}function mf(a,b,c,d,e){var f=0;f=V-416|0;V=f;gd(f,e,32);fd(f,b,c,d);ed(f,a);V=f+416|0;return 0}function kf(a,b,c,d,e,f,g){if(!d&c>>>0>=4294967280|d){Aa();N()}return lf(a+16|0,a,b,c,d,e,f,g)}function je(a,b,c,d,e){var f=0;f=V-416|0;V=f;me(f,e,32);le(f,b,c,d);ke(f,a);V=f+416|0;return 0}function Ze(a,b,c,d,e){var f=0;f=V-208|0;V=f;Yc(f,e,32);fc(f,b,c,d);Xc(f,a);V=f+208|0;return 0}function sa(a){var b=0,c=0;b=y[a|0]|y[a+1|0]<<8;a=y[a+2|0];c=a>>>16|0;a=b|a<<16;Y=c;return a}function Dd(){var a=0,b=0;a=V-16|0;V=a;v[a+15|0]=0;b=S(36380,a+15|0,0)|0;V=a+16|0;return b|0}function vd(a,b,c,d,e,f,g){if((d|0)==1|d>>>0>1){Aa();N()}return Z[x[9094]](a,b,c,d,e,f,g)|0}function qc(a,b,c,d,e,f){if((d|0)==1|d>>>0>1){Aa();N()}return Z[x[9093]](a,b,c,d,e,0,0,f)|0}function Wg(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)==1|c>>>0>1){Q(1329,1175,197,1092);N()}Pa(a,b)}function jb(a,b,c){Ma(a,b,c);Ma(a+40|0,b+40|0,c);Ma(a+80|0,b+80|0,c);Ma(a+120|0,b+120|0,c)}function xg(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return xe(a,b,c,d,e,0,0,f)|0}function cg(a,b,c,d,e,f){if((d|0)==1|d>>>0>1){Aa();N()}return Z[x[9094]](a,b,c,d,e,0,f)|0}function Gj(a,b){var c=0,d=0;c=b&31;d=(-1>>>c&a)<<c;c=a;a=0-b&31;return d|(c&-1<<a)>>>a}
function ja(a,b){var c=0,d=0;c=0-b&31;d=(a&-1>>>c)<<c;c=a;a=b&31;return d|(c&-1<<a)>>>a}function Qb(a,b,c,d){var e=0;e=V-208|0;V=e;sb(e);Na(e,b,c,d);_a(e,a);V=e+208|0;return 0}function ch(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return qc(a,b,c,d,e,f)|0}function Yg(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return tc(a,b,c,d,e,f)|0}function Vd(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return of(a,b,c,d,e,f)|0}function Rd(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return rd(a,b,c,d,e,f)|0}function Ic(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return Nf(a,b,c,d,e,f)|0}function Hc(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return Mf(a,b,c,d,e,f)|0}function $g(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return cg(a,b,c,d,e,f)|0}function Vf(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=V-32|0;V=d;ud(d,c);td(a,b,d);V=d+32|0}function wd(a,b,c,d,e){if((c|0)==1|c>>>0>1){Aa();N()}return Z[x[9092]](a,b,c,d,e)|0}function Rb(a,b,c,d,e){if((c|0)==1|c>>>0>1){Aa();N()}return Z[x[9091]](a,b,c,d,e)|0}function lg(){var a=0;a=V-16|0;V=a;v[a+15|0]=0;S(36416,a+15|0,0)|0;V=a+16|0}function ie(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return je(a,b,c,d,e)|0}function fh(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Rb(a,b,c,d,e)|0}function bh(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Bb(a,b,c,d,e)|0}function be(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Jd(a,b,c,d,e)|0}function ae(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Zb(a,b,c,d,e)|0}function _g(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return xd(a,b,c,d,e)|0}function Ud(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Ce(a,b,c,d,e)|0}function Sd(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Rf(a,b,c,d,e)|0}function Oh(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Ze(a,b,c,d,e)|0}function Mh(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return mf(a,b,c,d,e)|0}function hg(a,b,c){var d=0;d=V-48|0;V=d;Wa(d,b);La(a,b);Ma(a,d,c);V=d+48|0}function ii(a,b,c){a=a|0;b=b|0;c=c|0;qf(b,32,c,32,0,0,0);return Lc(a,b)|0}function dj(a){a=a|0;var b=0;b=V-160|0;V=b;a=Db(b,a);V=b+160|0;return!a|0}function Bb(a,b,c,d,e){if((c|0)==1|c>>>0>1){Aa();N()}return wd(a,b,c,d,e)}function ra(a,b){v[a|0]=b;v[a+1|0]=b>>>8;v[a+2|0]=b>>>16;v[a+3|0]=b>>>24}function Xa(a){var b=0;b=V-32|0;V=b;cb(b,a);a=fb(b,32);V=b+32|0;return a}function aj(a){a=a|0;var b=0;b=V+-64|0;V=b;Pa(b,64);cf(a,b);V=b- -64|0}function nb(a){var b=0;b=V-32|0;V=b;cb(b,a);V=b+32|0;return v[b|0]&1}function ib(a,b,c){Ma(a,b,c);Ma(a+40|0,b+40|0,c);Ma(a+80|0,b+80|0,c)}function Ve(a,b){a=((b<<7)+a|0)+-64|0;b=x[a>>2];Y=x[a+4>>2];return b}function Ub(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;yd(a,b,c,d,20);return 0}function Tb(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;yd(a,b,c,d,12);return 0}function mj(a){a=a|0;var b=0;b=V-32|0;V=b;Pa(b,32);Zf(a,b);V=b+32|0}function Sb(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;yd(a,b,c,d,8);return 0}function yh(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return gb(a,b,c,d)|0}function xi(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return ze(a,b,c,d)|0}function wh(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return qb(a,b,c,d)|0}function ug(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Ld(a,b,c,d);return 0}function uc(a,b,c,d,e,f,g,h){return Z[x[9090]](a,b,c,d,e,f,g,h)|0}function sh(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return Cf(a,b,c,d)|0}function rh(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return Bf(a,b,c,d)|0}function qh(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return zf(a,b,c,d)|0}function oh(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return tf(a,b,c,d)|0}function kc(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return Ib(a,b,c,d)|0}function de(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return Qb(a,b,c,d)|0}function Td(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return Na(a,b,c,d)|0}function Ph(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return fc(a,b,c,d)|0}function Kh(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return le(a,b,c,d)|0}function $d(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return ta(a,b,c,d)|0}function Nc(a){v[a+32|0]=1;v[a+33|0]=0;v[a+34|0]=0;v[a+35|0]=0}function tc(a,b,c,d,e,f){return Z[x[9090]](a,b,c,d,e,0,0,f)|0}function Gd(a){x[a>>2]=0;x[a+4>>2]=0;x[a+8>>2]=0;x[a+12>>2]=0}function af(a){var b=0;b=x[a>>2];if(b){Ka(b)}$e(a);return 0}function Ni(a,b,c){a=a|0;b=b|0;c=c|0;return Je(a,b,c,1)|0}function Mi(a,b,c){a=a|0;b=b|0;c=c|0;return Je(a,b,c,0)|0}function bc(a){v[a|0]=0;v[a+1|0]=0;v[a+2|0]=0;v[a+3|0]=0}function wi(a,b,c){a=a|0;b=b|0;c=c|0;return ye(a,b,c)|0}function si(a,b,c){a=a|0;b=b|0;c=c|0;return qd(a,b,c)|0}function me(a,b,c){a=a|0;b=b|0;c=c|0;return gd(a,b,c)|0}function jc(a,b,c){a=a|0;b=b|0;c=c|0;return Hb(a,b,c)|0}function Sc(a,b,c){a=a|0;b=b|0;c=c|0;return nc(a,b,c)|0}function Kc(a,b,c){a=a|0;b=b|0;c=c|0;return wc(a,b,c)|0}function Ie(a){v[a|0]=y[a|0]&248;v[a+31|0]=y[a+31|0]|64}function Ai(a,b,c){a=a|0;b=b|0;c=c|0;return Tc(a,b,c)|0}function oc(a,b){a=a|0;b=b|0;Pa(b,32);return vc(a,b)|0}function hi(a,b){a=a|0;b=b|0;Pa(b,32);return Lc(a,b)|0}function Cd(a){vb(a);Ea(a+40|0);Ea(a+80|0);vb(a+120|0)}function Aa(){var a=0;a=x[9433];if(a){Z[a|0]()}R();N()}function xj(a,b,c){a=a|0;b=b|0;c=c|0;Bb(a,b,0,1574,c)}function xd(a,b,c,d,e){return Z[x[9089]](a,b,c,d,e)|0}function vc(a,b){a=a|0;b=b|0;return Z[x[9088]](a,b)|0}function Zb(a,b,c,d,e){return Z[x[9083]](a,b,c,d,e)|0}function Sa(a,b){a=a|0;b=b|0;return Z[x[9084]](a,b)|0}function Ra(a,b){a=a|0;b=b|0;return Z[x[9086]](a,b)|0}function Jd(a,b,c,d,e){return Z[x[9082]](a,b,c,d,e)|0}function rd(a,b,c,d,e,f){return Qf(a,b,c,d,e,0,0,f)}function qf(a,b,c,d,e,f,g){return ac(a,b,c,d,e,f,g)}function of(a,b,c,d,e,f){pf(a,b,c,d,e,f,0);return 0}function ad(a,b,c,d,e,f,g){return dd(a,b,c,d,e,f,g)}function Pc(a,b,c,d,e,f,g){return Rc(a,b,c,d,e,f,g)}function Oc(a,b,c,d,e,f,g){return Qc(a,b,c,d,e,f,g)}function $c(a,b,c,d,e,f,g){return cd(a,b,c,d,e,f,g)}function ta(a,b,c,d){return Z[x[9085]](a,b,c,d)|0}function _b(a,b){a=a|0;b=b|0;return Cc(a,b,32)|0}function Od(a,b){a=a|0;b=b|0;return Cc(a,b,64)|0}function Gb(a,b){a=a|0;b=b|0;return Cc(a,b,16)|0}function $e(a){x[a+8>>2]=0;x[a>>2]=0;x[a+4>>2]=0}function Nf(a,b,c,d,e,f){return Pf(a,b,c,d,e,f)}function Mf(a,b,c,d,e,f){return Of(a,b,c,d,e,f)}function Li(a,b){a=a|0;b=b|0;return Ge(a,b,1)|0}function Ki(a,b){a=a|0;b=b|0;return Ge(a,b,0)|0}function hd(a,b){sb(a);if(b){Na(a,35872,34,0)}}function Xi(a,b,c){a=a|0;b=b|0;c=c|0;td(a,b,c)}function Wi(a,b,c){a=a|0;b=b|0;c=c|0;Vf(a,b,c)}function Uf(a,b,c){a=a|0;b=b|0;c=c|0;Ga(a,b,c)}function zi(a,b){a=a|0;b=b|0;return Fe(a,b)|0}function vg(a,b){a=a|0;b=b|0;Md(a,b);return 0}function ve(a,b){a=a|0;b=b|0;return oc(a,b)|0}function tg(a,b){a=a|0;b=b|0;Kd(a,b);return 0}function _i(a,b){a=a|0;b=b|0;return Xf(a,b)|0}function Lc(a,b){a=a|0;b=b|0;return vc(a,b)|0}function Ii(a,b){a=a|0;b=b|0;return Sa(a,b)|0}function Hi(a,b){a=a|0;b=b|0;return Ra(a,b)|0}function Ce(a,b,c,d,e){return De(a,b,c,d,e,0)}function Oa(a,b){return((a^b)&255)-1>>>31|0}function zf(a,b,c,d){return Af(a,b,c,d,2)}function fd(a,b,c,d){Na(a,b,c,d);return 0}function fc(a,b,c,d){qb(a,b,c,d);return 0}function Bf(a,b,c,d){return Af(a,b,c,d,1)}function le(a,b,c,d){return fd(a,b,c,d)}function gb(a,b,c,d){return Ja(a,b,c,d)}function Ja(a,b,c,d){return Jb(a,b,c,d)}function Ea(a){x[a>>2]=1;ya(a+4|0,0,36)}function pd(a){if((a&-7)!=1){Aa();N()}}function Zi(a,b){a=a|0;b=b|0;ud(a,b)}function Yi(a,b){a=a|0;b=b|0;Wf(a,b)}function Vi(a,b){a=a|0;b=b|0;sd(a,b)}function yi(a){a=a|0;return Ae(a)|0}function Ae(a){a=a|0;sb(a);return 0}function ng(a){return(a&128)>>>7|0}function la(a,b){return Gj(a,b)}function kd(){return-2147483648}function id(){return 1073741824}function yc(a,b){hg(a,b,nb(b))}function wf(){return 268435456}function gj(){return 134217728}function fj(){return 536870912}function xf(){return 67108864}function qi(a){a=a|0;Pa(a,16)}function pb(a,b){za(a,b,1024)}function _c(a){$e(a);return 0}function Zc(a){af(a);return 0}function Le(){return 16777216}function Ff(){return 33554432}function Fa(a){a=a|0;Pa(a,32)}function Oi(){return 524288}function $b(a){ya(a,0,1024)}function Pi(){return 32768}function Fb(a,b){Ga(a,b,b)}function $i(a){a=a|0;Yf(a)}function yf(){return 1559}function vb(a){ya(a,0,40)}function ti(){return 1478}function sf(){return 1321}function ri(){return 1523}function ld(){return 8192}function ji(){return 1438}function ij(){return 1549}function ej(){return 1157}function ei(){return 1315}function di(){return 1457}function bi(){return 1533}function ai(){return 1464}function Ui(){return 1540}function Qi(){return 1570}function Ji(){return 1488}function Gi(){return 1496}function Dj(){return 1089}function Bi(){return 1449}function rf(){return 384}function pi(){return 104}function nf(){return 416}function md(){return 128}function gc(){return 208}function Ri(){return 102}function Id(){return 256}function ua(){return 16}function pa(){return 32}function mi(){return 52}function li(){return 17}function ki(){return-18}function hb(){return-17}function ff(){return 48}function dg(){return 12}function ci(){return 10}function Ua(){return 24}function Ha(){return 64}function Be(){return-65}function zb(){return 2}function jd(){return 4}function hj(){return 6}function eb(){return 0}function Nb(){return 3}function Mb(){return 1}function Ia(){return-1}function $a(){return 8}function sg(){}
// EMSCRIPTEN_END_FUNCS
g=y;r(ga);var Z=e([null,Nd,wg,vg,ug,tg,Bj,Aj,zj,yj,vj,tj,sj,rj]);function _(){return u.byteLength/65536|0}function da(ea){ea=ea|0;var $=_()|0;var aa=$+ea|0;if($<aa&&aa<65536){var ba=new ArrayBuffer(D(aa,65536));var ca=new Int8Array(ba);ca.set(v);v=new Int8Array(ba);w=new Int16Array(ba);x=new Int32Array(ba);y=new Uint8Array(ba);z=new Uint16Array(ba);A=new Uint32Array(ba);B=new Float32Array(ba);C=new Float64Array(ba);u=ba;t.buffer=u;g=y}return $}return{"g":sg,"h":$h,"i":_h,"j":Zh,"k":Yh,"l":Xh,"m":Wh,"n":Vh,"o":Uh,"p":pa,"q":dg,"r":eb,"s":ua,"t":hb,"u":Fa,"v":pa,"w":$a,"x":eb,"y":ua,"z":hb,"A":Fa,"B":Th,"C":Sh,"D":Rh,"E":Qh,"F":pa,"G":Ua,"H":eb,"I":ua,"J":hb,"K":Fa,"L":pa,"M":pa,"N":ai,"O":ie,"P":he,"Q":Fa,"R":pa,"S":pa,"T":gc,"U":Fa,"V":Yc,"W":Ph,"X":Xc,"Y":Oh,"Z":Nh,"_":Ha,"$":pa,"aa":nf,"ba":Fa,"ca":gd,"da":le,"ea":ed,"fa":Mh,"ga":Lh,"ha":pa,"ia":pa,"ja":nf,"ka":Fa,"la":me,"ma":Kh,"na":ke,"oa":ie,"pa":he,"qa":pa,"ra":pa,"sa":pa,"ta":pa,"ua":Ua,"va":pa,"wa":ua,"xa":ua,"ya":hb,"za":ti,"Aa":si,"Ba":ve,"Ca":Sc,"Da":Ic,"Ea":Hc,"Fa":fe,"Ga":ee,"Ha":Jh,"Ia":Ih,"Ja":Hh,"Ka":Gh,"La":Fh,"Ma":Eh,"Na":Dh,"Oa":Ch,"Pa":Bh,"Qa":Ah,"Ra":ff,"Sa":qd,"Ta":oc,"Ua":nc,"Va":Ic,"Wa":Hc,"Xa":fe,"Ya":ee,"Za":pa,"_a":pa,"$a":pa,"ab":pa,"bb":Ua,"cb":pa,"db":ua,"eb":ua,"fb":hb,"gb":bb,"hb":pa,"ib":ua,"jb":pa,"kb":ua,"lb":Ab,"mb":pa,"nb":ua,"ob":pa,"pb":ua,"qb":Ub,"rb":Ha,"sb":ua,"tb":pa,"ub":ua,"vb":Tb,"wb":Ha,"xb":ua,"yb":pa,"zb":ua,"Ab":Sb,"Bb":Ha,"Cb":ua,"Db":pa,"Eb":ua,"Fb":ua,"Gb":Ha,"Hb":pa,"Ib":ua,"Jb":Ha,"Kb":pa,"Lb":sf,"Mb":rf,"Nb":zh,"Ob":kc,"Pb":yh,"Qb":jc,"Rb":Fa,"Sb":ua,"Tb":Ha,"Ub":pa,"Vb":ua,"Wb":Ha,"Xb":pa,"Yb":ua,"Zb":ua,"_b":rf,"$b":Fa,"ac":qf,"bc":xh,"cc":Ib,"dc":eh,"ec":gb,"fc":Hb,"gc":Ha,"hc":de,"ic":bi,"jc":pa,"kc":pi,"lc":Lb,"mc":wh,"nc":Kb,"oc":vh,"pc":Ha,"qc":gc,"rc":sb,"sc":Td,"tc":_a,"uc":de,"vc":ua,"wc":Ha,"xc":$a,"yc":pa,"zc":ce,"Ac":sf,"Bc":ua,"Cc":Ha,"Dc":$a,"Ec":pa,"Fc":ce,"Gc":Fa,"Hc":ii,"Ic":hi,"Jc":gi,"Kc":fi,"Lc":pa,"Mc":pa,"Nc":pa,"Oc":pa,"Pc":ei,"Qc":Id,"Rc":ua,"Sc":pa,"Tc":be,"Uc":ae,"Vc":Ii,"Wc":$d,"Xc":Hi,"Yc":Gi,"Zc":Fa,"_c":be,"$c":ae,"ad":Sa,"bd":$d,"cd":Ra,"dd":ua,"ed":pa,"fd":Id,"gd":Fa,"hd":Mb,"id":ua,"jd":Ia,"kd":eb,"ld":Ia,"md":ua,"nd":md,"od":ij,"pd":Nb,"qd":Ia,"rd":ld,"sd":kd,"td":jd,"ud":Ff,"vd":hj,"wd":gj,"xd":$a,"yd":fj,"zd":uh,"Ad":th,"Bd":sh,"Cd":rh,"Dd":qh,"Ed":zb,"Fd":ua,"Gd":Ia,"Hd":eb,"Id":Ia,"Jd":ua,"Kd":md,"Ld":yf,"Md":Mb,"Nd":Ia,"Od":ld,"Pd":kd,"Qd":zb,"Rd":xf,"Sd":Nb,"Td":wf,"Ud":jd,"Vd":id,"Wd":ph,"Xd":_d,"Yd":oh,"Zd":Mb,"_d":zb,"$d":zb,"ae":ua,"be":Ia,"ce":eb,"de":Ia,"ee":ua,"fe":md,"ge":yf,"he":Mb,"ie":Ia,"je":ld,"ke":kd,"le":zb,"me":xf,"ne":Nb,"oe":wf,"pe":jd,"qe":id,"re":nh,"se":_d,"te":mh,"ue":lh,"ve":kh,"we":ej,"xe":ji,"ye":Lc,"ze":Kc,"Ae":pa,"Be":pa,"Ce":wc,"De":vc,"Ee":pa,"Fe":pa,"Ge":pa,"He":Ua,"Ie":pa,"Je":ua,"Ke":ua,"Le":hb,"Me":Ji,"Ne":Ic,"Oe":Hc,"Pe":Fa,"Qe":Pc,"Re":jh,"Se":Oc,"Te":ih,"Ue":Nf,"Ve":Mf,"We":pa,"Xe":Ua,"Ye":pa,"Ze":ua,"_e":ua,"$e":hb,"af":Fa,"bf":Fa,"cf":oi,"df":ni,"ef":Mc,"ff":hh,"gf":gh,"hf":mi,"jf":li,"kf":Ua,"lf":pa,"mf":ki,"nf":eb,"of":Mb,"pf":zb,"qf":Nb,"rf":$a,"sf":ua,"tf":ri,"uf":Yd,"vf":qi,"wf":$a,"xf":ua,"yf":Yd,"zf":gc,"Af":Ha,"Bf":pa,"Cf":pa,"Df":Ha,"Ef":Be,"Ff":Bi,"Gf":Ai,"Hf":zi,"If":Xd,"Jf":Wd,"Kf":Vd,"Lf":Ud,"Mf":yi,"Nf":Td,"Of":xi,"Pf":wi,"Qf":gc,"Rf":Ha,"Sf":pa,"Tf":pa,"Uf":Ha,"Vf":Be,"Wf":Di,"Xf":Ci,"Yf":Ae,"Zf":Td,"_f":ze,"$f":ye,"ag":Tc,"bg":Fe,"cg":Fi,"dg":Ei,"eg":Ud,"fg":Wd,"gg":Vd,"hg":Xd,"ig":pa,"jg":$a,"kg":Ia,"lg":pa,"mg":dg,"ng":Ia,"og":fh,"pg":dh,"qg":ch,"rg":bh,"sg":ah,"tg":$g,"ug":Fa,"vg":Fa,"wg":pa,"xg":Ua,"yg":Ia,"zg":Ui,"Ag":Sd,"Bg":Rd,"Cg":Fa,"Dg":pa,"Eg":$a,"Fg":Ia,"Gg":_g,"Hg":Zg,"Ig":Yg,"Jg":Fa,"Kg":Sd,"Lg":Xg,"Mg":Rd,"Ng":pa,"Og":Ua,"Pg":Ia,"Qg":Fa,"Rg":ua,"Sg":pa,"Tg":Ha,"Ug":Gb,"Vg":_b,"Wg":Od,"Xg":Dj,"Yg":Dd,"Zg":lg,"_g":Cj,"$g":Pa,"ah":xj,"bh":pa,"ch":uj,"dh":Wg,"eh":lj,"fh":kj,"gh":jj,"hh":od,"ih":nd,"jh":wj,"kh":Ti,"lh":Si,"mh":di,"nh":ci,"oh":Nb,"ph":eb,"qh":qd,"rh":oc,"sh":bd,"th":Vg,"uh":Ug,"vh":Tg,"wh":Sg,"xh":Rg,"yh":Qg,"zh":Pg,"Ah":Og,"Bh":pa,"Ch":pa,"Dh":pa,"Eh":pa,"Fh":Ua,"Gh":ua,"Hh":hb,"Ih":Ng,"Jh":Mg,"Kh":ff,"Lh":qj,"Mh":pj,"Nh":oj,"Oh":Zf,"Ph":nj,"Qh":mj,"Rh":Yf,"Sh":Xf,"Th":ud,"Uh":Wf,"Vh":td,"Wh":sd,"Xh":Vf,"Yh":Uf,"Zh":pa,"_h":Ha,"$h":pa,"ai":Ha,"bi":pa,"ci":dj,"di":cj,"ei":bj,"fi":cf,"gi":aj,"hi":$i,"ii":_i,"ji":Zi,"ki":Yi,"li":Xi,"mi":Wi,"ni":Uf,"oi":Vi,"pi":pa,"qi":Ha,"ri":Ha,"si":pa,"ti":Lg,"ui":ua,"vi":Ia,"wi":eb,"xi":Ia,"yi":pa,"zi":Ri,"Ai":Qi,"Bi":Pi,"Ci":Ia,"Di":Le,"Ei":Ia,"Fi":Oi,"Gi":Le,"Hi":Ff,"Ii":id,"Ji":Kg,"Ki":Jg,"Li":Ig,"Mi":Hg,"Ni":Ni,"Oi":Mi,"Pi":Li,"Qi":Ki,"Ri":pa,"Si":pa,"Ti":vi,"Ui":ui,"Vi":pa,"Wi":pa,"Xi":ad,"Yi":Gg,"Zi":$c,"_i":Fg,"$i":pa,"aj":Ua,"bj":ua,"cj":hb,"dj":ua,"ej":ua,"fj":Eg,"gj":Dg,"hj":Cg,"ij":pa,"jj":$a,"kj":Ia,"lj":Fa,"mj":Bg,"nj":Ag,"oj":pa,"pj":$a,"qj":Ia,"rj":Fa,"sj":pa,"tj":Ua,"uj":Ia,"vj":zg,"wj":yg,"xj":xg,"yj":Fa,"zj":Za,"Aj":Ka,"Bj":Z}}return fa(ha)}
// EMSCRIPTEN_END_ASM




)(asmLibraryArg)},instantiate:function(binary,info){return{then:function(ok){var module=new WebAssembly.Module(binary);ok({"instance":new WebAssembly.Instance(module)})}}},RuntimeError:Error};wasmBinary=[];if(typeof WebAssembly!=="object"){abort("no native wasm support detected")}function setValue(ptr,value,type,noSafe){type=type||"i8";if(type.charAt(type.length-1)==="*")type="i32";switch(type){case"i1":HEAP8[ptr>>0]=value;break;case"i8":HEAP8[ptr>>0]=value;break;case"i16":HEAP16[ptr>>1]=value;break;case"i32":HEAP32[ptr>>2]=value;break;case"i64":tempI64=[value>>>0,(tempDouble=value,+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[ptr>>2]=tempI64[0],HEAP32[ptr+4>>2]=tempI64[1];break;case"float":HEAPF32[ptr>>2]=value;break;case"double":HEAPF64[ptr>>3]=value;break;default:abort("invalid type for setValue: "+type)}}function getValue(ptr,type,noSafe){type=type||"i8";if(type.charAt(type.length-1)==="*")type="i32";switch(type){case"i1":return HEAP8[ptr>>0];case"i8":return HEAP8[ptr>>0];case"i16":return HEAP16[ptr>>1];case"i32":return HEAP32[ptr>>2];case"i64":return HEAP32[ptr>>2];case"float":return HEAPF32[ptr>>2];case"double":return HEAPF64[ptr>>3];default:abort("invalid type for getValue: "+type)}return null}var wasmMemory;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort("Assertion failed: "+text)}}var UTF8Decoder=typeof TextDecoder!=="undefined"?new TextDecoder("utf8"):undefined;function UTF8ArrayToString(heap,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heap[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heap.subarray&&UTF8Decoder){return UTF8Decoder.decode(heap.subarray(idx,endPtr))}else{var str="";while(idx<endPtr){var u0=heap[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heap[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heap[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heap[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):""}function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module["HEAP8"]=HEAP8=new Int8Array(buf);Module["HEAP16"]=HEAP16=new Int16Array(buf);Module["HEAP32"]=HEAP32=new Int32Array(buf);Module["HEAPU8"]=HEAPU8=new Uint8Array(buf);Module["HEAPU16"]=HEAPU16=new Uint16Array(buf);Module["HEAPU32"]=HEAPU32=new Uint32Array(buf);Module["HEAPF32"]=HEAPF32=new Float32Array(buf);Module["HEAPF64"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module["INITIAL_MEMORY"]||16777216;if(Module["wasmMemory"]){wasmMemory=Module["wasmMemory"]}else{wasmMemory=new WebAssembly.Memory({"initial":INITIAL_MEMORY/65536,"maximum":2147483648/65536})}if(wasmMemory){buffer=wasmMemory.buffer}INITIAL_MEMORY=buffer.byteLength;updateGlobalBufferAndViews(buffer);var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module["preRun"]){if(typeof Module["preRun"]=="function")Module["preRun"]=[Module["preRun"]];while(Module["preRun"].length){addOnPreRun(Module["preRun"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module["postRun"]){if(typeof Module["postRun"]=="function")Module["postRun"]=[Module["postRun"]];while(Module["postRun"].length){addOnPostRun(Module["postRun"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module["preloadedImages"]={};Module["preloadedAudios"]={};function abort(what){if(Module["onAbort"]){Module["onAbort"](what)}what+="";err(what);ABORT=true;EXITSTATUS=1;what="abort("+what+"). Build with -s ASSERTIONS=1 for more info.";var e=new WebAssembly.RuntimeError(what);throw e}var dataURIPrefix="data:application/octet-stream;base64,";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}function isFileURI(filename){return filename.startsWith("file://")}var wasmBinaryFile;wasmBinaryFile="<<< WASM_BINARY_FILE >>>";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}var binary=tryParseAsDataURI(file);if(binary){return binary}if(readBinary){return readBinary(file)}else{throw"both async and sync fetching of the wasm failed"}}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch==="function"&&!isFileURI(wasmBinaryFile)){return fetch(wasmBinaryFile,{credentials:"same-origin"}).then(function(response){if(!response["ok"]){throw"failed to load wasm binary file at '"+wasmBinaryFile+"'"}return response["arrayBuffer"]()}).catch(function(){return getBinary(wasmBinaryFile)})}else{if(readAsync){return new Promise(function(resolve,reject){readAsync(wasmBinaryFile,function(response){resolve(new Uint8Array(response))},reject)})}}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={"a":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module["asm"]=exports;wasmTable=Module["asm"]["Bj"];addOnInit(Module["asm"]["g"]);removeRunDependency("wasm-instantiate")}addRunDependency("wasm-instantiate");function receiveInstantiationResult(result){receiveInstance(result["instance"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){var result=WebAssembly.instantiate(binary,info);return result}).then(receiver,function(reason){err("failed to asynchronously prepare wasm: "+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming==="function"&&!isDataURI(wasmBinaryFile)&&!isFileURI(wasmBinaryFile)&&typeof fetch==="function"){return fetch(wasmBinaryFile,{credentials:"same-origin"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiationResult,function(reason){err("wasm streaming compile failed: "+reason);err("falling back to ArrayBuffer instantiation");return instantiateArrayBuffer(receiveInstantiationResult)})})}else{return instantiateArrayBuffer(receiveInstantiationResult)}}if(Module["instantiateWasm"]){try{var exports=Module["instantiateWasm"](info,receiveInstance);return exports}catch(e){err("Module.instantiateWasm callback failed with error: "+e);return false}}instantiateAsync();return{}}var tempDouble;var tempI64;var ASM_CONSTS={36380:function(){return Module.getRandomValue()},36416:function(){if(Module.getRandomValue===undefined){try{var window_="object"===typeof window?window:self;var crypto_=typeof window_.crypto!=="undefined"?window_.crypto:window_.msCrypto;var randomValuesStandard=function(){var buf=new Uint32Array(1);crypto_.getRandomValues(buf);return buf[0]>>>0};randomValuesStandard();Module.getRandomValue=randomValuesStandard}catch(e){try{var crypto=require("crypto");var randomValueNodeJS=function(){var buf=crypto["randomBytes"](4);return(buf[0]<<24|buf[1]<<16|buf[2]<<8|buf[3])>>>0};randomValueNodeJS();Module.getRandomValue=randomValueNodeJS}catch(e){throw"No secure random number generator found"}}}}};function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback=="function"){callback(Module);continue}var func=callback.func;if(typeof func==="number"){if(callback.arg===undefined){wasmTable.get(func)()}else{wasmTable.get(func)(callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}function ___assert_fail(condition,filename,line,func){abort("Assertion failed: "+UTF8ToString(condition)+", at: "+[filename?UTF8ToString(filename):"unknown filename",line,func?UTF8ToString(func):"unknown function"])}function _abort(){abort()}var readAsmConstArgsArray=[];function readAsmConstArgs(sigPtr,buf){readAsmConstArgsArray.length=0;var ch;buf>>=2;while(ch=HEAPU8[sigPtr++]){var double=ch<105;if(double&&buf&1)buf++;readAsmConstArgsArray.push(double?HEAPF64[buf++>>1]:HEAP32[buf]);++buf}return readAsmConstArgsArray}function _emscripten_asm_const_int(code,sigPtr,argbuf){var args=readAsmConstArgs(sigPtr,argbuf);return ASM_CONSTS[code].apply(null,args)}function _emscripten_get_heap_max(){return 2147483648}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=HEAPU8.length;requestedSize=requestedSize>>>0;var maxHeapSize=2147483648;if(requestedSize>maxHeapSize){return false}for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}var ASSERTIONS=false;function intArrayToString(array){var ret=[];for(var i=0;i<array.length;i++){var chr=array[i];if(chr>255){if(ASSERTIONS){assert(false,"Character code "+chr+" ("+String.fromCharCode(chr)+")  at offset "+i+" not in 0x00-0xFF.")}chr&=255}ret.push(String.fromCharCode(chr))}return ret.join("")}var decodeBase64=typeof atob==="function"?atob:function(input){var keyStr="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";var output="";var chr1,chr2,chr3;var enc1,enc2,enc3,enc4;var i=0;input=input.replace(/[^A-Za-z0-9\+\/\=]/g,"");do{enc1=keyStr.indexOf(input.charAt(i++));enc2=keyStr.indexOf(input.charAt(i++));enc3=keyStr.indexOf(input.charAt(i++));enc4=keyStr.indexOf(input.charAt(i++));chr1=enc1<<2|enc2>>4;chr2=(enc2&15)<<4|enc3>>2;chr3=(enc3&3)<<6|enc4;output=output+String.fromCharCode(chr1);if(enc3!==64){output=output+String.fromCharCode(chr2)}if(enc4!==64){output=output+String.fromCharCode(chr3)}}while(i<input.length);return output};function intArrayFromBase64(s){if(typeof ENVIRONMENT_IS_NODE==="boolean"&&ENVIRONMENT_IS_NODE){var buf;try{buf=Buffer.from(s,"base64")}catch(_){buf=new Buffer(s,"base64")}return new Uint8Array(buf["buffer"],buf["byteOffset"],buf["byteLength"])}try{var decoded=decodeBase64(s);var bytes=new Uint8Array(decoded.length);for(var i=0;i<decoded.length;++i){bytes[i]=decoded.charCodeAt(i)}return bytes}catch(_){throw new Error("Converting base64 string to bytes failed.")}}function tryParseAsDataURI(filename){if(!isDataURI(filename)){return}return intArrayFromBase64(filename.slice(dataURIPrefix.length))}var asmLibraryArg={"b":___assert_fail,"c":_abort,"d":_emscripten_asm_const_int,"e":_emscripten_get_heap_max,"f":_emscripten_resize_heap,"a":wasmMemory};var asm=createWasm();var ___wasm_call_ctors=Module["___wasm_call_ctors"]=function(){return(___wasm_call_ctors=Module["___wasm_call_ctors"]=Module["asm"]["g"]).apply(null,arguments)};var _crypto_aead_chacha20poly1305_encrypt_detached=Module["_crypto_aead_chacha20poly1305_encrypt_detached"]=function(){return(_crypto_aead_chacha20poly1305_encrypt_detached=Module["_crypto_aead_chacha20poly1305_encrypt_detached"]=Module["asm"]["h"]).apply(null,arguments)};var _crypto_aead_chacha20poly1305_encrypt=Module["_crypto_aead_chacha20poly1305_encrypt"]=function(){return(_crypto_aead_chacha20poly1305_encrypt=Module["_crypto_aead_chacha20poly1305_encrypt"]=Module["asm"]["i"]).apply(null,arguments)};var _crypto_aead_chacha20poly1305_ietf_encrypt_detached=Module["_crypto_aead_chacha20poly1305_ietf_encrypt_detached"]=function(){return(_crypto_aead_chacha20poly1305_ietf_encrypt_detached=Module["_crypto_aead_chacha20poly1305_ietf_encrypt_detached"]=Module["asm"]["j"]).apply(null,arguments)};var _crypto_aead_chacha20poly1305_ietf_encrypt=Module["_crypto_aead_chacha20poly1305_ietf_encrypt"]=function(){return(_crypto_aead_chacha20poly1305_ietf_encrypt=Module["_crypto_aead_chacha20poly1305_ietf_encrypt"]=Module["asm"]["k"]).apply(null,arguments)};var _crypto_aead_chacha20poly1305_decrypt_detached=Module["_crypto_aead_chacha20poly1305_decrypt_detached"]=function(){return(_crypto_aead_chacha20poly1305_decrypt_detached=Module["_crypto_aead_chacha20poly1305_decrypt_detached"]=Module["asm"]["l"]).apply(null,arguments)};var _crypto_aead_chacha20poly1305_decrypt=Module["_crypto_aead_chacha20poly1305_decrypt"]=function(){return(_crypto_aead_chacha20poly1305_decrypt=Module["_crypto_aead_chacha20poly1305_decrypt"]=Module["asm"]["m"]).apply(null,arguments)};var _crypto_aead_chacha20poly1305_ietf_decrypt_detached=Module["_crypto_aead_chacha20poly1305_ietf_decrypt_detached"]=function(){return(_crypto_aead_chacha20poly1305_ietf_decrypt_detached=Module["_crypto_aead_chacha20poly1305_ietf_decrypt_detached"]=Module["asm"]["n"]).apply(null,arguments)};var _crypto_aead_chacha20poly1305_ietf_decrypt=Module["_crypto_aead_chacha20poly1305_ietf_decrypt"]=function(){return(_crypto_aead_chacha20poly1305_ietf_decrypt=Module["_crypto_aead_chacha20poly1305_ietf_decrypt"]=Module["asm"]["o"]).apply(null,arguments)};var _crypto_aead_chacha20poly1305_ietf_keybytes=Module["_crypto_aead_chacha20poly1305_ietf_keybytes"]=function(){return(_crypto_aead_chacha20poly1305_ietf_keybytes=Module["_crypto_aead_chacha20poly1305_ietf_keybytes"]=Module["asm"]["p"]).apply(null,arguments)};var _crypto_aead_chacha20poly1305_ietf_npubbytes=Module["_crypto_aead_chacha20poly1305_ietf_npubbytes"]=function(){return(_crypto_aead_chacha20poly1305_ietf_npubbytes=Module["_crypto_aead_chacha20poly1305_ietf_npubbytes"]=Module["asm"]["q"]).apply(null,arguments)};var _crypto_aead_chacha20poly1305_ietf_nsecbytes=Module["_crypto_aead_chacha20poly1305_ietf_nsecbytes"]=function(){return(_crypto_aead_chacha20poly1305_ietf_nsecbytes=Module["_crypto_aead_chacha20poly1305_ietf_nsecbytes"]=Module["asm"]["r"]).apply(null,arguments)};var _crypto_aead_chacha20poly1305_ietf_abytes=Module["_crypto_aead_chacha20poly1305_ietf_abytes"]=function(){return(_crypto_aead_chacha20poly1305_ietf_abytes=Module["_crypto_aead_chacha20poly1305_ietf_abytes"]=Module["asm"]["s"]).apply(null,arguments)};var _crypto_aead_chacha20poly1305_ietf_messagebytes_max=Module["_crypto_aead_chacha20poly1305_ietf_messagebytes_max"]=function(){return(_crypto_aead_chacha20poly1305_ietf_messagebytes_max=Module["_crypto_aead_chacha20poly1305_ietf_messagebytes_max"]=Module["asm"]["t"]).apply(null,arguments)};var _crypto_aead_chacha20poly1305_ietf_keygen=Module["_crypto_aead_chacha20poly1305_ietf_keygen"]=function(){return(_crypto_aead_chacha20poly1305_ietf_keygen=Module["_crypto_aead_chacha20poly1305_ietf_keygen"]=Module["asm"]["u"]).apply(null,arguments)};var _crypto_aead_chacha20poly1305_keybytes=Module["_crypto_aead_chacha20poly1305_keybytes"]=function(){return(_crypto_aead_chacha20poly1305_keybytes=Module["_crypto_aead_chacha20poly1305_keybytes"]=Module["asm"]["v"]).apply(null,arguments)};var _crypto_aead_chacha20poly1305_npubbytes=Module["_crypto_aead_chacha20poly1305_npubbytes"]=function(){return(_crypto_aead_chacha20poly1305_npubbytes=Module["_crypto_aead_chacha20poly1305_npubbytes"]=Module["asm"]["w"]).apply(null,arguments)};var _crypto_aead_chacha20poly1305_nsecbytes=Module["_crypto_aead_chacha20poly1305_nsecbytes"]=function(){return(_crypto_aead_chacha20poly1305_nsecbytes=Module["_crypto_aead_chacha20poly1305_nsecbytes"]=Module["asm"]["x"]).apply(null,arguments)};var _crypto_aead_chacha20poly1305_abytes=Module["_crypto_aead_chacha20poly1305_abytes"]=function(){return(_crypto_aead_chacha20poly1305_abytes=Module["_crypto_aead_chacha20poly1305_abytes"]=Module["asm"]["y"]).apply(null,arguments)};var _crypto_aead_chacha20poly1305_messagebytes_max=Module["_crypto_aead_chacha20poly1305_messagebytes_max"]=function(){return(_crypto_aead_chacha20poly1305_messagebytes_max=Module["_crypto_aead_chacha20poly1305_messagebytes_max"]=Module["asm"]["z"]).apply(null,arguments)};var _crypto_aead_chacha20poly1305_keygen=Module["_crypto_aead_chacha20poly1305_keygen"]=function(){return(_crypto_aead_chacha20poly1305_keygen=Module["_crypto_aead_chacha20poly1305_keygen"]=Module["asm"]["A"]).apply(null,arguments)};var _crypto_aead_xchacha20poly1305_ietf_encrypt_detached=Module["_crypto_aead_xchacha20poly1305_ietf_encrypt_detached"]=function(){return(_crypto_aead_xchacha20poly1305_ietf_encrypt_detached=Module["_crypto_aead_xchacha20poly1305_ietf_encrypt_detached"]=Module["asm"]["B"]).apply(null,arguments)};var _crypto_aead_xchacha20poly1305_ietf_encrypt=Module["_crypto_aead_xchacha20poly1305_ietf_encrypt"]=function(){return(_crypto_aead_xchacha20poly1305_ietf_encrypt=Module["_crypto_aead_xchacha20poly1305_ietf_encrypt"]=Module["asm"]["C"]).apply(null,arguments)};var _crypto_aead_xchacha20poly1305_ietf_decrypt_detached=Module["_crypto_aead_xchacha20poly1305_ietf_decrypt_detached"]=function(){return(_crypto_aead_xchacha20poly1305_ietf_decrypt_detached=Module["_crypto_aead_xchacha20poly1305_ietf_decrypt_detached"]=Module["asm"]["D"]).apply(null,arguments)};var _crypto_aead_xchacha20poly1305_ietf_decrypt=Module["_crypto_aead_xchacha20poly1305_ietf_decrypt"]=function(){return(_crypto_aead_xchacha20poly1305_ietf_decrypt=Module["_crypto_aead_xchacha20poly1305_ietf_decrypt"]=Module["asm"]["E"]).apply(null,arguments)};var _crypto_aead_xchacha20poly1305_ietf_keybytes=Module["_crypto_aead_xchacha20poly1305_ietf_keybytes"]=function(){return(_crypto_aead_xchacha20poly1305_ietf_keybytes=Module["_crypto_aead_xchacha20poly1305_ietf_keybytes"]=Module["asm"]["F"]).apply(null,arguments)};var _crypto_aead_xchacha20poly1305_ietf_npubbytes=Module["_crypto_aead_xchacha20poly1305_ietf_npubbytes"]=function(){return(_crypto_aead_xchacha20poly1305_ietf_npubbytes=Module["_crypto_aead_xchacha20poly1305_ietf_npubbytes"]=Module["asm"]["G"]).apply(null,arguments)};var _crypto_aead_xchacha20poly1305_ietf_nsecbytes=Module["_crypto_aead_xchacha20poly1305_ietf_nsecbytes"]=function(){return(_crypto_aead_xchacha20poly1305_ietf_nsecbytes=Module["_crypto_aead_xchacha20poly1305_ietf_nsecbytes"]=Module["asm"]["H"]).apply(null,arguments)};var _crypto_aead_xchacha20poly1305_ietf_abytes=Module["_crypto_aead_xchacha20poly1305_ietf_abytes"]=function(){return(_crypto_aead_xchacha20poly1305_ietf_abytes=Module["_crypto_aead_xchacha20poly1305_ietf_abytes"]=Module["asm"]["I"]).apply(null,arguments)};var _crypto_aead_xchacha20poly1305_ietf_messagebytes_max=Module["_crypto_aead_xchacha20poly1305_ietf_messagebytes_max"]=function(){return(_crypto_aead_xchacha20poly1305_ietf_messagebytes_max=Module["_crypto_aead_xchacha20poly1305_ietf_messagebytes_max"]=Module["asm"]["J"]).apply(null,arguments)};var _crypto_aead_xchacha20poly1305_ietf_keygen=Module["_crypto_aead_xchacha20poly1305_ietf_keygen"]=function(){return(_crypto_aead_xchacha20poly1305_ietf_keygen=Module["_crypto_aead_xchacha20poly1305_ietf_keygen"]=Module["asm"]["K"]).apply(null,arguments)};var _crypto_auth_bytes=Module["_crypto_auth_bytes"]=function(){return(_crypto_auth_bytes=Module["_crypto_auth_bytes"]=Module["asm"]["L"]).apply(null,arguments)};var _crypto_auth_keybytes=Module["_crypto_auth_keybytes"]=function(){return(_crypto_auth_keybytes=Module["_crypto_auth_keybytes"]=Module["asm"]["M"]).apply(null,arguments)};var _crypto_auth_primitive=Module["_crypto_auth_primitive"]=function(){return(_crypto_auth_primitive=Module["_crypto_auth_primitive"]=Module["asm"]["N"]).apply(null,arguments)};var _crypto_auth=Module["_crypto_auth"]=function(){return(_crypto_auth=Module["_crypto_auth"]=Module["asm"]["O"]).apply(null,arguments)};var _crypto_auth_verify=Module["_crypto_auth_verify"]=function(){return(_crypto_auth_verify=Module["_crypto_auth_verify"]=Module["asm"]["P"]).apply(null,arguments)};var _crypto_auth_keygen=Module["_crypto_auth_keygen"]=function(){return(_crypto_auth_keygen=Module["_crypto_auth_keygen"]=Module["asm"]["Q"]).apply(null,arguments)};var _crypto_auth_hmacsha256_bytes=Module["_crypto_auth_hmacsha256_bytes"]=function(){return(_crypto_auth_hmacsha256_bytes=Module["_crypto_auth_hmacsha256_bytes"]=Module["asm"]["R"]).apply(null,arguments)};var _crypto_auth_hmacsha256_keybytes=Module["_crypto_auth_hmacsha256_keybytes"]=function(){return(_crypto_auth_hmacsha256_keybytes=Module["_crypto_auth_hmacsha256_keybytes"]=Module["asm"]["S"]).apply(null,arguments)};var _crypto_auth_hmacsha256_statebytes=Module["_crypto_auth_hmacsha256_statebytes"]=function(){return(_crypto_auth_hmacsha256_statebytes=Module["_crypto_auth_hmacsha256_statebytes"]=Module["asm"]["T"]).apply(null,arguments)};var _crypto_auth_hmacsha256_keygen=Module["_crypto_auth_hmacsha256_keygen"]=function(){return(_crypto_auth_hmacsha256_keygen=Module["_crypto_auth_hmacsha256_keygen"]=Module["asm"]["U"]).apply(null,arguments)};var _crypto_auth_hmacsha256_init=Module["_crypto_auth_hmacsha256_init"]=function(){return(_crypto_auth_hmacsha256_init=Module["_crypto_auth_hmacsha256_init"]=Module["asm"]["V"]).apply(null,arguments)};var _crypto_auth_hmacsha256_update=Module["_crypto_auth_hmacsha256_update"]=function(){return(_crypto_auth_hmacsha256_update=Module["_crypto_auth_hmacsha256_update"]=Module["asm"]["W"]).apply(null,arguments)};var _crypto_auth_hmacsha256_final=Module["_crypto_auth_hmacsha256_final"]=function(){return(_crypto_auth_hmacsha256_final=Module["_crypto_auth_hmacsha256_final"]=Module["asm"]["X"]).apply(null,arguments)};var _crypto_auth_hmacsha256=Module["_crypto_auth_hmacsha256"]=function(){return(_crypto_auth_hmacsha256=Module["_crypto_auth_hmacsha256"]=Module["asm"]["Y"]).apply(null,arguments)};var _crypto_auth_hmacsha256_verify=Module["_crypto_auth_hmacsha256_verify"]=function(){return(_crypto_auth_hmacsha256_verify=Module["_crypto_auth_hmacsha256_verify"]=Module["asm"]["Z"]).apply(null,arguments)};var _crypto_auth_hmacsha512_bytes=Module["_crypto_auth_hmacsha512_bytes"]=function(){return(_crypto_auth_hmacsha512_bytes=Module["_crypto_auth_hmacsha512_bytes"]=Module["asm"]["_"]).apply(null,arguments)};var _crypto_auth_hmacsha512_keybytes=Module["_crypto_auth_hmacsha512_keybytes"]=function(){return(_crypto_auth_hmacsha512_keybytes=Module["_crypto_auth_hmacsha512_keybytes"]=Module["asm"]["$"]).apply(null,arguments)};var _crypto_auth_hmacsha512_statebytes=Module["_crypto_auth_hmacsha512_statebytes"]=function(){return(_crypto_auth_hmacsha512_statebytes=Module["_crypto_auth_hmacsha512_statebytes"]=Module["asm"]["aa"]).apply(null,arguments)};var _crypto_auth_hmacsha512_keygen=Module["_crypto_auth_hmacsha512_keygen"]=function(){return(_crypto_auth_hmacsha512_keygen=Module["_crypto_auth_hmacsha512_keygen"]=Module["asm"]["ba"]).apply(null,arguments)};var _crypto_auth_hmacsha512_init=Module["_crypto_auth_hmacsha512_init"]=function(){return(_crypto_auth_hmacsha512_init=Module["_crypto_auth_hmacsha512_init"]=Module["asm"]["ca"]).apply(null,arguments)};var _crypto_auth_hmacsha512_update=Module["_crypto_auth_hmacsha512_update"]=function(){return(_crypto_auth_hmacsha512_update=Module["_crypto_auth_hmacsha512_update"]=Module["asm"]["da"]).apply(null,arguments)};var _crypto_auth_hmacsha512_final=Module["_crypto_auth_hmacsha512_final"]=function(){return(_crypto_auth_hmacsha512_final=Module["_crypto_auth_hmacsha512_final"]=Module["asm"]["ea"]).apply(null,arguments)};var _crypto_auth_hmacsha512=Module["_crypto_auth_hmacsha512"]=function(){return(_crypto_auth_hmacsha512=Module["_crypto_auth_hmacsha512"]=Module["asm"]["fa"]).apply(null,arguments)};var _crypto_auth_hmacsha512_verify=Module["_crypto_auth_hmacsha512_verify"]=function(){return(_crypto_auth_hmacsha512_verify=Module["_crypto_auth_hmacsha512_verify"]=Module["asm"]["ga"]).apply(null,arguments)};var _crypto_auth_hmacsha512256_bytes=Module["_crypto_auth_hmacsha512256_bytes"]=function(){return(_crypto_auth_hmacsha512256_bytes=Module["_crypto_auth_hmacsha512256_bytes"]=Module["asm"]["ha"]).apply(null,arguments)};var _crypto_auth_hmacsha512256_keybytes=Module["_crypto_auth_hmacsha512256_keybytes"]=function(){return(_crypto_auth_hmacsha512256_keybytes=Module["_crypto_auth_hmacsha512256_keybytes"]=Module["asm"]["ia"]).apply(null,arguments)};var _crypto_auth_hmacsha512256_statebytes=Module["_crypto_auth_hmacsha512256_statebytes"]=function(){return(_crypto_auth_hmacsha512256_statebytes=Module["_crypto_auth_hmacsha512256_statebytes"]=Module["asm"]["ja"]).apply(null,arguments)};var _crypto_auth_hmacsha512256_keygen=Module["_crypto_auth_hmacsha512256_keygen"]=function(){return(_crypto_auth_hmacsha512256_keygen=Module["_crypto_auth_hmacsha512256_keygen"]=Module["asm"]["ka"]).apply(null,arguments)};var _crypto_auth_hmacsha512256_init=Module["_crypto_auth_hmacsha512256_init"]=function(){return(_crypto_auth_hmacsha512256_init=Module["_crypto_auth_hmacsha512256_init"]=Module["asm"]["la"]).apply(null,arguments)};var _crypto_auth_hmacsha512256_update=Module["_crypto_auth_hmacsha512256_update"]=function(){return(_crypto_auth_hmacsha512256_update=Module["_crypto_auth_hmacsha512256_update"]=Module["asm"]["ma"]).apply(null,arguments)};var _crypto_auth_hmacsha512256_final=Module["_crypto_auth_hmacsha512256_final"]=function(){return(_crypto_auth_hmacsha512256_final=Module["_crypto_auth_hmacsha512256_final"]=Module["asm"]["na"]).apply(null,arguments)};var _crypto_auth_hmacsha512256=Module["_crypto_auth_hmacsha512256"]=function(){return(_crypto_auth_hmacsha512256=Module["_crypto_auth_hmacsha512256"]=Module["asm"]["oa"]).apply(null,arguments)};var _crypto_auth_hmacsha512256_verify=Module["_crypto_auth_hmacsha512256_verify"]=function(){return(_crypto_auth_hmacsha512256_verify=Module["_crypto_auth_hmacsha512256_verify"]=Module["asm"]["pa"]).apply(null,arguments)};var _crypto_box_seedbytes=Module["_crypto_box_seedbytes"]=function(){return(_crypto_box_seedbytes=Module["_crypto_box_seedbytes"]=Module["asm"]["qa"]).apply(null,arguments)};var _crypto_box_publickeybytes=Module["_crypto_box_publickeybytes"]=function(){return(_crypto_box_publickeybytes=Module["_crypto_box_publickeybytes"]=Module["asm"]["ra"]).apply(null,arguments)};var _crypto_box_secretkeybytes=Module["_crypto_box_secretkeybytes"]=function(){return(_crypto_box_secretkeybytes=Module["_crypto_box_secretkeybytes"]=Module["asm"]["sa"]).apply(null,arguments)};var _crypto_box_beforenmbytes=Module["_crypto_box_beforenmbytes"]=function(){return(_crypto_box_beforenmbytes=Module["_crypto_box_beforenmbytes"]=Module["asm"]["ta"]).apply(null,arguments)};var _crypto_box_noncebytes=Module["_crypto_box_noncebytes"]=function(){return(_crypto_box_noncebytes=Module["_crypto_box_noncebytes"]=Module["asm"]["ua"]).apply(null,arguments)};var _crypto_box_zerobytes=Module["_crypto_box_zerobytes"]=function(){return(_crypto_box_zerobytes=Module["_crypto_box_zerobytes"]=Module["asm"]["va"]).apply(null,arguments)};var _crypto_box_boxzerobytes=Module["_crypto_box_boxzerobytes"]=function(){return(_crypto_box_boxzerobytes=Module["_crypto_box_boxzerobytes"]=Module["asm"]["wa"]).apply(null,arguments)};var _crypto_box_macbytes=Module["_crypto_box_macbytes"]=function(){return(_crypto_box_macbytes=Module["_crypto_box_macbytes"]=Module["asm"]["xa"]).apply(null,arguments)};var _crypto_box_messagebytes_max=Module["_crypto_box_messagebytes_max"]=function(){return(_crypto_box_messagebytes_max=Module["_crypto_box_messagebytes_max"]=Module["asm"]["ya"]).apply(null,arguments)};var _crypto_box_primitive=Module["_crypto_box_primitive"]=function(){return(_crypto_box_primitive=Module["_crypto_box_primitive"]=Module["asm"]["za"]).apply(null,arguments)};var _crypto_box_seed_keypair=Module["_crypto_box_seed_keypair"]=function(){return(_crypto_box_seed_keypair=Module["_crypto_box_seed_keypair"]=Module["asm"]["Aa"]).apply(null,arguments)};var _crypto_box_keypair=Module["_crypto_box_keypair"]=function(){return(_crypto_box_keypair=Module["_crypto_box_keypair"]=Module["asm"]["Ba"]).apply(null,arguments)};var _crypto_box_beforenm=Module["_crypto_box_beforenm"]=function(){return(_crypto_box_beforenm=Module["_crypto_box_beforenm"]=Module["asm"]["Ca"]).apply(null,arguments)};var _crypto_box_afternm=Module["_crypto_box_afternm"]=function(){return(_crypto_box_afternm=Module["_crypto_box_afternm"]=Module["asm"]["Da"]).apply(null,arguments)};var _crypto_box_open_afternm=Module["_crypto_box_open_afternm"]=function(){return(_crypto_box_open_afternm=Module["_crypto_box_open_afternm"]=Module["asm"]["Ea"]).apply(null,arguments)};var _crypto_box=Module["_crypto_box"]=function(){return(_crypto_box=Module["_crypto_box"]=Module["asm"]["Fa"]).apply(null,arguments)};var _crypto_box_open=Module["_crypto_box_open"]=function(){return(_crypto_box_open=Module["_crypto_box_open"]=Module["asm"]["Ga"]).apply(null,arguments)};var _crypto_box_detached_afternm=Module["_crypto_box_detached_afternm"]=function(){return(_crypto_box_detached_afternm=Module["_crypto_box_detached_afternm"]=Module["asm"]["Ha"]).apply(null,arguments)};var _crypto_box_detached=Module["_crypto_box_detached"]=function(){return(_crypto_box_detached=Module["_crypto_box_detached"]=Module["asm"]["Ia"]).apply(null,arguments)};var _crypto_box_easy_afternm=Module["_crypto_box_easy_afternm"]=function(){return(_crypto_box_easy_afternm=Module["_crypto_box_easy_afternm"]=Module["asm"]["Ja"]).apply(null,arguments)};var _crypto_box_easy=Module["_crypto_box_easy"]=function(){return(_crypto_box_easy=Module["_crypto_box_easy"]=Module["asm"]["Ka"]).apply(null,arguments)};var _crypto_box_open_detached_afternm=Module["_crypto_box_open_detached_afternm"]=function(){return(_crypto_box_open_detached_afternm=Module["_crypto_box_open_detached_afternm"]=Module["asm"]["La"]).apply(null,arguments)};var _crypto_box_open_detached=Module["_crypto_box_open_detached"]=function(){return(_crypto_box_open_detached=Module["_crypto_box_open_detached"]=Module["asm"]["Ma"]).apply(null,arguments)};var _crypto_box_open_easy_afternm=Module["_crypto_box_open_easy_afternm"]=function(){return(_crypto_box_open_easy_afternm=Module["_crypto_box_open_easy_afternm"]=Module["asm"]["Na"]).apply(null,arguments)};var _crypto_box_open_easy=Module["_crypto_box_open_easy"]=function(){return(_crypto_box_open_easy=Module["_crypto_box_open_easy"]=Module["asm"]["Oa"]).apply(null,arguments)};var _crypto_box_seal=Module["_crypto_box_seal"]=function(){return(_crypto_box_seal=Module["_crypto_box_seal"]=Module["asm"]["Pa"]).apply(null,arguments)};var _crypto_box_seal_open=Module["_crypto_box_seal_open"]=function(){return(_crypto_box_seal_open=Module["_crypto_box_seal_open"]=Module["asm"]["Qa"]).apply(null,arguments)};var _crypto_box_sealbytes=Module["_crypto_box_sealbytes"]=function(){return(_crypto_box_sealbytes=Module["_crypto_box_sealbytes"]=Module["asm"]["Ra"]).apply(null,arguments)};var _crypto_box_curve25519xsalsa20poly1305_seed_keypair=Module["_crypto_box_curve25519xsalsa20poly1305_seed_keypair"]=function(){return(_crypto_box_curve25519xsalsa20poly1305_seed_keypair=Module["_crypto_box_curve25519xsalsa20poly1305_seed_keypair"]=Module["asm"]["Sa"]).apply(null,arguments)};var _crypto_box_curve25519xsalsa20poly1305_keypair=Module["_crypto_box_curve25519xsalsa20poly1305_keypair"]=function(){return(_crypto_box_curve25519xsalsa20poly1305_keypair=Module["_crypto_box_curve25519xsalsa20poly1305_keypair"]=Module["asm"]["Ta"]).apply(null,arguments)};var _crypto_box_curve25519xsalsa20poly1305_beforenm=Module["_crypto_box_curve25519xsalsa20poly1305_beforenm"]=function(){return(_crypto_box_curve25519xsalsa20poly1305_beforenm=Module["_crypto_box_curve25519xsalsa20poly1305_beforenm"]=Module["asm"]["Ua"]).apply(null,arguments)};var _crypto_box_curve25519xsalsa20poly1305_afternm=Module["_crypto_box_curve25519xsalsa20poly1305_afternm"]=function(){return(_crypto_box_curve25519xsalsa20poly1305_afternm=Module["_crypto_box_curve25519xsalsa20poly1305_afternm"]=Module["asm"]["Va"]).apply(null,arguments)};var _crypto_box_curve25519xsalsa20poly1305_open_afternm=Module["_crypto_box_curve25519xsalsa20poly1305_open_afternm"]=function(){return(_crypto_box_curve25519xsalsa20poly1305_open_afternm=Module["_crypto_box_curve25519xsalsa20poly1305_open_afternm"]=Module["asm"]["Wa"]).apply(null,arguments)};var _crypto_box_curve25519xsalsa20poly1305=Module["_crypto_box_curve25519xsalsa20poly1305"]=function(){return(_crypto_box_curve25519xsalsa20poly1305=Module["_crypto_box_curve25519xsalsa20poly1305"]=Module["asm"]["Xa"]).apply(null,arguments)};var _crypto_box_curve25519xsalsa20poly1305_open=Module["_crypto_box_curve25519xsalsa20poly1305_open"]=function(){return(_crypto_box_curve25519xsalsa20poly1305_open=Module["_crypto_box_curve25519xsalsa20poly1305_open"]=Module["asm"]["Ya"]).apply(null,arguments)};var _crypto_box_curve25519xsalsa20poly1305_seedbytes=Module["_crypto_box_curve25519xsalsa20poly1305_seedbytes"]=function(){return(_crypto_box_curve25519xsalsa20poly1305_seedbytes=Module["_crypto_box_curve25519xsalsa20poly1305_seedbytes"]=Module["asm"]["Za"]).apply(null,arguments)};var _crypto_box_curve25519xsalsa20poly1305_publickeybytes=Module["_crypto_box_curve25519xsalsa20poly1305_publickeybytes"]=function(){return(_crypto_box_curve25519xsalsa20poly1305_publickeybytes=Module["_crypto_box_curve25519xsalsa20poly1305_publickeybytes"]=Module["asm"]["_a"]).apply(null,arguments)};var _crypto_box_curve25519xsalsa20poly1305_secretkeybytes=Module["_crypto_box_curve25519xsalsa20poly1305_secretkeybytes"]=function(){return(_crypto_box_curve25519xsalsa20poly1305_secretkeybytes=Module["_crypto_box_curve25519xsalsa20poly1305_secretkeybytes"]=Module["asm"]["$a"]).apply(null,arguments)};var _crypto_box_curve25519xsalsa20poly1305_beforenmbytes=Module["_crypto_box_curve25519xsalsa20poly1305_beforenmbytes"]=function(){return(_crypto_box_curve25519xsalsa20poly1305_beforenmbytes=Module["_crypto_box_curve25519xsalsa20poly1305_beforenmbytes"]=Module["asm"]["ab"]).apply(null,arguments)};var _crypto_box_curve25519xsalsa20poly1305_noncebytes=Module["_crypto_box_curve25519xsalsa20poly1305_noncebytes"]=function(){return(_crypto_box_curve25519xsalsa20poly1305_noncebytes=Module["_crypto_box_curve25519xsalsa20poly1305_noncebytes"]=Module["asm"]["bb"]).apply(null,arguments)};var _crypto_box_curve25519xsalsa20poly1305_zerobytes=Module["_crypto_box_curve25519xsalsa20poly1305_zerobytes"]=function(){return(_crypto_box_curve25519xsalsa20poly1305_zerobytes=Module["_crypto_box_curve25519xsalsa20poly1305_zerobytes"]=Module["asm"]["cb"]).apply(null,arguments)};var _crypto_box_curve25519xsalsa20poly1305_boxzerobytes=Module["_crypto_box_curve25519xsalsa20poly1305_boxzerobytes"]=function(){return(_crypto_box_curve25519xsalsa20poly1305_boxzerobytes=Module["_crypto_box_curve25519xsalsa20poly1305_boxzerobytes"]=Module["asm"]["db"]).apply(null,arguments)};var _crypto_box_curve25519xsalsa20poly1305_macbytes=Module["_crypto_box_curve25519xsalsa20poly1305_macbytes"]=function(){return(_crypto_box_curve25519xsalsa20poly1305_macbytes=Module["_crypto_box_curve25519xsalsa20poly1305_macbytes"]=Module["asm"]["eb"]).apply(null,arguments)};var _crypto_box_curve25519xsalsa20poly1305_messagebytes_max=Module["_crypto_box_curve25519xsalsa20poly1305_messagebytes_max"]=function(){return(_crypto_box_curve25519xsalsa20poly1305_messagebytes_max=Module["_crypto_box_curve25519xsalsa20poly1305_messagebytes_max"]=Module["asm"]["fb"]).apply(null,arguments)};var _crypto_core_hchacha20=Module["_crypto_core_hchacha20"]=function(){return(_crypto_core_hchacha20=Module["_crypto_core_hchacha20"]=Module["asm"]["gb"]).apply(null,arguments)};var _crypto_core_hchacha20_outputbytes=Module["_crypto_core_hchacha20_outputbytes"]=function(){return(_crypto_core_hchacha20_outputbytes=Module["_crypto_core_hchacha20_outputbytes"]=Module["asm"]["hb"]).apply(null,arguments)};var _crypto_core_hchacha20_inputbytes=Module["_crypto_core_hchacha20_inputbytes"]=function(){return(_crypto_core_hchacha20_inputbytes=Module["_crypto_core_hchacha20_inputbytes"]=Module["asm"]["ib"]).apply(null,arguments)};var _crypto_core_hchacha20_keybytes=Module["_crypto_core_hchacha20_keybytes"]=function(){return(_crypto_core_hchacha20_keybytes=Module["_crypto_core_hchacha20_keybytes"]=Module["asm"]["jb"]).apply(null,arguments)};var _crypto_core_hchacha20_constbytes=Module["_crypto_core_hchacha20_constbytes"]=function(){return(_crypto_core_hchacha20_constbytes=Module["_crypto_core_hchacha20_constbytes"]=Module["asm"]["kb"]).apply(null,arguments)};var _crypto_core_hsalsa20=Module["_crypto_core_hsalsa20"]=function(){return(_crypto_core_hsalsa20=Module["_crypto_core_hsalsa20"]=Module["asm"]["lb"]).apply(null,arguments)};var _crypto_core_hsalsa20_outputbytes=Module["_crypto_core_hsalsa20_outputbytes"]=function(){return(_crypto_core_hsalsa20_outputbytes=Module["_crypto_core_hsalsa20_outputbytes"]=Module["asm"]["mb"]).apply(null,arguments)};var _crypto_core_hsalsa20_inputbytes=Module["_crypto_core_hsalsa20_inputbytes"]=function(){return(_crypto_core_hsalsa20_inputbytes=Module["_crypto_core_hsalsa20_inputbytes"]=Module["asm"]["nb"]).apply(null,arguments)};var _crypto_core_hsalsa20_keybytes=Module["_crypto_core_hsalsa20_keybytes"]=function(){return(_crypto_core_hsalsa20_keybytes=Module["_crypto_core_hsalsa20_keybytes"]=Module["asm"]["ob"]).apply(null,arguments)};var _crypto_core_hsalsa20_constbytes=Module["_crypto_core_hsalsa20_constbytes"]=function(){return(_crypto_core_hsalsa20_constbytes=Module["_crypto_core_hsalsa20_constbytes"]=Module["asm"]["pb"]).apply(null,arguments)};var _crypto_core_salsa20=Module["_crypto_core_salsa20"]=function(){return(_crypto_core_salsa20=Module["_crypto_core_salsa20"]=Module["asm"]["qb"]).apply(null,arguments)};var _crypto_core_salsa20_outputbytes=Module["_crypto_core_salsa20_outputbytes"]=function(){return(_crypto_core_salsa20_outputbytes=Module["_crypto_core_salsa20_outputbytes"]=Module["asm"]["rb"]).apply(null,arguments)};var _crypto_core_salsa20_inputbytes=Module["_crypto_core_salsa20_inputbytes"]=function(){return(_crypto_core_salsa20_inputbytes=Module["_crypto_core_salsa20_inputbytes"]=Module["asm"]["sb"]).apply(null,arguments)};var _crypto_core_salsa20_keybytes=Module["_crypto_core_salsa20_keybytes"]=function(){return(_crypto_core_salsa20_keybytes=Module["_crypto_core_salsa20_keybytes"]=Module["asm"]["tb"]).apply(null,arguments)};var _crypto_core_salsa20_constbytes=Module["_crypto_core_salsa20_constbytes"]=function(){return(_crypto_core_salsa20_constbytes=Module["_crypto_core_salsa20_constbytes"]=Module["asm"]["ub"]).apply(null,arguments)};var _crypto_core_salsa2012=Module["_crypto_core_salsa2012"]=function(){return(_crypto_core_salsa2012=Module["_crypto_core_salsa2012"]=Module["asm"]["vb"]).apply(null,arguments)};var _crypto_core_salsa2012_outputbytes=Module["_crypto_core_salsa2012_outputbytes"]=function(){return(_crypto_core_salsa2012_outputbytes=Module["_crypto_core_salsa2012_outputbytes"]=Module["asm"]["wb"]).apply(null,arguments)};var _crypto_core_salsa2012_inputbytes=Module["_crypto_core_salsa2012_inputbytes"]=function(){return(_crypto_core_salsa2012_inputbytes=Module["_crypto_core_salsa2012_inputbytes"]=Module["asm"]["xb"]).apply(null,arguments)};var _crypto_core_salsa2012_keybytes=Module["_crypto_core_salsa2012_keybytes"]=function(){return(_crypto_core_salsa2012_keybytes=Module["_crypto_core_salsa2012_keybytes"]=Module["asm"]["yb"]).apply(null,arguments)};var _crypto_core_salsa2012_constbytes=Module["_crypto_core_salsa2012_constbytes"]=function(){return(_crypto_core_salsa2012_constbytes=Module["_crypto_core_salsa2012_constbytes"]=Module["asm"]["zb"]).apply(null,arguments)};var _crypto_core_salsa208=Module["_crypto_core_salsa208"]=function(){return(_crypto_core_salsa208=Module["_crypto_core_salsa208"]=Module["asm"]["Ab"]).apply(null,arguments)};var _crypto_core_salsa208_outputbytes=Module["_crypto_core_salsa208_outputbytes"]=function(){return(_crypto_core_salsa208_outputbytes=Module["_crypto_core_salsa208_outputbytes"]=Module["asm"]["Bb"]).apply(null,arguments)};var _crypto_core_salsa208_inputbytes=Module["_crypto_core_salsa208_inputbytes"]=function(){return(_crypto_core_salsa208_inputbytes=Module["_crypto_core_salsa208_inputbytes"]=Module["asm"]["Cb"]).apply(null,arguments)};var _crypto_core_salsa208_keybytes=Module["_crypto_core_salsa208_keybytes"]=function(){return(_crypto_core_salsa208_keybytes=Module["_crypto_core_salsa208_keybytes"]=Module["asm"]["Db"]).apply(null,arguments)};var _crypto_core_salsa208_constbytes=Module["_crypto_core_salsa208_constbytes"]=function(){return(_crypto_core_salsa208_constbytes=Module["_crypto_core_salsa208_constbytes"]=Module["asm"]["Eb"]).apply(null,arguments)};var _crypto_generichash_bytes_min=Module["_crypto_generichash_bytes_min"]=function(){return(_crypto_generichash_bytes_min=Module["_crypto_generichash_bytes_min"]=Module["asm"]["Fb"]).apply(null,arguments)};var _crypto_generichash_bytes_max=Module["_crypto_generichash_bytes_max"]=function(){return(_crypto_generichash_bytes_max=Module["_crypto_generichash_bytes_max"]=Module["asm"]["Gb"]).apply(null,arguments)};var _crypto_generichash_bytes=Module["_crypto_generichash_bytes"]=function(){return(_crypto_generichash_bytes=Module["_crypto_generichash_bytes"]=Module["asm"]["Hb"]).apply(null,arguments)};var _crypto_generichash_keybytes_min=Module["_crypto_generichash_keybytes_min"]=function(){return(_crypto_generichash_keybytes_min=Module["_crypto_generichash_keybytes_min"]=Module["asm"]["Ib"]).apply(null,arguments)};var _crypto_generichash_keybytes_max=Module["_crypto_generichash_keybytes_max"]=function(){return(_crypto_generichash_keybytes_max=Module["_crypto_generichash_keybytes_max"]=Module["asm"]["Jb"]).apply(null,arguments)};var _crypto_generichash_keybytes=Module["_crypto_generichash_keybytes"]=function(){return(_crypto_generichash_keybytes=Module["_crypto_generichash_keybytes"]=Module["asm"]["Kb"]).apply(null,arguments)};var _crypto_generichash_primitive=Module["_crypto_generichash_primitive"]=function(){return(_crypto_generichash_primitive=Module["_crypto_generichash_primitive"]=Module["asm"]["Lb"]).apply(null,arguments)};var _crypto_generichash_statebytes=Module["_crypto_generichash_statebytes"]=function(){return(_crypto_generichash_statebytes=Module["_crypto_generichash_statebytes"]=Module["asm"]["Mb"]).apply(null,arguments)};var _crypto_generichash=Module["_crypto_generichash"]=function(){return(_crypto_generichash=Module["_crypto_generichash"]=Module["asm"]["Nb"]).apply(null,arguments)};var _crypto_generichash_init=Module["_crypto_generichash_init"]=function(){return(_crypto_generichash_init=Module["_crypto_generichash_init"]=Module["asm"]["Ob"]).apply(null,arguments)};var _crypto_generichash_update=Module["_crypto_generichash_update"]=function(){return(_crypto_generichash_update=Module["_crypto_generichash_update"]=Module["asm"]["Pb"]).apply(null,arguments)};var _crypto_generichash_final=Module["_crypto_generichash_final"]=function(){return(_crypto_generichash_final=Module["_crypto_generichash_final"]=Module["asm"]["Qb"]).apply(null,arguments)};var _crypto_generichash_keygen=Module["_crypto_generichash_keygen"]=function(){return(_crypto_generichash_keygen=Module["_crypto_generichash_keygen"]=Module["asm"]["Rb"]).apply(null,arguments)};var _crypto_generichash_blake2b_bytes_min=Module["_crypto_generichash_blake2b_bytes_min"]=function(){return(_crypto_generichash_blake2b_bytes_min=Module["_crypto_generichash_blake2b_bytes_min"]=Module["asm"]["Sb"]).apply(null,arguments)};var _crypto_generichash_blake2b_bytes_max=Module["_crypto_generichash_blake2b_bytes_max"]=function(){return(_crypto_generichash_blake2b_bytes_max=Module["_crypto_generichash_blake2b_bytes_max"]=Module["asm"]["Tb"]).apply(null,arguments)};var _crypto_generichash_blake2b_bytes=Module["_crypto_generichash_blake2b_bytes"]=function(){return(_crypto_generichash_blake2b_bytes=Module["_crypto_generichash_blake2b_bytes"]=Module["asm"]["Ub"]).apply(null,arguments)};var _crypto_generichash_blake2b_keybytes_min=Module["_crypto_generichash_blake2b_keybytes_min"]=function(){return(_crypto_generichash_blake2b_keybytes_min=Module["_crypto_generichash_blake2b_keybytes_min"]=Module["asm"]["Vb"]).apply(null,arguments)};var _crypto_generichash_blake2b_keybytes_max=Module["_crypto_generichash_blake2b_keybytes_max"]=function(){return(_crypto_generichash_blake2b_keybytes_max=Module["_crypto_generichash_blake2b_keybytes_max"]=Module["asm"]["Wb"]).apply(null,arguments)};var _crypto_generichash_blake2b_keybytes=Module["_crypto_generichash_blake2b_keybytes"]=function(){return(_crypto_generichash_blake2b_keybytes=Module["_crypto_generichash_blake2b_keybytes"]=Module["asm"]["Xb"]).apply(null,arguments)};var _crypto_generichash_blake2b_saltbytes=Module["_crypto_generichash_blake2b_saltbytes"]=function(){return(_crypto_generichash_blake2b_saltbytes=Module["_crypto_generichash_blake2b_saltbytes"]=Module["asm"]["Yb"]).apply(null,arguments)};var _crypto_generichash_blake2b_personalbytes=Module["_crypto_generichash_blake2b_personalbytes"]=function(){return(_crypto_generichash_blake2b_personalbytes=Module["_crypto_generichash_blake2b_personalbytes"]=Module["asm"]["Zb"]).apply(null,arguments)};var _crypto_generichash_blake2b_statebytes=Module["_crypto_generichash_blake2b_statebytes"]=function(){return(_crypto_generichash_blake2b_statebytes=Module["_crypto_generichash_blake2b_statebytes"]=Module["asm"]["_b"]).apply(null,arguments)};var _crypto_generichash_blake2b_keygen=Module["_crypto_generichash_blake2b_keygen"]=function(){return(_crypto_generichash_blake2b_keygen=Module["_crypto_generichash_blake2b_keygen"]=Module["asm"]["$b"]).apply(null,arguments)};var _crypto_generichash_blake2b=Module["_crypto_generichash_blake2b"]=function(){return(_crypto_generichash_blake2b=Module["_crypto_generichash_blake2b"]=Module["asm"]["ac"]).apply(null,arguments)};var _crypto_generichash_blake2b_salt_personal=Module["_crypto_generichash_blake2b_salt_personal"]=function(){return(_crypto_generichash_blake2b_salt_personal=Module["_crypto_generichash_blake2b_salt_personal"]=Module["asm"]["bc"]).apply(null,arguments)};var _crypto_generichash_blake2b_init=Module["_crypto_generichash_blake2b_init"]=function(){return(_crypto_generichash_blake2b_init=Module["_crypto_generichash_blake2b_init"]=Module["asm"]["cc"]).apply(null,arguments)};var _crypto_generichash_blake2b_init_salt_personal=Module["_crypto_generichash_blake2b_init_salt_personal"]=function(){return(_crypto_generichash_blake2b_init_salt_personal=Module["_crypto_generichash_blake2b_init_salt_personal"]=Module["asm"]["dc"]).apply(null,arguments)};var _crypto_generichash_blake2b_update=Module["_crypto_generichash_blake2b_update"]=function(){return(_crypto_generichash_blake2b_update=Module["_crypto_generichash_blake2b_update"]=Module["asm"]["ec"]).apply(null,arguments)};var _crypto_generichash_blake2b_final=Module["_crypto_generichash_blake2b_final"]=function(){return(_crypto_generichash_blake2b_final=Module["_crypto_generichash_blake2b_final"]=Module["asm"]["fc"]).apply(null,arguments)};var _crypto_hash_bytes=Module["_crypto_hash_bytes"]=function(){return(_crypto_hash_bytes=Module["_crypto_hash_bytes"]=Module["asm"]["gc"]).apply(null,arguments)};var _crypto_hash=Module["_crypto_hash"]=function(){return(_crypto_hash=Module["_crypto_hash"]=Module["asm"]["hc"]).apply(null,arguments)};var _crypto_hash_primitive=Module["_crypto_hash_primitive"]=function(){return(_crypto_hash_primitive=Module["_crypto_hash_primitive"]=Module["asm"]["ic"]).apply(null,arguments)};var _crypto_hash_sha256_bytes=Module["_crypto_hash_sha256_bytes"]=function(){return(_crypto_hash_sha256_bytes=Module["_crypto_hash_sha256_bytes"]=Module["asm"]["jc"]).apply(null,arguments)};var _crypto_hash_sha256_statebytes=Module["_crypto_hash_sha256_statebytes"]=function(){return(_crypto_hash_sha256_statebytes=Module["_crypto_hash_sha256_statebytes"]=Module["asm"]["kc"]).apply(null,arguments)};var _crypto_hash_sha256_init=Module["_crypto_hash_sha256_init"]=function(){return(_crypto_hash_sha256_init=Module["_crypto_hash_sha256_init"]=Module["asm"]["lc"]).apply(null,arguments)};var _crypto_hash_sha256_update=Module["_crypto_hash_sha256_update"]=function(){return(_crypto_hash_sha256_update=Module["_crypto_hash_sha256_update"]=Module["asm"]["mc"]).apply(null,arguments)};var _crypto_hash_sha256_final=Module["_crypto_hash_sha256_final"]=function(){return(_crypto_hash_sha256_final=Module["_crypto_hash_sha256_final"]=Module["asm"]["nc"]).apply(null,arguments)};var _crypto_hash_sha256=Module["_crypto_hash_sha256"]=function(){return(_crypto_hash_sha256=Module["_crypto_hash_sha256"]=Module["asm"]["oc"]).apply(null,arguments)};var _crypto_hash_sha512_bytes=Module["_crypto_hash_sha512_bytes"]=function(){return(_crypto_hash_sha512_bytes=Module["_crypto_hash_sha512_bytes"]=Module["asm"]["pc"]).apply(null,arguments)};var _crypto_hash_sha512_statebytes=Module["_crypto_hash_sha512_statebytes"]=function(){return(_crypto_hash_sha512_statebytes=Module["_crypto_hash_sha512_statebytes"]=Module["asm"]["qc"]).apply(null,arguments)};var _crypto_hash_sha512_init=Module["_crypto_hash_sha512_init"]=function(){return(_crypto_hash_sha512_init=Module["_crypto_hash_sha512_init"]=Module["asm"]["rc"]).apply(null,arguments)};var _crypto_hash_sha512_update=Module["_crypto_hash_sha512_update"]=function(){return(_crypto_hash_sha512_update=Module["_crypto_hash_sha512_update"]=Module["asm"]["sc"]).apply(null,arguments)};var _crypto_hash_sha512_final=Module["_crypto_hash_sha512_final"]=function(){return(_crypto_hash_sha512_final=Module["_crypto_hash_sha512_final"]=Module["asm"]["tc"]).apply(null,arguments)};var _crypto_hash_sha512=Module["_crypto_hash_sha512"]=function(){return(_crypto_hash_sha512=Module["_crypto_hash_sha512"]=Module["asm"]["uc"]).apply(null,arguments)};var _crypto_kdf_blake2b_bytes_min=Module["_crypto_kdf_blake2b_bytes_min"]=function(){return(_crypto_kdf_blake2b_bytes_min=Module["_crypto_kdf_blake2b_bytes_min"]=Module["asm"]["vc"]).apply(null,arguments)};var _crypto_kdf_blake2b_bytes_max=Module["_crypto_kdf_blake2b_bytes_max"]=function(){return(_crypto_kdf_blake2b_bytes_max=Module["_crypto_kdf_blake2b_bytes_max"]=Module["asm"]["wc"]).apply(null,arguments)};var _crypto_kdf_blake2b_contextbytes=Module["_crypto_kdf_blake2b_contextbytes"]=function(){return(_crypto_kdf_blake2b_contextbytes=Module["_crypto_kdf_blake2b_contextbytes"]=Module["asm"]["xc"]).apply(null,arguments)};var _crypto_kdf_blake2b_keybytes=Module["_crypto_kdf_blake2b_keybytes"]=function(){return(_crypto_kdf_blake2b_keybytes=Module["_crypto_kdf_blake2b_keybytes"]=Module["asm"]["yc"]).apply(null,arguments)};var _crypto_kdf_blake2b_derive_from_key=Module["_crypto_kdf_blake2b_derive_from_key"]=function(){return(_crypto_kdf_blake2b_derive_from_key=Module["_crypto_kdf_blake2b_derive_from_key"]=Module["asm"]["zc"]).apply(null,arguments)};var _crypto_kdf_primitive=Module["_crypto_kdf_primitive"]=function(){return(_crypto_kdf_primitive=Module["_crypto_kdf_primitive"]=Module["asm"]["Ac"]).apply(null,arguments)};var _crypto_kdf_bytes_min=Module["_crypto_kdf_bytes_min"]=function(){return(_crypto_kdf_bytes_min=Module["_crypto_kdf_bytes_min"]=Module["asm"]["Bc"]).apply(null,arguments)};var _crypto_kdf_bytes_max=Module["_crypto_kdf_bytes_max"]=function(){return(_crypto_kdf_bytes_max=Module["_crypto_kdf_bytes_max"]=Module["asm"]["Cc"]).apply(null,arguments)};var _crypto_kdf_contextbytes=Module["_crypto_kdf_contextbytes"]=function(){return(_crypto_kdf_contextbytes=Module["_crypto_kdf_contextbytes"]=Module["asm"]["Dc"]).apply(null,arguments)};var _crypto_kdf_keybytes=Module["_crypto_kdf_keybytes"]=function(){return(_crypto_kdf_keybytes=Module["_crypto_kdf_keybytes"]=Module["asm"]["Ec"]).apply(null,arguments)};var _crypto_kdf_derive_from_key=Module["_crypto_kdf_derive_from_key"]=function(){return(_crypto_kdf_derive_from_key=Module["_crypto_kdf_derive_from_key"]=Module["asm"]["Fc"]).apply(null,arguments)};var _crypto_kdf_keygen=Module["_crypto_kdf_keygen"]=function(){return(_crypto_kdf_keygen=Module["_crypto_kdf_keygen"]=Module["asm"]["Gc"]).apply(null,arguments)};var _crypto_kx_seed_keypair=Module["_crypto_kx_seed_keypair"]=function(){return(_crypto_kx_seed_keypair=Module["_crypto_kx_seed_keypair"]=Module["asm"]["Hc"]).apply(null,arguments)};var _crypto_kx_keypair=Module["_crypto_kx_keypair"]=function(){return(_crypto_kx_keypair=Module["_crypto_kx_keypair"]=Module["asm"]["Ic"]).apply(null,arguments)};var _crypto_kx_client_session_keys=Module["_crypto_kx_client_session_keys"]=function(){return(_crypto_kx_client_session_keys=Module["_crypto_kx_client_session_keys"]=Module["asm"]["Jc"]).apply(null,arguments)};var _crypto_kx_server_session_keys=Module["_crypto_kx_server_session_keys"]=function(){return(_crypto_kx_server_session_keys=Module["_crypto_kx_server_session_keys"]=Module["asm"]["Kc"]).apply(null,arguments)};var _crypto_kx_publickeybytes=Module["_crypto_kx_publickeybytes"]=function(){return(_crypto_kx_publickeybytes=Module["_crypto_kx_publickeybytes"]=Module["asm"]["Lc"]).apply(null,arguments)};var _crypto_kx_secretkeybytes=Module["_crypto_kx_secretkeybytes"]=function(){return(_crypto_kx_secretkeybytes=Module["_crypto_kx_secretkeybytes"]=Module["asm"]["Mc"]).apply(null,arguments)};var _crypto_kx_seedbytes=Module["_crypto_kx_seedbytes"]=function(){return(_crypto_kx_seedbytes=Module["_crypto_kx_seedbytes"]=Module["asm"]["Nc"]).apply(null,arguments)};var _crypto_kx_sessionkeybytes=Module["_crypto_kx_sessionkeybytes"]=function(){return(_crypto_kx_sessionkeybytes=Module["_crypto_kx_sessionkeybytes"]=Module["asm"]["Oc"]).apply(null,arguments)};var _crypto_kx_primitive=Module["_crypto_kx_primitive"]=function(){return(_crypto_kx_primitive=Module["_crypto_kx_primitive"]=Module["asm"]["Pc"]).apply(null,arguments)};var _crypto_onetimeauth_statebytes=Module["_crypto_onetimeauth_statebytes"]=function(){return(_crypto_onetimeauth_statebytes=Module["_crypto_onetimeauth_statebytes"]=Module["asm"]["Qc"]).apply(null,arguments)};var _crypto_onetimeauth_bytes=Module["_crypto_onetimeauth_bytes"]=function(){return(_crypto_onetimeauth_bytes=Module["_crypto_onetimeauth_bytes"]=Module["asm"]["Rc"]).apply(null,arguments)};var _crypto_onetimeauth_keybytes=Module["_crypto_onetimeauth_keybytes"]=function(){return(_crypto_onetimeauth_keybytes=Module["_crypto_onetimeauth_keybytes"]=Module["asm"]["Sc"]).apply(null,arguments)};var _crypto_onetimeauth=Module["_crypto_onetimeauth"]=function(){return(_crypto_onetimeauth=Module["_crypto_onetimeauth"]=Module["asm"]["Tc"]).apply(null,arguments)};var _crypto_onetimeauth_verify=Module["_crypto_onetimeauth_verify"]=function(){return(_crypto_onetimeauth_verify=Module["_crypto_onetimeauth_verify"]=Module["asm"]["Uc"]).apply(null,arguments)};var _crypto_onetimeauth_init=Module["_crypto_onetimeauth_init"]=function(){return(_crypto_onetimeauth_init=Module["_crypto_onetimeauth_init"]=Module["asm"]["Vc"]).apply(null,arguments)};var _crypto_onetimeauth_update=Module["_crypto_onetimeauth_update"]=function(){return(_crypto_onetimeauth_update=Module["_crypto_onetimeauth_update"]=Module["asm"]["Wc"]).apply(null,arguments)};var _crypto_onetimeauth_final=Module["_crypto_onetimeauth_final"]=function(){return(_crypto_onetimeauth_final=Module["_crypto_onetimeauth_final"]=Module["asm"]["Xc"]).apply(null,arguments)};var _crypto_onetimeauth_primitive=Module["_crypto_onetimeauth_primitive"]=function(){return(_crypto_onetimeauth_primitive=Module["_crypto_onetimeauth_primitive"]=Module["asm"]["Yc"]).apply(null,arguments)};var _crypto_onetimeauth_keygen=Module["_crypto_onetimeauth_keygen"]=function(){return(_crypto_onetimeauth_keygen=Module["_crypto_onetimeauth_keygen"]=Module["asm"]["Zc"]).apply(null,arguments)};var _crypto_onetimeauth_poly1305=Module["_crypto_onetimeauth_poly1305"]=function(){return(_crypto_onetimeauth_poly1305=Module["_crypto_onetimeauth_poly1305"]=Module["asm"]["_c"]).apply(null,arguments)};var _crypto_onetimeauth_poly1305_verify=Module["_crypto_onetimeauth_poly1305_verify"]=function(){return(_crypto_onetimeauth_poly1305_verify=Module["_crypto_onetimeauth_poly1305_verify"]=Module["asm"]["$c"]).apply(null,arguments)};var _crypto_onetimeauth_poly1305_init=Module["_crypto_onetimeauth_poly1305_init"]=function(){return(_crypto_onetimeauth_poly1305_init=Module["_crypto_onetimeauth_poly1305_init"]=Module["asm"]["ad"]).apply(null,arguments)};var _crypto_onetimeauth_poly1305_update=Module["_crypto_onetimeauth_poly1305_update"]=function(){return(_crypto_onetimeauth_poly1305_update=Module["_crypto_onetimeauth_poly1305_update"]=Module["asm"]["bd"]).apply(null,arguments)};var _crypto_onetimeauth_poly1305_final=Module["_crypto_onetimeauth_poly1305_final"]=function(){return(_crypto_onetimeauth_poly1305_final=Module["_crypto_onetimeauth_poly1305_final"]=Module["asm"]["cd"]).apply(null,arguments)};var _crypto_onetimeauth_poly1305_bytes=Module["_crypto_onetimeauth_poly1305_bytes"]=function(){return(_crypto_onetimeauth_poly1305_bytes=Module["_crypto_onetimeauth_poly1305_bytes"]=Module["asm"]["dd"]).apply(null,arguments)};var _crypto_onetimeauth_poly1305_keybytes=Module["_crypto_onetimeauth_poly1305_keybytes"]=function(){return(_crypto_onetimeauth_poly1305_keybytes=Module["_crypto_onetimeauth_poly1305_keybytes"]=Module["asm"]["ed"]).apply(null,arguments)};var _crypto_onetimeauth_poly1305_statebytes=Module["_crypto_onetimeauth_poly1305_statebytes"]=function(){return(_crypto_onetimeauth_poly1305_statebytes=Module["_crypto_onetimeauth_poly1305_statebytes"]=Module["asm"]["fd"]).apply(null,arguments)};var _crypto_onetimeauth_poly1305_keygen=Module["_crypto_onetimeauth_poly1305_keygen"]=function(){return(_crypto_onetimeauth_poly1305_keygen=Module["_crypto_onetimeauth_poly1305_keygen"]=Module["asm"]["gd"]).apply(null,arguments)};var _crypto_pwhash_argon2i_alg_argon2i13=Module["_crypto_pwhash_argon2i_alg_argon2i13"]=function(){return(_crypto_pwhash_argon2i_alg_argon2i13=Module["_crypto_pwhash_argon2i_alg_argon2i13"]=Module["asm"]["hd"]).apply(null,arguments)};var _crypto_pwhash_argon2i_bytes_min=Module["_crypto_pwhash_argon2i_bytes_min"]=function(){return(_crypto_pwhash_argon2i_bytes_min=Module["_crypto_pwhash_argon2i_bytes_min"]=Module["asm"]["id"]).apply(null,arguments)};var _crypto_pwhash_argon2i_bytes_max=Module["_crypto_pwhash_argon2i_bytes_max"]=function(){return(_crypto_pwhash_argon2i_bytes_max=Module["_crypto_pwhash_argon2i_bytes_max"]=Module["asm"]["jd"]).apply(null,arguments)};var _crypto_pwhash_argon2i_passwd_min=Module["_crypto_pwhash_argon2i_passwd_min"]=function(){return(_crypto_pwhash_argon2i_passwd_min=Module["_crypto_pwhash_argon2i_passwd_min"]=Module["asm"]["kd"]).apply(null,arguments)};var _crypto_pwhash_argon2i_passwd_max=Module["_crypto_pwhash_argon2i_passwd_max"]=function(){return(_crypto_pwhash_argon2i_passwd_max=Module["_crypto_pwhash_argon2i_passwd_max"]=Module["asm"]["ld"]).apply(null,arguments)};var _crypto_pwhash_argon2i_saltbytes=Module["_crypto_pwhash_argon2i_saltbytes"]=function(){return(_crypto_pwhash_argon2i_saltbytes=Module["_crypto_pwhash_argon2i_saltbytes"]=Module["asm"]["md"]).apply(null,arguments)};var _crypto_pwhash_argon2i_strbytes=Module["_crypto_pwhash_argon2i_strbytes"]=function(){return(_crypto_pwhash_argon2i_strbytes=Module["_crypto_pwhash_argon2i_strbytes"]=Module["asm"]["nd"]).apply(null,arguments)};var _crypto_pwhash_argon2i_strprefix=Module["_crypto_pwhash_argon2i_strprefix"]=function(){return(_crypto_pwhash_argon2i_strprefix=Module["_crypto_pwhash_argon2i_strprefix"]=Module["asm"]["od"]).apply(null,arguments)};var _crypto_pwhash_argon2i_opslimit_min=Module["_crypto_pwhash_argon2i_opslimit_min"]=function(){return(_crypto_pwhash_argon2i_opslimit_min=Module["_crypto_pwhash_argon2i_opslimit_min"]=Module["asm"]["pd"]).apply(null,arguments)};var _crypto_pwhash_argon2i_opslimit_max=Module["_crypto_pwhash_argon2i_opslimit_max"]=function(){return(_crypto_pwhash_argon2i_opslimit_max=Module["_crypto_pwhash_argon2i_opslimit_max"]=Module["asm"]["qd"]).apply(null,arguments)};var _crypto_pwhash_argon2i_memlimit_min=Module["_crypto_pwhash_argon2i_memlimit_min"]=function(){return(_crypto_pwhash_argon2i_memlimit_min=Module["_crypto_pwhash_argon2i_memlimit_min"]=Module["asm"]["rd"]).apply(null,arguments)};var _crypto_pwhash_argon2i_memlimit_max=Module["_crypto_pwhash_argon2i_memlimit_max"]=function(){return(_crypto_pwhash_argon2i_memlimit_max=Module["_crypto_pwhash_argon2i_memlimit_max"]=Module["asm"]["sd"]).apply(null,arguments)};var _crypto_pwhash_argon2i_opslimit_interactive=Module["_crypto_pwhash_argon2i_opslimit_interactive"]=function(){return(_crypto_pwhash_argon2i_opslimit_interactive=Module["_crypto_pwhash_argon2i_opslimit_interactive"]=Module["asm"]["td"]).apply(null,arguments)};var _crypto_pwhash_argon2i_memlimit_interactive=Module["_crypto_pwhash_argon2i_memlimit_interactive"]=function(){return(_crypto_pwhash_argon2i_memlimit_interactive=Module["_crypto_pwhash_argon2i_memlimit_interactive"]=Module["asm"]["ud"]).apply(null,arguments)};var _crypto_pwhash_argon2i_opslimit_moderate=Module["_crypto_pwhash_argon2i_opslimit_moderate"]=function(){return(_crypto_pwhash_argon2i_opslimit_moderate=Module["_crypto_pwhash_argon2i_opslimit_moderate"]=Module["asm"]["vd"]).apply(null,arguments)};var _crypto_pwhash_argon2i_memlimit_moderate=Module["_crypto_pwhash_argon2i_memlimit_moderate"]=function(){return(_crypto_pwhash_argon2i_memlimit_moderate=Module["_crypto_pwhash_argon2i_memlimit_moderate"]=Module["asm"]["wd"]).apply(null,arguments)};var _crypto_pwhash_argon2i_opslimit_sensitive=Module["_crypto_pwhash_argon2i_opslimit_sensitive"]=function(){return(_crypto_pwhash_argon2i_opslimit_sensitive=Module["_crypto_pwhash_argon2i_opslimit_sensitive"]=Module["asm"]["xd"]).apply(null,arguments)};var _crypto_pwhash_argon2i_memlimit_sensitive=Module["_crypto_pwhash_argon2i_memlimit_sensitive"]=function(){return(_crypto_pwhash_argon2i_memlimit_sensitive=Module["_crypto_pwhash_argon2i_memlimit_sensitive"]=Module["asm"]["yd"]).apply(null,arguments)};var _crypto_pwhash_argon2i=Module["_crypto_pwhash_argon2i"]=function(){return(_crypto_pwhash_argon2i=Module["_crypto_pwhash_argon2i"]=Module["asm"]["zd"]).apply(null,arguments)};var _crypto_pwhash_argon2i_str=Module["_crypto_pwhash_argon2i_str"]=function(){return(_crypto_pwhash_argon2i_str=Module["_crypto_pwhash_argon2i_str"]=Module["asm"]["Ad"]).apply(null,arguments)};var _crypto_pwhash_argon2i_str_verify=Module["_crypto_pwhash_argon2i_str_verify"]=function(){return(_crypto_pwhash_argon2i_str_verify=Module["_crypto_pwhash_argon2i_str_verify"]=Module["asm"]["Bd"]).apply(null,arguments)};var _crypto_pwhash_argon2i_str_needs_rehash=Module["_crypto_pwhash_argon2i_str_needs_rehash"]=function(){return(_crypto_pwhash_argon2i_str_needs_rehash=Module["_crypto_pwhash_argon2i_str_needs_rehash"]=Module["asm"]["Cd"]).apply(null,arguments)};var _crypto_pwhash_argon2id_str_needs_rehash=Module["_crypto_pwhash_argon2id_str_needs_rehash"]=function(){return(_crypto_pwhash_argon2id_str_needs_rehash=Module["_crypto_pwhash_argon2id_str_needs_rehash"]=Module["asm"]["Dd"]).apply(null,arguments)};var _crypto_pwhash_argon2id_alg_argon2id13=Module["_crypto_pwhash_argon2id_alg_argon2id13"]=function(){return(_crypto_pwhash_argon2id_alg_argon2id13=Module["_crypto_pwhash_argon2id_alg_argon2id13"]=Module["asm"]["Ed"]).apply(null,arguments)};var _crypto_pwhash_argon2id_bytes_min=Module["_crypto_pwhash_argon2id_bytes_min"]=function(){return(_crypto_pwhash_argon2id_bytes_min=Module["_crypto_pwhash_argon2id_bytes_min"]=Module["asm"]["Fd"]).apply(null,arguments)};var _crypto_pwhash_argon2id_bytes_max=Module["_crypto_pwhash_argon2id_bytes_max"]=function(){return(_crypto_pwhash_argon2id_bytes_max=Module["_crypto_pwhash_argon2id_bytes_max"]=Module["asm"]["Gd"]).apply(null,arguments)};var _crypto_pwhash_argon2id_passwd_min=Module["_crypto_pwhash_argon2id_passwd_min"]=function(){return(_crypto_pwhash_argon2id_passwd_min=Module["_crypto_pwhash_argon2id_passwd_min"]=Module["asm"]["Hd"]).apply(null,arguments)};var _crypto_pwhash_argon2id_passwd_max=Module["_crypto_pwhash_argon2id_passwd_max"]=function(){return(_crypto_pwhash_argon2id_passwd_max=Module["_crypto_pwhash_argon2id_passwd_max"]=Module["asm"]["Id"]).apply(null,arguments)};var _crypto_pwhash_argon2id_saltbytes=Module["_crypto_pwhash_argon2id_saltbytes"]=function(){return(_crypto_pwhash_argon2id_saltbytes=Module["_crypto_pwhash_argon2id_saltbytes"]=Module["asm"]["Jd"]).apply(null,arguments)};var _crypto_pwhash_argon2id_strbytes=Module["_crypto_pwhash_argon2id_strbytes"]=function(){return(_crypto_pwhash_argon2id_strbytes=Module["_crypto_pwhash_argon2id_strbytes"]=Module["asm"]["Kd"]).apply(null,arguments)};var _crypto_pwhash_argon2id_strprefix=Module["_crypto_pwhash_argon2id_strprefix"]=function(){return(_crypto_pwhash_argon2id_strprefix=Module["_crypto_pwhash_argon2id_strprefix"]=Module["asm"]["Ld"]).apply(null,arguments)};var _crypto_pwhash_argon2id_opslimit_min=Module["_crypto_pwhash_argon2id_opslimit_min"]=function(){return(_crypto_pwhash_argon2id_opslimit_min=Module["_crypto_pwhash_argon2id_opslimit_min"]=Module["asm"]["Md"]).apply(null,arguments)};var _crypto_pwhash_argon2id_opslimit_max=Module["_crypto_pwhash_argon2id_opslimit_max"]=function(){return(_crypto_pwhash_argon2id_opslimit_max=Module["_crypto_pwhash_argon2id_opslimit_max"]=Module["asm"]["Nd"]).apply(null,arguments)};var _crypto_pwhash_argon2id_memlimit_min=Module["_crypto_pwhash_argon2id_memlimit_min"]=function(){return(_crypto_pwhash_argon2id_memlimit_min=Module["_crypto_pwhash_argon2id_memlimit_min"]=Module["asm"]["Od"]).apply(null,arguments)};var _crypto_pwhash_argon2id_memlimit_max=Module["_crypto_pwhash_argon2id_memlimit_max"]=function(){return(_crypto_pwhash_argon2id_memlimit_max=Module["_crypto_pwhash_argon2id_memlimit_max"]=Module["asm"]["Pd"]).apply(null,arguments)};var _crypto_pwhash_argon2id_opslimit_interactive=Module["_crypto_pwhash_argon2id_opslimit_interactive"]=function(){return(_crypto_pwhash_argon2id_opslimit_interactive=Module["_crypto_pwhash_argon2id_opslimit_interactive"]=Module["asm"]["Qd"]).apply(null,arguments)};var _crypto_pwhash_argon2id_memlimit_interactive=Module["_crypto_pwhash_argon2id_memlimit_interactive"]=function(){return(_crypto_pwhash_argon2id_memlimit_interactive=Module["_crypto_pwhash_argon2id_memlimit_interactive"]=Module["asm"]["Rd"]).apply(null,arguments)};var _crypto_pwhash_argon2id_opslimit_moderate=Module["_crypto_pwhash_argon2id_opslimit_moderate"]=function(){return(_crypto_pwhash_argon2id_opslimit_moderate=Module["_crypto_pwhash_argon2id_opslimit_moderate"]=Module["asm"]["Sd"]).apply(null,arguments)};var _crypto_pwhash_argon2id_memlimit_moderate=Module["_crypto_pwhash_argon2id_memlimit_moderate"]=function(){return(_crypto_pwhash_argon2id_memlimit_moderate=Module["_crypto_pwhash_argon2id_memlimit_moderate"]=Module["asm"]["Td"]).apply(null,arguments)};var _crypto_pwhash_argon2id_opslimit_sensitive=Module["_crypto_pwhash_argon2id_opslimit_sensitive"]=function(){return(_crypto_pwhash_argon2id_opslimit_sensitive=Module["_crypto_pwhash_argon2id_opslimit_sensitive"]=Module["asm"]["Ud"]).apply(null,arguments)};var _crypto_pwhash_argon2id_memlimit_sensitive=Module["_crypto_pwhash_argon2id_memlimit_sensitive"]=function(){return(_crypto_pwhash_argon2id_memlimit_sensitive=Module["_crypto_pwhash_argon2id_memlimit_sensitive"]=Module["asm"]["Vd"]).apply(null,arguments)};var _crypto_pwhash_argon2id=Module["_crypto_pwhash_argon2id"]=function(){return(_crypto_pwhash_argon2id=Module["_crypto_pwhash_argon2id"]=Module["asm"]["Wd"]).apply(null,arguments)};var _crypto_pwhash_argon2id_str=Module["_crypto_pwhash_argon2id_str"]=function(){return(_crypto_pwhash_argon2id_str=Module["_crypto_pwhash_argon2id_str"]=Module["asm"]["Xd"]).apply(null,arguments)};var _crypto_pwhash_argon2id_str_verify=Module["_crypto_pwhash_argon2id_str_verify"]=function(){return(_crypto_pwhash_argon2id_str_verify=Module["_crypto_pwhash_argon2id_str_verify"]=Module["asm"]["Yd"]).apply(null,arguments)};var _crypto_pwhash_alg_argon2i13=Module["_crypto_pwhash_alg_argon2i13"]=function(){return(_crypto_pwhash_alg_argon2i13=Module["_crypto_pwhash_alg_argon2i13"]=Module["asm"]["Zd"]).apply(null,arguments)};var _crypto_pwhash_alg_argon2id13=Module["_crypto_pwhash_alg_argon2id13"]=function(){return(_crypto_pwhash_alg_argon2id13=Module["_crypto_pwhash_alg_argon2id13"]=Module["asm"]["_d"]).apply(null,arguments)};var _crypto_pwhash_alg_default=Module["_crypto_pwhash_alg_default"]=function(){return(_crypto_pwhash_alg_default=Module["_crypto_pwhash_alg_default"]=Module["asm"]["$d"]).apply(null,arguments)};var _crypto_pwhash_bytes_min=Module["_crypto_pwhash_bytes_min"]=function(){return(_crypto_pwhash_bytes_min=Module["_crypto_pwhash_bytes_min"]=Module["asm"]["ae"]).apply(null,arguments)};var _crypto_pwhash_bytes_max=Module["_crypto_pwhash_bytes_max"]=function(){return(_crypto_pwhash_bytes_max=Module["_crypto_pwhash_bytes_max"]=Module["asm"]["be"]).apply(null,arguments)};var _crypto_pwhash_passwd_min=Module["_crypto_pwhash_passwd_min"]=function(){return(_crypto_pwhash_passwd_min=Module["_crypto_pwhash_passwd_min"]=Module["asm"]["ce"]).apply(null,arguments)};var _crypto_pwhash_passwd_max=Module["_crypto_pwhash_passwd_max"]=function(){return(_crypto_pwhash_passwd_max=Module["_crypto_pwhash_passwd_max"]=Module["asm"]["de"]).apply(null,arguments)};var _crypto_pwhash_saltbytes=Module["_crypto_pwhash_saltbytes"]=function(){return(_crypto_pwhash_saltbytes=Module["_crypto_pwhash_saltbytes"]=Module["asm"]["ee"]).apply(null,arguments)};var _crypto_pwhash_strbytes=Module["_crypto_pwhash_strbytes"]=function(){return(_crypto_pwhash_strbytes=Module["_crypto_pwhash_strbytes"]=Module["asm"]["fe"]).apply(null,arguments)};var _crypto_pwhash_strprefix=Module["_crypto_pwhash_strprefix"]=function(){return(_crypto_pwhash_strprefix=Module["_crypto_pwhash_strprefix"]=Module["asm"]["ge"]).apply(null,arguments)};var _crypto_pwhash_opslimit_min=Module["_crypto_pwhash_opslimit_min"]=function(){return(_crypto_pwhash_opslimit_min=Module["_crypto_pwhash_opslimit_min"]=Module["asm"]["he"]).apply(null,arguments)};var _crypto_pwhash_opslimit_max=Module["_crypto_pwhash_opslimit_max"]=function(){return(_crypto_pwhash_opslimit_max=Module["_crypto_pwhash_opslimit_max"]=Module["asm"]["ie"]).apply(null,arguments)};var _crypto_pwhash_memlimit_min=Module["_crypto_pwhash_memlimit_min"]=function(){return(_crypto_pwhash_memlimit_min=Module["_crypto_pwhash_memlimit_min"]=Module["asm"]["je"]).apply(null,arguments)};var _crypto_pwhash_memlimit_max=Module["_crypto_pwhash_memlimit_max"]=function(){return(_crypto_pwhash_memlimit_max=Module["_crypto_pwhash_memlimit_max"]=Module["asm"]["ke"]).apply(null,arguments)};var _crypto_pwhash_opslimit_interactive=Module["_crypto_pwhash_opslimit_interactive"]=function(){return(_crypto_pwhash_opslimit_interactive=Module["_crypto_pwhash_opslimit_interactive"]=Module["asm"]["le"]).apply(null,arguments)};var _crypto_pwhash_memlimit_interactive=Module["_crypto_pwhash_memlimit_interactive"]=function(){return(_crypto_pwhash_memlimit_interactive=Module["_crypto_pwhash_memlimit_interactive"]=Module["asm"]["me"]).apply(null,arguments)};var _crypto_pwhash_opslimit_moderate=Module["_crypto_pwhash_opslimit_moderate"]=function(){return(_crypto_pwhash_opslimit_moderate=Module["_crypto_pwhash_opslimit_moderate"]=Module["asm"]["ne"]).apply(null,arguments)};var _crypto_pwhash_memlimit_moderate=Module["_crypto_pwhash_memlimit_moderate"]=function(){return(_crypto_pwhash_memlimit_moderate=Module["_crypto_pwhash_memlimit_moderate"]=Module["asm"]["oe"]).apply(null,arguments)};var _crypto_pwhash_opslimit_sensitive=Module["_crypto_pwhash_opslimit_sensitive"]=function(){return(_crypto_pwhash_opslimit_sensitive=Module["_crypto_pwhash_opslimit_sensitive"]=Module["asm"]["pe"]).apply(null,arguments)};var _crypto_pwhash_memlimit_sensitive=Module["_crypto_pwhash_memlimit_sensitive"]=function(){return(_crypto_pwhash_memlimit_sensitive=Module["_crypto_pwhash_memlimit_sensitive"]=Module["asm"]["qe"]).apply(null,arguments)};var _crypto_pwhash=Module["_crypto_pwhash"]=function(){return(_crypto_pwhash=Module["_crypto_pwhash"]=Module["asm"]["re"]).apply(null,arguments)};var _crypto_pwhash_str=Module["_crypto_pwhash_str"]=function(){return(_crypto_pwhash_str=Module["_crypto_pwhash_str"]=Module["asm"]["se"]).apply(null,arguments)};var _crypto_pwhash_str_alg=Module["_crypto_pwhash_str_alg"]=function(){return(_crypto_pwhash_str_alg=Module["_crypto_pwhash_str_alg"]=Module["asm"]["te"]).apply(null,arguments)};var _crypto_pwhash_str_verify=Module["_crypto_pwhash_str_verify"]=function(){return(_crypto_pwhash_str_verify=Module["_crypto_pwhash_str_verify"]=Module["asm"]["ue"]).apply(null,arguments)};var _crypto_pwhash_str_needs_rehash=Module["_crypto_pwhash_str_needs_rehash"]=function(){return(_crypto_pwhash_str_needs_rehash=Module["_crypto_pwhash_str_needs_rehash"]=Module["asm"]["ve"]).apply(null,arguments)};var _crypto_pwhash_primitive=Module["_crypto_pwhash_primitive"]=function(){return(_crypto_pwhash_primitive=Module["_crypto_pwhash_primitive"]=Module["asm"]["we"]).apply(null,arguments)};var _crypto_scalarmult_primitive=Module["_crypto_scalarmult_primitive"]=function(){return(_crypto_scalarmult_primitive=Module["_crypto_scalarmult_primitive"]=Module["asm"]["xe"]).apply(null,arguments)};var _crypto_scalarmult_base=Module["_crypto_scalarmult_base"]=function(){return(_crypto_scalarmult_base=Module["_crypto_scalarmult_base"]=Module["asm"]["ye"]).apply(null,arguments)};var _crypto_scalarmult=Module["_crypto_scalarmult"]=function(){return(_crypto_scalarmult=Module["_crypto_scalarmult"]=Module["asm"]["ze"]).apply(null,arguments)};var _crypto_scalarmult_bytes=Module["_crypto_scalarmult_bytes"]=function(){return(_crypto_scalarmult_bytes=Module["_crypto_scalarmult_bytes"]=Module["asm"]["Ae"]).apply(null,arguments)};var _crypto_scalarmult_scalarbytes=Module["_crypto_scalarmult_scalarbytes"]=function(){return(_crypto_scalarmult_scalarbytes=Module["_crypto_scalarmult_scalarbytes"]=Module["asm"]["Be"]).apply(null,arguments)};var _crypto_scalarmult_curve25519=Module["_crypto_scalarmult_curve25519"]=function(){return(_crypto_scalarmult_curve25519=Module["_crypto_scalarmult_curve25519"]=Module["asm"]["Ce"]).apply(null,arguments)};var _crypto_scalarmult_curve25519_base=Module["_crypto_scalarmult_curve25519_base"]=function(){return(_crypto_scalarmult_curve25519_base=Module["_crypto_scalarmult_curve25519_base"]=Module["asm"]["De"]).apply(null,arguments)};var _crypto_scalarmult_curve25519_bytes=Module["_crypto_scalarmult_curve25519_bytes"]=function(){return(_crypto_scalarmult_curve25519_bytes=Module["_crypto_scalarmult_curve25519_bytes"]=Module["asm"]["Ee"]).apply(null,arguments)};var _crypto_scalarmult_curve25519_scalarbytes=Module["_crypto_scalarmult_curve25519_scalarbytes"]=function(){return(_crypto_scalarmult_curve25519_scalarbytes=Module["_crypto_scalarmult_curve25519_scalarbytes"]=Module["asm"]["Fe"]).apply(null,arguments)};var _crypto_secretbox_keybytes=Module["_crypto_secretbox_keybytes"]=function(){return(_crypto_secretbox_keybytes=Module["_crypto_secretbox_keybytes"]=Module["asm"]["Ge"]).apply(null,arguments)};var _crypto_secretbox_noncebytes=Module["_crypto_secretbox_noncebytes"]=function(){return(_crypto_secretbox_noncebytes=Module["_crypto_secretbox_noncebytes"]=Module["asm"]["He"]).apply(null,arguments)};var _crypto_secretbox_zerobytes=Module["_crypto_secretbox_zerobytes"]=function(){return(_crypto_secretbox_zerobytes=Module["_crypto_secretbox_zerobytes"]=Module["asm"]["Ie"]).apply(null,arguments)};var _crypto_secretbox_boxzerobytes=Module["_crypto_secretbox_boxzerobytes"]=function(){return(_crypto_secretbox_boxzerobytes=Module["_crypto_secretbox_boxzerobytes"]=Module["asm"]["Je"]).apply(null,arguments)};var _crypto_secretbox_macbytes=Module["_crypto_secretbox_macbytes"]=function(){return(_crypto_secretbox_macbytes=Module["_crypto_secretbox_macbytes"]=Module["asm"]["Ke"]).apply(null,arguments)};var _crypto_secretbox_messagebytes_max=Module["_crypto_secretbox_messagebytes_max"]=function(){return(_crypto_secretbox_messagebytes_max=Module["_crypto_secretbox_messagebytes_max"]=Module["asm"]["Le"]).apply(null,arguments)};var _crypto_secretbox_primitive=Module["_crypto_secretbox_primitive"]=function(){return(_crypto_secretbox_primitive=Module["_crypto_secretbox_primitive"]=Module["asm"]["Me"]).apply(null,arguments)};var _crypto_secretbox=Module["_crypto_secretbox"]=function(){return(_crypto_secretbox=Module["_crypto_secretbox"]=Module["asm"]["Ne"]).apply(null,arguments)};var _crypto_secretbox_open=Module["_crypto_secretbox_open"]=function(){return(_crypto_secretbox_open=Module["_crypto_secretbox_open"]=Module["asm"]["Oe"]).apply(null,arguments)};var _crypto_secretbox_keygen=Module["_crypto_secretbox_keygen"]=function(){return(_crypto_secretbox_keygen=Module["_crypto_secretbox_keygen"]=Module["asm"]["Pe"]).apply(null,arguments)};var _crypto_secretbox_detached=Module["_crypto_secretbox_detached"]=function(){return(_crypto_secretbox_detached=Module["_crypto_secretbox_detached"]=Module["asm"]["Qe"]).apply(null,arguments)};var _crypto_secretbox_easy=Module["_crypto_secretbox_easy"]=function(){return(_crypto_secretbox_easy=Module["_crypto_secretbox_easy"]=Module["asm"]["Re"]).apply(null,arguments)};var _crypto_secretbox_open_detached=Module["_crypto_secretbox_open_detached"]=function(){return(_crypto_secretbox_open_detached=Module["_crypto_secretbox_open_detached"]=Module["asm"]["Se"]).apply(null,arguments)};var _crypto_secretbox_open_easy=Module["_crypto_secretbox_open_easy"]=function(){return(_crypto_secretbox_open_easy=Module["_crypto_secretbox_open_easy"]=Module["asm"]["Te"]).apply(null,arguments)};var _crypto_secretbox_xsalsa20poly1305=Module["_crypto_secretbox_xsalsa20poly1305"]=function(){return(_crypto_secretbox_xsalsa20poly1305=Module["_crypto_secretbox_xsalsa20poly1305"]=Module["asm"]["Ue"]).apply(null,arguments)};var _crypto_secretbox_xsalsa20poly1305_open=Module["_crypto_secretbox_xsalsa20poly1305_open"]=function(){return(_crypto_secretbox_xsalsa20poly1305_open=Module["_crypto_secretbox_xsalsa20poly1305_open"]=Module["asm"]["Ve"]).apply(null,arguments)};var _crypto_secretbox_xsalsa20poly1305_keybytes=Module["_crypto_secretbox_xsalsa20poly1305_keybytes"]=function(){return(_crypto_secretbox_xsalsa20poly1305_keybytes=Module["_crypto_secretbox_xsalsa20poly1305_keybytes"]=Module["asm"]["We"]).apply(null,arguments)};var _crypto_secretbox_xsalsa20poly1305_noncebytes=Module["_crypto_secretbox_xsalsa20poly1305_noncebytes"]=function(){return(_crypto_secretbox_xsalsa20poly1305_noncebytes=Module["_crypto_secretbox_xsalsa20poly1305_noncebytes"]=Module["asm"]["Xe"]).apply(null,arguments)};var _crypto_secretbox_xsalsa20poly1305_zerobytes=Module["_crypto_secretbox_xsalsa20poly1305_zerobytes"]=function(){return(_crypto_secretbox_xsalsa20poly1305_zerobytes=Module["_crypto_secretbox_xsalsa20poly1305_zerobytes"]=Module["asm"]["Ye"]).apply(null,arguments)};var _crypto_secretbox_xsalsa20poly1305_boxzerobytes=Module["_crypto_secretbox_xsalsa20poly1305_boxzerobytes"]=function(){return(_crypto_secretbox_xsalsa20poly1305_boxzerobytes=Module["_crypto_secretbox_xsalsa20poly1305_boxzerobytes"]=Module["asm"]["Ze"]).apply(null,arguments)};var _crypto_secretbox_xsalsa20poly1305_macbytes=Module["_crypto_secretbox_xsalsa20poly1305_macbytes"]=function(){return(_crypto_secretbox_xsalsa20poly1305_macbytes=Module["_crypto_secretbox_xsalsa20poly1305_macbytes"]=Module["asm"]["_e"]).apply(null,arguments)};var _crypto_secretbox_xsalsa20poly1305_messagebytes_max=Module["_crypto_secretbox_xsalsa20poly1305_messagebytes_max"]=function(){return(_crypto_secretbox_xsalsa20poly1305_messagebytes_max=Module["_crypto_secretbox_xsalsa20poly1305_messagebytes_max"]=Module["asm"]["$e"]).apply(null,arguments)};var _crypto_secretbox_xsalsa20poly1305_keygen=Module["_crypto_secretbox_xsalsa20poly1305_keygen"]=function(){return(_crypto_secretbox_xsalsa20poly1305_keygen=Module["_crypto_secretbox_xsalsa20poly1305_keygen"]=Module["asm"]["af"]).apply(null,arguments)};var _crypto_secretstream_xchacha20poly1305_keygen=Module["_crypto_secretstream_xchacha20poly1305_keygen"]=function(){return(_crypto_secretstream_xchacha20poly1305_keygen=Module["_crypto_secretstream_xchacha20poly1305_keygen"]=Module["asm"]["bf"]).apply(null,arguments)};var _crypto_secretstream_xchacha20poly1305_init_push=Module["_crypto_secretstream_xchacha20poly1305_init_push"]=function(){return(_crypto_secretstream_xchacha20poly1305_init_push=Module["_crypto_secretstream_xchacha20poly1305_init_push"]=Module["asm"]["cf"]).apply(null,arguments)};var _crypto_secretstream_xchacha20poly1305_init_pull=Module["_crypto_secretstream_xchacha20poly1305_init_pull"]=function(){return(_crypto_secretstream_xchacha20poly1305_init_pull=Module["_crypto_secretstream_xchacha20poly1305_init_pull"]=Module["asm"]["df"]).apply(null,arguments)};var _crypto_secretstream_xchacha20poly1305_rekey=Module["_crypto_secretstream_xchacha20poly1305_rekey"]=function(){return(_crypto_secretstream_xchacha20poly1305_rekey=Module["_crypto_secretstream_xchacha20poly1305_rekey"]=Module["asm"]["ef"]).apply(null,arguments)};var _crypto_secretstream_xchacha20poly1305_push=Module["_crypto_secretstream_xchacha20poly1305_push"]=function(){return(_crypto_secretstream_xchacha20poly1305_push=Module["_crypto_secretstream_xchacha20poly1305_push"]=Module["asm"]["ff"]).apply(null,arguments)};var _crypto_secretstream_xchacha20poly1305_pull=Module["_crypto_secretstream_xchacha20poly1305_pull"]=function(){return(_crypto_secretstream_xchacha20poly1305_pull=Module["_crypto_secretstream_xchacha20poly1305_pull"]=Module["asm"]["gf"]).apply(null,arguments)};var _crypto_secretstream_xchacha20poly1305_statebytes=Module["_crypto_secretstream_xchacha20poly1305_statebytes"]=function(){return(_crypto_secretstream_xchacha20poly1305_statebytes=Module["_crypto_secretstream_xchacha20poly1305_statebytes"]=Module["asm"]["hf"]).apply(null,arguments)};var _crypto_secretstream_xchacha20poly1305_abytes=Module["_crypto_secretstream_xchacha20poly1305_abytes"]=function(){return(_crypto_secretstream_xchacha20poly1305_abytes=Module["_crypto_secretstream_xchacha20poly1305_abytes"]=Module["asm"]["jf"]).apply(null,arguments)};var _crypto_secretstream_xchacha20poly1305_headerbytes=Module["_crypto_secretstream_xchacha20poly1305_headerbytes"]=function(){return(_crypto_secretstream_xchacha20poly1305_headerbytes=Module["_crypto_secretstream_xchacha20poly1305_headerbytes"]=Module["asm"]["kf"]).apply(null,arguments)};var _crypto_secretstream_xchacha20poly1305_keybytes=Module["_crypto_secretstream_xchacha20poly1305_keybytes"]=function(){return(_crypto_secretstream_xchacha20poly1305_keybytes=Module["_crypto_secretstream_xchacha20poly1305_keybytes"]=Module["asm"]["lf"]).apply(null,arguments)};var _crypto_secretstream_xchacha20poly1305_messagebytes_max=Module["_crypto_secretstream_xchacha20poly1305_messagebytes_max"]=function(){return(_crypto_secretstream_xchacha20poly1305_messagebytes_max=Module["_crypto_secretstream_xchacha20poly1305_messagebytes_max"]=Module["asm"]["mf"]).apply(null,arguments)};var _crypto_secretstream_xchacha20poly1305_tag_message=Module["_crypto_secretstream_xchacha20poly1305_tag_message"]=function(){return(_crypto_secretstream_xchacha20poly1305_tag_message=Module["_crypto_secretstream_xchacha20poly1305_tag_message"]=Module["asm"]["nf"]).apply(null,arguments)};var _crypto_secretstream_xchacha20poly1305_tag_push=Module["_crypto_secretstream_xchacha20poly1305_tag_push"]=function(){return(_crypto_secretstream_xchacha20poly1305_tag_push=Module["_crypto_secretstream_xchacha20poly1305_tag_push"]=Module["asm"]["of"]).apply(null,arguments)};var _crypto_secretstream_xchacha20poly1305_tag_rekey=Module["_crypto_secretstream_xchacha20poly1305_tag_rekey"]=function(){return(_crypto_secretstream_xchacha20poly1305_tag_rekey=Module["_crypto_secretstream_xchacha20poly1305_tag_rekey"]=Module["asm"]["pf"]).apply(null,arguments)};var _crypto_secretstream_xchacha20poly1305_tag_final=Module["_crypto_secretstream_xchacha20poly1305_tag_final"]=function(){return(_crypto_secretstream_xchacha20poly1305_tag_final=Module["_crypto_secretstream_xchacha20poly1305_tag_final"]=Module["asm"]["qf"]).apply(null,arguments)};var _crypto_shorthash_bytes=Module["_crypto_shorthash_bytes"]=function(){return(_crypto_shorthash_bytes=Module["_crypto_shorthash_bytes"]=Module["asm"]["rf"]).apply(null,arguments)};var _crypto_shorthash_keybytes=Module["_crypto_shorthash_keybytes"]=function(){return(_crypto_shorthash_keybytes=Module["_crypto_shorthash_keybytes"]=Module["asm"]["sf"]).apply(null,arguments)};var _crypto_shorthash_primitive=Module["_crypto_shorthash_primitive"]=function(){return(_crypto_shorthash_primitive=Module["_crypto_shorthash_primitive"]=Module["asm"]["tf"]).apply(null,arguments)};var _crypto_shorthash=Module["_crypto_shorthash"]=function(){return(_crypto_shorthash=Module["_crypto_shorthash"]=Module["asm"]["uf"]).apply(null,arguments)};var _crypto_shorthash_keygen=Module["_crypto_shorthash_keygen"]=function(){return(_crypto_shorthash_keygen=Module["_crypto_shorthash_keygen"]=Module["asm"]["vf"]).apply(null,arguments)};var _crypto_shorthash_siphash24_bytes=Module["_crypto_shorthash_siphash24_bytes"]=function(){return(_crypto_shorthash_siphash24_bytes=Module["_crypto_shorthash_siphash24_bytes"]=Module["asm"]["wf"]).apply(null,arguments)};var _crypto_shorthash_siphash24_keybytes=Module["_crypto_shorthash_siphash24_keybytes"]=function(){return(_crypto_shorthash_siphash24_keybytes=Module["_crypto_shorthash_siphash24_keybytes"]=Module["asm"]["xf"]).apply(null,arguments)};var _crypto_shorthash_siphash24=Module["_crypto_shorthash_siphash24"]=function(){return(_crypto_shorthash_siphash24=Module["_crypto_shorthash_siphash24"]=Module["asm"]["yf"]).apply(null,arguments)};var _crypto_sign_statebytes=Module["_crypto_sign_statebytes"]=function(){return(_crypto_sign_statebytes=Module["_crypto_sign_statebytes"]=Module["asm"]["zf"]).apply(null,arguments)};var _crypto_sign_bytes=Module["_crypto_sign_bytes"]=function(){return(_crypto_sign_bytes=Module["_crypto_sign_bytes"]=Module["asm"]["Af"]).apply(null,arguments)};var _crypto_sign_seedbytes=Module["_crypto_sign_seedbytes"]=function(){return(_crypto_sign_seedbytes=Module["_crypto_sign_seedbytes"]=Module["asm"]["Bf"]).apply(null,arguments)};var _crypto_sign_publickeybytes=Module["_crypto_sign_publickeybytes"]=function(){return(_crypto_sign_publickeybytes=Module["_crypto_sign_publickeybytes"]=Module["asm"]["Cf"]).apply(null,arguments)};var _crypto_sign_secretkeybytes=Module["_crypto_sign_secretkeybytes"]=function(){return(_crypto_sign_secretkeybytes=Module["_crypto_sign_secretkeybytes"]=Module["asm"]["Df"]).apply(null,arguments)};var _crypto_sign_messagebytes_max=Module["_crypto_sign_messagebytes_max"]=function(){return(_crypto_sign_messagebytes_max=Module["_crypto_sign_messagebytes_max"]=Module["asm"]["Ef"]).apply(null,arguments)};var _crypto_sign_primitive=Module["_crypto_sign_primitive"]=function(){return(_crypto_sign_primitive=Module["_crypto_sign_primitive"]=Module["asm"]["Ff"]).apply(null,arguments)};var _crypto_sign_seed_keypair=Module["_crypto_sign_seed_keypair"]=function(){return(_crypto_sign_seed_keypair=Module["_crypto_sign_seed_keypair"]=Module["asm"]["Gf"]).apply(null,arguments)};var _crypto_sign_keypair=Module["_crypto_sign_keypair"]=function(){return(_crypto_sign_keypair=Module["_crypto_sign_keypair"]=Module["asm"]["Hf"]).apply(null,arguments)};var _crypto_sign=Module["_crypto_sign"]=function(){return(_crypto_sign=Module["_crypto_sign"]=Module["asm"]["If"]).apply(null,arguments)};var _crypto_sign_open=Module["_crypto_sign_open"]=function(){return(_crypto_sign_open=Module["_crypto_sign_open"]=Module["asm"]["Jf"]).apply(null,arguments)};var _crypto_sign_detached=Module["_crypto_sign_detached"]=function(){return(_crypto_sign_detached=Module["_crypto_sign_detached"]=Module["asm"]["Kf"]).apply(null,arguments)};var _crypto_sign_verify_detached=Module["_crypto_sign_verify_detached"]=function(){return(_crypto_sign_verify_detached=Module["_crypto_sign_verify_detached"]=Module["asm"]["Lf"]).apply(null,arguments)};var _crypto_sign_init=Module["_crypto_sign_init"]=function(){return(_crypto_sign_init=Module["_crypto_sign_init"]=Module["asm"]["Mf"]).apply(null,arguments)};var _crypto_sign_update=Module["_crypto_sign_update"]=function(){return(_crypto_sign_update=Module["_crypto_sign_update"]=Module["asm"]["Nf"]).apply(null,arguments)};var _crypto_sign_final_create=Module["_crypto_sign_final_create"]=function(){return(_crypto_sign_final_create=Module["_crypto_sign_final_create"]=Module["asm"]["Of"]).apply(null,arguments)};var _crypto_sign_final_verify=Module["_crypto_sign_final_verify"]=function(){return(_crypto_sign_final_verify=Module["_crypto_sign_final_verify"]=Module["asm"]["Pf"]).apply(null,arguments)};var _crypto_sign_ed25519ph_statebytes=Module["_crypto_sign_ed25519ph_statebytes"]=function(){return(_crypto_sign_ed25519ph_statebytes=Module["_crypto_sign_ed25519ph_statebytes"]=Module["asm"]["Qf"]).apply(null,arguments)};var _crypto_sign_ed25519_bytes=Module["_crypto_sign_ed25519_bytes"]=function(){return(_crypto_sign_ed25519_bytes=Module["_crypto_sign_ed25519_bytes"]=Module["asm"]["Rf"]).apply(null,arguments)};var _crypto_sign_ed25519_seedbytes=Module["_crypto_sign_ed25519_seedbytes"]=function(){return(_crypto_sign_ed25519_seedbytes=Module["_crypto_sign_ed25519_seedbytes"]=Module["asm"]["Sf"]).apply(null,arguments)};var _crypto_sign_ed25519_publickeybytes=Module["_crypto_sign_ed25519_publickeybytes"]=function(){return(_crypto_sign_ed25519_publickeybytes=Module["_crypto_sign_ed25519_publickeybytes"]=Module["asm"]["Tf"]).apply(null,arguments)};var _crypto_sign_ed25519_secretkeybytes=Module["_crypto_sign_ed25519_secretkeybytes"]=function(){return(_crypto_sign_ed25519_secretkeybytes=Module["_crypto_sign_ed25519_secretkeybytes"]=Module["asm"]["Uf"]).apply(null,arguments)};var _crypto_sign_ed25519_messagebytes_max=Module["_crypto_sign_ed25519_messagebytes_max"]=function(){return(_crypto_sign_ed25519_messagebytes_max=Module["_crypto_sign_ed25519_messagebytes_max"]=Module["asm"]["Vf"]).apply(null,arguments)};var _crypto_sign_ed25519_sk_to_seed=Module["_crypto_sign_ed25519_sk_to_seed"]=function(){return(_crypto_sign_ed25519_sk_to_seed=Module["_crypto_sign_ed25519_sk_to_seed"]=Module["asm"]["Wf"]).apply(null,arguments)};var _crypto_sign_ed25519_sk_to_pk=Module["_crypto_sign_ed25519_sk_to_pk"]=function(){return(_crypto_sign_ed25519_sk_to_pk=Module["_crypto_sign_ed25519_sk_to_pk"]=Module["asm"]["Xf"]).apply(null,arguments)};var _crypto_sign_ed25519ph_init=Module["_crypto_sign_ed25519ph_init"]=function(){return(_crypto_sign_ed25519ph_init=Module["_crypto_sign_ed25519ph_init"]=Module["asm"]["Yf"]).apply(null,arguments)};var _crypto_sign_ed25519ph_update=Module["_crypto_sign_ed25519ph_update"]=function(){return(_crypto_sign_ed25519ph_update=Module["_crypto_sign_ed25519ph_update"]=Module["asm"]["Zf"]).apply(null,arguments)};var _crypto_sign_ed25519ph_final_create=Module["_crypto_sign_ed25519ph_final_create"]=function(){return(_crypto_sign_ed25519ph_final_create=Module["_crypto_sign_ed25519ph_final_create"]=Module["asm"]["_f"]).apply(null,arguments)};var _crypto_sign_ed25519ph_final_verify=Module["_crypto_sign_ed25519ph_final_verify"]=function(){return(_crypto_sign_ed25519ph_final_verify=Module["_crypto_sign_ed25519ph_final_verify"]=Module["asm"]["$f"]).apply(null,arguments)};var _crypto_sign_ed25519_seed_keypair=Module["_crypto_sign_ed25519_seed_keypair"]=function(){return(_crypto_sign_ed25519_seed_keypair=Module["_crypto_sign_ed25519_seed_keypair"]=Module["asm"]["ag"]).apply(null,arguments)};var _crypto_sign_ed25519_keypair=Module["_crypto_sign_ed25519_keypair"]=function(){return(_crypto_sign_ed25519_keypair=Module["_crypto_sign_ed25519_keypair"]=Module["asm"]["bg"]).apply(null,arguments)};var _crypto_sign_ed25519_pk_to_curve25519=Module["_crypto_sign_ed25519_pk_to_curve25519"]=function(){return(_crypto_sign_ed25519_pk_to_curve25519=Module["_crypto_sign_ed25519_pk_to_curve25519"]=Module["asm"]["cg"]).apply(null,arguments)};var _crypto_sign_ed25519_sk_to_curve25519=Module["_crypto_sign_ed25519_sk_to_curve25519"]=function(){return(_crypto_sign_ed25519_sk_to_curve25519=Module["_crypto_sign_ed25519_sk_to_curve25519"]=Module["asm"]["dg"]).apply(null,arguments)};var _crypto_sign_ed25519_verify_detached=Module["_crypto_sign_ed25519_verify_detached"]=function(){return(_crypto_sign_ed25519_verify_detached=Module["_crypto_sign_ed25519_verify_detached"]=Module["asm"]["eg"]).apply(null,arguments)};var _crypto_sign_ed25519_open=Module["_crypto_sign_ed25519_open"]=function(){return(_crypto_sign_ed25519_open=Module["_crypto_sign_ed25519_open"]=Module["asm"]["fg"]).apply(null,arguments)};var _crypto_sign_ed25519_detached=Module["_crypto_sign_ed25519_detached"]=function(){return(_crypto_sign_ed25519_detached=Module["_crypto_sign_ed25519_detached"]=Module["asm"]["gg"]).apply(null,arguments)};var _crypto_sign_ed25519=Module["_crypto_sign_ed25519"]=function(){return(_crypto_sign_ed25519=Module["_crypto_sign_ed25519"]=Module["asm"]["hg"]).apply(null,arguments)};var _crypto_stream_chacha20_keybytes=Module["_crypto_stream_chacha20_keybytes"]=function(){return(_crypto_stream_chacha20_keybytes=Module["_crypto_stream_chacha20_keybytes"]=Module["asm"]["ig"]).apply(null,arguments)};var _crypto_stream_chacha20_noncebytes=Module["_crypto_stream_chacha20_noncebytes"]=function(){return(_crypto_stream_chacha20_noncebytes=Module["_crypto_stream_chacha20_noncebytes"]=Module["asm"]["jg"]).apply(null,arguments)};var _crypto_stream_chacha20_messagebytes_max=Module["_crypto_stream_chacha20_messagebytes_max"]=function(){return(_crypto_stream_chacha20_messagebytes_max=Module["_crypto_stream_chacha20_messagebytes_max"]=Module["asm"]["kg"]).apply(null,arguments)};var _crypto_stream_chacha20_ietf_keybytes=Module["_crypto_stream_chacha20_ietf_keybytes"]=function(){return(_crypto_stream_chacha20_ietf_keybytes=Module["_crypto_stream_chacha20_ietf_keybytes"]=Module["asm"]["lg"]).apply(null,arguments)};var _crypto_stream_chacha20_ietf_noncebytes=Module["_crypto_stream_chacha20_ietf_noncebytes"]=function(){return(_crypto_stream_chacha20_ietf_noncebytes=Module["_crypto_stream_chacha20_ietf_noncebytes"]=Module["asm"]["mg"]).apply(null,arguments)};var _crypto_stream_chacha20_ietf_messagebytes_max=Module["_crypto_stream_chacha20_ietf_messagebytes_max"]=function(){return(_crypto_stream_chacha20_ietf_messagebytes_max=Module["_crypto_stream_chacha20_ietf_messagebytes_max"]=Module["asm"]["ng"]).apply(null,arguments)};var _crypto_stream_chacha20=Module["_crypto_stream_chacha20"]=function(){return(_crypto_stream_chacha20=Module["_crypto_stream_chacha20"]=Module["asm"]["og"]).apply(null,arguments)};var _crypto_stream_chacha20_xor_ic=Module["_crypto_stream_chacha20_xor_ic"]=function(){return(_crypto_stream_chacha20_xor_ic=Module["_crypto_stream_chacha20_xor_ic"]=Module["asm"]["pg"]).apply(null,arguments)};var _crypto_stream_chacha20_xor=Module["_crypto_stream_chacha20_xor"]=function(){return(_crypto_stream_chacha20_xor=Module["_crypto_stream_chacha20_xor"]=Module["asm"]["qg"]).apply(null,arguments)};var _crypto_stream_chacha20_ietf=Module["_crypto_stream_chacha20_ietf"]=function(){return(_crypto_stream_chacha20_ietf=Module["_crypto_stream_chacha20_ietf"]=Module["asm"]["rg"]).apply(null,arguments)};var _crypto_stream_chacha20_ietf_xor_ic=Module["_crypto_stream_chacha20_ietf_xor_ic"]=function(){return(_crypto_stream_chacha20_ietf_xor_ic=Module["_crypto_stream_chacha20_ietf_xor_ic"]=Module["asm"]["sg"]).apply(null,arguments)};var _crypto_stream_chacha20_ietf_xor=Module["_crypto_stream_chacha20_ietf_xor"]=function(){return(_crypto_stream_chacha20_ietf_xor=Module["_crypto_stream_chacha20_ietf_xor"]=Module["asm"]["tg"]).apply(null,arguments)};var _crypto_stream_chacha20_ietf_keygen=Module["_crypto_stream_chacha20_ietf_keygen"]=function(){return(_crypto_stream_chacha20_ietf_keygen=Module["_crypto_stream_chacha20_ietf_keygen"]=Module["asm"]["ug"]).apply(null,arguments)};var _crypto_stream_chacha20_keygen=Module["_crypto_stream_chacha20_keygen"]=function(){return(_crypto_stream_chacha20_keygen=Module["_crypto_stream_chacha20_keygen"]=Module["asm"]["vg"]).apply(null,arguments)};var _crypto_stream_keybytes=Module["_crypto_stream_keybytes"]=function(){return(_crypto_stream_keybytes=Module["_crypto_stream_keybytes"]=Module["asm"]["wg"]).apply(null,arguments)};var _crypto_stream_noncebytes=Module["_crypto_stream_noncebytes"]=function(){return(_crypto_stream_noncebytes=Module["_crypto_stream_noncebytes"]=Module["asm"]["xg"]).apply(null,arguments)};var _crypto_stream_messagebytes_max=Module["_crypto_stream_messagebytes_max"]=function(){return(_crypto_stream_messagebytes_max=Module["_crypto_stream_messagebytes_max"]=Module["asm"]["yg"]).apply(null,arguments)};var _crypto_stream_primitive=Module["_crypto_stream_primitive"]=function(){return(_crypto_stream_primitive=Module["_crypto_stream_primitive"]=Module["asm"]["zg"]).apply(null,arguments)};var _crypto_stream=Module["_crypto_stream"]=function(){return(_crypto_stream=Module["_crypto_stream"]=Module["asm"]["Ag"]).apply(null,arguments)};var _crypto_stream_xor=Module["_crypto_stream_xor"]=function(){return(_crypto_stream_xor=Module["_crypto_stream_xor"]=Module["asm"]["Bg"]).apply(null,arguments)};var _crypto_stream_keygen=Module["_crypto_stream_keygen"]=function(){return(_crypto_stream_keygen=Module["_crypto_stream_keygen"]=Module["asm"]["Cg"]).apply(null,arguments)};var _crypto_stream_salsa20_keybytes=Module["_crypto_stream_salsa20_keybytes"]=function(){return(_crypto_stream_salsa20_keybytes=Module["_crypto_stream_salsa20_keybytes"]=Module["asm"]["Dg"]).apply(null,arguments)};var _crypto_stream_salsa20_noncebytes=Module["_crypto_stream_salsa20_noncebytes"]=function(){return(_crypto_stream_salsa20_noncebytes=Module["_crypto_stream_salsa20_noncebytes"]=Module["asm"]["Eg"]).apply(null,arguments)};var _crypto_stream_salsa20_messagebytes_max=Module["_crypto_stream_salsa20_messagebytes_max"]=function(){return(_crypto_stream_salsa20_messagebytes_max=Module["_crypto_stream_salsa20_messagebytes_max"]=Module["asm"]["Fg"]).apply(null,arguments)};var _crypto_stream_salsa20=Module["_crypto_stream_salsa20"]=function(){return(_crypto_stream_salsa20=Module["_crypto_stream_salsa20"]=Module["asm"]["Gg"]).apply(null,arguments)};var _crypto_stream_salsa20_xor_ic=Module["_crypto_stream_salsa20_xor_ic"]=function(){return(_crypto_stream_salsa20_xor_ic=Module["_crypto_stream_salsa20_xor_ic"]=Module["asm"]["Hg"]).apply(null,arguments)};var _crypto_stream_salsa20_xor=Module["_crypto_stream_salsa20_xor"]=function(){return(_crypto_stream_salsa20_xor=Module["_crypto_stream_salsa20_xor"]=Module["asm"]["Ig"]).apply(null,arguments)};var _crypto_stream_salsa20_keygen=Module["_crypto_stream_salsa20_keygen"]=function(){return(_crypto_stream_salsa20_keygen=Module["_crypto_stream_salsa20_keygen"]=Module["asm"]["Jg"]).apply(null,arguments)};var _crypto_stream_xsalsa20=Module["_crypto_stream_xsalsa20"]=function(){return(_crypto_stream_xsalsa20=Module["_crypto_stream_xsalsa20"]=Module["asm"]["Kg"]).apply(null,arguments)};var _crypto_stream_xsalsa20_xor_ic=Module["_crypto_stream_xsalsa20_xor_ic"]=function(){return(_crypto_stream_xsalsa20_xor_ic=Module["_crypto_stream_xsalsa20_xor_ic"]=Module["asm"]["Lg"]).apply(null,arguments)};var _crypto_stream_xsalsa20_xor=Module["_crypto_stream_xsalsa20_xor"]=function(){return(_crypto_stream_xsalsa20_xor=Module["_crypto_stream_xsalsa20_xor"]=Module["asm"]["Mg"]).apply(null,arguments)};var _crypto_stream_xsalsa20_keybytes=Module["_crypto_stream_xsalsa20_keybytes"]=function(){return(_crypto_stream_xsalsa20_keybytes=Module["_crypto_stream_xsalsa20_keybytes"]=Module["asm"]["Ng"]).apply(null,arguments)};var _crypto_stream_xsalsa20_noncebytes=Module["_crypto_stream_xsalsa20_noncebytes"]=function(){return(_crypto_stream_xsalsa20_noncebytes=Module["_crypto_stream_xsalsa20_noncebytes"]=Module["asm"]["Og"]).apply(null,arguments)};var _crypto_stream_xsalsa20_messagebytes_max=Module["_crypto_stream_xsalsa20_messagebytes_max"]=function(){return(_crypto_stream_xsalsa20_messagebytes_max=Module["_crypto_stream_xsalsa20_messagebytes_max"]=Module["asm"]["Pg"]).apply(null,arguments)};var _crypto_stream_xsalsa20_keygen=Module["_crypto_stream_xsalsa20_keygen"]=function(){return(_crypto_stream_xsalsa20_keygen=Module["_crypto_stream_xsalsa20_keygen"]=Module["asm"]["Qg"]).apply(null,arguments)};var _crypto_verify_16_bytes=Module["_crypto_verify_16_bytes"]=function(){return(_crypto_verify_16_bytes=Module["_crypto_verify_16_bytes"]=Module["asm"]["Rg"]).apply(null,arguments)};var _crypto_verify_32_bytes=Module["_crypto_verify_32_bytes"]=function(){return(_crypto_verify_32_bytes=Module["_crypto_verify_32_bytes"]=Module["asm"]["Sg"]).apply(null,arguments)};var _crypto_verify_64_bytes=Module["_crypto_verify_64_bytes"]=function(){return(_crypto_verify_64_bytes=Module["_crypto_verify_64_bytes"]=Module["asm"]["Tg"]).apply(null,arguments)};var _crypto_verify_16=Module["_crypto_verify_16"]=function(){return(_crypto_verify_16=Module["_crypto_verify_16"]=Module["asm"]["Ug"]).apply(null,arguments)};var _crypto_verify_32=Module["_crypto_verify_32"]=function(){return(_crypto_verify_32=Module["_crypto_verify_32"]=Module["asm"]["Vg"]).apply(null,arguments)};var _crypto_verify_64=Module["_crypto_verify_64"]=function(){return(_crypto_verify_64=Module["_crypto_verify_64"]=Module["asm"]["Wg"]).apply(null,arguments)};var _randombytes_implementation_name=Module["_randombytes_implementation_name"]=function(){return(_randombytes_implementation_name=Module["_randombytes_implementation_name"]=Module["asm"]["Xg"]).apply(null,arguments)};var _randombytes_random=Module["_randombytes_random"]=function(){return(_randombytes_random=Module["_randombytes_random"]=Module["asm"]["Yg"]).apply(null,arguments)};var _randombytes_stir=Module["_randombytes_stir"]=function(){return(_randombytes_stir=Module["_randombytes_stir"]=Module["asm"]["Zg"]).apply(null,arguments)};var _randombytes_uniform=Module["_randombytes_uniform"]=function(){return(_randombytes_uniform=Module["_randombytes_uniform"]=Module["asm"]["_g"]).apply(null,arguments)};var _randombytes_buf=Module["_randombytes_buf"]=function(){return(_randombytes_buf=Module["_randombytes_buf"]=Module["asm"]["$g"]).apply(null,arguments)};var _randombytes_buf_deterministic=Module["_randombytes_buf_deterministic"]=function(){return(_randombytes_buf_deterministic=Module["_randombytes_buf_deterministic"]=Module["asm"]["ah"]).apply(null,arguments)};var _randombytes_seedbytes=Module["_randombytes_seedbytes"]=function(){return(_randombytes_seedbytes=Module["_randombytes_seedbytes"]=Module["asm"]["bh"]).apply(null,arguments)};var _randombytes_close=Module["_randombytes_close"]=function(){return(_randombytes_close=Module["_randombytes_close"]=Module["asm"]["ch"]).apply(null,arguments)};var _randombytes=Module["_randombytes"]=function(){return(_randombytes=Module["_randombytes"]=Module["asm"]["dh"]).apply(null,arguments)};var _sodium_bin2hex=Module["_sodium_bin2hex"]=function(){return(_sodium_bin2hex=Module["_sodium_bin2hex"]=Module["asm"]["eh"]).apply(null,arguments)};var _sodium_hex2bin=Module["_sodium_hex2bin"]=function(){return(_sodium_hex2bin=Module["_sodium_hex2bin"]=Module["asm"]["fh"]).apply(null,arguments)};var _sodium_base64_encoded_len=Module["_sodium_base64_encoded_len"]=function(){return(_sodium_base64_encoded_len=Module["_sodium_base64_encoded_len"]=Module["asm"]["gh"]).apply(null,arguments)};var _sodium_bin2base64=Module["_sodium_bin2base64"]=function(){return(_sodium_bin2base64=Module["_sodium_bin2base64"]=Module["asm"]["hh"]).apply(null,arguments)};var _sodium_base642bin=Module["_sodium_base642bin"]=function(){return(_sodium_base642bin=Module["_sodium_base642bin"]=Module["asm"]["ih"]).apply(null,arguments)};var _sodium_init=Module["_sodium_init"]=function(){return(_sodium_init=Module["_sodium_init"]=Module["asm"]["jh"]).apply(null,arguments)};var _sodium_pad=Module["_sodium_pad"]=function(){return(_sodium_pad=Module["_sodium_pad"]=Module["asm"]["kh"]).apply(null,arguments)};var _sodium_unpad=Module["_sodium_unpad"]=function(){return(_sodium_unpad=Module["_sodium_unpad"]=Module["asm"]["lh"]).apply(null,arguments)};var _sodium_version_string=Module["_sodium_version_string"]=function(){return(_sodium_version_string=Module["_sodium_version_string"]=Module["asm"]["mh"]).apply(null,arguments)};var _sodium_library_version_major=Module["_sodium_library_version_major"]=function(){return(_sodium_library_version_major=Module["_sodium_library_version_major"]=Module["asm"]["nh"]).apply(null,arguments)};var _sodium_library_version_minor=Module["_sodium_library_version_minor"]=function(){return(_sodium_library_version_minor=Module["_sodium_library_version_minor"]=Module["asm"]["oh"]).apply(null,arguments)};var _sodium_library_minimal=Module["_sodium_library_minimal"]=function(){return(_sodium_library_minimal=Module["_sodium_library_minimal"]=Module["asm"]["ph"]).apply(null,arguments)};var _crypto_box_curve25519xchacha20poly1305_seed_keypair=Module["_crypto_box_curve25519xchacha20poly1305_seed_keypair"]=function(){return(_crypto_box_curve25519xchacha20poly1305_seed_keypair=Module["_crypto_box_curve25519xchacha20poly1305_seed_keypair"]=Module["asm"]["qh"]).apply(null,arguments)};var _crypto_box_curve25519xchacha20poly1305_keypair=Module["_crypto_box_curve25519xchacha20poly1305_keypair"]=function(){return(_crypto_box_curve25519xchacha20poly1305_keypair=Module["_crypto_box_curve25519xchacha20poly1305_keypair"]=Module["asm"]["rh"]).apply(null,arguments)};var _crypto_box_curve25519xchacha20poly1305_beforenm=Module["_crypto_box_curve25519xchacha20poly1305_beforenm"]=function(){return(_crypto_box_curve25519xchacha20poly1305_beforenm=Module["_crypto_box_curve25519xchacha20poly1305_beforenm"]=Module["asm"]["sh"]).apply(null,arguments)};var _crypto_box_curve25519xchacha20poly1305_detached_afternm=Module["_crypto_box_curve25519xchacha20poly1305_detached_afternm"]=function(){return(_crypto_box_curve25519xchacha20poly1305_detached_afternm=Module["_crypto_box_curve25519xchacha20poly1305_detached_afternm"]=Module["asm"]["th"]).apply(null,arguments)};var _crypto_box_curve25519xchacha20poly1305_detached=Module["_crypto_box_curve25519xchacha20poly1305_detached"]=function(){return(_crypto_box_curve25519xchacha20poly1305_detached=Module["_crypto_box_curve25519xchacha20poly1305_detached"]=Module["asm"]["uh"]).apply(null,arguments)};var _crypto_box_curve25519xchacha20poly1305_easy_afternm=Module["_crypto_box_curve25519xchacha20poly1305_easy_afternm"]=function(){return(_crypto_box_curve25519xchacha20poly1305_easy_afternm=Module["_crypto_box_curve25519xchacha20poly1305_easy_afternm"]=Module["asm"]["vh"]).apply(null,arguments)};var _crypto_box_curve25519xchacha20poly1305_easy=Module["_crypto_box_curve25519xchacha20poly1305_easy"]=function(){return(_crypto_box_curve25519xchacha20poly1305_easy=Module["_crypto_box_curve25519xchacha20poly1305_easy"]=Module["asm"]["wh"]).apply(null,arguments)};var _crypto_box_curve25519xchacha20poly1305_open_detached_afternm=Module["_crypto_box_curve25519xchacha20poly1305_open_detached_afternm"]=function(){return(_crypto_box_curve25519xchacha20poly1305_open_detached_afternm=Module["_crypto_box_curve25519xchacha20poly1305_open_detached_afternm"]=Module["asm"]["xh"]).apply(null,arguments)};var _crypto_box_curve25519xchacha20poly1305_open_detached=Module["_crypto_box_curve25519xchacha20poly1305_open_detached"]=function(){return(_crypto_box_curve25519xchacha20poly1305_open_detached=Module["_crypto_box_curve25519xchacha20poly1305_open_detached"]=Module["asm"]["yh"]).apply(null,arguments)};var _crypto_box_curve25519xchacha20poly1305_open_easy_afternm=Module["_crypto_box_curve25519xchacha20poly1305_open_easy_afternm"]=function(){return(_crypto_box_curve25519xchacha20poly1305_open_easy_afternm=Module["_crypto_box_curve25519xchacha20poly1305_open_easy_afternm"]=Module["asm"]["zh"]).apply(null,arguments)};var _crypto_box_curve25519xchacha20poly1305_open_easy=Module["_crypto_box_curve25519xchacha20poly1305_open_easy"]=function(){return(_crypto_box_curve25519xchacha20poly1305_open_easy=Module["_crypto_box_curve25519xchacha20poly1305_open_easy"]=Module["asm"]["Ah"]).apply(null,arguments)};var _crypto_box_curve25519xchacha20poly1305_seedbytes=Module["_crypto_box_curve25519xchacha20poly1305_seedbytes"]=function(){return(_crypto_box_curve25519xchacha20poly1305_seedbytes=Module["_crypto_box_curve25519xchacha20poly1305_seedbytes"]=Module["asm"]["Bh"]).apply(null,arguments)};var _crypto_box_curve25519xchacha20poly1305_publickeybytes=Module["_crypto_box_curve25519xchacha20poly1305_publickeybytes"]=function(){return(_crypto_box_curve25519xchacha20poly1305_publickeybytes=Module["_crypto_box_curve25519xchacha20poly1305_publickeybytes"]=Module["asm"]["Ch"]).apply(null,arguments)};var _crypto_box_curve25519xchacha20poly1305_secretkeybytes=Module["_crypto_box_curve25519xchacha20poly1305_secretkeybytes"]=function(){return(_crypto_box_curve25519xchacha20poly1305_secretkeybytes=Module["_crypto_box_curve25519xchacha20poly1305_secretkeybytes"]=Module["asm"]["Dh"]).apply(null,arguments)};var _crypto_box_curve25519xchacha20poly1305_beforenmbytes=Module["_crypto_box_curve25519xchacha20poly1305_beforenmbytes"]=function(){return(_crypto_box_curve25519xchacha20poly1305_beforenmbytes=Module["_crypto_box_curve25519xchacha20poly1305_beforenmbytes"]=Module["asm"]["Eh"]).apply(null,arguments)};var _crypto_box_curve25519xchacha20poly1305_noncebytes=Module["_crypto_box_curve25519xchacha20poly1305_noncebytes"]=function(){return(_crypto_box_curve25519xchacha20poly1305_noncebytes=Module["_crypto_box_curve25519xchacha20poly1305_noncebytes"]=Module["asm"]["Fh"]).apply(null,arguments)};var _crypto_box_curve25519xchacha20poly1305_macbytes=Module["_crypto_box_curve25519xchacha20poly1305_macbytes"]=function(){return(_crypto_box_curve25519xchacha20poly1305_macbytes=Module["_crypto_box_curve25519xchacha20poly1305_macbytes"]=Module["asm"]["Gh"]).apply(null,arguments)};var _crypto_box_curve25519xchacha20poly1305_messagebytes_max=Module["_crypto_box_curve25519xchacha20poly1305_messagebytes_max"]=function(){return(_crypto_box_curve25519xchacha20poly1305_messagebytes_max=Module["_crypto_box_curve25519xchacha20poly1305_messagebytes_max"]=Module["asm"]["Hh"]).apply(null,arguments)};var _crypto_box_curve25519xchacha20poly1305_seal=Module["_crypto_box_curve25519xchacha20poly1305_seal"]=function(){return(_crypto_box_curve25519xchacha20poly1305_seal=Module["_crypto_box_curve25519xchacha20poly1305_seal"]=Module["asm"]["Ih"]).apply(null,arguments)};var _crypto_box_curve25519xchacha20poly1305_seal_open=Module["_crypto_box_curve25519xchacha20poly1305_seal_open"]=function(){return(_crypto_box_curve25519xchacha20poly1305_seal_open=Module["_crypto_box_curve25519xchacha20poly1305_seal_open"]=Module["asm"]["Jh"]).apply(null,arguments)};var _crypto_box_curve25519xchacha20poly1305_sealbytes=Module["_crypto_box_curve25519xchacha20poly1305_sealbytes"]=function(){return(_crypto_box_curve25519xchacha20poly1305_sealbytes=Module["_crypto_box_curve25519xchacha20poly1305_sealbytes"]=Module["asm"]["Kh"]).apply(null,arguments)};var _crypto_core_ed25519_is_valid_point=Module["_crypto_core_ed25519_is_valid_point"]=function(){return(_crypto_core_ed25519_is_valid_point=Module["_crypto_core_ed25519_is_valid_point"]=Module["asm"]["Lh"]).apply(null,arguments)};var _crypto_core_ed25519_add=Module["_crypto_core_ed25519_add"]=function(){return(_crypto_core_ed25519_add=Module["_crypto_core_ed25519_add"]=Module["asm"]["Mh"]).apply(null,arguments)};var _crypto_core_ed25519_sub=Module["_crypto_core_ed25519_sub"]=function(){return(_crypto_core_ed25519_sub=Module["_crypto_core_ed25519_sub"]=Module["asm"]["Nh"]).apply(null,arguments)};var _crypto_core_ed25519_from_uniform=Module["_crypto_core_ed25519_from_uniform"]=function(){return(_crypto_core_ed25519_from_uniform=Module["_crypto_core_ed25519_from_uniform"]=Module["asm"]["Oh"]).apply(null,arguments)};var _crypto_core_ed25519_from_hash=Module["_crypto_core_ed25519_from_hash"]=function(){return(_crypto_core_ed25519_from_hash=Module["_crypto_core_ed25519_from_hash"]=Module["asm"]["Ph"]).apply(null,arguments)};var _crypto_core_ed25519_random=Module["_crypto_core_ed25519_random"]=function(){return(_crypto_core_ed25519_random=Module["_crypto_core_ed25519_random"]=Module["asm"]["Qh"]).apply(null,arguments)};var _crypto_core_ed25519_scalar_random=Module["_crypto_core_ed25519_scalar_random"]=function(){return(_crypto_core_ed25519_scalar_random=Module["_crypto_core_ed25519_scalar_random"]=Module["asm"]["Rh"]).apply(null,arguments)};var _crypto_core_ed25519_scalar_invert=Module["_crypto_core_ed25519_scalar_invert"]=function(){return(_crypto_core_ed25519_scalar_invert=Module["_crypto_core_ed25519_scalar_invert"]=Module["asm"]["Sh"]).apply(null,arguments)};var _crypto_core_ed25519_scalar_negate=Module["_crypto_core_ed25519_scalar_negate"]=function(){return(_crypto_core_ed25519_scalar_negate=Module["_crypto_core_ed25519_scalar_negate"]=Module["asm"]["Th"]).apply(null,arguments)};var _crypto_core_ed25519_scalar_complement=Module["_crypto_core_ed25519_scalar_complement"]=function(){return(_crypto_core_ed25519_scalar_complement=Module["_crypto_core_ed25519_scalar_complement"]=Module["asm"]["Uh"]).apply(null,arguments)};var _crypto_core_ed25519_scalar_add=Module["_crypto_core_ed25519_scalar_add"]=function(){return(_crypto_core_ed25519_scalar_add=Module["_crypto_core_ed25519_scalar_add"]=Module["asm"]["Vh"]).apply(null,arguments)};var _crypto_core_ed25519_scalar_reduce=Module["_crypto_core_ed25519_scalar_reduce"]=function(){return(_crypto_core_ed25519_scalar_reduce=Module["_crypto_core_ed25519_scalar_reduce"]=Module["asm"]["Wh"]).apply(null,arguments)};var _crypto_core_ed25519_scalar_sub=Module["_crypto_core_ed25519_scalar_sub"]=function(){return(_crypto_core_ed25519_scalar_sub=Module["_crypto_core_ed25519_scalar_sub"]=Module["asm"]["Xh"]).apply(null,arguments)};var _crypto_core_ed25519_scalar_mul=Module["_crypto_core_ed25519_scalar_mul"]=function(){return(_crypto_core_ed25519_scalar_mul=Module["_crypto_core_ed25519_scalar_mul"]=Module["asm"]["Yh"]).apply(null,arguments)};var _crypto_core_ed25519_bytes=Module["_crypto_core_ed25519_bytes"]=function(){return(_crypto_core_ed25519_bytes=Module["_crypto_core_ed25519_bytes"]=Module["asm"]["Zh"]).apply(null,arguments)};var _crypto_core_ed25519_nonreducedscalarbytes=Module["_crypto_core_ed25519_nonreducedscalarbytes"]=function(){return(_crypto_core_ed25519_nonreducedscalarbytes=Module["_crypto_core_ed25519_nonreducedscalarbytes"]=Module["asm"]["_h"]).apply(null,arguments)};var _crypto_core_ed25519_uniformbytes=Module["_crypto_core_ed25519_uniformbytes"]=function(){return(_crypto_core_ed25519_uniformbytes=Module["_crypto_core_ed25519_uniformbytes"]=Module["asm"]["$h"]).apply(null,arguments)};var _crypto_core_ed25519_hashbytes=Module["_crypto_core_ed25519_hashbytes"]=function(){return(_crypto_core_ed25519_hashbytes=Module["_crypto_core_ed25519_hashbytes"]=Module["asm"]["ai"]).apply(null,arguments)};var _crypto_core_ed25519_scalarbytes=Module["_crypto_core_ed25519_scalarbytes"]=function(){return(_crypto_core_ed25519_scalarbytes=Module["_crypto_core_ed25519_scalarbytes"]=Module["asm"]["bi"]).apply(null,arguments)};var _crypto_core_ristretto255_is_valid_point=Module["_crypto_core_ristretto255_is_valid_point"]=function(){return(_crypto_core_ristretto255_is_valid_point=Module["_crypto_core_ristretto255_is_valid_point"]=Module["asm"]["ci"]).apply(null,arguments)};var _crypto_core_ristretto255_add=Module["_crypto_core_ristretto255_add"]=function(){return(_crypto_core_ristretto255_add=Module["_crypto_core_ristretto255_add"]=Module["asm"]["di"]).apply(null,arguments)};var _crypto_core_ristretto255_sub=Module["_crypto_core_ristretto255_sub"]=function(){return(_crypto_core_ristretto255_sub=Module["_crypto_core_ristretto255_sub"]=Module["asm"]["ei"]).apply(null,arguments)};var _crypto_core_ristretto255_from_hash=Module["_crypto_core_ristretto255_from_hash"]=function(){return(_crypto_core_ristretto255_from_hash=Module["_crypto_core_ristretto255_from_hash"]=Module["asm"]["fi"]).apply(null,arguments)};var _crypto_core_ristretto255_random=Module["_crypto_core_ristretto255_random"]=function(){return(_crypto_core_ristretto255_random=Module["_crypto_core_ristretto255_random"]=Module["asm"]["gi"]).apply(null,arguments)};var _crypto_core_ristretto255_scalar_random=Module["_crypto_core_ristretto255_scalar_random"]=function(){return(_crypto_core_ristretto255_scalar_random=Module["_crypto_core_ristretto255_scalar_random"]=Module["asm"]["hi"]).apply(null,arguments)};var _crypto_core_ristretto255_scalar_invert=Module["_crypto_core_ristretto255_scalar_invert"]=function(){return(_crypto_core_ristretto255_scalar_invert=Module["_crypto_core_ristretto255_scalar_invert"]=Module["asm"]["ii"]).apply(null,arguments)};var _crypto_core_ristretto255_scalar_negate=Module["_crypto_core_ristretto255_scalar_negate"]=function(){return(_crypto_core_ristretto255_scalar_negate=Module["_crypto_core_ristretto255_scalar_negate"]=Module["asm"]["ji"]).apply(null,arguments)};var _crypto_core_ristretto255_scalar_complement=Module["_crypto_core_ristretto255_scalar_complement"]=function(){return(_crypto_core_ristretto255_scalar_complement=Module["_crypto_core_ristretto255_scalar_complement"]=Module["asm"]["ki"]).apply(null,arguments)};var _crypto_core_ristretto255_scalar_add=Module["_crypto_core_ristretto255_scalar_add"]=function(){return(_crypto_core_ristretto255_scalar_add=Module["_crypto_core_ristretto255_scalar_add"]=Module["asm"]["li"]).apply(null,arguments)};var _crypto_core_ristretto255_scalar_sub=Module["_crypto_core_ristretto255_scalar_sub"]=function(){return(_crypto_core_ristretto255_scalar_sub=Module["_crypto_core_ristretto255_scalar_sub"]=Module["asm"]["mi"]).apply(null,arguments)};var _crypto_core_ristretto255_scalar_mul=Module["_crypto_core_ristretto255_scalar_mul"]=function(){return(_crypto_core_ristretto255_scalar_mul=Module["_crypto_core_ristretto255_scalar_mul"]=Module["asm"]["ni"]).apply(null,arguments)};var _crypto_core_ristretto255_scalar_reduce=Module["_crypto_core_ristretto255_scalar_reduce"]=function(){return(_crypto_core_ristretto255_scalar_reduce=Module["_crypto_core_ristretto255_scalar_reduce"]=Module["asm"]["oi"]).apply(null,arguments)};var _crypto_core_ristretto255_bytes=Module["_crypto_core_ristretto255_bytes"]=function(){return(_crypto_core_ristretto255_bytes=Module["_crypto_core_ristretto255_bytes"]=Module["asm"]["pi"]).apply(null,arguments)};var _crypto_core_ristretto255_nonreducedscalarbytes=Module["_crypto_core_ristretto255_nonreducedscalarbytes"]=function(){return(_crypto_core_ristretto255_nonreducedscalarbytes=Module["_crypto_core_ristretto255_nonreducedscalarbytes"]=Module["asm"]["qi"]).apply(null,arguments)};var _crypto_core_ristretto255_hashbytes=Module["_crypto_core_ristretto255_hashbytes"]=function(){return(_crypto_core_ristretto255_hashbytes=Module["_crypto_core_ristretto255_hashbytes"]=Module["asm"]["ri"]).apply(null,arguments)};var _crypto_core_ristretto255_scalarbytes=Module["_crypto_core_ristretto255_scalarbytes"]=function(){return(_crypto_core_ristretto255_scalarbytes=Module["_crypto_core_ristretto255_scalarbytes"]=Module["asm"]["si"]).apply(null,arguments)};var _crypto_pwhash_scryptsalsa208sha256_ll=Module["_crypto_pwhash_scryptsalsa208sha256_ll"]=function(){return(_crypto_pwhash_scryptsalsa208sha256_ll=Module["_crypto_pwhash_scryptsalsa208sha256_ll"]=Module["asm"]["ti"]).apply(null,arguments)};var _crypto_pwhash_scryptsalsa208sha256_bytes_min=Module["_crypto_pwhash_scryptsalsa208sha256_bytes_min"]=function(){return(_crypto_pwhash_scryptsalsa208sha256_bytes_min=Module["_crypto_pwhash_scryptsalsa208sha256_bytes_min"]=Module["asm"]["ui"]).apply(null,arguments)};var _crypto_pwhash_scryptsalsa208sha256_bytes_max=Module["_crypto_pwhash_scryptsalsa208sha256_bytes_max"]=function(){return(_crypto_pwhash_scryptsalsa208sha256_bytes_max=Module["_crypto_pwhash_scryptsalsa208sha256_bytes_max"]=Module["asm"]["vi"]).apply(null,arguments)};var _crypto_pwhash_scryptsalsa208sha256_passwd_min=Module["_crypto_pwhash_scryptsalsa208sha256_passwd_min"]=function(){return(_crypto_pwhash_scryptsalsa208sha256_passwd_min=Module["_crypto_pwhash_scryptsalsa208sha256_passwd_min"]=Module["asm"]["wi"]).apply(null,arguments)};var _crypto_pwhash_scryptsalsa208sha256_passwd_max=Module["_crypto_pwhash_scryptsalsa208sha256_passwd_max"]=function(){return(_crypto_pwhash_scryptsalsa208sha256_passwd_max=Module["_crypto_pwhash_scryptsalsa208sha256_passwd_max"]=Module["asm"]["xi"]).apply(null,arguments)};var _crypto_pwhash_scryptsalsa208sha256_saltbytes=Module["_crypto_pwhash_scryptsalsa208sha256_saltbytes"]=function(){return(_crypto_pwhash_scryptsalsa208sha256_saltbytes=Module["_crypto_pwhash_scryptsalsa208sha256_saltbytes"]=Module["asm"]["yi"]).apply(null,arguments)};var _crypto_pwhash_scryptsalsa208sha256_strbytes=Module["_crypto_pwhash_scryptsalsa208sha256_strbytes"]=function(){return(_crypto_pwhash_scryptsalsa208sha256_strbytes=Module["_crypto_pwhash_scryptsalsa208sha256_strbytes"]=Module["asm"]["zi"]).apply(null,arguments)};var _crypto_pwhash_scryptsalsa208sha256_strprefix=Module["_crypto_pwhash_scryptsalsa208sha256_strprefix"]=function(){return(_crypto_pwhash_scryptsalsa208sha256_strprefix=Module["_crypto_pwhash_scryptsalsa208sha256_strprefix"]=Module["asm"]["Ai"]).apply(null,arguments)};var _crypto_pwhash_scryptsalsa208sha256_opslimit_min=Module["_crypto_pwhash_scryptsalsa208sha256_opslimit_min"]=function(){return(_crypto_pwhash_scryptsalsa208sha256_opslimit_min=Module["_crypto_pwhash_scryptsalsa208sha256_opslimit_min"]=Module["asm"]["Bi"]).apply(null,arguments)};var _crypto_pwhash_scryptsalsa208sha256_opslimit_max=Module["_crypto_pwhash_scryptsalsa208sha256_opslimit_max"]=function(){return(_crypto_pwhash_scryptsalsa208sha256_opslimit_max=Module["_crypto_pwhash_scryptsalsa208sha256_opslimit_max"]=Module["asm"]["Ci"]).apply(null,arguments)};var _crypto_pwhash_scryptsalsa208sha256_memlimit_min=Module["_crypto_pwhash_scryptsalsa208sha256_memlimit_min"]=function(){return(_crypto_pwhash_scryptsalsa208sha256_memlimit_min=Module["_crypto_pwhash_scryptsalsa208sha256_memlimit_min"]=Module["asm"]["Di"]).apply(null,arguments)};var _crypto_pwhash_scryptsalsa208sha256_memlimit_max=Module["_crypto_pwhash_scryptsalsa208sha256_memlimit_max"]=function(){return(_crypto_pwhash_scryptsalsa208sha256_memlimit_max=Module["_crypto_pwhash_scryptsalsa208sha256_memlimit_max"]=Module["asm"]["Ei"]).apply(null,arguments)};var _crypto_pwhash_scryptsalsa208sha256_opslimit_interactive=Module["_crypto_pwhash_scryptsalsa208sha256_opslimit_interactive"]=function(){return(_crypto_pwhash_scryptsalsa208sha256_opslimit_interactive=Module["_crypto_pwhash_scryptsalsa208sha256_opslimit_interactive"]=Module["asm"]["Fi"]).apply(null,arguments)};var _crypto_pwhash_scryptsalsa208sha256_memlimit_interactive=Module["_crypto_pwhash_scryptsalsa208sha256_memlimit_interactive"]=function(){return(_crypto_pwhash_scryptsalsa208sha256_memlimit_interactive=Module["_crypto_pwhash_scryptsalsa208sha256_memlimit_interactive"]=Module["asm"]["Gi"]).apply(null,arguments)};var _crypto_pwhash_scryptsalsa208sha256_opslimit_sensitive=Module["_crypto_pwhash_scryptsalsa208sha256_opslimit_sensitive"]=function(){return(_crypto_pwhash_scryptsalsa208sha256_opslimit_sensitive=Module["_crypto_pwhash_scryptsalsa208sha256_opslimit_sensitive"]=Module["asm"]["Hi"]).apply(null,arguments)};var _crypto_pwhash_scryptsalsa208sha256_memlimit_sensitive=Module["_crypto_pwhash_scryptsalsa208sha256_memlimit_sensitive"]=function(){return(_crypto_pwhash_scryptsalsa208sha256_memlimit_sensitive=Module["_crypto_pwhash_scryptsalsa208sha256_memlimit_sensitive"]=Module["asm"]["Ii"]).apply(null,arguments)};var _crypto_pwhash_scryptsalsa208sha256=Module["_crypto_pwhash_scryptsalsa208sha256"]=function(){return(_crypto_pwhash_scryptsalsa208sha256=Module["_crypto_pwhash_scryptsalsa208sha256"]=Module["asm"]["Ji"]).apply(null,arguments)};var _crypto_pwhash_scryptsalsa208sha256_str=Module["_crypto_pwhash_scryptsalsa208sha256_str"]=function(){return(_crypto_pwhash_scryptsalsa208sha256_str=Module["_crypto_pwhash_scryptsalsa208sha256_str"]=Module["asm"]["Ki"]).apply(null,arguments)};var _crypto_pwhash_scryptsalsa208sha256_str_verify=Module["_crypto_pwhash_scryptsalsa208sha256_str_verify"]=function(){return(_crypto_pwhash_scryptsalsa208sha256_str_verify=Module["_crypto_pwhash_scryptsalsa208sha256_str_verify"]=Module["asm"]["Li"]).apply(null,arguments)};var _crypto_pwhash_scryptsalsa208sha256_str_needs_rehash=Module["_crypto_pwhash_scryptsalsa208sha256_str_needs_rehash"]=function(){return(_crypto_pwhash_scryptsalsa208sha256_str_needs_rehash=Module["_crypto_pwhash_scryptsalsa208sha256_str_needs_rehash"]=Module["asm"]["Mi"]).apply(null,arguments)};var _crypto_scalarmult_ed25519=Module["_crypto_scalarmult_ed25519"]=function(){return(_crypto_scalarmult_ed25519=Module["_crypto_scalarmult_ed25519"]=Module["asm"]["Ni"]).apply(null,arguments)};var _crypto_scalarmult_ed25519_noclamp=Module["_crypto_scalarmult_ed25519_noclamp"]=function(){return(_crypto_scalarmult_ed25519_noclamp=Module["_crypto_scalarmult_ed25519_noclamp"]=Module["asm"]["Oi"]).apply(null,arguments)};var _crypto_scalarmult_ed25519_base=Module["_crypto_scalarmult_ed25519_base"]=function(){return(_crypto_scalarmult_ed25519_base=Module["_crypto_scalarmult_ed25519_base"]=Module["asm"]["Pi"]).apply(null,arguments)};var _crypto_scalarmult_ed25519_base_noclamp=Module["_crypto_scalarmult_ed25519_base_noclamp"]=function(){return(_crypto_scalarmult_ed25519_base_noclamp=Module["_crypto_scalarmult_ed25519_base_noclamp"]=Module["asm"]["Qi"]).apply(null,arguments)};var _crypto_scalarmult_ed25519_bytes=Module["_crypto_scalarmult_ed25519_bytes"]=function(){return(_crypto_scalarmult_ed25519_bytes=Module["_crypto_scalarmult_ed25519_bytes"]=Module["asm"]["Ri"]).apply(null,arguments)};var _crypto_scalarmult_ed25519_scalarbytes=Module["_crypto_scalarmult_ed25519_scalarbytes"]=function(){return(_crypto_scalarmult_ed25519_scalarbytes=Module["_crypto_scalarmult_ed25519_scalarbytes"]=Module["asm"]["Si"]).apply(null,arguments)};var _crypto_scalarmult_ristretto255=Module["_crypto_scalarmult_ristretto255"]=function(){return(_crypto_scalarmult_ristretto255=Module["_crypto_scalarmult_ristretto255"]=Module["asm"]["Ti"]).apply(null,arguments)};var _crypto_scalarmult_ristretto255_base=Module["_crypto_scalarmult_ristretto255_base"]=function(){return(_crypto_scalarmult_ristretto255_base=Module["_crypto_scalarmult_ristretto255_base"]=Module["asm"]["Ui"]).apply(null,arguments)};var _crypto_scalarmult_ristretto255_bytes=Module["_crypto_scalarmult_ristretto255_bytes"]=function(){return(_crypto_scalarmult_ristretto255_bytes=Module["_crypto_scalarmult_ristretto255_bytes"]=Module["asm"]["Vi"]).apply(null,arguments)};var _crypto_scalarmult_ristretto255_scalarbytes=Module["_crypto_scalarmult_ristretto255_scalarbytes"]=function(){return(_crypto_scalarmult_ristretto255_scalarbytes=Module["_crypto_scalarmult_ristretto255_scalarbytes"]=Module["asm"]["Wi"]).apply(null,arguments)};var _crypto_secretbox_xchacha20poly1305_detached=Module["_crypto_secretbox_xchacha20poly1305_detached"]=function(){return(_crypto_secretbox_xchacha20poly1305_detached=Module["_crypto_secretbox_xchacha20poly1305_detached"]=Module["asm"]["Xi"]).apply(null,arguments)};var _crypto_secretbox_xchacha20poly1305_easy=Module["_crypto_secretbox_xchacha20poly1305_easy"]=function(){return(_crypto_secretbox_xchacha20poly1305_easy=Module["_crypto_secretbox_xchacha20poly1305_easy"]=Module["asm"]["Yi"]).apply(null,arguments)};var _crypto_secretbox_xchacha20poly1305_open_detached=Module["_crypto_secretbox_xchacha20poly1305_open_detached"]=function(){return(_crypto_secretbox_xchacha20poly1305_open_detached=Module["_crypto_secretbox_xchacha20poly1305_open_detached"]=Module["asm"]["Zi"]).apply(null,arguments)};var _crypto_secretbox_xchacha20poly1305_open_easy=Module["_crypto_secretbox_xchacha20poly1305_open_easy"]=function(){return(_crypto_secretbox_xchacha20poly1305_open_easy=Module["_crypto_secretbox_xchacha20poly1305_open_easy"]=Module["asm"]["_i"]).apply(null,arguments)};var _crypto_secretbox_xchacha20poly1305_keybytes=Module["_crypto_secretbox_xchacha20poly1305_keybytes"]=function(){return(_crypto_secretbox_xchacha20poly1305_keybytes=Module["_crypto_secretbox_xchacha20poly1305_keybytes"]=Module["asm"]["$i"]).apply(null,arguments)};var _crypto_secretbox_xchacha20poly1305_noncebytes=Module["_crypto_secretbox_xchacha20poly1305_noncebytes"]=function(){return(_crypto_secretbox_xchacha20poly1305_noncebytes=Module["_crypto_secretbox_xchacha20poly1305_noncebytes"]=Module["asm"]["aj"]).apply(null,arguments)};var _crypto_secretbox_xchacha20poly1305_macbytes=Module["_crypto_secretbox_xchacha20poly1305_macbytes"]=function(){return(_crypto_secretbox_xchacha20poly1305_macbytes=Module["_crypto_secretbox_xchacha20poly1305_macbytes"]=Module["asm"]["bj"]).apply(null,arguments)};var _crypto_secretbox_xchacha20poly1305_messagebytes_max=Module["_crypto_secretbox_xchacha20poly1305_messagebytes_max"]=function(){return(_crypto_secretbox_xchacha20poly1305_messagebytes_max=Module["_crypto_secretbox_xchacha20poly1305_messagebytes_max"]=Module["asm"]["cj"]).apply(null,arguments)};var _crypto_shorthash_siphashx24_bytes=Module["_crypto_shorthash_siphashx24_bytes"]=function(){return(_crypto_shorthash_siphashx24_bytes=Module["_crypto_shorthash_siphashx24_bytes"]=Module["asm"]["dj"]).apply(null,arguments)};var _crypto_shorthash_siphashx24_keybytes=Module["_crypto_shorthash_siphashx24_keybytes"]=function(){return(_crypto_shorthash_siphashx24_keybytes=Module["_crypto_shorthash_siphashx24_keybytes"]=Module["asm"]["ej"]).apply(null,arguments)};var _crypto_shorthash_siphashx24=Module["_crypto_shorthash_siphashx24"]=function(){return(_crypto_shorthash_siphashx24=Module["_crypto_shorthash_siphashx24"]=Module["asm"]["fj"]).apply(null,arguments)};var _crypto_stream_salsa2012=Module["_crypto_stream_salsa2012"]=function(){return(_crypto_stream_salsa2012=Module["_crypto_stream_salsa2012"]=Module["asm"]["gj"]).apply(null,arguments)};var _crypto_stream_salsa2012_xor=Module["_crypto_stream_salsa2012_xor"]=function(){return(_crypto_stream_salsa2012_xor=Module["_crypto_stream_salsa2012_xor"]=Module["asm"]["hj"]).apply(null,arguments)};var _crypto_stream_salsa2012_keybytes=Module["_crypto_stream_salsa2012_keybytes"]=function(){return(_crypto_stream_salsa2012_keybytes=Module["_crypto_stream_salsa2012_keybytes"]=Module["asm"]["ij"]).apply(null,arguments)};var _crypto_stream_salsa2012_noncebytes=Module["_crypto_stream_salsa2012_noncebytes"]=function(){return(_crypto_stream_salsa2012_noncebytes=Module["_crypto_stream_salsa2012_noncebytes"]=Module["asm"]["jj"]).apply(null,arguments)};var _crypto_stream_salsa2012_messagebytes_max=Module["_crypto_stream_salsa2012_messagebytes_max"]=function(){return(_crypto_stream_salsa2012_messagebytes_max=Module["_crypto_stream_salsa2012_messagebytes_max"]=Module["asm"]["kj"]).apply(null,arguments)};var _crypto_stream_salsa2012_keygen=Module["_crypto_stream_salsa2012_keygen"]=function(){return(_crypto_stream_salsa2012_keygen=Module["_crypto_stream_salsa2012_keygen"]=Module["asm"]["lj"]).apply(null,arguments)};var _crypto_stream_salsa208=Module["_crypto_stream_salsa208"]=function(){return(_crypto_stream_salsa208=Module["_crypto_stream_salsa208"]=Module["asm"]["mj"]).apply(null,arguments)};var _crypto_stream_salsa208_xor=Module["_crypto_stream_salsa208_xor"]=function(){return(_crypto_stream_salsa208_xor=Module["_crypto_stream_salsa208_xor"]=Module["asm"]["nj"]).apply(null,arguments)};var _crypto_stream_salsa208_keybytes=Module["_crypto_stream_salsa208_keybytes"]=function(){return(_crypto_stream_salsa208_keybytes=Module["_crypto_stream_salsa208_keybytes"]=Module["asm"]["oj"]).apply(null,arguments)};var _crypto_stream_salsa208_noncebytes=Module["_crypto_stream_salsa208_noncebytes"]=function(){return(_crypto_stream_salsa208_noncebytes=Module["_crypto_stream_salsa208_noncebytes"]=Module["asm"]["pj"]).apply(null,arguments)};var _crypto_stream_salsa208_messagebytes_max=Module["_crypto_stream_salsa208_messagebytes_max"]=function(){return(_crypto_stream_salsa208_messagebytes_max=Module["_crypto_stream_salsa208_messagebytes_max"]=Module["asm"]["qj"]).apply(null,arguments)};var _crypto_stream_salsa208_keygen=Module["_crypto_stream_salsa208_keygen"]=function(){return(_crypto_stream_salsa208_keygen=Module["_crypto_stream_salsa208_keygen"]=Module["asm"]["rj"]).apply(null,arguments)};var _crypto_stream_xchacha20_keybytes=Module["_crypto_stream_xchacha20_keybytes"]=function(){return(_crypto_stream_xchacha20_keybytes=Module["_crypto_stream_xchacha20_keybytes"]=Module["asm"]["sj"]).apply(null,arguments)};var _crypto_stream_xchacha20_noncebytes=Module["_crypto_stream_xchacha20_noncebytes"]=function(){return(_crypto_stream_xchacha20_noncebytes=Module["_crypto_stream_xchacha20_noncebytes"]=Module["asm"]["tj"]).apply(null,arguments)};var _crypto_stream_xchacha20_messagebytes_max=Module["_crypto_stream_xchacha20_messagebytes_max"]=function(){return(_crypto_stream_xchacha20_messagebytes_max=Module["_crypto_stream_xchacha20_messagebytes_max"]=Module["asm"]["uj"]).apply(null,arguments)};var _crypto_stream_xchacha20=Module["_crypto_stream_xchacha20"]=function(){return(_crypto_stream_xchacha20=Module["_crypto_stream_xchacha20"]=Module["asm"]["vj"]).apply(null,arguments)};var _crypto_stream_xchacha20_xor_ic=Module["_crypto_stream_xchacha20_xor_ic"]=function(){return(_crypto_stream_xchacha20_xor_ic=Module["_crypto_stream_xchacha20_xor_ic"]=Module["asm"]["wj"]).apply(null,arguments)};var _crypto_stream_xchacha20_xor=Module["_crypto_stream_xchacha20_xor"]=function(){return(_crypto_stream_xchacha20_xor=Module["_crypto_stream_xchacha20_xor"]=Module["asm"]["xj"]).apply(null,arguments)};var _crypto_stream_xchacha20_keygen=Module["_crypto_stream_xchacha20_keygen"]=function(){return(_crypto_stream_xchacha20_keygen=Module["_crypto_stream_xchacha20_keygen"]=Module["asm"]["yj"]).apply(null,arguments)};var _malloc=Module["_malloc"]=function(){return(_malloc=Module["_malloc"]=Module["asm"]["zj"]).apply(null,arguments)};var _free=Module["_free"]=function(){return(_free=Module["_free"]=Module["asm"]["Aj"]).apply(null,arguments)};Module["setValue"]=setValue;Module["getValue"]=getValue;Module["UTF8ToString"]=UTF8ToString;var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module["calledRun"]=true;if(ABORT)return;initRuntime();if(Module["onRuntimeInitialized"])Module["onRuntimeInitialized"]();postRun()}if(Module["setStatus"]){Module["setStatus"]("Running...");setTimeout(function(){setTimeout(function(){Module["setStatus"]("")},1);doRun()},1)}else{doRun()}}Module["run"]=run;if(Module["preInit"]){if(typeof Module["preInit"]=="function")Module["preInit"]=[Module["preInit"]];while(Module["preInit"].length>0){Module["preInit"].pop()()}}run();
        });
      };
      var Module=typeof Module!=="undefined"?Module:{};var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}var arguments_=[];var thisProgram="./this.program";var quit_=function(status,toThrow){throw toThrow};var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;ENVIRONMENT_IS_WEB=typeof window==="object";ENVIRONMENT_IS_WORKER=typeof importScripts==="function";ENVIRONMENT_IS_NODE=typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string";ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;var scriptDirectory="";function locateFile(path){if(Module["locateFile"]){return Module["locateFile"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;var nodeFS;var nodePath;if(ENVIRONMENT_IS_NODE){if(ENVIRONMENT_IS_WORKER){scriptDirectory=require("path").dirname(scriptDirectory)+"/"}else{scriptDirectory=__dirname+"/"}read_=function shell_read(filename,binary){var ret=tryParseAsDataURI(filename);if(ret){return binary?ret:ret.toString()}if(!nodeFS)nodeFS=require("fs");if(!nodePath)nodePath=require("path");filename=nodePath["normalize"](filename);return nodeFS["readFileSync"](filename,binary?null:"utf8")};readBinary=function readBinary(filename){var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};if(process["argv"].length>1){thisProgram=process["argv"][1].replace(/\\/g,"/")}arguments_=process["argv"].slice(2);if(typeof module!=="undefined"){module["exports"]=Module}quit_=function(status){process["exit"](status)};Module["inspect"]=function(){return"[Emscripten Module object]"}}else if(ENVIRONMENT_IS_SHELL){if(typeof read!="undefined"){read_=function shell_read(f){var data=tryParseAsDataURI(f);if(data){return intArrayToString(data)}return read(f)}}readBinary=function readBinary(f){var data;data=tryParseAsDataURI(f);if(data){return data}if(typeof readbuffer==="function"){return new Uint8Array(readbuffer(f))}data=read(f,"binary");assert(typeof data==="object");return data};if(typeof scriptArgs!="undefined"){arguments_=scriptArgs}else if(typeof arguments!="undefined"){arguments_=arguments}if(typeof quit==="function"){quit_=function(status){quit(status)}}if(typeof print!=="undefined"){if(typeof console==="undefined")console={};console.log=print;console.warn=console.error=typeof printErr!=="undefined"?printErr:print}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=="undefined"&&document.currentScript){scriptDirectory=document.currentScript.src}if(scriptDirectory.indexOf("blob:")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.lastIndexOf("/")+1)}else{scriptDirectory=""}{read_=function(url){try{var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.send(null);return xhr.responseText}catch(err){var data=tryParseAsDataURI(url);if(data){return intArrayToString(data)}throw err}};if(ENVIRONMENT_IS_WORKER){readBinary=function(url){try{var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.responseType="arraybuffer";xhr.send(null);return new Uint8Array(xhr.response)}catch(err){var data=tryParseAsDataURI(url);if(data){return data}throw err}}}readAsync=function(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open("GET",url,true);xhr.responseType="arraybuffer";xhr.onload=function(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}var data=tryParseAsDataURI(url);if(data){onload(data.buffer);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=function(title){document.title=title}}else{}var out=Module["print"]||console.log.bind(console);var err=Module["printErr"]||console.warn.bind(console);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=null;if(Module["arguments"])arguments_=Module["arguments"];if(Module["thisProgram"])thisProgram=Module["thisProgram"];if(Module["quit"])quit_=Module["quit"];var wasmBinary;if(Module["wasmBinary"])wasmBinary=Module["wasmBinary"];var noExitRuntime=Module["noExitRuntime"]||true;if(typeof WebAssembly!=="object"){abort("no native wasm support detected")}function setValue(ptr,value,type,noSafe){type=type||"i8";if(type.charAt(type.length-1)==="*")type="i32";switch(type){case"i1":HEAP8[ptr>>0]=value;break;case"i8":HEAP8[ptr>>0]=value;break;case"i16":HEAP16[ptr>>1]=value;break;case"i32":HEAP32[ptr>>2]=value;break;case"i64":tempI64=[value>>>0,(tempDouble=value,+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[ptr>>2]=tempI64[0],HEAP32[ptr+4>>2]=tempI64[1];break;case"float":HEAPF32[ptr>>2]=value;break;case"double":HEAPF64[ptr>>3]=value;break;default:abort("invalid type for setValue: "+type)}}function getValue(ptr,type,noSafe){type=type||"i8";if(type.charAt(type.length-1)==="*")type="i32";switch(type){case"i1":return HEAP8[ptr>>0];case"i8":return HEAP8[ptr>>0];case"i16":return HEAP16[ptr>>1];case"i32":return HEAP32[ptr>>2];case"i64":return HEAP32[ptr>>2];case"float":return HEAPF32[ptr>>2];case"double":return HEAPF64[ptr>>3];default:abort("invalid type for getValue: "+type)}return null}var wasmMemory;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort("Assertion failed: "+text)}}var UTF8Decoder=typeof TextDecoder!=="undefined"?new TextDecoder("utf8"):undefined;function UTF8ArrayToString(heap,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heap[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heap.subarray&&UTF8Decoder){return UTF8Decoder.decode(heap.subarray(idx,endPtr))}else{var str="";while(idx<endPtr){var u0=heap[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heap[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heap[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heap[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):""}function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module["HEAP8"]=HEAP8=new Int8Array(buf);Module["HEAP16"]=HEAP16=new Int16Array(buf);Module["HEAP32"]=HEAP32=new Int32Array(buf);Module["HEAPU8"]=HEAPU8=new Uint8Array(buf);Module["HEAPU16"]=HEAPU16=new Uint16Array(buf);Module["HEAPU32"]=HEAPU32=new Uint32Array(buf);Module["HEAPF32"]=HEAPF32=new Float32Array(buf);Module["HEAPF64"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module["INITIAL_MEMORY"]||16777216;var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module["preRun"]){if(typeof Module["preRun"]=="function")Module["preRun"]=[Module["preRun"]];while(Module["preRun"].length){addOnPreRun(Module["preRun"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module["postRun"]){if(typeof Module["postRun"]=="function")Module["postRun"]=[Module["postRun"]];while(Module["postRun"].length){addOnPostRun(Module["postRun"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module["preloadedImages"]={};Module["preloadedAudios"]={};function abort(what){if(Module["onAbort"]){Module["onAbort"](what)}what+="";err(what);ABORT=true;EXITSTATUS=1;what="abort("+what+"). Build with -s ASSERTIONS=1 for more info.";var e=new WebAssembly.RuntimeError(what);throw e}var dataURIPrefix="data:application/octet-stream;base64,";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}function isFileURI(filename){return filename.startsWith("file://")}var wasmBinaryFile;wasmBinaryFile="data:application/octet-stream;base64,";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}var binary=tryParseAsDataURI(file);if(binary){return binary}if(readBinary){return readBinary(file)}else{throw"both async and sync fetching of the wasm failed"}}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch==="function"&&!isFileURI(wasmBinaryFile)){return fetch(wasmBinaryFile,{credentials:"same-origin"}).then(function(response){if(!response["ok"]){throw"failed to load wasm binary file at '"+wasmBinaryFile+"'"}return response["arrayBuffer"]()}).catch(function(){return getBinary(wasmBinaryFile)})}else{if(readAsync){return new Promise(function(resolve,reject){readAsync(wasmBinaryFile,function(response){resolve(new Uint8Array(response))},reject)})}}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={"a":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module["asm"]=exports;wasmMemory=Module["asm"]["g"];updateGlobalBufferAndViews(wasmMemory.buffer);wasmTable=Module["asm"]["Cj"];addOnInit(Module["asm"]["h"]);removeRunDependency("wasm-instantiate")}addRunDependency("wasm-instantiate");function receiveInstantiationResult(result){receiveInstance(result["instance"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){var result=WebAssembly.instantiate(binary,info);return result}).then(receiver,function(reason){err("failed to asynchronously prepare wasm: "+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming==="function"&&!isDataURI(wasmBinaryFile)&&!isFileURI(wasmBinaryFile)&&typeof fetch==="function"){return fetch(wasmBinaryFile,{credentials:"same-origin"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiationResult,function(reason){err("wasm streaming compile failed: "+reason);err("falling back to ArrayBuffer instantiation");return instantiateArrayBuffer(receiveInstantiationResult)})})}else{return instantiateArrayBuffer(receiveInstantiationResult)}}if(Module["instantiateWasm"]){try{var exports=Module["instantiateWasm"](info,receiveInstance);return exports}catch(e){err("Module.instantiateWasm callback failed with error: "+e);return false}}instantiateAsync();return{}}var tempDouble;var tempI64;var ASM_CONSTS={36380:function(){return Module.getRandomValue()},36416:function(){if(Module.getRandomValue===undefined){try{var window_="object"===typeof window?window:self;var crypto_=typeof window_.crypto!=="undefined"?window_.crypto:window_.msCrypto;var randomValuesStandard=function(){var buf=new Uint32Array(1);crypto_.getRandomValues(buf);return buf[0]>>>0};randomValuesStandard();Module.getRandomValue=randomValuesStandard}catch(e){try{var crypto=require("crypto");var randomValueNodeJS=function(){var buf=crypto["randomBytes"](4);return(buf[0]<<24|buf[1]<<16|buf[2]<<8|buf[3])>>>0};randomValueNodeJS();Module.getRandomValue=randomValueNodeJS}catch(e){throw"No secure random number generator found"}}}}};function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback=="function"){callback(Module);continue}var func=callback.func;if(typeof func==="number"){if(callback.arg===undefined){wasmTable.get(func)()}else{wasmTable.get(func)(callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}function ___assert_fail(condition,filename,line,func){abort("Assertion failed: "+UTF8ToString(condition)+", at: "+[filename?UTF8ToString(filename):"unknown filename",line,func?UTF8ToString(func):"unknown function"])}function _abort(){abort()}var readAsmConstArgsArray=[];function readAsmConstArgs(sigPtr,buf){readAsmConstArgsArray.length=0;var ch;buf>>=2;while(ch=HEAPU8[sigPtr++]){var double=ch<105;if(double&&buf&1)buf++;readAsmConstArgsArray.push(double?HEAPF64[buf++>>1]:HEAP32[buf]);++buf}return readAsmConstArgsArray}function _emscripten_asm_const_int(code,sigPtr,argbuf){var args=readAsmConstArgs(sigPtr,argbuf);return ASM_CONSTS[code].apply(null,args)}function _emscripten_get_heap_max(){return 2147483648}function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest,src,src+num)}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=HEAPU8.length;requestedSize=requestedSize>>>0;var maxHeapSize=2147483648;if(requestedSize>maxHeapSize){return false}for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}var ASSERTIONS=false;function intArrayToString(array){var ret=[];for(var i=0;i<array.length;i++){var chr=array[i];if(chr>255){if(ASSERTIONS){assert(false,"Character code "+chr+" ("+String.fromCharCode(chr)+")  at offset "+i+" not in 0x00-0xFF.")}chr&=255}ret.push(String.fromCharCode(chr))}return ret.join("")}var decodeBase64=typeof atob==="function"?atob:function(input){var keyStr="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";var output="";var chr1,chr2,chr3;var enc1,enc2,enc3,enc4;var i=0;input=input.replace(/[^A-Za-z0-9\+\/\=]/g,"");do{enc1=keyStr.indexOf(input.charAt(i++));enc2=keyStr.indexOf(input.charAt(i++));enc3=keyStr.indexOf(input.charAt(i++));enc4=keyStr.indexOf(input.charAt(i++));chr1=enc1<<2|enc2>>4;chr2=(enc2&15)<<4|enc3>>2;chr3=(enc3&3)<<6|enc4;output=output+String.fromCharCode(chr1);if(enc3!==64){output=output+String.fromCharCode(chr2)}if(enc4!==64){output=output+String.fromCharCode(chr3)}}while(i<input.length);return output};function intArrayFromBase64(s){if(typeof ENVIRONMENT_IS_NODE==="boolean"&&ENVIRONMENT_IS_NODE){var buf;try{buf=Buffer.from(s,"base64")}catch(_){buf=new Buffer(s,"base64")}return new Uint8Array(buf["buffer"],buf["byteOffset"],buf["byteLength"])}try{var decoded=decodeBase64(s);var bytes=new Uint8Array(decoded.length);for(var i=0;i<decoded.length;++i){bytes[i]=decoded.charCodeAt(i)}return bytes}catch(_){throw new Error("Converting base64 string to bytes failed.")}}function tryParseAsDataURI(filename){if(!isDataURI(filename)){return}return intArrayFromBase64(filename.slice(dataURIPrefix.length))}var asmLibraryArg={"a":___assert_fail,"b":_abort,"c":_emscripten_asm_const_int,"d":_emscripten_get_heap_max,"e":_emscripten_memcpy_big,"f":_emscripten_resize_heap};var asm=createWasm();var ___wasm_call_ctors=Module["___wasm_call_ctors"]=function(){return(___wasm_call_ctors=Module["___wasm_call_ctors"]=Module["asm"]["h"]).apply(null,arguments)};var _crypto_aead_chacha20poly1305_encrypt_detached=Module["_crypto_aead_chacha20poly1305_encrypt_detached"]=function(){return(_crypto_aead_chacha20poly1305_encrypt_detached=Module["_crypto_aead_chacha20poly1305_encrypt_detached"]=Module["asm"]["i"]).apply(null,arguments)};var _crypto_aead_chacha20poly1305_encrypt=Module["_crypto_aead_chacha20poly1305_encrypt"]=function(){return(_crypto_aead_chacha20poly1305_encrypt=Module["_crypto_aead_chacha20poly1305_encrypt"]=Module["asm"]["j"]).apply(null,arguments)};var _crypto_aead_chacha20poly1305_ietf_encrypt_detached=Module["_crypto_aead_chacha20poly1305_ietf_encrypt_detached"]=function(){return(_crypto_aead_chacha20poly1305_ietf_encrypt_detached=Module["_crypto_aead_chacha20poly1305_ietf_encrypt_detached"]=Module["asm"]["k"]).apply(null,arguments)};var _crypto_aead_chacha20poly1305_ietf_encrypt=Module["_crypto_aead_chacha20poly1305_ietf_encrypt"]=function(){return(_crypto_aead_chacha20poly1305_ietf_encrypt=Module["_crypto_aead_chacha20poly1305_ietf_encrypt"]=Module["asm"]["l"]).apply(null,arguments)};var _crypto_aead_chacha20poly1305_decrypt_detached=Module["_crypto_aead_chacha20poly1305_decrypt_detached"]=function(){return(_crypto_aead_chacha20poly1305_decrypt_detached=Module["_crypto_aead_chacha20poly1305_decrypt_detached"]=Module["asm"]["m"]).apply(null,arguments)};var _crypto_aead_chacha20poly1305_decrypt=Module["_crypto_aead_chacha20poly1305_decrypt"]=function(){return(_crypto_aead_chacha20poly1305_decrypt=Module["_crypto_aead_chacha20poly1305_decrypt"]=Module["asm"]["n"]).apply(null,arguments)};var _crypto_aead_chacha20poly1305_ietf_decrypt_detached=Module["_crypto_aead_chacha20poly1305_ietf_decrypt_detached"]=function(){return(_crypto_aead_chacha20poly1305_ietf_decrypt_detached=Module["_crypto_aead_chacha20poly1305_ietf_decrypt_detached"]=Module["asm"]["o"]).apply(null,arguments)};var _crypto_aead_chacha20poly1305_ietf_decrypt=Module["_crypto_aead_chacha20poly1305_ietf_decrypt"]=function(){return(_crypto_aead_chacha20poly1305_ietf_decrypt=Module["_crypto_aead_chacha20poly1305_ietf_decrypt"]=Module["asm"]["p"]).apply(null,arguments)};var _crypto_aead_chacha20poly1305_ietf_keybytes=Module["_crypto_aead_chacha20poly1305_ietf_keybytes"]=function(){return(_crypto_aead_chacha20poly1305_ietf_keybytes=Module["_crypto_aead_chacha20poly1305_ietf_keybytes"]=Module["asm"]["q"]).apply(null,arguments)};var _crypto_aead_chacha20poly1305_ietf_npubbytes=Module["_crypto_aead_chacha20poly1305_ietf_npubbytes"]=function(){return(_crypto_aead_chacha20poly1305_ietf_npubbytes=Module["_crypto_aead_chacha20poly1305_ietf_npubbytes"]=Module["asm"]["r"]).apply(null,arguments)};var _crypto_aead_chacha20poly1305_ietf_nsecbytes=Module["_crypto_aead_chacha20poly1305_ietf_nsecbytes"]=function(){return(_crypto_aead_chacha20poly1305_ietf_nsecbytes=Module["_crypto_aead_chacha20poly1305_ietf_nsecbytes"]=Module["asm"]["s"]).apply(null,arguments)};var _crypto_aead_chacha20poly1305_ietf_abytes=Module["_crypto_aead_chacha20poly1305_ietf_abytes"]=function(){return(_crypto_aead_chacha20poly1305_ietf_abytes=Module["_crypto_aead_chacha20poly1305_ietf_abytes"]=Module["asm"]["t"]).apply(null,arguments)};var _crypto_aead_chacha20poly1305_ietf_messagebytes_max=Module["_crypto_aead_chacha20poly1305_ietf_messagebytes_max"]=function(){return(_crypto_aead_chacha20poly1305_ietf_messagebytes_max=Module["_crypto_aead_chacha20poly1305_ietf_messagebytes_max"]=Module["asm"]["u"]).apply(null,arguments)};var _crypto_aead_chacha20poly1305_ietf_keygen=Module["_crypto_aead_chacha20poly1305_ietf_keygen"]=function(){return(_crypto_aead_chacha20poly1305_ietf_keygen=Module["_crypto_aead_chacha20poly1305_ietf_keygen"]=Module["asm"]["v"]).apply(null,arguments)};var _crypto_aead_chacha20poly1305_keybytes=Module["_crypto_aead_chacha20poly1305_keybytes"]=function(){return(_crypto_aead_chacha20poly1305_keybytes=Module["_crypto_aead_chacha20poly1305_keybytes"]=Module["asm"]["w"]).apply(null,arguments)};var _crypto_aead_chacha20poly1305_npubbytes=Module["_crypto_aead_chacha20poly1305_npubbytes"]=function(){return(_crypto_aead_chacha20poly1305_npubbytes=Module["_crypto_aead_chacha20poly1305_npubbytes"]=Module["asm"]["x"]).apply(null,arguments)};var _crypto_aead_chacha20poly1305_nsecbytes=Module["_crypto_aead_chacha20poly1305_nsecbytes"]=function(){return(_crypto_aead_chacha20poly1305_nsecbytes=Module["_crypto_aead_chacha20poly1305_nsecbytes"]=Module["asm"]["y"]).apply(null,arguments)};var _crypto_aead_chacha20poly1305_abytes=Module["_crypto_aead_chacha20poly1305_abytes"]=function(){return(_crypto_aead_chacha20poly1305_abytes=Module["_crypto_aead_chacha20poly1305_abytes"]=Module["asm"]["z"]).apply(null,arguments)};var _crypto_aead_chacha20poly1305_messagebytes_max=Module["_crypto_aead_chacha20poly1305_messagebytes_max"]=function(){return(_crypto_aead_chacha20poly1305_messagebytes_max=Module["_crypto_aead_chacha20poly1305_messagebytes_max"]=Module["asm"]["A"]).apply(null,arguments)};var _crypto_aead_chacha20poly1305_keygen=Module["_crypto_aead_chacha20poly1305_keygen"]=function(){return(_crypto_aead_chacha20poly1305_keygen=Module["_crypto_aead_chacha20poly1305_keygen"]=Module["asm"]["B"]).apply(null,arguments)};var _crypto_aead_xchacha20poly1305_ietf_encrypt_detached=Module["_crypto_aead_xchacha20poly1305_ietf_encrypt_detached"]=function(){return(_crypto_aead_xchacha20poly1305_ietf_encrypt_detached=Module["_crypto_aead_xchacha20poly1305_ietf_encrypt_detached"]=Module["asm"]["C"]).apply(null,arguments)};var _crypto_aead_xchacha20poly1305_ietf_encrypt=Module["_crypto_aead_xchacha20poly1305_ietf_encrypt"]=function(){return(_crypto_aead_xchacha20poly1305_ietf_encrypt=Module["_crypto_aead_xchacha20poly1305_ietf_encrypt"]=Module["asm"]["D"]).apply(null,arguments)};var _crypto_aead_xchacha20poly1305_ietf_decrypt_detached=Module["_crypto_aead_xchacha20poly1305_ietf_decrypt_detached"]=function(){return(_crypto_aead_xchacha20poly1305_ietf_decrypt_detached=Module["_crypto_aead_xchacha20poly1305_ietf_decrypt_detached"]=Module["asm"]["E"]).apply(null,arguments)};var _crypto_aead_xchacha20poly1305_ietf_decrypt=Module["_crypto_aead_xchacha20poly1305_ietf_decrypt"]=function(){return(_crypto_aead_xchacha20poly1305_ietf_decrypt=Module["_crypto_aead_xchacha20poly1305_ietf_decrypt"]=Module["asm"]["F"]).apply(null,arguments)};var _crypto_aead_xchacha20poly1305_ietf_keybytes=Module["_crypto_aead_xchacha20poly1305_ietf_keybytes"]=function(){return(_crypto_aead_xchacha20poly1305_ietf_keybytes=Module["_crypto_aead_xchacha20poly1305_ietf_keybytes"]=Module["asm"]["G"]).apply(null,arguments)};var _crypto_aead_xchacha20poly1305_ietf_npubbytes=Module["_crypto_aead_xchacha20poly1305_ietf_npubbytes"]=function(){return(_crypto_aead_xchacha20poly1305_ietf_npubbytes=Module["_crypto_aead_xchacha20poly1305_ietf_npubbytes"]=Module["asm"]["H"]).apply(null,arguments)};var _crypto_aead_xchacha20poly1305_ietf_nsecbytes=Module["_crypto_aead_xchacha20poly1305_ietf_nsecbytes"]=function(){return(_crypto_aead_xchacha20poly1305_ietf_nsecbytes=Module["_crypto_aead_xchacha20poly1305_ietf_nsecbytes"]=Module["asm"]["I"]).apply(null,arguments)};var _crypto_aead_xchacha20poly1305_ietf_abytes=Module["_crypto_aead_xchacha20poly1305_ietf_abytes"]=function(){return(_crypto_aead_xchacha20poly1305_ietf_abytes=Module["_crypto_aead_xchacha20poly1305_ietf_abytes"]=Module["asm"]["J"]).apply(null,arguments)};var _crypto_aead_xchacha20poly1305_ietf_messagebytes_max=Module["_crypto_aead_xchacha20poly1305_ietf_messagebytes_max"]=function(){return(_crypto_aead_xchacha20poly1305_ietf_messagebytes_max=Module["_crypto_aead_xchacha20poly1305_ietf_messagebytes_max"]=Module["asm"]["K"]).apply(null,arguments)};var _crypto_aead_xchacha20poly1305_ietf_keygen=Module["_crypto_aead_xchacha20poly1305_ietf_keygen"]=function(){return(_crypto_aead_xchacha20poly1305_ietf_keygen=Module["_crypto_aead_xchacha20poly1305_ietf_keygen"]=Module["asm"]["L"]).apply(null,arguments)};var _crypto_auth_bytes=Module["_crypto_auth_bytes"]=function(){return(_crypto_auth_bytes=Module["_crypto_auth_bytes"]=Module["asm"]["M"]).apply(null,arguments)};var _crypto_auth_keybytes=Module["_crypto_auth_keybytes"]=function(){return(_crypto_auth_keybytes=Module["_crypto_auth_keybytes"]=Module["asm"]["N"]).apply(null,arguments)};var _crypto_auth_primitive=Module["_crypto_auth_primitive"]=function(){return(_crypto_auth_primitive=Module["_crypto_auth_primitive"]=Module["asm"]["O"]).apply(null,arguments)};var _crypto_auth=Module["_crypto_auth"]=function(){return(_crypto_auth=Module["_crypto_auth"]=Module["asm"]["P"]).apply(null,arguments)};var _crypto_auth_verify=Module["_crypto_auth_verify"]=function(){return(_crypto_auth_verify=Module["_crypto_auth_verify"]=Module["asm"]["Q"]).apply(null,arguments)};var _crypto_auth_keygen=Module["_crypto_auth_keygen"]=function(){return(_crypto_auth_keygen=Module["_crypto_auth_keygen"]=Module["asm"]["R"]).apply(null,arguments)};var _crypto_auth_hmacsha256_bytes=Module["_crypto_auth_hmacsha256_bytes"]=function(){return(_crypto_auth_hmacsha256_bytes=Module["_crypto_auth_hmacsha256_bytes"]=Module["asm"]["S"]).apply(null,arguments)};var _crypto_auth_hmacsha256_keybytes=Module["_crypto_auth_hmacsha256_keybytes"]=function(){return(_crypto_auth_hmacsha256_keybytes=Module["_crypto_auth_hmacsha256_keybytes"]=Module["asm"]["T"]).apply(null,arguments)};var _crypto_auth_hmacsha256_statebytes=Module["_crypto_auth_hmacsha256_statebytes"]=function(){return(_crypto_auth_hmacsha256_statebytes=Module["_crypto_auth_hmacsha256_statebytes"]=Module["asm"]["U"]).apply(null,arguments)};var _crypto_auth_hmacsha256_keygen=Module["_crypto_auth_hmacsha256_keygen"]=function(){return(_crypto_auth_hmacsha256_keygen=Module["_crypto_auth_hmacsha256_keygen"]=Module["asm"]["V"]).apply(null,arguments)};var _crypto_auth_hmacsha256_init=Module["_crypto_auth_hmacsha256_init"]=function(){return(_crypto_auth_hmacsha256_init=Module["_crypto_auth_hmacsha256_init"]=Module["asm"]["W"]).apply(null,arguments)};var _crypto_auth_hmacsha256_update=Module["_crypto_auth_hmacsha256_update"]=function(){return(_crypto_auth_hmacsha256_update=Module["_crypto_auth_hmacsha256_update"]=Module["asm"]["X"]).apply(null,arguments)};var _crypto_auth_hmacsha256_final=Module["_crypto_auth_hmacsha256_final"]=function(){return(_crypto_auth_hmacsha256_final=Module["_crypto_auth_hmacsha256_final"]=Module["asm"]["Y"]).apply(null,arguments)};var _crypto_auth_hmacsha256=Module["_crypto_auth_hmacsha256"]=function(){return(_crypto_auth_hmacsha256=Module["_crypto_auth_hmacsha256"]=Module["asm"]["Z"]).apply(null,arguments)};var _crypto_auth_hmacsha256_verify=Module["_crypto_auth_hmacsha256_verify"]=function(){return(_crypto_auth_hmacsha256_verify=Module["_crypto_auth_hmacsha256_verify"]=Module["asm"]["_"]).apply(null,arguments)};var _crypto_auth_hmacsha512_bytes=Module["_crypto_auth_hmacsha512_bytes"]=function(){return(_crypto_auth_hmacsha512_bytes=Module["_crypto_auth_hmacsha512_bytes"]=Module["asm"]["$"]).apply(null,arguments)};var _crypto_auth_hmacsha512_keybytes=Module["_crypto_auth_hmacsha512_keybytes"]=function(){return(_crypto_auth_hmacsha512_keybytes=Module["_crypto_auth_hmacsha512_keybytes"]=Module["asm"]["aa"]).apply(null,arguments)};var _crypto_auth_hmacsha512_statebytes=Module["_crypto_auth_hmacsha512_statebytes"]=function(){return(_crypto_auth_hmacsha512_statebytes=Module["_crypto_auth_hmacsha512_statebytes"]=Module["asm"]["ba"]).apply(null,arguments)};var _crypto_auth_hmacsha512_keygen=Module["_crypto_auth_hmacsha512_keygen"]=function(){return(_crypto_auth_hmacsha512_keygen=Module["_crypto_auth_hmacsha512_keygen"]=Module["asm"]["ca"]).apply(null,arguments)};var _crypto_auth_hmacsha512_init=Module["_crypto_auth_hmacsha512_init"]=function(){return(_crypto_auth_hmacsha512_init=Module["_crypto_auth_hmacsha512_init"]=Module["asm"]["da"]).apply(null,arguments)};var _crypto_auth_hmacsha512_update=Module["_crypto_auth_hmacsha512_update"]=function(){return(_crypto_auth_hmacsha512_update=Module["_crypto_auth_hmacsha512_update"]=Module["asm"]["ea"]).apply(null,arguments)};var _crypto_auth_hmacsha512_final=Module["_crypto_auth_hmacsha512_final"]=function(){return(_crypto_auth_hmacsha512_final=Module["_crypto_auth_hmacsha512_final"]=Module["asm"]["fa"]).apply(null,arguments)};var _crypto_auth_hmacsha512=Module["_crypto_auth_hmacsha512"]=function(){return(_crypto_auth_hmacsha512=Module["_crypto_auth_hmacsha512"]=Module["asm"]["ga"]).apply(null,arguments)};var _crypto_auth_hmacsha512_verify=Module["_crypto_auth_hmacsha512_verify"]=function(){return(_crypto_auth_hmacsha512_verify=Module["_crypto_auth_hmacsha512_verify"]=Module["asm"]["ha"]).apply(null,arguments)};var _crypto_auth_hmacsha512256_bytes=Module["_crypto_auth_hmacsha512256_bytes"]=function(){return(_crypto_auth_hmacsha512256_bytes=Module["_crypto_auth_hmacsha512256_bytes"]=Module["asm"]["ia"]).apply(null,arguments)};var _crypto_auth_hmacsha512256_keybytes=Module["_crypto_auth_hmacsha512256_keybytes"]=function(){return(_crypto_auth_hmacsha512256_keybytes=Module["_crypto_auth_hmacsha512256_keybytes"]=Module["asm"]["ja"]).apply(null,arguments)};var _crypto_auth_hmacsha512256_statebytes=Module["_crypto_auth_hmacsha512256_statebytes"]=function(){return(_crypto_auth_hmacsha512256_statebytes=Module["_crypto_auth_hmacsha512256_statebytes"]=Module["asm"]["ka"]).apply(null,arguments)};var _crypto_auth_hmacsha512256_keygen=Module["_crypto_auth_hmacsha512256_keygen"]=function(){return(_crypto_auth_hmacsha512256_keygen=Module["_crypto_auth_hmacsha512256_keygen"]=Module["asm"]["la"]).apply(null,arguments)};var _crypto_auth_hmacsha512256_init=Module["_crypto_auth_hmacsha512256_init"]=function(){return(_crypto_auth_hmacsha512256_init=Module["_crypto_auth_hmacsha512256_init"]=Module["asm"]["ma"]).apply(null,arguments)};var _crypto_auth_hmacsha512256_update=Module["_crypto_auth_hmacsha512256_update"]=function(){return(_crypto_auth_hmacsha512256_update=Module["_crypto_auth_hmacsha512256_update"]=Module["asm"]["na"]).apply(null,arguments)};var _crypto_auth_hmacsha512256_final=Module["_crypto_auth_hmacsha512256_final"]=function(){return(_crypto_auth_hmacsha512256_final=Module["_crypto_auth_hmacsha512256_final"]=Module["asm"]["oa"]).apply(null,arguments)};var _crypto_auth_hmacsha512256=Module["_crypto_auth_hmacsha512256"]=function(){return(_crypto_auth_hmacsha512256=Module["_crypto_auth_hmacsha512256"]=Module["asm"]["pa"]).apply(null,arguments)};var _crypto_auth_hmacsha512256_verify=Module["_crypto_auth_hmacsha512256_verify"]=function(){return(_crypto_auth_hmacsha512256_verify=Module["_crypto_auth_hmacsha512256_verify"]=Module["asm"]["qa"]).apply(null,arguments)};var _crypto_box_seedbytes=Module["_crypto_box_seedbytes"]=function(){return(_crypto_box_seedbytes=Module["_crypto_box_seedbytes"]=Module["asm"]["ra"]).apply(null,arguments)};var _crypto_box_publickeybytes=Module["_crypto_box_publickeybytes"]=function(){return(_crypto_box_publickeybytes=Module["_crypto_box_publickeybytes"]=Module["asm"]["sa"]).apply(null,arguments)};var _crypto_box_secretkeybytes=Module["_crypto_box_secretkeybytes"]=function(){return(_crypto_box_secretkeybytes=Module["_crypto_box_secretkeybytes"]=Module["asm"]["ta"]).apply(null,arguments)};var _crypto_box_beforenmbytes=Module["_crypto_box_beforenmbytes"]=function(){return(_crypto_box_beforenmbytes=Module["_crypto_box_beforenmbytes"]=Module["asm"]["ua"]).apply(null,arguments)};var _crypto_box_noncebytes=Module["_crypto_box_noncebytes"]=function(){return(_crypto_box_noncebytes=Module["_crypto_box_noncebytes"]=Module["asm"]["va"]).apply(null,arguments)};var _crypto_box_zerobytes=Module["_crypto_box_zerobytes"]=function(){return(_crypto_box_zerobytes=Module["_crypto_box_zerobytes"]=Module["asm"]["wa"]).apply(null,arguments)};var _crypto_box_boxzerobytes=Module["_crypto_box_boxzerobytes"]=function(){return(_crypto_box_boxzerobytes=Module["_crypto_box_boxzerobytes"]=Module["asm"]["xa"]).apply(null,arguments)};var _crypto_box_macbytes=Module["_crypto_box_macbytes"]=function(){return(_crypto_box_macbytes=Module["_crypto_box_macbytes"]=Module["asm"]["ya"]).apply(null,arguments)};var _crypto_box_messagebytes_max=Module["_crypto_box_messagebytes_max"]=function(){return(_crypto_box_messagebytes_max=Module["_crypto_box_messagebytes_max"]=Module["asm"]["za"]).apply(null,arguments)};var _crypto_box_primitive=Module["_crypto_box_primitive"]=function(){return(_crypto_box_primitive=Module["_crypto_box_primitive"]=Module["asm"]["Aa"]).apply(null,arguments)};var _crypto_box_seed_keypair=Module["_crypto_box_seed_keypair"]=function(){return(_crypto_box_seed_keypair=Module["_crypto_box_seed_keypair"]=Module["asm"]["Ba"]).apply(null,arguments)};var _crypto_box_keypair=Module["_crypto_box_keypair"]=function(){return(_crypto_box_keypair=Module["_crypto_box_keypair"]=Module["asm"]["Ca"]).apply(null,arguments)};var _crypto_box_beforenm=Module["_crypto_box_beforenm"]=function(){return(_crypto_box_beforenm=Module["_crypto_box_beforenm"]=Module["asm"]["Da"]).apply(null,arguments)};var _crypto_box_afternm=Module["_crypto_box_afternm"]=function(){return(_crypto_box_afternm=Module["_crypto_box_afternm"]=Module["asm"]["Ea"]).apply(null,arguments)};var _crypto_box_open_afternm=Module["_crypto_box_open_afternm"]=function(){return(_crypto_box_open_afternm=Module["_crypto_box_open_afternm"]=Module["asm"]["Fa"]).apply(null,arguments)};var _crypto_box=Module["_crypto_box"]=function(){return(_crypto_box=Module["_crypto_box"]=Module["asm"]["Ga"]).apply(null,arguments)};var _crypto_box_open=Module["_crypto_box_open"]=function(){return(_crypto_box_open=Module["_crypto_box_open"]=Module["asm"]["Ha"]).apply(null,arguments)};var _crypto_box_detached_afternm=Module["_crypto_box_detached_afternm"]=function(){return(_crypto_box_detached_afternm=Module["_crypto_box_detached_afternm"]=Module["asm"]["Ia"]).apply(null,arguments)};var _crypto_box_detached=Module["_crypto_box_detached"]=function(){return(_crypto_box_detached=Module["_crypto_box_detached"]=Module["asm"]["Ja"]).apply(null,arguments)};var _crypto_box_easy_afternm=Module["_crypto_box_easy_afternm"]=function(){return(_crypto_box_easy_afternm=Module["_crypto_box_easy_afternm"]=Module["asm"]["Ka"]).apply(null,arguments)};var _crypto_box_easy=Module["_crypto_box_easy"]=function(){return(_crypto_box_easy=Module["_crypto_box_easy"]=Module["asm"]["La"]).apply(null,arguments)};var _crypto_box_open_detached_afternm=Module["_crypto_box_open_detached_afternm"]=function(){return(_crypto_box_open_detached_afternm=Module["_crypto_box_open_detached_afternm"]=Module["asm"]["Ma"]).apply(null,arguments)};var _crypto_box_open_detached=Module["_crypto_box_open_detached"]=function(){return(_crypto_box_open_detached=Module["_crypto_box_open_detached"]=Module["asm"]["Na"]).apply(null,arguments)};var _crypto_box_open_easy_afternm=Module["_crypto_box_open_easy_afternm"]=function(){return(_crypto_box_open_easy_afternm=Module["_crypto_box_open_easy_afternm"]=Module["asm"]["Oa"]).apply(null,arguments)};var _crypto_box_open_easy=Module["_crypto_box_open_easy"]=function(){return(_crypto_box_open_easy=Module["_crypto_box_open_easy"]=Module["asm"]["Pa"]).apply(null,arguments)};var _crypto_box_seal=Module["_crypto_box_seal"]=function(){return(_crypto_box_seal=Module["_crypto_box_seal"]=Module["asm"]["Qa"]).apply(null,arguments)};var _crypto_box_seal_open=Module["_crypto_box_seal_open"]=function(){return(_crypto_box_seal_open=Module["_crypto_box_seal_open"]=Module["asm"]["Ra"]).apply(null,arguments)};var _crypto_box_sealbytes=Module["_crypto_box_sealbytes"]=function(){return(_crypto_box_sealbytes=Module["_crypto_box_sealbytes"]=Module["asm"]["Sa"]).apply(null,arguments)};var _crypto_box_curve25519xsalsa20poly1305_seed_keypair=Module["_crypto_box_curve25519xsalsa20poly1305_seed_keypair"]=function(){return(_crypto_box_curve25519xsalsa20poly1305_seed_keypair=Module["_crypto_box_curve25519xsalsa20poly1305_seed_keypair"]=Module["asm"]["Ta"]).apply(null,arguments)};var _crypto_box_curve25519xsalsa20poly1305_keypair=Module["_crypto_box_curve25519xsalsa20poly1305_keypair"]=function(){return(_crypto_box_curve25519xsalsa20poly1305_keypair=Module["_crypto_box_curve25519xsalsa20poly1305_keypair"]=Module["asm"]["Ua"]).apply(null,arguments)};var _crypto_box_curve25519xsalsa20poly1305_beforenm=Module["_crypto_box_curve25519xsalsa20poly1305_beforenm"]=function(){return(_crypto_box_curve25519xsalsa20poly1305_beforenm=Module["_crypto_box_curve25519xsalsa20poly1305_beforenm"]=Module["asm"]["Va"]).apply(null,arguments)};var _crypto_box_curve25519xsalsa20poly1305_afternm=Module["_crypto_box_curve25519xsalsa20poly1305_afternm"]=function(){return(_crypto_box_curve25519xsalsa20poly1305_afternm=Module["_crypto_box_curve25519xsalsa20poly1305_afternm"]=Module["asm"]["Wa"]).apply(null,arguments)};var _crypto_box_curve25519xsalsa20poly1305_open_afternm=Module["_crypto_box_curve25519xsalsa20poly1305_open_afternm"]=function(){return(_crypto_box_curve25519xsalsa20poly1305_open_afternm=Module["_crypto_box_curve25519xsalsa20poly1305_open_afternm"]=Module["asm"]["Xa"]).apply(null,arguments)};var _crypto_box_curve25519xsalsa20poly1305=Module["_crypto_box_curve25519xsalsa20poly1305"]=function(){return(_crypto_box_curve25519xsalsa20poly1305=Module["_crypto_box_curve25519xsalsa20poly1305"]=Module["asm"]["Ya"]).apply(null,arguments)};var _crypto_box_curve25519xsalsa20poly1305_open=Module["_crypto_box_curve25519xsalsa20poly1305_open"]=function(){return(_crypto_box_curve25519xsalsa20poly1305_open=Module["_crypto_box_curve25519xsalsa20poly1305_open"]=Module["asm"]["Za"]).apply(null,arguments)};var _crypto_box_curve25519xsalsa20poly1305_seedbytes=Module["_crypto_box_curve25519xsalsa20poly1305_seedbytes"]=function(){return(_crypto_box_curve25519xsalsa20poly1305_seedbytes=Module["_crypto_box_curve25519xsalsa20poly1305_seedbytes"]=Module["asm"]["_a"]).apply(null,arguments)};var _crypto_box_curve25519xsalsa20poly1305_publickeybytes=Module["_crypto_box_curve25519xsalsa20poly1305_publickeybytes"]=function(){return(_crypto_box_curve25519xsalsa20poly1305_publickeybytes=Module["_crypto_box_curve25519xsalsa20poly1305_publickeybytes"]=Module["asm"]["$a"]).apply(null,arguments)};var _crypto_box_curve25519xsalsa20poly1305_secretkeybytes=Module["_crypto_box_curve25519xsalsa20poly1305_secretkeybytes"]=function(){return(_crypto_box_curve25519xsalsa20poly1305_secretkeybytes=Module["_crypto_box_curve25519xsalsa20poly1305_secretkeybytes"]=Module["asm"]["ab"]).apply(null,arguments)};var _crypto_box_curve25519xsalsa20poly1305_beforenmbytes=Module["_crypto_box_curve25519xsalsa20poly1305_beforenmbytes"]=function(){return(_crypto_box_curve25519xsalsa20poly1305_beforenmbytes=Module["_crypto_box_curve25519xsalsa20poly1305_beforenmbytes"]=Module["asm"]["bb"]).apply(null,arguments)};var _crypto_box_curve25519xsalsa20poly1305_noncebytes=Module["_crypto_box_curve25519xsalsa20poly1305_noncebytes"]=function(){return(_crypto_box_curve25519xsalsa20poly1305_noncebytes=Module["_crypto_box_curve25519xsalsa20poly1305_noncebytes"]=Module["asm"]["cb"]).apply(null,arguments)};var _crypto_box_curve25519xsalsa20poly1305_zerobytes=Module["_crypto_box_curve25519xsalsa20poly1305_zerobytes"]=function(){return(_crypto_box_curve25519xsalsa20poly1305_zerobytes=Module["_crypto_box_curve25519xsalsa20poly1305_zerobytes"]=Module["asm"]["db"]).apply(null,arguments)};var _crypto_box_curve25519xsalsa20poly1305_boxzerobytes=Module["_crypto_box_curve25519xsalsa20poly1305_boxzerobytes"]=function(){return(_crypto_box_curve25519xsalsa20poly1305_boxzerobytes=Module["_crypto_box_curve25519xsalsa20poly1305_boxzerobytes"]=Module["asm"]["eb"]).apply(null,arguments)};var _crypto_box_curve25519xsalsa20poly1305_macbytes=Module["_crypto_box_curve25519xsalsa20poly1305_macbytes"]=function(){return(_crypto_box_curve25519xsalsa20poly1305_macbytes=Module["_crypto_box_curve25519xsalsa20poly1305_macbytes"]=Module["asm"]["fb"]).apply(null,arguments)};var _crypto_box_curve25519xsalsa20poly1305_messagebytes_max=Module["_crypto_box_curve25519xsalsa20poly1305_messagebytes_max"]=function(){return(_crypto_box_curve25519xsalsa20poly1305_messagebytes_max=Module["_crypto_box_curve25519xsalsa20poly1305_messagebytes_max"]=Module["asm"]["gb"]).apply(null,arguments)};var _crypto_core_hchacha20=Module["_crypto_core_hchacha20"]=function(){return(_crypto_core_hchacha20=Module["_crypto_core_hchacha20"]=Module["asm"]["hb"]).apply(null,arguments)};var _crypto_core_hchacha20_outputbytes=Module["_crypto_core_hchacha20_outputbytes"]=function(){return(_crypto_core_hchacha20_outputbytes=Module["_crypto_core_hchacha20_outputbytes"]=Module["asm"]["ib"]).apply(null,arguments)};var _crypto_core_hchacha20_inputbytes=Module["_crypto_core_hchacha20_inputbytes"]=function(){return(_crypto_core_hchacha20_inputbytes=Module["_crypto_core_hchacha20_inputbytes"]=Module["asm"]["jb"]).apply(null,arguments)};var _crypto_core_hchacha20_keybytes=Module["_crypto_core_hchacha20_keybytes"]=function(){return(_crypto_core_hchacha20_keybytes=Module["_crypto_core_hchacha20_keybytes"]=Module["asm"]["kb"]).apply(null,arguments)};var _crypto_core_hchacha20_constbytes=Module["_crypto_core_hchacha20_constbytes"]=function(){return(_crypto_core_hchacha20_constbytes=Module["_crypto_core_hchacha20_constbytes"]=Module["asm"]["lb"]).apply(null,arguments)};var _crypto_core_hsalsa20=Module["_crypto_core_hsalsa20"]=function(){return(_crypto_core_hsalsa20=Module["_crypto_core_hsalsa20"]=Module["asm"]["mb"]).apply(null,arguments)};var _crypto_core_hsalsa20_outputbytes=Module["_crypto_core_hsalsa20_outputbytes"]=function(){return(_crypto_core_hsalsa20_outputbytes=Module["_crypto_core_hsalsa20_outputbytes"]=Module["asm"]["nb"]).apply(null,arguments)};var _crypto_core_hsalsa20_inputbytes=Module["_crypto_core_hsalsa20_inputbytes"]=function(){return(_crypto_core_hsalsa20_inputbytes=Module["_crypto_core_hsalsa20_inputbytes"]=Module["asm"]["ob"]).apply(null,arguments)};var _crypto_core_hsalsa20_keybytes=Module["_crypto_core_hsalsa20_keybytes"]=function(){return(_crypto_core_hsalsa20_keybytes=Module["_crypto_core_hsalsa20_keybytes"]=Module["asm"]["pb"]).apply(null,arguments)};var _crypto_core_hsalsa20_constbytes=Module["_crypto_core_hsalsa20_constbytes"]=function(){return(_crypto_core_hsalsa20_constbytes=Module["_crypto_core_hsalsa20_constbytes"]=Module["asm"]["qb"]).apply(null,arguments)};var _crypto_core_salsa20=Module["_crypto_core_salsa20"]=function(){return(_crypto_core_salsa20=Module["_crypto_core_salsa20"]=Module["asm"]["rb"]).apply(null,arguments)};var _crypto_core_salsa20_outputbytes=Module["_crypto_core_salsa20_outputbytes"]=function(){return(_crypto_core_salsa20_outputbytes=Module["_crypto_core_salsa20_outputbytes"]=Module["asm"]["sb"]).apply(null,arguments)};var _crypto_core_salsa20_inputbytes=Module["_crypto_core_salsa20_inputbytes"]=function(){return(_crypto_core_salsa20_inputbytes=Module["_crypto_core_salsa20_inputbytes"]=Module["asm"]["tb"]).apply(null,arguments)};var _crypto_core_salsa20_keybytes=Module["_crypto_core_salsa20_keybytes"]=function(){return(_crypto_core_salsa20_keybytes=Module["_crypto_core_salsa20_keybytes"]=Module["asm"]["ub"]).apply(null,arguments)};var _crypto_core_salsa20_constbytes=Module["_crypto_core_salsa20_constbytes"]=function(){return(_crypto_core_salsa20_constbytes=Module["_crypto_core_salsa20_constbytes"]=Module["asm"]["vb"]).apply(null,arguments)};var _crypto_core_salsa2012=Module["_crypto_core_salsa2012"]=function(){return(_crypto_core_salsa2012=Module["_crypto_core_salsa2012"]=Module["asm"]["wb"]).apply(null,arguments)};var _crypto_core_salsa2012_outputbytes=Module["_crypto_core_salsa2012_outputbytes"]=function(){return(_crypto_core_salsa2012_outputbytes=Module["_crypto_core_salsa2012_outputbytes"]=Module["asm"]["xb"]).apply(null,arguments)};var _crypto_core_salsa2012_inputbytes=Module["_crypto_core_salsa2012_inputbytes"]=function(){return(_crypto_core_salsa2012_inputbytes=Module["_crypto_core_salsa2012_inputbytes"]=Module["asm"]["yb"]).apply(null,arguments)};var _crypto_core_salsa2012_keybytes=Module["_crypto_core_salsa2012_keybytes"]=function(){return(_crypto_core_salsa2012_keybytes=Module["_crypto_core_salsa2012_keybytes"]=Module["asm"]["zb"]).apply(null,arguments)};var _crypto_core_salsa2012_constbytes=Module["_crypto_core_salsa2012_constbytes"]=function(){return(_crypto_core_salsa2012_constbytes=Module["_crypto_core_salsa2012_constbytes"]=Module["asm"]["Ab"]).apply(null,arguments)};var _crypto_core_salsa208=Module["_crypto_core_salsa208"]=function(){return(_crypto_core_salsa208=Module["_crypto_core_salsa208"]=Module["asm"]["Bb"]).apply(null,arguments)};var _crypto_core_salsa208_outputbytes=Module["_crypto_core_salsa208_outputbytes"]=function(){return(_crypto_core_salsa208_outputbytes=Module["_crypto_core_salsa208_outputbytes"]=Module["asm"]["Cb"]).apply(null,arguments)};var _crypto_core_salsa208_inputbytes=Module["_crypto_core_salsa208_inputbytes"]=function(){return(_crypto_core_salsa208_inputbytes=Module["_crypto_core_salsa208_inputbytes"]=Module["asm"]["Db"]).apply(null,arguments)};var _crypto_core_salsa208_keybytes=Module["_crypto_core_salsa208_keybytes"]=function(){return(_crypto_core_salsa208_keybytes=Module["_crypto_core_salsa208_keybytes"]=Module["asm"]["Eb"]).apply(null,arguments)};var _crypto_core_salsa208_constbytes=Module["_crypto_core_salsa208_constbytes"]=function(){return(_crypto_core_salsa208_constbytes=Module["_crypto_core_salsa208_constbytes"]=Module["asm"]["Fb"]).apply(null,arguments)};var _crypto_generichash_bytes_min=Module["_crypto_generichash_bytes_min"]=function(){return(_crypto_generichash_bytes_min=Module["_crypto_generichash_bytes_min"]=Module["asm"]["Gb"]).apply(null,arguments)};var _crypto_generichash_bytes_max=Module["_crypto_generichash_bytes_max"]=function(){return(_crypto_generichash_bytes_max=Module["_crypto_generichash_bytes_max"]=Module["asm"]["Hb"]).apply(null,arguments)};var _crypto_generichash_bytes=Module["_crypto_generichash_bytes"]=function(){return(_crypto_generichash_bytes=Module["_crypto_generichash_bytes"]=Module["asm"]["Ib"]).apply(null,arguments)};var _crypto_generichash_keybytes_min=Module["_crypto_generichash_keybytes_min"]=function(){return(_crypto_generichash_keybytes_min=Module["_crypto_generichash_keybytes_min"]=Module["asm"]["Jb"]).apply(null,arguments)};var _crypto_generichash_keybytes_max=Module["_crypto_generichash_keybytes_max"]=function(){return(_crypto_generichash_keybytes_max=Module["_crypto_generichash_keybytes_max"]=Module["asm"]["Kb"]).apply(null,arguments)};var _crypto_generichash_keybytes=Module["_crypto_generichash_keybytes"]=function(){return(_crypto_generichash_keybytes=Module["_crypto_generichash_keybytes"]=Module["asm"]["Lb"]).apply(null,arguments)};var _crypto_generichash_primitive=Module["_crypto_generichash_primitive"]=function(){return(_crypto_generichash_primitive=Module["_crypto_generichash_primitive"]=Module["asm"]["Mb"]).apply(null,arguments)};var _crypto_generichash_statebytes=Module["_crypto_generichash_statebytes"]=function(){return(_crypto_generichash_statebytes=Module["_crypto_generichash_statebytes"]=Module["asm"]["Nb"]).apply(null,arguments)};var _crypto_generichash=Module["_crypto_generichash"]=function(){return(_crypto_generichash=Module["_crypto_generichash"]=Module["asm"]["Ob"]).apply(null,arguments)};var _crypto_generichash_init=Module["_crypto_generichash_init"]=function(){return(_crypto_generichash_init=Module["_crypto_generichash_init"]=Module["asm"]["Pb"]).apply(null,arguments)};var _crypto_generichash_update=Module["_crypto_generichash_update"]=function(){return(_crypto_generichash_update=Module["_crypto_generichash_update"]=Module["asm"]["Qb"]).apply(null,arguments)};var _crypto_generichash_final=Module["_crypto_generichash_final"]=function(){return(_crypto_generichash_final=Module["_crypto_generichash_final"]=Module["asm"]["Rb"]).apply(null,arguments)};var _crypto_generichash_keygen=Module["_crypto_generichash_keygen"]=function(){return(_crypto_generichash_keygen=Module["_crypto_generichash_keygen"]=Module["asm"]["Sb"]).apply(null,arguments)};var _crypto_generichash_blake2b_bytes_min=Module["_crypto_generichash_blake2b_bytes_min"]=function(){return(_crypto_generichash_blake2b_bytes_min=Module["_crypto_generichash_blake2b_bytes_min"]=Module["asm"]["Tb"]).apply(null,arguments)};var _crypto_generichash_blake2b_bytes_max=Module["_crypto_generichash_blake2b_bytes_max"]=function(){return(_crypto_generichash_blake2b_bytes_max=Module["_crypto_generichash_blake2b_bytes_max"]=Module["asm"]["Ub"]).apply(null,arguments)};var _crypto_generichash_blake2b_bytes=Module["_crypto_generichash_blake2b_bytes"]=function(){return(_crypto_generichash_blake2b_bytes=Module["_crypto_generichash_blake2b_bytes"]=Module["asm"]["Vb"]).apply(null,arguments)};var _crypto_generichash_blake2b_keybytes_min=Module["_crypto_generichash_blake2b_keybytes_min"]=function(){return(_crypto_generichash_blake2b_keybytes_min=Module["_crypto_generichash_blake2b_keybytes_min"]=Module["asm"]["Wb"]).apply(null,arguments)};var _crypto_generichash_blake2b_keybytes_max=Module["_crypto_generichash_blake2b_keybytes_max"]=function(){return(_crypto_generichash_blake2b_keybytes_max=Module["_crypto_generichash_blake2b_keybytes_max"]=Module["asm"]["Xb"]).apply(null,arguments)};var _crypto_generichash_blake2b_keybytes=Module["_crypto_generichash_blake2b_keybytes"]=function(){return(_crypto_generichash_blake2b_keybytes=Module["_crypto_generichash_blake2b_keybytes"]=Module["asm"]["Yb"]).apply(null,arguments)};var _crypto_generichash_blake2b_saltbytes=Module["_crypto_generichash_blake2b_saltbytes"]=function(){return(_crypto_generichash_blake2b_saltbytes=Module["_crypto_generichash_blake2b_saltbytes"]=Module["asm"]["Zb"]).apply(null,arguments)};var _crypto_generichash_blake2b_personalbytes=Module["_crypto_generichash_blake2b_personalbytes"]=function(){return(_crypto_generichash_blake2b_personalbytes=Module["_crypto_generichash_blake2b_personalbytes"]=Module["asm"]["_b"]).apply(null,arguments)};var _crypto_generichash_blake2b_statebytes=Module["_crypto_generichash_blake2b_statebytes"]=function(){return(_crypto_generichash_blake2b_statebytes=Module["_crypto_generichash_blake2b_statebytes"]=Module["asm"]["$b"]).apply(null,arguments)};var _crypto_generichash_blake2b_keygen=Module["_crypto_generichash_blake2b_keygen"]=function(){return(_crypto_generichash_blake2b_keygen=Module["_crypto_generichash_blake2b_keygen"]=Module["asm"]["ac"]).apply(null,arguments)};var _crypto_generichash_blake2b=Module["_crypto_generichash_blake2b"]=function(){return(_crypto_generichash_blake2b=Module["_crypto_generichash_blake2b"]=Module["asm"]["bc"]).apply(null,arguments)};var _crypto_generichash_blake2b_salt_personal=Module["_crypto_generichash_blake2b_salt_personal"]=function(){return(_crypto_generichash_blake2b_salt_personal=Module["_crypto_generichash_blake2b_salt_personal"]=Module["asm"]["cc"]).apply(null,arguments)};var _crypto_generichash_blake2b_init=Module["_crypto_generichash_blake2b_init"]=function(){return(_crypto_generichash_blake2b_init=Module["_crypto_generichash_blake2b_init"]=Module["asm"]["dc"]).apply(null,arguments)};var _crypto_generichash_blake2b_init_salt_personal=Module["_crypto_generichash_blake2b_init_salt_personal"]=function(){return(_crypto_generichash_blake2b_init_salt_personal=Module["_crypto_generichash_blake2b_init_salt_personal"]=Module["asm"]["ec"]).apply(null,arguments)};var _crypto_generichash_blake2b_update=Module["_crypto_generichash_blake2b_update"]=function(){return(_crypto_generichash_blake2b_update=Module["_crypto_generichash_blake2b_update"]=Module["asm"]["fc"]).apply(null,arguments)};var _crypto_generichash_blake2b_final=Module["_crypto_generichash_blake2b_final"]=function(){return(_crypto_generichash_blake2b_final=Module["_crypto_generichash_blake2b_final"]=Module["asm"]["gc"]).apply(null,arguments)};var _crypto_hash_bytes=Module["_crypto_hash_bytes"]=function(){return(_crypto_hash_bytes=Module["_crypto_hash_bytes"]=Module["asm"]["hc"]).apply(null,arguments)};var _crypto_hash=Module["_crypto_hash"]=function(){return(_crypto_hash=Module["_crypto_hash"]=Module["asm"]["ic"]).apply(null,arguments)};var _crypto_hash_primitive=Module["_crypto_hash_primitive"]=function(){return(_crypto_hash_primitive=Module["_crypto_hash_primitive"]=Module["asm"]["jc"]).apply(null,arguments)};var _crypto_hash_sha256_bytes=Module["_crypto_hash_sha256_bytes"]=function(){return(_crypto_hash_sha256_bytes=Module["_crypto_hash_sha256_bytes"]=Module["asm"]["kc"]).apply(null,arguments)};var _crypto_hash_sha256_statebytes=Module["_crypto_hash_sha256_statebytes"]=function(){return(_crypto_hash_sha256_statebytes=Module["_crypto_hash_sha256_statebytes"]=Module["asm"]["lc"]).apply(null,arguments)};var _crypto_hash_sha256_init=Module["_crypto_hash_sha256_init"]=function(){return(_crypto_hash_sha256_init=Module["_crypto_hash_sha256_init"]=Module["asm"]["mc"]).apply(null,arguments)};var _crypto_hash_sha256_update=Module["_crypto_hash_sha256_update"]=function(){return(_crypto_hash_sha256_update=Module["_crypto_hash_sha256_update"]=Module["asm"]["nc"]).apply(null,arguments)};var _crypto_hash_sha256_final=Module["_crypto_hash_sha256_final"]=function(){return(_crypto_hash_sha256_final=Module["_crypto_hash_sha256_final"]=Module["asm"]["oc"]).apply(null,arguments)};var _crypto_hash_sha256=Module["_crypto_hash_sha256"]=function(){return(_crypto_hash_sha256=Module["_crypto_hash_sha256"]=Module["asm"]["pc"]).apply(null,arguments)};var _crypto_hash_sha512_bytes=Module["_crypto_hash_sha512_bytes"]=function(){return(_crypto_hash_sha512_bytes=Module["_crypto_hash_sha512_bytes"]=Module["asm"]["qc"]).apply(null,arguments)};var _crypto_hash_sha512_statebytes=Module["_crypto_hash_sha512_statebytes"]=function(){return(_crypto_hash_sha512_statebytes=Module["_crypto_hash_sha512_statebytes"]=Module["asm"]["rc"]).apply(null,arguments)};var _crypto_hash_sha512_init=Module["_crypto_hash_sha512_init"]=function(){return(_crypto_hash_sha512_init=Module["_crypto_hash_sha512_init"]=Module["asm"]["sc"]).apply(null,arguments)};var _crypto_hash_sha512_update=Module["_crypto_hash_sha512_update"]=function(){return(_crypto_hash_sha512_update=Module["_crypto_hash_sha512_update"]=Module["asm"]["tc"]).apply(null,arguments)};var _crypto_hash_sha512_final=Module["_crypto_hash_sha512_final"]=function(){return(_crypto_hash_sha512_final=Module["_crypto_hash_sha512_final"]=Module["asm"]["uc"]).apply(null,arguments)};var _crypto_hash_sha512=Module["_crypto_hash_sha512"]=function(){return(_crypto_hash_sha512=Module["_crypto_hash_sha512"]=Module["asm"]["vc"]).apply(null,arguments)};var _crypto_kdf_blake2b_bytes_min=Module["_crypto_kdf_blake2b_bytes_min"]=function(){return(_crypto_kdf_blake2b_bytes_min=Module["_crypto_kdf_blake2b_bytes_min"]=Module["asm"]["wc"]).apply(null,arguments)};var _crypto_kdf_blake2b_bytes_max=Module["_crypto_kdf_blake2b_bytes_max"]=function(){return(_crypto_kdf_blake2b_bytes_max=Module["_crypto_kdf_blake2b_bytes_max"]=Module["asm"]["xc"]).apply(null,arguments)};var _crypto_kdf_blake2b_contextbytes=Module["_crypto_kdf_blake2b_contextbytes"]=function(){return(_crypto_kdf_blake2b_contextbytes=Module["_crypto_kdf_blake2b_contextbytes"]=Module["asm"]["yc"]).apply(null,arguments)};var _crypto_kdf_blake2b_keybytes=Module["_crypto_kdf_blake2b_keybytes"]=function(){return(_crypto_kdf_blake2b_keybytes=Module["_crypto_kdf_blake2b_keybytes"]=Module["asm"]["zc"]).apply(null,arguments)};var _crypto_kdf_blake2b_derive_from_key=Module["_crypto_kdf_blake2b_derive_from_key"]=function(){return(_crypto_kdf_blake2b_derive_from_key=Module["_crypto_kdf_blake2b_derive_from_key"]=Module["asm"]["Ac"]).apply(null,arguments)};var _crypto_kdf_primitive=Module["_crypto_kdf_primitive"]=function(){return(_crypto_kdf_primitive=Module["_crypto_kdf_primitive"]=Module["asm"]["Bc"]).apply(null,arguments)};var _crypto_kdf_bytes_min=Module["_crypto_kdf_bytes_min"]=function(){return(_crypto_kdf_bytes_min=Module["_crypto_kdf_bytes_min"]=Module["asm"]["Cc"]).apply(null,arguments)};var _crypto_kdf_bytes_max=Module["_crypto_kdf_bytes_max"]=function(){return(_crypto_kdf_bytes_max=Module["_crypto_kdf_bytes_max"]=Module["asm"]["Dc"]).apply(null,arguments)};var _crypto_kdf_contextbytes=Module["_crypto_kdf_contextbytes"]=function(){return(_crypto_kdf_contextbytes=Module["_crypto_kdf_contextbytes"]=Module["asm"]["Ec"]).apply(null,arguments)};var _crypto_kdf_keybytes=Module["_crypto_kdf_keybytes"]=function(){return(_crypto_kdf_keybytes=Module["_crypto_kdf_keybytes"]=Module["asm"]["Fc"]).apply(null,arguments)};var _crypto_kdf_derive_from_key=Module["_crypto_kdf_derive_from_key"]=function(){return(_crypto_kdf_derive_from_key=Module["_crypto_kdf_derive_from_key"]=Module["asm"]["Gc"]).apply(null,arguments)};var _crypto_kdf_keygen=Module["_crypto_kdf_keygen"]=function(){return(_crypto_kdf_keygen=Module["_crypto_kdf_keygen"]=Module["asm"]["Hc"]).apply(null,arguments)};var _crypto_kx_seed_keypair=Module["_crypto_kx_seed_keypair"]=function(){return(_crypto_kx_seed_keypair=Module["_crypto_kx_seed_keypair"]=Module["asm"]["Ic"]).apply(null,arguments)};var _crypto_kx_keypair=Module["_crypto_kx_keypair"]=function(){return(_crypto_kx_keypair=Module["_crypto_kx_keypair"]=Module["asm"]["Jc"]).apply(null,arguments)};var _crypto_kx_client_session_keys=Module["_crypto_kx_client_session_keys"]=function(){return(_crypto_kx_client_session_keys=Module["_crypto_kx_client_session_keys"]=Module["asm"]["Kc"]).apply(null,arguments)};var _crypto_kx_server_session_keys=Module["_crypto_kx_server_session_keys"]=function(){return(_crypto_kx_server_session_keys=Module["_crypto_kx_server_session_keys"]=Module["asm"]["Lc"]).apply(null,arguments)};var _crypto_kx_publickeybytes=Module["_crypto_kx_publickeybytes"]=function(){return(_crypto_kx_publickeybytes=Module["_crypto_kx_publickeybytes"]=Module["asm"]["Mc"]).apply(null,arguments)};var _crypto_kx_secretkeybytes=Module["_crypto_kx_secretkeybytes"]=function(){return(_crypto_kx_secretkeybytes=Module["_crypto_kx_secretkeybytes"]=Module["asm"]["Nc"]).apply(null,arguments)};var _crypto_kx_seedbytes=Module["_crypto_kx_seedbytes"]=function(){return(_crypto_kx_seedbytes=Module["_crypto_kx_seedbytes"]=Module["asm"]["Oc"]).apply(null,arguments)};var _crypto_kx_sessionkeybytes=Module["_crypto_kx_sessionkeybytes"]=function(){return(_crypto_kx_sessionkeybytes=Module["_crypto_kx_sessionkeybytes"]=Module["asm"]["Pc"]).apply(null,arguments)};var _crypto_kx_primitive=Module["_crypto_kx_primitive"]=function(){return(_crypto_kx_primitive=Module["_crypto_kx_primitive"]=Module["asm"]["Qc"]).apply(null,arguments)};var _crypto_onetimeauth_statebytes=Module["_crypto_onetimeauth_statebytes"]=function(){return(_crypto_onetimeauth_statebytes=Module["_crypto_onetimeauth_statebytes"]=Module["asm"]["Rc"]).apply(null,arguments)};var _crypto_onetimeauth_bytes=Module["_crypto_onetimeauth_bytes"]=function(){return(_crypto_onetimeauth_bytes=Module["_crypto_onetimeauth_bytes"]=Module["asm"]["Sc"]).apply(null,arguments)};var _crypto_onetimeauth_keybytes=Module["_crypto_onetimeauth_keybytes"]=function(){return(_crypto_onetimeauth_keybytes=Module["_crypto_onetimeauth_keybytes"]=Module["asm"]["Tc"]).apply(null,arguments)};var _crypto_onetimeauth=Module["_crypto_onetimeauth"]=function(){return(_crypto_onetimeauth=Module["_crypto_onetimeauth"]=Module["asm"]["Uc"]).apply(null,arguments)};var _crypto_onetimeauth_verify=Module["_crypto_onetimeauth_verify"]=function(){return(_crypto_onetimeauth_verify=Module["_crypto_onetimeauth_verify"]=Module["asm"]["Vc"]).apply(null,arguments)};var _crypto_onetimeauth_init=Module["_crypto_onetimeauth_init"]=function(){return(_crypto_onetimeauth_init=Module["_crypto_onetimeauth_init"]=Module["asm"]["Wc"]).apply(null,arguments)};var _crypto_onetimeauth_update=Module["_crypto_onetimeauth_update"]=function(){return(_crypto_onetimeauth_update=Module["_crypto_onetimeauth_update"]=Module["asm"]["Xc"]).apply(null,arguments)};var _crypto_onetimeauth_final=Module["_crypto_onetimeauth_final"]=function(){return(_crypto_onetimeauth_final=Module["_crypto_onetimeauth_final"]=Module["asm"]["Yc"]).apply(null,arguments)};var _crypto_onetimeauth_primitive=Module["_crypto_onetimeauth_primitive"]=function(){return(_crypto_onetimeauth_primitive=Module["_crypto_onetimeauth_primitive"]=Module["asm"]["Zc"]).apply(null,arguments)};var _crypto_onetimeauth_keygen=Module["_crypto_onetimeauth_keygen"]=function(){return(_crypto_onetimeauth_keygen=Module["_crypto_onetimeauth_keygen"]=Module["asm"]["_c"]).apply(null,arguments)};var _crypto_onetimeauth_poly1305=Module["_crypto_onetimeauth_poly1305"]=function(){return(_crypto_onetimeauth_poly1305=Module["_crypto_onetimeauth_poly1305"]=Module["asm"]["$c"]).apply(null,arguments)};var _crypto_onetimeauth_poly1305_verify=Module["_crypto_onetimeauth_poly1305_verify"]=function(){return(_crypto_onetimeauth_poly1305_verify=Module["_crypto_onetimeauth_poly1305_verify"]=Module["asm"]["ad"]).apply(null,arguments)};var _crypto_onetimeauth_poly1305_init=Module["_crypto_onetimeauth_poly1305_init"]=function(){return(_crypto_onetimeauth_poly1305_init=Module["_crypto_onetimeauth_poly1305_init"]=Module["asm"]["bd"]).apply(null,arguments)};var _crypto_onetimeauth_poly1305_update=Module["_crypto_onetimeauth_poly1305_update"]=function(){return(_crypto_onetimeauth_poly1305_update=Module["_crypto_onetimeauth_poly1305_update"]=Module["asm"]["cd"]).apply(null,arguments)};var _crypto_onetimeauth_poly1305_final=Module["_crypto_onetimeauth_poly1305_final"]=function(){return(_crypto_onetimeauth_poly1305_final=Module["_crypto_onetimeauth_poly1305_final"]=Module["asm"]["dd"]).apply(null,arguments)};var _crypto_onetimeauth_poly1305_bytes=Module["_crypto_onetimeauth_poly1305_bytes"]=function(){return(_crypto_onetimeauth_poly1305_bytes=Module["_crypto_onetimeauth_poly1305_bytes"]=Module["asm"]["ed"]).apply(null,arguments)};var _crypto_onetimeauth_poly1305_keybytes=Module["_crypto_onetimeauth_poly1305_keybytes"]=function(){return(_crypto_onetimeauth_poly1305_keybytes=Module["_crypto_onetimeauth_poly1305_keybytes"]=Module["asm"]["fd"]).apply(null,arguments)};var _crypto_onetimeauth_poly1305_statebytes=Module["_crypto_onetimeauth_poly1305_statebytes"]=function(){return(_crypto_onetimeauth_poly1305_statebytes=Module["_crypto_onetimeauth_poly1305_statebytes"]=Module["asm"]["gd"]).apply(null,arguments)};var _crypto_onetimeauth_poly1305_keygen=Module["_crypto_onetimeauth_poly1305_keygen"]=function(){return(_crypto_onetimeauth_poly1305_keygen=Module["_crypto_onetimeauth_poly1305_keygen"]=Module["asm"]["hd"]).apply(null,arguments)};var _crypto_pwhash_argon2i_alg_argon2i13=Module["_crypto_pwhash_argon2i_alg_argon2i13"]=function(){return(_crypto_pwhash_argon2i_alg_argon2i13=Module["_crypto_pwhash_argon2i_alg_argon2i13"]=Module["asm"]["id"]).apply(null,arguments)};var _crypto_pwhash_argon2i_bytes_min=Module["_crypto_pwhash_argon2i_bytes_min"]=function(){return(_crypto_pwhash_argon2i_bytes_min=Module["_crypto_pwhash_argon2i_bytes_min"]=Module["asm"]["jd"]).apply(null,arguments)};var _crypto_pwhash_argon2i_bytes_max=Module["_crypto_pwhash_argon2i_bytes_max"]=function(){return(_crypto_pwhash_argon2i_bytes_max=Module["_crypto_pwhash_argon2i_bytes_max"]=Module["asm"]["kd"]).apply(null,arguments)};var _crypto_pwhash_argon2i_passwd_min=Module["_crypto_pwhash_argon2i_passwd_min"]=function(){return(_crypto_pwhash_argon2i_passwd_min=Module["_crypto_pwhash_argon2i_passwd_min"]=Module["asm"]["ld"]).apply(null,arguments)};var _crypto_pwhash_argon2i_passwd_max=Module["_crypto_pwhash_argon2i_passwd_max"]=function(){return(_crypto_pwhash_argon2i_passwd_max=Module["_crypto_pwhash_argon2i_passwd_max"]=Module["asm"]["md"]).apply(null,arguments)};var _crypto_pwhash_argon2i_saltbytes=Module["_crypto_pwhash_argon2i_saltbytes"]=function(){return(_crypto_pwhash_argon2i_saltbytes=Module["_crypto_pwhash_argon2i_saltbytes"]=Module["asm"]["nd"]).apply(null,arguments)};var _crypto_pwhash_argon2i_strbytes=Module["_crypto_pwhash_argon2i_strbytes"]=function(){return(_crypto_pwhash_argon2i_strbytes=Module["_crypto_pwhash_argon2i_strbytes"]=Module["asm"]["od"]).apply(null,arguments)};var _crypto_pwhash_argon2i_strprefix=Module["_crypto_pwhash_argon2i_strprefix"]=function(){return(_crypto_pwhash_argon2i_strprefix=Module["_crypto_pwhash_argon2i_strprefix"]=Module["asm"]["pd"]).apply(null,arguments)};var _crypto_pwhash_argon2i_opslimit_min=Module["_crypto_pwhash_argon2i_opslimit_min"]=function(){return(_crypto_pwhash_argon2i_opslimit_min=Module["_crypto_pwhash_argon2i_opslimit_min"]=Module["asm"]["qd"]).apply(null,arguments)};var _crypto_pwhash_argon2i_opslimit_max=Module["_crypto_pwhash_argon2i_opslimit_max"]=function(){return(_crypto_pwhash_argon2i_opslimit_max=Module["_crypto_pwhash_argon2i_opslimit_max"]=Module["asm"]["rd"]).apply(null,arguments)};var _crypto_pwhash_argon2i_memlimit_min=Module["_crypto_pwhash_argon2i_memlimit_min"]=function(){return(_crypto_pwhash_argon2i_memlimit_min=Module["_crypto_pwhash_argon2i_memlimit_min"]=Module["asm"]["sd"]).apply(null,arguments)};var _crypto_pwhash_argon2i_memlimit_max=Module["_crypto_pwhash_argon2i_memlimit_max"]=function(){return(_crypto_pwhash_argon2i_memlimit_max=Module["_crypto_pwhash_argon2i_memlimit_max"]=Module["asm"]["td"]).apply(null,arguments)};var _crypto_pwhash_argon2i_opslimit_interactive=Module["_crypto_pwhash_argon2i_opslimit_interactive"]=function(){return(_crypto_pwhash_argon2i_opslimit_interactive=Module["_crypto_pwhash_argon2i_opslimit_interactive"]=Module["asm"]["ud"]).apply(null,arguments)};var _crypto_pwhash_argon2i_memlimit_interactive=Module["_crypto_pwhash_argon2i_memlimit_interactive"]=function(){return(_crypto_pwhash_argon2i_memlimit_interactive=Module["_crypto_pwhash_argon2i_memlimit_interactive"]=Module["asm"]["vd"]).apply(null,arguments)};var _crypto_pwhash_argon2i_opslimit_moderate=Module["_crypto_pwhash_argon2i_opslimit_moderate"]=function(){return(_crypto_pwhash_argon2i_opslimit_moderate=Module["_crypto_pwhash_argon2i_opslimit_moderate"]=Module["asm"]["wd"]).apply(null,arguments)};var _crypto_pwhash_argon2i_memlimit_moderate=Module["_crypto_pwhash_argon2i_memlimit_moderate"]=function(){return(_crypto_pwhash_argon2i_memlimit_moderate=Module["_crypto_pwhash_argon2i_memlimit_moderate"]=Module["asm"]["xd"]).apply(null,arguments)};var _crypto_pwhash_argon2i_opslimit_sensitive=Module["_crypto_pwhash_argon2i_opslimit_sensitive"]=function(){return(_crypto_pwhash_argon2i_opslimit_sensitive=Module["_crypto_pwhash_argon2i_opslimit_sensitive"]=Module["asm"]["yd"]).apply(null,arguments)};var _crypto_pwhash_argon2i_memlimit_sensitive=Module["_crypto_pwhash_argon2i_memlimit_sensitive"]=function(){return(_crypto_pwhash_argon2i_memlimit_sensitive=Module["_crypto_pwhash_argon2i_memlimit_sensitive"]=Module["asm"]["zd"]).apply(null,arguments)};var _crypto_pwhash_argon2i=Module["_crypto_pwhash_argon2i"]=function(){return(_crypto_pwhash_argon2i=Module["_crypto_pwhash_argon2i"]=Module["asm"]["Ad"]).apply(null,arguments)};var _crypto_pwhash_argon2i_str=Module["_crypto_pwhash_argon2i_str"]=function(){return(_crypto_pwhash_argon2i_str=Module["_crypto_pwhash_argon2i_str"]=Module["asm"]["Bd"]).apply(null,arguments)};var _crypto_pwhash_argon2i_str_verify=Module["_crypto_pwhash_argon2i_str_verify"]=function(){return(_crypto_pwhash_argon2i_str_verify=Module["_crypto_pwhash_argon2i_str_verify"]=Module["asm"]["Cd"]).apply(null,arguments)};var _crypto_pwhash_argon2i_str_needs_rehash=Module["_crypto_pwhash_argon2i_str_needs_rehash"]=function(){return(_crypto_pwhash_argon2i_str_needs_rehash=Module["_crypto_pwhash_argon2i_str_needs_rehash"]=Module["asm"]["Dd"]).apply(null,arguments)};var _crypto_pwhash_argon2id_str_needs_rehash=Module["_crypto_pwhash_argon2id_str_needs_rehash"]=function(){return(_crypto_pwhash_argon2id_str_needs_rehash=Module["_crypto_pwhash_argon2id_str_needs_rehash"]=Module["asm"]["Ed"]).apply(null,arguments)};var _crypto_pwhash_argon2id_alg_argon2id13=Module["_crypto_pwhash_argon2id_alg_argon2id13"]=function(){return(_crypto_pwhash_argon2id_alg_argon2id13=Module["_crypto_pwhash_argon2id_alg_argon2id13"]=Module["asm"]["Fd"]).apply(null,arguments)};var _crypto_pwhash_argon2id_bytes_min=Module["_crypto_pwhash_argon2id_bytes_min"]=function(){return(_crypto_pwhash_argon2id_bytes_min=Module["_crypto_pwhash_argon2id_bytes_min"]=Module["asm"]["Gd"]).apply(null,arguments)};var _crypto_pwhash_argon2id_bytes_max=Module["_crypto_pwhash_argon2id_bytes_max"]=function(){return(_crypto_pwhash_argon2id_bytes_max=Module["_crypto_pwhash_argon2id_bytes_max"]=Module["asm"]["Hd"]).apply(null,arguments)};var _crypto_pwhash_argon2id_passwd_min=Module["_crypto_pwhash_argon2id_passwd_min"]=function(){return(_crypto_pwhash_argon2id_passwd_min=Module["_crypto_pwhash_argon2id_passwd_min"]=Module["asm"]["Id"]).apply(null,arguments)};var _crypto_pwhash_argon2id_passwd_max=Module["_crypto_pwhash_argon2id_passwd_max"]=function(){return(_crypto_pwhash_argon2id_passwd_max=Module["_crypto_pwhash_argon2id_passwd_max"]=Module["asm"]["Jd"]).apply(null,arguments)};var _crypto_pwhash_argon2id_saltbytes=Module["_crypto_pwhash_argon2id_saltbytes"]=function(){return(_crypto_pwhash_argon2id_saltbytes=Module["_crypto_pwhash_argon2id_saltbytes"]=Module["asm"]["Kd"]).apply(null,arguments)};var _crypto_pwhash_argon2id_strbytes=Module["_crypto_pwhash_argon2id_strbytes"]=function(){return(_crypto_pwhash_argon2id_strbytes=Module["_crypto_pwhash_argon2id_strbytes"]=Module["asm"]["Ld"]).apply(null,arguments)};var _crypto_pwhash_argon2id_strprefix=Module["_crypto_pwhash_argon2id_strprefix"]=function(){return(_crypto_pwhash_argon2id_strprefix=Module["_crypto_pwhash_argon2id_strprefix"]=Module["asm"]["Md"]).apply(null,arguments)};var _crypto_pwhash_argon2id_opslimit_min=Module["_crypto_pwhash_argon2id_opslimit_min"]=function(){return(_crypto_pwhash_argon2id_opslimit_min=Module["_crypto_pwhash_argon2id_opslimit_min"]=Module["asm"]["Nd"]).apply(null,arguments)};var _crypto_pwhash_argon2id_opslimit_max=Module["_crypto_pwhash_argon2id_opslimit_max"]=function(){return(_crypto_pwhash_argon2id_opslimit_max=Module["_crypto_pwhash_argon2id_opslimit_max"]=Module["asm"]["Od"]).apply(null,arguments)};var _crypto_pwhash_argon2id_memlimit_min=Module["_crypto_pwhash_argon2id_memlimit_min"]=function(){return(_crypto_pwhash_argon2id_memlimit_min=Module["_crypto_pwhash_argon2id_memlimit_min"]=Module["asm"]["Pd"]).apply(null,arguments)};var _crypto_pwhash_argon2id_memlimit_max=Module["_crypto_pwhash_argon2id_memlimit_max"]=function(){return(_crypto_pwhash_argon2id_memlimit_max=Module["_crypto_pwhash_argon2id_memlimit_max"]=Module["asm"]["Qd"]).apply(null,arguments)};var _crypto_pwhash_argon2id_opslimit_interactive=Module["_crypto_pwhash_argon2id_opslimit_interactive"]=function(){return(_crypto_pwhash_argon2id_opslimit_interactive=Module["_crypto_pwhash_argon2id_opslimit_interactive"]=Module["asm"]["Rd"]).apply(null,arguments)};var _crypto_pwhash_argon2id_memlimit_interactive=Module["_crypto_pwhash_argon2id_memlimit_interactive"]=function(){return(_crypto_pwhash_argon2id_memlimit_interactive=Module["_crypto_pwhash_argon2id_memlimit_interactive"]=Module["asm"]["Sd"]).apply(null,arguments)};var _crypto_pwhash_argon2id_opslimit_moderate=Module["_crypto_pwhash_argon2id_opslimit_moderate"]=function(){return(_crypto_pwhash_argon2id_opslimit_moderate=Module["_crypto_pwhash_argon2id_opslimit_moderate"]=Module["asm"]["Td"]).apply(null,arguments)};var _crypto_pwhash_argon2id_memlimit_moderate=Module["_crypto_pwhash_argon2id_memlimit_moderate"]=function(){return(_crypto_pwhash_argon2id_memlimit_moderate=Module["_crypto_pwhash_argon2id_memlimit_moderate"]=Module["asm"]["Ud"]).apply(null,arguments)};var _crypto_pwhash_argon2id_opslimit_sensitive=Module["_crypto_pwhash_argon2id_opslimit_sensitive"]=function(){return(_crypto_pwhash_argon2id_opslimit_sensitive=Module["_crypto_pwhash_argon2id_opslimit_sensitive"]=Module["asm"]["Vd"]).apply(null,arguments)};var _crypto_pwhash_argon2id_memlimit_sensitive=Module["_crypto_pwhash_argon2id_memlimit_sensitive"]=function(){return(_crypto_pwhash_argon2id_memlimit_sensitive=Module["_crypto_pwhash_argon2id_memlimit_sensitive"]=Module["asm"]["Wd"]).apply(null,arguments)};var _crypto_pwhash_argon2id=Module["_crypto_pwhash_argon2id"]=function(){return(_crypto_pwhash_argon2id=Module["_crypto_pwhash_argon2id"]=Module["asm"]["Xd"]).apply(null,arguments)};var _crypto_pwhash_argon2id_str=Module["_crypto_pwhash_argon2id_str"]=function(){return(_crypto_pwhash_argon2id_str=Module["_crypto_pwhash_argon2id_str"]=Module["asm"]["Yd"]).apply(null,arguments)};var _crypto_pwhash_argon2id_str_verify=Module["_crypto_pwhash_argon2id_str_verify"]=function(){return(_crypto_pwhash_argon2id_str_verify=Module["_crypto_pwhash_argon2id_str_verify"]=Module["asm"]["Zd"]).apply(null,arguments)};var _crypto_pwhash_alg_argon2i13=Module["_crypto_pwhash_alg_argon2i13"]=function(){return(_crypto_pwhash_alg_argon2i13=Module["_crypto_pwhash_alg_argon2i13"]=Module["asm"]["_d"]).apply(null,arguments)};var _crypto_pwhash_alg_argon2id13=Module["_crypto_pwhash_alg_argon2id13"]=function(){return(_crypto_pwhash_alg_argon2id13=Module["_crypto_pwhash_alg_argon2id13"]=Module["asm"]["$d"]).apply(null,arguments)};var _crypto_pwhash_alg_default=Module["_crypto_pwhash_alg_default"]=function(){return(_crypto_pwhash_alg_default=Module["_crypto_pwhash_alg_default"]=Module["asm"]["ae"]).apply(null,arguments)};var _crypto_pwhash_bytes_min=Module["_crypto_pwhash_bytes_min"]=function(){return(_crypto_pwhash_bytes_min=Module["_crypto_pwhash_bytes_min"]=Module["asm"]["be"]).apply(null,arguments)};var _crypto_pwhash_bytes_max=Module["_crypto_pwhash_bytes_max"]=function(){return(_crypto_pwhash_bytes_max=Module["_crypto_pwhash_bytes_max"]=Module["asm"]["ce"]).apply(null,arguments)};var _crypto_pwhash_passwd_min=Module["_crypto_pwhash_passwd_min"]=function(){return(_crypto_pwhash_passwd_min=Module["_crypto_pwhash_passwd_min"]=Module["asm"]["de"]).apply(null,arguments)};var _crypto_pwhash_passwd_max=Module["_crypto_pwhash_passwd_max"]=function(){return(_crypto_pwhash_passwd_max=Module["_crypto_pwhash_passwd_max"]=Module["asm"]["ee"]).apply(null,arguments)};var _crypto_pwhash_saltbytes=Module["_crypto_pwhash_saltbytes"]=function(){return(_crypto_pwhash_saltbytes=Module["_crypto_pwhash_saltbytes"]=Module["asm"]["fe"]).apply(null,arguments)};var _crypto_pwhash_strbytes=Module["_crypto_pwhash_strbytes"]=function(){return(_crypto_pwhash_strbytes=Module["_crypto_pwhash_strbytes"]=Module["asm"]["ge"]).apply(null,arguments)};var _crypto_pwhash_strprefix=Module["_crypto_pwhash_strprefix"]=function(){return(_crypto_pwhash_strprefix=Module["_crypto_pwhash_strprefix"]=Module["asm"]["he"]).apply(null,arguments)};var _crypto_pwhash_opslimit_min=Module["_crypto_pwhash_opslimit_min"]=function(){return(_crypto_pwhash_opslimit_min=Module["_crypto_pwhash_opslimit_min"]=Module["asm"]["ie"]).apply(null,arguments)};var _crypto_pwhash_opslimit_max=Module["_crypto_pwhash_opslimit_max"]=function(){return(_crypto_pwhash_opslimit_max=Module["_crypto_pwhash_opslimit_max"]=Module["asm"]["je"]).apply(null,arguments)};var _crypto_pwhash_memlimit_min=Module["_crypto_pwhash_memlimit_min"]=function(){return(_crypto_pwhash_memlimit_min=Module["_crypto_pwhash_memlimit_min"]=Module["asm"]["ke"]).apply(null,arguments)};var _crypto_pwhash_memlimit_max=Module["_crypto_pwhash_memlimit_max"]=function(){return(_crypto_pwhash_memlimit_max=Module["_crypto_pwhash_memlimit_max"]=Module["asm"]["le"]).apply(null,arguments)};var _crypto_pwhash_opslimit_interactive=Module["_crypto_pwhash_opslimit_interactive"]=function(){return(_crypto_pwhash_opslimit_interactive=Module["_crypto_pwhash_opslimit_interactive"]=Module["asm"]["me"]).apply(null,arguments)};var _crypto_pwhash_memlimit_interactive=Module["_crypto_pwhash_memlimit_interactive"]=function(){return(_crypto_pwhash_memlimit_interactive=Module["_crypto_pwhash_memlimit_interactive"]=Module["asm"]["ne"]).apply(null,arguments)};var _crypto_pwhash_opslimit_moderate=Module["_crypto_pwhash_opslimit_moderate"]=function(){return(_crypto_pwhash_opslimit_moderate=Module["_crypto_pwhash_opslimit_moderate"]=Module["asm"]["oe"]).apply(null,arguments)};var _crypto_pwhash_memlimit_moderate=Module["_crypto_pwhash_memlimit_moderate"]=function(){return(_crypto_pwhash_memlimit_moderate=Module["_crypto_pwhash_memlimit_moderate"]=Module["asm"]["pe"]).apply(null,arguments)};var _crypto_pwhash_opslimit_sensitive=Module["_crypto_pwhash_opslimit_sensitive"]=function(){return(_crypto_pwhash_opslimit_sensitive=Module["_crypto_pwhash_opslimit_sensitive"]=Module["asm"]["qe"]).apply(null,arguments)};var _crypto_pwhash_memlimit_sensitive=Module["_crypto_pwhash_memlimit_sensitive"]=function(){return(_crypto_pwhash_memlimit_sensitive=Module["_crypto_pwhash_memlimit_sensitive"]=Module["asm"]["re"]).apply(null,arguments)};var _crypto_pwhash=Module["_crypto_pwhash"]=function(){return(_crypto_pwhash=Module["_crypto_pwhash"]=Module["asm"]["se"]).apply(null,arguments)};var _crypto_pwhash_str=Module["_crypto_pwhash_str"]=function(){return(_crypto_pwhash_str=Module["_crypto_pwhash_str"]=Module["asm"]["te"]).apply(null,arguments)};var _crypto_pwhash_str_alg=Module["_crypto_pwhash_str_alg"]=function(){return(_crypto_pwhash_str_alg=Module["_crypto_pwhash_str_alg"]=Module["asm"]["ue"]).apply(null,arguments)};var _crypto_pwhash_str_verify=Module["_crypto_pwhash_str_verify"]=function(){return(_crypto_pwhash_str_verify=Module["_crypto_pwhash_str_verify"]=Module["asm"]["ve"]).apply(null,arguments)};var _crypto_pwhash_str_needs_rehash=Module["_crypto_pwhash_str_needs_rehash"]=function(){return(_crypto_pwhash_str_needs_rehash=Module["_crypto_pwhash_str_needs_rehash"]=Module["asm"]["we"]).apply(null,arguments)};var _crypto_pwhash_primitive=Module["_crypto_pwhash_primitive"]=function(){return(_crypto_pwhash_primitive=Module["_crypto_pwhash_primitive"]=Module["asm"]["xe"]).apply(null,arguments)};var _crypto_scalarmult_primitive=Module["_crypto_scalarmult_primitive"]=function(){return(_crypto_scalarmult_primitive=Module["_crypto_scalarmult_primitive"]=Module["asm"]["ye"]).apply(null,arguments)};var _crypto_scalarmult_base=Module["_crypto_scalarmult_base"]=function(){return(_crypto_scalarmult_base=Module["_crypto_scalarmult_base"]=Module["asm"]["ze"]).apply(null,arguments)};var _crypto_scalarmult=Module["_crypto_scalarmult"]=function(){return(_crypto_scalarmult=Module["_crypto_scalarmult"]=Module["asm"]["Ae"]).apply(null,arguments)};var _crypto_scalarmult_bytes=Module["_crypto_scalarmult_bytes"]=function(){return(_crypto_scalarmult_bytes=Module["_crypto_scalarmult_bytes"]=Module["asm"]["Be"]).apply(null,arguments)};var _crypto_scalarmult_scalarbytes=Module["_crypto_scalarmult_scalarbytes"]=function(){return(_crypto_scalarmult_scalarbytes=Module["_crypto_scalarmult_scalarbytes"]=Module["asm"]["Ce"]).apply(null,arguments)};var _crypto_scalarmult_curve25519=Module["_crypto_scalarmult_curve25519"]=function(){return(_crypto_scalarmult_curve25519=Module["_crypto_scalarmult_curve25519"]=Module["asm"]["De"]).apply(null,arguments)};var _crypto_scalarmult_curve25519_base=Module["_crypto_scalarmult_curve25519_base"]=function(){return(_crypto_scalarmult_curve25519_base=Module["_crypto_scalarmult_curve25519_base"]=Module["asm"]["Ee"]).apply(null,arguments)};var _crypto_scalarmult_curve25519_bytes=Module["_crypto_scalarmult_curve25519_bytes"]=function(){return(_crypto_scalarmult_curve25519_bytes=Module["_crypto_scalarmult_curve25519_bytes"]=Module["asm"]["Fe"]).apply(null,arguments)};var _crypto_scalarmult_curve25519_scalarbytes=Module["_crypto_scalarmult_curve25519_scalarbytes"]=function(){return(_crypto_scalarmult_curve25519_scalarbytes=Module["_crypto_scalarmult_curve25519_scalarbytes"]=Module["asm"]["Ge"]).apply(null,arguments)};var _crypto_secretbox_keybytes=Module["_crypto_secretbox_keybytes"]=function(){return(_crypto_secretbox_keybytes=Module["_crypto_secretbox_keybytes"]=Module["asm"]["He"]).apply(null,arguments)};var _crypto_secretbox_noncebytes=Module["_crypto_secretbox_noncebytes"]=function(){return(_crypto_secretbox_noncebytes=Module["_crypto_secretbox_noncebytes"]=Module["asm"]["Ie"]).apply(null,arguments)};var _crypto_secretbox_zerobytes=Module["_crypto_secretbox_zerobytes"]=function(){return(_crypto_secretbox_zerobytes=Module["_crypto_secretbox_zerobytes"]=Module["asm"]["Je"]).apply(null,arguments)};var _crypto_secretbox_boxzerobytes=Module["_crypto_secretbox_boxzerobytes"]=function(){return(_crypto_secretbox_boxzerobytes=Module["_crypto_secretbox_boxzerobytes"]=Module["asm"]["Ke"]).apply(null,arguments)};var _crypto_secretbox_macbytes=Module["_crypto_secretbox_macbytes"]=function(){return(_crypto_secretbox_macbytes=Module["_crypto_secretbox_macbytes"]=Module["asm"]["Le"]).apply(null,arguments)};var _crypto_secretbox_messagebytes_max=Module["_crypto_secretbox_messagebytes_max"]=function(){return(_crypto_secretbox_messagebytes_max=Module["_crypto_secretbox_messagebytes_max"]=Module["asm"]["Me"]).apply(null,arguments)};var _crypto_secretbox_primitive=Module["_crypto_secretbox_primitive"]=function(){return(_crypto_secretbox_primitive=Module["_crypto_secretbox_primitive"]=Module["asm"]["Ne"]).apply(null,arguments)};var _crypto_secretbox=Module["_crypto_secretbox"]=function(){return(_crypto_secretbox=Module["_crypto_secretbox"]=Module["asm"]["Oe"]).apply(null,arguments)};var _crypto_secretbox_open=Module["_crypto_secretbox_open"]=function(){return(_crypto_secretbox_open=Module["_crypto_secretbox_open"]=Module["asm"]["Pe"]).apply(null,arguments)};var _crypto_secretbox_keygen=Module["_crypto_secretbox_keygen"]=function(){return(_crypto_secretbox_keygen=Module["_crypto_secretbox_keygen"]=Module["asm"]["Qe"]).apply(null,arguments)};var _crypto_secretbox_detached=Module["_crypto_secretbox_detached"]=function(){return(_crypto_secretbox_detached=Module["_crypto_secretbox_detached"]=Module["asm"]["Re"]).apply(null,arguments)};var _crypto_secretbox_easy=Module["_crypto_secretbox_easy"]=function(){return(_crypto_secretbox_easy=Module["_crypto_secretbox_easy"]=Module["asm"]["Se"]).apply(null,arguments)};var _crypto_secretbox_open_detached=Module["_crypto_secretbox_open_detached"]=function(){return(_crypto_secretbox_open_detached=Module["_crypto_secretbox_open_detached"]=Module["asm"]["Te"]).apply(null,arguments)};var _crypto_secretbox_open_easy=Module["_crypto_secretbox_open_easy"]=function(){return(_crypto_secretbox_open_easy=Module["_crypto_secretbox_open_easy"]=Module["asm"]["Ue"]).apply(null,arguments)};var _crypto_secretbox_xsalsa20poly1305=Module["_crypto_secretbox_xsalsa20poly1305"]=function(){return(_crypto_secretbox_xsalsa20poly1305=Module["_crypto_secretbox_xsalsa20poly1305"]=Module["asm"]["Ve"]).apply(null,arguments)};var _crypto_secretbox_xsalsa20poly1305_open=Module["_crypto_secretbox_xsalsa20poly1305_open"]=function(){return(_crypto_secretbox_xsalsa20poly1305_open=Module["_crypto_secretbox_xsalsa20poly1305_open"]=Module["asm"]["We"]).apply(null,arguments)};var _crypto_secretbox_xsalsa20poly1305_keybytes=Module["_crypto_secretbox_xsalsa20poly1305_keybytes"]=function(){return(_crypto_secretbox_xsalsa20poly1305_keybytes=Module["_crypto_secretbox_xsalsa20poly1305_keybytes"]=Module["asm"]["Xe"]).apply(null,arguments)};var _crypto_secretbox_xsalsa20poly1305_noncebytes=Module["_crypto_secretbox_xsalsa20poly1305_noncebytes"]=function(){return(_crypto_secretbox_xsalsa20poly1305_noncebytes=Module["_crypto_secretbox_xsalsa20poly1305_noncebytes"]=Module["asm"]["Ye"]).apply(null,arguments)};var _crypto_secretbox_xsalsa20poly1305_zerobytes=Module["_crypto_secretbox_xsalsa20poly1305_zerobytes"]=function(){return(_crypto_secretbox_xsalsa20poly1305_zerobytes=Module["_crypto_secretbox_xsalsa20poly1305_zerobytes"]=Module["asm"]["Ze"]).apply(null,arguments)};var _crypto_secretbox_xsalsa20poly1305_boxzerobytes=Module["_crypto_secretbox_xsalsa20poly1305_boxzerobytes"]=function(){return(_crypto_secretbox_xsalsa20poly1305_boxzerobytes=Module["_crypto_secretbox_xsalsa20poly1305_boxzerobytes"]=Module["asm"]["_e"]).apply(null,arguments)};var _crypto_secretbox_xsalsa20poly1305_macbytes=Module["_crypto_secretbox_xsalsa20poly1305_macbytes"]=function(){return(_crypto_secretbox_xsalsa20poly1305_macbytes=Module["_crypto_secretbox_xsalsa20poly1305_macbytes"]=Module["asm"]["$e"]).apply(null,arguments)};var _crypto_secretbox_xsalsa20poly1305_messagebytes_max=Module["_crypto_secretbox_xsalsa20poly1305_messagebytes_max"]=function(){return(_crypto_secretbox_xsalsa20poly1305_messagebytes_max=Module["_crypto_secretbox_xsalsa20poly1305_messagebytes_max"]=Module["asm"]["af"]).apply(null,arguments)};var _crypto_secretbox_xsalsa20poly1305_keygen=Module["_crypto_secretbox_xsalsa20poly1305_keygen"]=function(){return(_crypto_secretbox_xsalsa20poly1305_keygen=Module["_crypto_secretbox_xsalsa20poly1305_keygen"]=Module["asm"]["bf"]).apply(null,arguments)};var _crypto_secretstream_xchacha20poly1305_keygen=Module["_crypto_secretstream_xchacha20poly1305_keygen"]=function(){return(_crypto_secretstream_xchacha20poly1305_keygen=Module["_crypto_secretstream_xchacha20poly1305_keygen"]=Module["asm"]["cf"]).apply(null,arguments)};var _crypto_secretstream_xchacha20poly1305_init_push=Module["_crypto_secretstream_xchacha20poly1305_init_push"]=function(){return(_crypto_secretstream_xchacha20poly1305_init_push=Module["_crypto_secretstream_xchacha20poly1305_init_push"]=Module["asm"]["df"]).apply(null,arguments)};var _crypto_secretstream_xchacha20poly1305_init_pull=Module["_crypto_secretstream_xchacha20poly1305_init_pull"]=function(){return(_crypto_secretstream_xchacha20poly1305_init_pull=Module["_crypto_secretstream_xchacha20poly1305_init_pull"]=Module["asm"]["ef"]).apply(null,arguments)};var _crypto_secretstream_xchacha20poly1305_rekey=Module["_crypto_secretstream_xchacha20poly1305_rekey"]=function(){return(_crypto_secretstream_xchacha20poly1305_rekey=Module["_crypto_secretstream_xchacha20poly1305_rekey"]=Module["asm"]["ff"]).apply(null,arguments)};var _crypto_secretstream_xchacha20poly1305_push=Module["_crypto_secretstream_xchacha20poly1305_push"]=function(){return(_crypto_secretstream_xchacha20poly1305_push=Module["_crypto_secretstream_xchacha20poly1305_push"]=Module["asm"]["gf"]).apply(null,arguments)};var _crypto_secretstream_xchacha20poly1305_pull=Module["_crypto_secretstream_xchacha20poly1305_pull"]=function(){return(_crypto_secretstream_xchacha20poly1305_pull=Module["_crypto_secretstream_xchacha20poly1305_pull"]=Module["asm"]["hf"]).apply(null,arguments)};var _crypto_secretstream_xchacha20poly1305_statebytes=Module["_crypto_secretstream_xchacha20poly1305_statebytes"]=function(){return(_crypto_secretstream_xchacha20poly1305_statebytes=Module["_crypto_secretstream_xchacha20poly1305_statebytes"]=Module["asm"]["jf"]).apply(null,arguments)};var _crypto_secretstream_xchacha20poly1305_abytes=Module["_crypto_secretstream_xchacha20poly1305_abytes"]=function(){return(_crypto_secretstream_xchacha20poly1305_abytes=Module["_crypto_secretstream_xchacha20poly1305_abytes"]=Module["asm"]["kf"]).apply(null,arguments)};var _crypto_secretstream_xchacha20poly1305_headerbytes=Module["_crypto_secretstream_xchacha20poly1305_headerbytes"]=function(){return(_crypto_secretstream_xchacha20poly1305_headerbytes=Module["_crypto_secretstream_xchacha20poly1305_headerbytes"]=Module["asm"]["lf"]).apply(null,arguments)};var _crypto_secretstream_xchacha20poly1305_keybytes=Module["_crypto_secretstream_xchacha20poly1305_keybytes"]=function(){return(_crypto_secretstream_xchacha20poly1305_keybytes=Module["_crypto_secretstream_xchacha20poly1305_keybytes"]=Module["asm"]["mf"]).apply(null,arguments)};var _crypto_secretstream_xchacha20poly1305_messagebytes_max=Module["_crypto_secretstream_xchacha20poly1305_messagebytes_max"]=function(){return(_crypto_secretstream_xchacha20poly1305_messagebytes_max=Module["_crypto_secretstream_xchacha20poly1305_messagebytes_max"]=Module["asm"]["nf"]).apply(null,arguments)};var _crypto_secretstream_xchacha20poly1305_tag_message=Module["_crypto_secretstream_xchacha20poly1305_tag_message"]=function(){return(_crypto_secretstream_xchacha20poly1305_tag_message=Module["_crypto_secretstream_xchacha20poly1305_tag_message"]=Module["asm"]["of"]).apply(null,arguments)};var _crypto_secretstream_xchacha20poly1305_tag_push=Module["_crypto_secretstream_xchacha20poly1305_tag_push"]=function(){return(_crypto_secretstream_xchacha20poly1305_tag_push=Module["_crypto_secretstream_xchacha20poly1305_tag_push"]=Module["asm"]["pf"]).apply(null,arguments)};var _crypto_secretstream_xchacha20poly1305_tag_rekey=Module["_crypto_secretstream_xchacha20poly1305_tag_rekey"]=function(){return(_crypto_secretstream_xchacha20poly1305_tag_rekey=Module["_crypto_secretstream_xchacha20poly1305_tag_rekey"]=Module["asm"]["qf"]).apply(null,arguments)};var _crypto_secretstream_xchacha20poly1305_tag_final=Module["_crypto_secretstream_xchacha20poly1305_tag_final"]=function(){return(_crypto_secretstream_xchacha20poly1305_tag_final=Module["_crypto_secretstream_xchacha20poly1305_tag_final"]=Module["asm"]["rf"]).apply(null,arguments)};var _crypto_shorthash_bytes=Module["_crypto_shorthash_bytes"]=function(){return(_crypto_shorthash_bytes=Module["_crypto_shorthash_bytes"]=Module["asm"]["sf"]).apply(null,arguments)};var _crypto_shorthash_keybytes=Module["_crypto_shorthash_keybytes"]=function(){return(_crypto_shorthash_keybytes=Module["_crypto_shorthash_keybytes"]=Module["asm"]["tf"]).apply(null,arguments)};var _crypto_shorthash_primitive=Module["_crypto_shorthash_primitive"]=function(){return(_crypto_shorthash_primitive=Module["_crypto_shorthash_primitive"]=Module["asm"]["uf"]).apply(null,arguments)};var _crypto_shorthash=Module["_crypto_shorthash"]=function(){return(_crypto_shorthash=Module["_crypto_shorthash"]=Module["asm"]["vf"]).apply(null,arguments)};var _crypto_shorthash_keygen=Module["_crypto_shorthash_keygen"]=function(){return(_crypto_shorthash_keygen=Module["_crypto_shorthash_keygen"]=Module["asm"]["wf"]).apply(null,arguments)};var _crypto_shorthash_siphash24_bytes=Module["_crypto_shorthash_siphash24_bytes"]=function(){return(_crypto_shorthash_siphash24_bytes=Module["_crypto_shorthash_siphash24_bytes"]=Module["asm"]["xf"]).apply(null,arguments)};var _crypto_shorthash_siphash24_keybytes=Module["_crypto_shorthash_siphash24_keybytes"]=function(){return(_crypto_shorthash_siphash24_keybytes=Module["_crypto_shorthash_siphash24_keybytes"]=Module["asm"]["yf"]).apply(null,arguments)};var _crypto_shorthash_siphash24=Module["_crypto_shorthash_siphash24"]=function(){return(_crypto_shorthash_siphash24=Module["_crypto_shorthash_siphash24"]=Module["asm"]["zf"]).apply(null,arguments)};var _crypto_sign_statebytes=Module["_crypto_sign_statebytes"]=function(){return(_crypto_sign_statebytes=Module["_crypto_sign_statebytes"]=Module["asm"]["Af"]).apply(null,arguments)};var _crypto_sign_bytes=Module["_crypto_sign_bytes"]=function(){return(_crypto_sign_bytes=Module["_crypto_sign_bytes"]=Module["asm"]["Bf"]).apply(null,arguments)};var _crypto_sign_seedbytes=Module["_crypto_sign_seedbytes"]=function(){return(_crypto_sign_seedbytes=Module["_crypto_sign_seedbytes"]=Module["asm"]["Cf"]).apply(null,arguments)};var _crypto_sign_publickeybytes=Module["_crypto_sign_publickeybytes"]=function(){return(_crypto_sign_publickeybytes=Module["_crypto_sign_publickeybytes"]=Module["asm"]["Df"]).apply(null,arguments)};var _crypto_sign_secretkeybytes=Module["_crypto_sign_secretkeybytes"]=function(){return(_crypto_sign_secretkeybytes=Module["_crypto_sign_secretkeybytes"]=Module["asm"]["Ef"]).apply(null,arguments)};var _crypto_sign_messagebytes_max=Module["_crypto_sign_messagebytes_max"]=function(){return(_crypto_sign_messagebytes_max=Module["_crypto_sign_messagebytes_max"]=Module["asm"]["Ff"]).apply(null,arguments)};var _crypto_sign_primitive=Module["_crypto_sign_primitive"]=function(){return(_crypto_sign_primitive=Module["_crypto_sign_primitive"]=Module["asm"]["Gf"]).apply(null,arguments)};var _crypto_sign_seed_keypair=Module["_crypto_sign_seed_keypair"]=function(){return(_crypto_sign_seed_keypair=Module["_crypto_sign_seed_keypair"]=Module["asm"]["Hf"]).apply(null,arguments)};var _crypto_sign_keypair=Module["_crypto_sign_keypair"]=function(){return(_crypto_sign_keypair=Module["_crypto_sign_keypair"]=Module["asm"]["If"]).apply(null,arguments)};var _crypto_sign=Module["_crypto_sign"]=function(){return(_crypto_sign=Module["_crypto_sign"]=Module["asm"]["Jf"]).apply(null,arguments)};var _crypto_sign_open=Module["_crypto_sign_open"]=function(){return(_crypto_sign_open=Module["_crypto_sign_open"]=Module["asm"]["Kf"]).apply(null,arguments)};var _crypto_sign_detached=Module["_crypto_sign_detached"]=function(){return(_crypto_sign_detached=Module["_crypto_sign_detached"]=Module["asm"]["Lf"]).apply(null,arguments)};var _crypto_sign_verify_detached=Module["_crypto_sign_verify_detached"]=function(){return(_crypto_sign_verify_detached=Module["_crypto_sign_verify_detached"]=Module["asm"]["Mf"]).apply(null,arguments)};var _crypto_sign_init=Module["_crypto_sign_init"]=function(){return(_crypto_sign_init=Module["_crypto_sign_init"]=Module["asm"]["Nf"]).apply(null,arguments)};var _crypto_sign_update=Module["_crypto_sign_update"]=function(){return(_crypto_sign_update=Module["_crypto_sign_update"]=Module["asm"]["Of"]).apply(null,arguments)};var _crypto_sign_final_create=Module["_crypto_sign_final_create"]=function(){return(_crypto_sign_final_create=Module["_crypto_sign_final_create"]=Module["asm"]["Pf"]).apply(null,arguments)};var _crypto_sign_final_verify=Module["_crypto_sign_final_verify"]=function(){return(_crypto_sign_final_verify=Module["_crypto_sign_final_verify"]=Module["asm"]["Qf"]).apply(null,arguments)};var _crypto_sign_ed25519ph_statebytes=Module["_crypto_sign_ed25519ph_statebytes"]=function(){return(_crypto_sign_ed25519ph_statebytes=Module["_crypto_sign_ed25519ph_statebytes"]=Module["asm"]["Rf"]).apply(null,arguments)};var _crypto_sign_ed25519_bytes=Module["_crypto_sign_ed25519_bytes"]=function(){return(_crypto_sign_ed25519_bytes=Module["_crypto_sign_ed25519_bytes"]=Module["asm"]["Sf"]).apply(null,arguments)};var _crypto_sign_ed25519_seedbytes=Module["_crypto_sign_ed25519_seedbytes"]=function(){return(_crypto_sign_ed25519_seedbytes=Module["_crypto_sign_ed25519_seedbytes"]=Module["asm"]["Tf"]).apply(null,arguments)};var _crypto_sign_ed25519_publickeybytes=Module["_crypto_sign_ed25519_publickeybytes"]=function(){return(_crypto_sign_ed25519_publickeybytes=Module["_crypto_sign_ed25519_publickeybytes"]=Module["asm"]["Uf"]).apply(null,arguments)};var _crypto_sign_ed25519_secretkeybytes=Module["_crypto_sign_ed25519_secretkeybytes"]=function(){return(_crypto_sign_ed25519_secretkeybytes=Module["_crypto_sign_ed25519_secretkeybytes"]=Module["asm"]["Vf"]).apply(null,arguments)};var _crypto_sign_ed25519_messagebytes_max=Module["_crypto_sign_ed25519_messagebytes_max"]=function(){return(_crypto_sign_ed25519_messagebytes_max=Module["_crypto_sign_ed25519_messagebytes_max"]=Module["asm"]["Wf"]).apply(null,arguments)};var _crypto_sign_ed25519_sk_to_seed=Module["_crypto_sign_ed25519_sk_to_seed"]=function(){return(_crypto_sign_ed25519_sk_to_seed=Module["_crypto_sign_ed25519_sk_to_seed"]=Module["asm"]["Xf"]).apply(null,arguments)};var _crypto_sign_ed25519_sk_to_pk=Module["_crypto_sign_ed25519_sk_to_pk"]=function(){return(_crypto_sign_ed25519_sk_to_pk=Module["_crypto_sign_ed25519_sk_to_pk"]=Module["asm"]["Yf"]).apply(null,arguments)};var _crypto_sign_ed25519ph_init=Module["_crypto_sign_ed25519ph_init"]=function(){return(_crypto_sign_ed25519ph_init=Module["_crypto_sign_ed25519ph_init"]=Module["asm"]["Zf"]).apply(null,arguments)};var _crypto_sign_ed25519ph_update=Module["_crypto_sign_ed25519ph_update"]=function(){return(_crypto_sign_ed25519ph_update=Module["_crypto_sign_ed25519ph_update"]=Module["asm"]["_f"]).apply(null,arguments)};var _crypto_sign_ed25519ph_final_create=Module["_crypto_sign_ed25519ph_final_create"]=function(){return(_crypto_sign_ed25519ph_final_create=Module["_crypto_sign_ed25519ph_final_create"]=Module["asm"]["$f"]).apply(null,arguments)};var _crypto_sign_ed25519ph_final_verify=Module["_crypto_sign_ed25519ph_final_verify"]=function(){return(_crypto_sign_ed25519ph_final_verify=Module["_crypto_sign_ed25519ph_final_verify"]=Module["asm"]["ag"]).apply(null,arguments)};var _crypto_sign_ed25519_seed_keypair=Module["_crypto_sign_ed25519_seed_keypair"]=function(){return(_crypto_sign_ed25519_seed_keypair=Module["_crypto_sign_ed25519_seed_keypair"]=Module["asm"]["bg"]).apply(null,arguments)};var _crypto_sign_ed25519_keypair=Module["_crypto_sign_ed25519_keypair"]=function(){return(_crypto_sign_ed25519_keypair=Module["_crypto_sign_ed25519_keypair"]=Module["asm"]["cg"]).apply(null,arguments)};var _crypto_sign_ed25519_pk_to_curve25519=Module["_crypto_sign_ed25519_pk_to_curve25519"]=function(){return(_crypto_sign_ed25519_pk_to_curve25519=Module["_crypto_sign_ed25519_pk_to_curve25519"]=Module["asm"]["dg"]).apply(null,arguments)};var _crypto_sign_ed25519_sk_to_curve25519=Module["_crypto_sign_ed25519_sk_to_curve25519"]=function(){return(_crypto_sign_ed25519_sk_to_curve25519=Module["_crypto_sign_ed25519_sk_to_curve25519"]=Module["asm"]["eg"]).apply(null,arguments)};var _crypto_sign_ed25519_verify_detached=Module["_crypto_sign_ed25519_verify_detached"]=function(){return(_crypto_sign_ed25519_verify_detached=Module["_crypto_sign_ed25519_verify_detached"]=Module["asm"]["fg"]).apply(null,arguments)};var _crypto_sign_ed25519_open=Module["_crypto_sign_ed25519_open"]=function(){return(_crypto_sign_ed25519_open=Module["_crypto_sign_ed25519_open"]=Module["asm"]["gg"]).apply(null,arguments)};var _crypto_sign_ed25519_detached=Module["_crypto_sign_ed25519_detached"]=function(){return(_crypto_sign_ed25519_detached=Module["_crypto_sign_ed25519_detached"]=Module["asm"]["hg"]).apply(null,arguments)};var _crypto_sign_ed25519=Module["_crypto_sign_ed25519"]=function(){return(_crypto_sign_ed25519=Module["_crypto_sign_ed25519"]=Module["asm"]["ig"]).apply(null,arguments)};var _crypto_stream_chacha20_keybytes=Module["_crypto_stream_chacha20_keybytes"]=function(){return(_crypto_stream_chacha20_keybytes=Module["_crypto_stream_chacha20_keybytes"]=Module["asm"]["jg"]).apply(null,arguments)};var _crypto_stream_chacha20_noncebytes=Module["_crypto_stream_chacha20_noncebytes"]=function(){return(_crypto_stream_chacha20_noncebytes=Module["_crypto_stream_chacha20_noncebytes"]=Module["asm"]["kg"]).apply(null,arguments)};var _crypto_stream_chacha20_messagebytes_max=Module["_crypto_stream_chacha20_messagebytes_max"]=function(){return(_crypto_stream_chacha20_messagebytes_max=Module["_crypto_stream_chacha20_messagebytes_max"]=Module["asm"]["lg"]).apply(null,arguments)};var _crypto_stream_chacha20_ietf_keybytes=Module["_crypto_stream_chacha20_ietf_keybytes"]=function(){return(_crypto_stream_chacha20_ietf_keybytes=Module["_crypto_stream_chacha20_ietf_keybytes"]=Module["asm"]["mg"]).apply(null,arguments)};var _crypto_stream_chacha20_ietf_noncebytes=Module["_crypto_stream_chacha20_ietf_noncebytes"]=function(){return(_crypto_stream_chacha20_ietf_noncebytes=Module["_crypto_stream_chacha20_ietf_noncebytes"]=Module["asm"]["ng"]).apply(null,arguments)};var _crypto_stream_chacha20_ietf_messagebytes_max=Module["_crypto_stream_chacha20_ietf_messagebytes_max"]=function(){return(_crypto_stream_chacha20_ietf_messagebytes_max=Module["_crypto_stream_chacha20_ietf_messagebytes_max"]=Module["asm"]["og"]).apply(null,arguments)};var _crypto_stream_chacha20=Module["_crypto_stream_chacha20"]=function(){return(_crypto_stream_chacha20=Module["_crypto_stream_chacha20"]=Module["asm"]["pg"]).apply(null,arguments)};var _crypto_stream_chacha20_xor_ic=Module["_crypto_stream_chacha20_xor_ic"]=function(){return(_crypto_stream_chacha20_xor_ic=Module["_crypto_stream_chacha20_xor_ic"]=Module["asm"]["qg"]).apply(null,arguments)};var _crypto_stream_chacha20_xor=Module["_crypto_stream_chacha20_xor"]=function(){return(_crypto_stream_chacha20_xor=Module["_crypto_stream_chacha20_xor"]=Module["asm"]["rg"]).apply(null,arguments)};var _crypto_stream_chacha20_ietf=Module["_crypto_stream_chacha20_ietf"]=function(){return(_crypto_stream_chacha20_ietf=Module["_crypto_stream_chacha20_ietf"]=Module["asm"]["sg"]).apply(null,arguments)};var _crypto_stream_chacha20_ietf_xor_ic=Module["_crypto_stream_chacha20_ietf_xor_ic"]=function(){return(_crypto_stream_chacha20_ietf_xor_ic=Module["_crypto_stream_chacha20_ietf_xor_ic"]=Module["asm"]["tg"]).apply(null,arguments)};var _crypto_stream_chacha20_ietf_xor=Module["_crypto_stream_chacha20_ietf_xor"]=function(){return(_crypto_stream_chacha20_ietf_xor=Module["_crypto_stream_chacha20_ietf_xor"]=Module["asm"]["ug"]).apply(null,arguments)};var _crypto_stream_chacha20_ietf_keygen=Module["_crypto_stream_chacha20_ietf_keygen"]=function(){return(_crypto_stream_chacha20_ietf_keygen=Module["_crypto_stream_chacha20_ietf_keygen"]=Module["asm"]["vg"]).apply(null,arguments)};var _crypto_stream_chacha20_keygen=Module["_crypto_stream_chacha20_keygen"]=function(){return(_crypto_stream_chacha20_keygen=Module["_crypto_stream_chacha20_keygen"]=Module["asm"]["wg"]).apply(null,arguments)};var _crypto_stream_keybytes=Module["_crypto_stream_keybytes"]=function(){return(_crypto_stream_keybytes=Module["_crypto_stream_keybytes"]=Module["asm"]["xg"]).apply(null,arguments)};var _crypto_stream_noncebytes=Module["_crypto_stream_noncebytes"]=function(){return(_crypto_stream_noncebytes=Module["_crypto_stream_noncebytes"]=Module["asm"]["yg"]).apply(null,arguments)};var _crypto_stream_messagebytes_max=Module["_crypto_stream_messagebytes_max"]=function(){return(_crypto_stream_messagebytes_max=Module["_crypto_stream_messagebytes_max"]=Module["asm"]["zg"]).apply(null,arguments)};var _crypto_stream_primitive=Module["_crypto_stream_primitive"]=function(){return(_crypto_stream_primitive=Module["_crypto_stream_primitive"]=Module["asm"]["Ag"]).apply(null,arguments)};var _crypto_stream=Module["_crypto_stream"]=function(){return(_crypto_stream=Module["_crypto_stream"]=Module["asm"]["Bg"]).apply(null,arguments)};var _crypto_stream_xor=Module["_crypto_stream_xor"]=function(){return(_crypto_stream_xor=Module["_crypto_stream_xor"]=Module["asm"]["Cg"]).apply(null,arguments)};var _crypto_stream_keygen=Module["_crypto_stream_keygen"]=function(){return(_crypto_stream_keygen=Module["_crypto_stream_keygen"]=Module["asm"]["Dg"]).apply(null,arguments)};var _crypto_stream_salsa20_keybytes=Module["_crypto_stream_salsa20_keybytes"]=function(){return(_crypto_stream_salsa20_keybytes=Module["_crypto_stream_salsa20_keybytes"]=Module["asm"]["Eg"]).apply(null,arguments)};var _crypto_stream_salsa20_noncebytes=Module["_crypto_stream_salsa20_noncebytes"]=function(){return(_crypto_stream_salsa20_noncebytes=Module["_crypto_stream_salsa20_noncebytes"]=Module["asm"]["Fg"]).apply(null,arguments)};var _crypto_stream_salsa20_messagebytes_max=Module["_crypto_stream_salsa20_messagebytes_max"]=function(){return(_crypto_stream_salsa20_messagebytes_max=Module["_crypto_stream_salsa20_messagebytes_max"]=Module["asm"]["Gg"]).apply(null,arguments)};var _crypto_stream_salsa20=Module["_crypto_stream_salsa20"]=function(){return(_crypto_stream_salsa20=Module["_crypto_stream_salsa20"]=Module["asm"]["Hg"]).apply(null,arguments)};var _crypto_stream_salsa20_xor_ic=Module["_crypto_stream_salsa20_xor_ic"]=function(){return(_crypto_stream_salsa20_xor_ic=Module["_crypto_stream_salsa20_xor_ic"]=Module["asm"]["Ig"]).apply(null,arguments)};var _crypto_stream_salsa20_xor=Module["_crypto_stream_salsa20_xor"]=function(){return(_crypto_stream_salsa20_xor=Module["_crypto_stream_salsa20_xor"]=Module["asm"]["Jg"]).apply(null,arguments)};var _crypto_stream_salsa20_keygen=Module["_crypto_stream_salsa20_keygen"]=function(){return(_crypto_stream_salsa20_keygen=Module["_crypto_stream_salsa20_keygen"]=Module["asm"]["Kg"]).apply(null,arguments)};var _crypto_stream_xsalsa20=Module["_crypto_stream_xsalsa20"]=function(){return(_crypto_stream_xsalsa20=Module["_crypto_stream_xsalsa20"]=Module["asm"]["Lg"]).apply(null,arguments)};var _crypto_stream_xsalsa20_xor_ic=Module["_crypto_stream_xsalsa20_xor_ic"]=function(){return(_crypto_stream_xsalsa20_xor_ic=Module["_crypto_stream_xsalsa20_xor_ic"]=Module["asm"]["Mg"]).apply(null,arguments)};var _crypto_stream_xsalsa20_xor=Module["_crypto_stream_xsalsa20_xor"]=function(){return(_crypto_stream_xsalsa20_xor=Module["_crypto_stream_xsalsa20_xor"]=Module["asm"]["Ng"]).apply(null,arguments)};var _crypto_stream_xsalsa20_keybytes=Module["_crypto_stream_xsalsa20_keybytes"]=function(){return(_crypto_stream_xsalsa20_keybytes=Module["_crypto_stream_xsalsa20_keybytes"]=Module["asm"]["Og"]).apply(null,arguments)};var _crypto_stream_xsalsa20_noncebytes=Module["_crypto_stream_xsalsa20_noncebytes"]=function(){return(_crypto_stream_xsalsa20_noncebytes=Module["_crypto_stream_xsalsa20_noncebytes"]=Module["asm"]["Pg"]).apply(null,arguments)};var _crypto_stream_xsalsa20_messagebytes_max=Module["_crypto_stream_xsalsa20_messagebytes_max"]=function(){return(_crypto_stream_xsalsa20_messagebytes_max=Module["_crypto_stream_xsalsa20_messagebytes_max"]=Module["asm"]["Qg"]).apply(null,arguments)};var _crypto_stream_xsalsa20_keygen=Module["_crypto_stream_xsalsa20_keygen"]=function(){return(_crypto_stream_xsalsa20_keygen=Module["_crypto_stream_xsalsa20_keygen"]=Module["asm"]["Rg"]).apply(null,arguments)};var _crypto_verify_16_bytes=Module["_crypto_verify_16_bytes"]=function(){return(_crypto_verify_16_bytes=Module["_crypto_verify_16_bytes"]=Module["asm"]["Sg"]).apply(null,arguments)};var _crypto_verify_32_bytes=Module["_crypto_verify_32_bytes"]=function(){return(_crypto_verify_32_bytes=Module["_crypto_verify_32_bytes"]=Module["asm"]["Tg"]).apply(null,arguments)};var _crypto_verify_64_bytes=Module["_crypto_verify_64_bytes"]=function(){return(_crypto_verify_64_bytes=Module["_crypto_verify_64_bytes"]=Module["asm"]["Ug"]).apply(null,arguments)};var _crypto_verify_16=Module["_crypto_verify_16"]=function(){return(_crypto_verify_16=Module["_crypto_verify_16"]=Module["asm"]["Vg"]).apply(null,arguments)};var _crypto_verify_32=Module["_crypto_verify_32"]=function(){return(_crypto_verify_32=Module["_crypto_verify_32"]=Module["asm"]["Wg"]).apply(null,arguments)};var _crypto_verify_64=Module["_crypto_verify_64"]=function(){return(_crypto_verify_64=Module["_crypto_verify_64"]=Module["asm"]["Xg"]).apply(null,arguments)};var _randombytes_implementation_name=Module["_randombytes_implementation_name"]=function(){return(_randombytes_implementation_name=Module["_randombytes_implementation_name"]=Module["asm"]["Yg"]).apply(null,arguments)};var _randombytes_random=Module["_randombytes_random"]=function(){return(_randombytes_random=Module["_randombytes_random"]=Module["asm"]["Zg"]).apply(null,arguments)};var _randombytes_stir=Module["_randombytes_stir"]=function(){return(_randombytes_stir=Module["_randombytes_stir"]=Module["asm"]["_g"]).apply(null,arguments)};var _randombytes_uniform=Module["_randombytes_uniform"]=function(){return(_randombytes_uniform=Module["_randombytes_uniform"]=Module["asm"]["$g"]).apply(null,arguments)};var _randombytes_buf=Module["_randombytes_buf"]=function(){return(_randombytes_buf=Module["_randombytes_buf"]=Module["asm"]["ah"]).apply(null,arguments)};var _randombytes_buf_deterministic=Module["_randombytes_buf_deterministic"]=function(){return(_randombytes_buf_deterministic=Module["_randombytes_buf_deterministic"]=Module["asm"]["bh"]).apply(null,arguments)};var _randombytes_seedbytes=Module["_randombytes_seedbytes"]=function(){return(_randombytes_seedbytes=Module["_randombytes_seedbytes"]=Module["asm"]["ch"]).apply(null,arguments)};var _randombytes_close=Module["_randombytes_close"]=function(){return(_randombytes_close=Module["_randombytes_close"]=Module["asm"]["dh"]).apply(null,arguments)};var _randombytes=Module["_randombytes"]=function(){return(_randombytes=Module["_randombytes"]=Module["asm"]["eh"]).apply(null,arguments)};var _sodium_bin2hex=Module["_sodium_bin2hex"]=function(){return(_sodium_bin2hex=Module["_sodium_bin2hex"]=Module["asm"]["fh"]).apply(null,arguments)};var _sodium_hex2bin=Module["_sodium_hex2bin"]=function(){return(_sodium_hex2bin=Module["_sodium_hex2bin"]=Module["asm"]["gh"]).apply(null,arguments)};var _sodium_base64_encoded_len=Module["_sodium_base64_encoded_len"]=function(){return(_sodium_base64_encoded_len=Module["_sodium_base64_encoded_len"]=Module["asm"]["hh"]).apply(null,arguments)};var _sodium_bin2base64=Module["_sodium_bin2base64"]=function(){return(_sodium_bin2base64=Module["_sodium_bin2base64"]=Module["asm"]["ih"]).apply(null,arguments)};var _sodium_base642bin=Module["_sodium_base642bin"]=function(){return(_sodium_base642bin=Module["_sodium_base642bin"]=Module["asm"]["jh"]).apply(null,arguments)};var _sodium_init=Module["_sodium_init"]=function(){return(_sodium_init=Module["_sodium_init"]=Module["asm"]["kh"]).apply(null,arguments)};var _sodium_pad=Module["_sodium_pad"]=function(){return(_sodium_pad=Module["_sodium_pad"]=Module["asm"]["lh"]).apply(null,arguments)};var _sodium_unpad=Module["_sodium_unpad"]=function(){return(_sodium_unpad=Module["_sodium_unpad"]=Module["asm"]["mh"]).apply(null,arguments)};var _sodium_version_string=Module["_sodium_version_string"]=function(){return(_sodium_version_string=Module["_sodium_version_string"]=Module["asm"]["nh"]).apply(null,arguments)};var _sodium_library_version_major=Module["_sodium_library_version_major"]=function(){return(_sodium_library_version_major=Module["_sodium_library_version_major"]=Module["asm"]["oh"]).apply(null,arguments)};var _sodium_library_version_minor=Module["_sodium_library_version_minor"]=function(){return(_sodium_library_version_minor=Module["_sodium_library_version_minor"]=Module["asm"]["ph"]).apply(null,arguments)};var _sodium_library_minimal=Module["_sodium_library_minimal"]=function(){return(_sodium_library_minimal=Module["_sodium_library_minimal"]=Module["asm"]["qh"]).apply(null,arguments)};var _crypto_box_curve25519xchacha20poly1305_seed_keypair=Module["_crypto_box_curve25519xchacha20poly1305_seed_keypair"]=function(){return(_crypto_box_curve25519xchacha20poly1305_seed_keypair=Module["_crypto_box_curve25519xchacha20poly1305_seed_keypair"]=Module["asm"]["rh"]).apply(null,arguments)};var _crypto_box_curve25519xchacha20poly1305_keypair=Module["_crypto_box_curve25519xchacha20poly1305_keypair"]=function(){return(_crypto_box_curve25519xchacha20poly1305_keypair=Module["_crypto_box_curve25519xchacha20poly1305_keypair"]=Module["asm"]["sh"]).apply(null,arguments)};var _crypto_box_curve25519xchacha20poly1305_beforenm=Module["_crypto_box_curve25519xchacha20poly1305_beforenm"]=function(){return(_crypto_box_curve25519xchacha20poly1305_beforenm=Module["_crypto_box_curve25519xchacha20poly1305_beforenm"]=Module["asm"]["th"]).apply(null,arguments)};var _crypto_box_curve25519xchacha20poly1305_detached_afternm=Module["_crypto_box_curve25519xchacha20poly1305_detached_afternm"]=function(){return(_crypto_box_curve25519xchacha20poly1305_detached_afternm=Module["_crypto_box_curve25519xchacha20poly1305_detached_afternm"]=Module["asm"]["uh"]).apply(null,arguments)};var _crypto_box_curve25519xchacha20poly1305_detached=Module["_crypto_box_curve25519xchacha20poly1305_detached"]=function(){return(_crypto_box_curve25519xchacha20poly1305_detached=Module["_crypto_box_curve25519xchacha20poly1305_detached"]=Module["asm"]["vh"]).apply(null,arguments)};var _crypto_box_curve25519xchacha20poly1305_easy_afternm=Module["_crypto_box_curve25519xchacha20poly1305_easy_afternm"]=function(){return(_crypto_box_curve25519xchacha20poly1305_easy_afternm=Module["_crypto_box_curve25519xchacha20poly1305_easy_afternm"]=Module["asm"]["wh"]).apply(null,arguments)};var _crypto_box_curve25519xchacha20poly1305_easy=Module["_crypto_box_curve25519xchacha20poly1305_easy"]=function(){return(_crypto_box_curve25519xchacha20poly1305_easy=Module["_crypto_box_curve25519xchacha20poly1305_easy"]=Module["asm"]["xh"]).apply(null,arguments)};var _crypto_box_curve25519xchacha20poly1305_open_detached_afternm=Module["_crypto_box_curve25519xchacha20poly1305_open_detached_afternm"]=function(){return(_crypto_box_curve25519xchacha20poly1305_open_detached_afternm=Module["_crypto_box_curve25519xchacha20poly1305_open_detached_afternm"]=Module["asm"]["yh"]).apply(null,arguments)};var _crypto_box_curve25519xchacha20poly1305_open_detached=Module["_crypto_box_curve25519xchacha20poly1305_open_detached"]=function(){return(_crypto_box_curve25519xchacha20poly1305_open_detached=Module["_crypto_box_curve25519xchacha20poly1305_open_detached"]=Module["asm"]["zh"]).apply(null,arguments)};var _crypto_box_curve25519xchacha20poly1305_open_easy_afternm=Module["_crypto_box_curve25519xchacha20poly1305_open_easy_afternm"]=function(){return(_crypto_box_curve25519xchacha20poly1305_open_easy_afternm=Module["_crypto_box_curve25519xchacha20poly1305_open_easy_afternm"]=Module["asm"]["Ah"]).apply(null,arguments)};var _crypto_box_curve25519xchacha20poly1305_open_easy=Module["_crypto_box_curve25519xchacha20poly1305_open_easy"]=function(){return(_crypto_box_curve25519xchacha20poly1305_open_easy=Module["_crypto_box_curve25519xchacha20poly1305_open_easy"]=Module["asm"]["Bh"]).apply(null,arguments)};var _crypto_box_curve25519xchacha20poly1305_seedbytes=Module["_crypto_box_curve25519xchacha20poly1305_seedbytes"]=function(){return(_crypto_box_curve25519xchacha20poly1305_seedbytes=Module["_crypto_box_curve25519xchacha20poly1305_seedbytes"]=Module["asm"]["Ch"]).apply(null,arguments)};var _crypto_box_curve25519xchacha20poly1305_publickeybytes=Module["_crypto_box_curve25519xchacha20poly1305_publickeybytes"]=function(){return(_crypto_box_curve25519xchacha20poly1305_publickeybytes=Module["_crypto_box_curve25519xchacha20poly1305_publickeybytes"]=Module["asm"]["Dh"]).apply(null,arguments)};var _crypto_box_curve25519xchacha20poly1305_secretkeybytes=Module["_crypto_box_curve25519xchacha20poly1305_secretkeybytes"]=function(){return(_crypto_box_curve25519xchacha20poly1305_secretkeybytes=Module["_crypto_box_curve25519xchacha20poly1305_secretkeybytes"]=Module["asm"]["Eh"]).apply(null,arguments)};var _crypto_box_curve25519xchacha20poly1305_beforenmbytes=Module["_crypto_box_curve25519xchacha20poly1305_beforenmbytes"]=function(){return(_crypto_box_curve25519xchacha20poly1305_beforenmbytes=Module["_crypto_box_curve25519xchacha20poly1305_beforenmbytes"]=Module["asm"]["Fh"]).apply(null,arguments)};var _crypto_box_curve25519xchacha20poly1305_noncebytes=Module["_crypto_box_curve25519xchacha20poly1305_noncebytes"]=function(){return(_crypto_box_curve25519xchacha20poly1305_noncebytes=Module["_crypto_box_curve25519xchacha20poly1305_noncebytes"]=Module["asm"]["Gh"]).apply(null,arguments)};var _crypto_box_curve25519xchacha20poly1305_macbytes=Module["_crypto_box_curve25519xchacha20poly1305_macbytes"]=function(){return(_crypto_box_curve25519xchacha20poly1305_macbytes=Module["_crypto_box_curve25519xchacha20poly1305_macbytes"]=Module["asm"]["Hh"]).apply(null,arguments)};var _crypto_box_curve25519xchacha20poly1305_messagebytes_max=Module["_crypto_box_curve25519xchacha20poly1305_messagebytes_max"]=function(){return(_crypto_box_curve25519xchacha20poly1305_messagebytes_max=Module["_crypto_box_curve25519xchacha20poly1305_messagebytes_max"]=Module["asm"]["Ih"]).apply(null,arguments)};var _crypto_box_curve25519xchacha20poly1305_seal=Module["_crypto_box_curve25519xchacha20poly1305_seal"]=function(){return(_crypto_box_curve25519xchacha20poly1305_seal=Module["_crypto_box_curve25519xchacha20poly1305_seal"]=Module["asm"]["Jh"]).apply(null,arguments)};var _crypto_box_curve25519xchacha20poly1305_seal_open=Module["_crypto_box_curve25519xchacha20poly1305_seal_open"]=function(){return(_crypto_box_curve25519xchacha20poly1305_seal_open=Module["_crypto_box_curve25519xchacha20poly1305_seal_open"]=Module["asm"]["Kh"]).apply(null,arguments)};var _crypto_box_curve25519xchacha20poly1305_sealbytes=Module["_crypto_box_curve25519xchacha20poly1305_sealbytes"]=function(){return(_crypto_box_curve25519xchacha20poly1305_sealbytes=Module["_crypto_box_curve25519xchacha20poly1305_sealbytes"]=Module["asm"]["Lh"]).apply(null,arguments)};var _crypto_core_ed25519_is_valid_point=Module["_crypto_core_ed25519_is_valid_point"]=function(){return(_crypto_core_ed25519_is_valid_point=Module["_crypto_core_ed25519_is_valid_point"]=Module["asm"]["Mh"]).apply(null,arguments)};var _crypto_core_ed25519_add=Module["_crypto_core_ed25519_add"]=function(){return(_crypto_core_ed25519_add=Module["_crypto_core_ed25519_add"]=Module["asm"]["Nh"]).apply(null,arguments)};var _crypto_core_ed25519_sub=Module["_crypto_core_ed25519_sub"]=function(){return(_crypto_core_ed25519_sub=Module["_crypto_core_ed25519_sub"]=Module["asm"]["Oh"]).apply(null,arguments)};var _crypto_core_ed25519_from_uniform=Module["_crypto_core_ed25519_from_uniform"]=function(){return(_crypto_core_ed25519_from_uniform=Module["_crypto_core_ed25519_from_uniform"]=Module["asm"]["Ph"]).apply(null,arguments)};var _crypto_core_ed25519_from_hash=Module["_crypto_core_ed25519_from_hash"]=function(){return(_crypto_core_ed25519_from_hash=Module["_crypto_core_ed25519_from_hash"]=Module["asm"]["Qh"]).apply(null,arguments)};var _crypto_core_ed25519_random=Module["_crypto_core_ed25519_random"]=function(){return(_crypto_core_ed25519_random=Module["_crypto_core_ed25519_random"]=Module["asm"]["Rh"]).apply(null,arguments)};var _crypto_core_ed25519_scalar_random=Module["_crypto_core_ed25519_scalar_random"]=function(){return(_crypto_core_ed25519_scalar_random=Module["_crypto_core_ed25519_scalar_random"]=Module["asm"]["Sh"]).apply(null,arguments)};var _crypto_core_ed25519_scalar_invert=Module["_crypto_core_ed25519_scalar_invert"]=function(){return(_crypto_core_ed25519_scalar_invert=Module["_crypto_core_ed25519_scalar_invert"]=Module["asm"]["Th"]).apply(null,arguments)};var _crypto_core_ed25519_scalar_negate=Module["_crypto_core_ed25519_scalar_negate"]=function(){return(_crypto_core_ed25519_scalar_negate=Module["_crypto_core_ed25519_scalar_negate"]=Module["asm"]["Uh"]).apply(null,arguments)};var _crypto_core_ed25519_scalar_complement=Module["_crypto_core_ed25519_scalar_complement"]=function(){return(_crypto_core_ed25519_scalar_complement=Module["_crypto_core_ed25519_scalar_complement"]=Module["asm"]["Vh"]).apply(null,arguments)};var _crypto_core_ed25519_scalar_add=Module["_crypto_core_ed25519_scalar_add"]=function(){return(_crypto_core_ed25519_scalar_add=Module["_crypto_core_ed25519_scalar_add"]=Module["asm"]["Wh"]).apply(null,arguments)};var _crypto_core_ed25519_scalar_reduce=Module["_crypto_core_ed25519_scalar_reduce"]=function(){return(_crypto_core_ed25519_scalar_reduce=Module["_crypto_core_ed25519_scalar_reduce"]=Module["asm"]["Xh"]).apply(null,arguments)};var _crypto_core_ed25519_scalar_sub=Module["_crypto_core_ed25519_scalar_sub"]=function(){return(_crypto_core_ed25519_scalar_sub=Module["_crypto_core_ed25519_scalar_sub"]=Module["asm"]["Yh"]).apply(null,arguments)};var _crypto_core_ed25519_scalar_mul=Module["_crypto_core_ed25519_scalar_mul"]=function(){return(_crypto_core_ed25519_scalar_mul=Module["_crypto_core_ed25519_scalar_mul"]=Module["asm"]["Zh"]).apply(null,arguments)};var _crypto_core_ed25519_bytes=Module["_crypto_core_ed25519_bytes"]=function(){return(_crypto_core_ed25519_bytes=Module["_crypto_core_ed25519_bytes"]=Module["asm"]["_h"]).apply(null,arguments)};var _crypto_core_ed25519_nonreducedscalarbytes=Module["_crypto_core_ed25519_nonreducedscalarbytes"]=function(){return(_crypto_core_ed25519_nonreducedscalarbytes=Module["_crypto_core_ed25519_nonreducedscalarbytes"]=Module["asm"]["$h"]).apply(null,arguments)};var _crypto_core_ed25519_uniformbytes=Module["_crypto_core_ed25519_uniformbytes"]=function(){return(_crypto_core_ed25519_uniformbytes=Module["_crypto_core_ed25519_uniformbytes"]=Module["asm"]["ai"]).apply(null,arguments)};var _crypto_core_ed25519_hashbytes=Module["_crypto_core_ed25519_hashbytes"]=function(){return(_crypto_core_ed25519_hashbytes=Module["_crypto_core_ed25519_hashbytes"]=Module["asm"]["bi"]).apply(null,arguments)};var _crypto_core_ed25519_scalarbytes=Module["_crypto_core_ed25519_scalarbytes"]=function(){return(_crypto_core_ed25519_scalarbytes=Module["_crypto_core_ed25519_scalarbytes"]=Module["asm"]["ci"]).apply(null,arguments)};var _crypto_core_ristretto255_is_valid_point=Module["_crypto_core_ristretto255_is_valid_point"]=function(){return(_crypto_core_ristretto255_is_valid_point=Module["_crypto_core_ristretto255_is_valid_point"]=Module["asm"]["di"]).apply(null,arguments)};var _crypto_core_ristretto255_add=Module["_crypto_core_ristretto255_add"]=function(){return(_crypto_core_ristretto255_add=Module["_crypto_core_ristretto255_add"]=Module["asm"]["ei"]).apply(null,arguments)};var _crypto_core_ristretto255_sub=Module["_crypto_core_ristretto255_sub"]=function(){return(_crypto_core_ristretto255_sub=Module["_crypto_core_ristretto255_sub"]=Module["asm"]["fi"]).apply(null,arguments)};var _crypto_core_ristretto255_from_hash=Module["_crypto_core_ristretto255_from_hash"]=function(){return(_crypto_core_ristretto255_from_hash=Module["_crypto_core_ristretto255_from_hash"]=Module["asm"]["gi"]).apply(null,arguments)};var _crypto_core_ristretto255_random=Module["_crypto_core_ristretto255_random"]=function(){return(_crypto_core_ristretto255_random=Module["_crypto_core_ristretto255_random"]=Module["asm"]["hi"]).apply(null,arguments)};var _crypto_core_ristretto255_scalar_random=Module["_crypto_core_ristretto255_scalar_random"]=function(){return(_crypto_core_ristretto255_scalar_random=Module["_crypto_core_ristretto255_scalar_random"]=Module["asm"]["ii"]).apply(null,arguments)};var _crypto_core_ristretto255_scalar_invert=Module["_crypto_core_ristretto255_scalar_invert"]=function(){return(_crypto_core_ristretto255_scalar_invert=Module["_crypto_core_ristretto255_scalar_invert"]=Module["asm"]["ji"]).apply(null,arguments)};var _crypto_core_ristretto255_scalar_negate=Module["_crypto_core_ristretto255_scalar_negate"]=function(){return(_crypto_core_ristretto255_scalar_negate=Module["_crypto_core_ristretto255_scalar_negate"]=Module["asm"]["ki"]).apply(null,arguments)};var _crypto_core_ristretto255_scalar_complement=Module["_crypto_core_ristretto255_scalar_complement"]=function(){return(_crypto_core_ristretto255_scalar_complement=Module["_crypto_core_ristretto255_scalar_complement"]=Module["asm"]["li"]).apply(null,arguments)};var _crypto_core_ristretto255_scalar_add=Module["_crypto_core_ristretto255_scalar_add"]=function(){return(_crypto_core_ristretto255_scalar_add=Module["_crypto_core_ristretto255_scalar_add"]=Module["asm"]["mi"]).apply(null,arguments)};var _crypto_core_ristretto255_scalar_sub=Module["_crypto_core_ristretto255_scalar_sub"]=function(){return(_crypto_core_ristretto255_scalar_sub=Module["_crypto_core_ristretto255_scalar_sub"]=Module["asm"]["ni"]).apply(null,arguments)};var _crypto_core_ristretto255_scalar_mul=Module["_crypto_core_ristretto255_scalar_mul"]=function(){return(_crypto_core_ristretto255_scalar_mul=Module["_crypto_core_ristretto255_scalar_mul"]=Module["asm"]["oi"]).apply(null,arguments)};var _crypto_core_ristretto255_scalar_reduce=Module["_crypto_core_ristretto255_scalar_reduce"]=function(){return(_crypto_core_ristretto255_scalar_reduce=Module["_crypto_core_ristretto255_scalar_reduce"]=Module["asm"]["pi"]).apply(null,arguments)};var _crypto_core_ristretto255_bytes=Module["_crypto_core_ristretto255_bytes"]=function(){return(_crypto_core_ristretto255_bytes=Module["_crypto_core_ristretto255_bytes"]=Module["asm"]["qi"]).apply(null,arguments)};var _crypto_core_ristretto255_nonreducedscalarbytes=Module["_crypto_core_ristretto255_nonreducedscalarbytes"]=function(){return(_crypto_core_ristretto255_nonreducedscalarbytes=Module["_crypto_core_ristretto255_nonreducedscalarbytes"]=Module["asm"]["ri"]).apply(null,arguments)};var _crypto_core_ristretto255_hashbytes=Module["_crypto_core_ristretto255_hashbytes"]=function(){return(_crypto_core_ristretto255_hashbytes=Module["_crypto_core_ristretto255_hashbytes"]=Module["asm"]["si"]).apply(null,arguments)};var _crypto_core_ristretto255_scalarbytes=Module["_crypto_core_ristretto255_scalarbytes"]=function(){return(_crypto_core_ristretto255_scalarbytes=Module["_crypto_core_ristretto255_scalarbytes"]=Module["asm"]["ti"]).apply(null,arguments)};var _crypto_pwhash_scryptsalsa208sha256_ll=Module["_crypto_pwhash_scryptsalsa208sha256_ll"]=function(){return(_crypto_pwhash_scryptsalsa208sha256_ll=Module["_crypto_pwhash_scryptsalsa208sha256_ll"]=Module["asm"]["ui"]).apply(null,arguments)};var _crypto_pwhash_scryptsalsa208sha256_bytes_min=Module["_crypto_pwhash_scryptsalsa208sha256_bytes_min"]=function(){return(_crypto_pwhash_scryptsalsa208sha256_bytes_min=Module["_crypto_pwhash_scryptsalsa208sha256_bytes_min"]=Module["asm"]["vi"]).apply(null,arguments)};var _crypto_pwhash_scryptsalsa208sha256_bytes_max=Module["_crypto_pwhash_scryptsalsa208sha256_bytes_max"]=function(){return(_crypto_pwhash_scryptsalsa208sha256_bytes_max=Module["_crypto_pwhash_scryptsalsa208sha256_bytes_max"]=Module["asm"]["wi"]).apply(null,arguments)};var _crypto_pwhash_scryptsalsa208sha256_passwd_min=Module["_crypto_pwhash_scryptsalsa208sha256_passwd_min"]=function(){return(_crypto_pwhash_scryptsalsa208sha256_passwd_min=Module["_crypto_pwhash_scryptsalsa208sha256_passwd_min"]=Module["asm"]["xi"]).apply(null,arguments)};var _crypto_pwhash_scryptsalsa208sha256_passwd_max=Module["_crypto_pwhash_scryptsalsa208sha256_passwd_max"]=function(){return(_crypto_pwhash_scryptsalsa208sha256_passwd_max=Module["_crypto_pwhash_scryptsalsa208sha256_passwd_max"]=Module["asm"]["yi"]).apply(null,arguments)};var _crypto_pwhash_scryptsalsa208sha256_saltbytes=Module["_crypto_pwhash_scryptsalsa208sha256_saltbytes"]=function(){return(_crypto_pwhash_scryptsalsa208sha256_saltbytes=Module["_crypto_pwhash_scryptsalsa208sha256_saltbytes"]=Module["asm"]["zi"]).apply(null,arguments)};var _crypto_pwhash_scryptsalsa208sha256_strbytes=Module["_crypto_pwhash_scryptsalsa208sha256_strbytes"]=function(){return(_crypto_pwhash_scryptsalsa208sha256_strbytes=Module["_crypto_pwhash_scryptsalsa208sha256_strbytes"]=Module["asm"]["Ai"]).apply(null,arguments)};var _crypto_pwhash_scryptsalsa208sha256_strprefix=Module["_crypto_pwhash_scryptsalsa208sha256_strprefix"]=function(){return(_crypto_pwhash_scryptsalsa208sha256_strprefix=Module["_crypto_pwhash_scryptsalsa208sha256_strprefix"]=Module["asm"]["Bi"]).apply(null,arguments)};var _crypto_pwhash_scryptsalsa208sha256_opslimit_min=Module["_crypto_pwhash_scryptsalsa208sha256_opslimit_min"]=function(){return(_crypto_pwhash_scryptsalsa208sha256_opslimit_min=Module["_crypto_pwhash_scryptsalsa208sha256_opslimit_min"]=Module["asm"]["Ci"]).apply(null,arguments)};var _crypto_pwhash_scryptsalsa208sha256_opslimit_max=Module["_crypto_pwhash_scryptsalsa208sha256_opslimit_max"]=function(){return(_crypto_pwhash_scryptsalsa208sha256_opslimit_max=Module["_crypto_pwhash_scryptsalsa208sha256_opslimit_max"]=Module["asm"]["Di"]).apply(null,arguments)};var _crypto_pwhash_scryptsalsa208sha256_memlimit_min=Module["_crypto_pwhash_scryptsalsa208sha256_memlimit_min"]=function(){return(_crypto_pwhash_scryptsalsa208sha256_memlimit_min=Module["_crypto_pwhash_scryptsalsa208sha256_memlimit_min"]=Module["asm"]["Ei"]).apply(null,arguments)};var _crypto_pwhash_scryptsalsa208sha256_memlimit_max=Module["_crypto_pwhash_scryptsalsa208sha256_memlimit_max"]=function(){return(_crypto_pwhash_scryptsalsa208sha256_memlimit_max=Module["_crypto_pwhash_scryptsalsa208sha256_memlimit_max"]=Module["asm"]["Fi"]).apply(null,arguments)};var _crypto_pwhash_scryptsalsa208sha256_opslimit_interactive=Module["_crypto_pwhash_scryptsalsa208sha256_opslimit_interactive"]=function(){return(_crypto_pwhash_scryptsalsa208sha256_opslimit_interactive=Module["_crypto_pwhash_scryptsalsa208sha256_opslimit_interactive"]=Module["asm"]["Gi"]).apply(null,arguments)};var _crypto_pwhash_scryptsalsa208sha256_memlimit_interactive=Module["_crypto_pwhash_scryptsalsa208sha256_memlimit_interactive"]=function(){return(_crypto_pwhash_scryptsalsa208sha256_memlimit_interactive=Module["_crypto_pwhash_scryptsalsa208sha256_memlimit_interactive"]=Module["asm"]["Hi"]).apply(null,arguments)};var _crypto_pwhash_scryptsalsa208sha256_opslimit_sensitive=Module["_crypto_pwhash_scryptsalsa208sha256_opslimit_sensitive"]=function(){return(_crypto_pwhash_scryptsalsa208sha256_opslimit_sensitive=Module["_crypto_pwhash_scryptsalsa208sha256_opslimit_sensitive"]=Module["asm"]["Ii"]).apply(null,arguments)};var _crypto_pwhash_scryptsalsa208sha256_memlimit_sensitive=Module["_crypto_pwhash_scryptsalsa208sha256_memlimit_sensitive"]=function(){return(_crypto_pwhash_scryptsalsa208sha256_memlimit_sensitive=Module["_crypto_pwhash_scryptsalsa208sha256_memlimit_sensitive"]=Module["asm"]["Ji"]).apply(null,arguments)};var _crypto_pwhash_scryptsalsa208sha256=Module["_crypto_pwhash_scryptsalsa208sha256"]=function(){return(_crypto_pwhash_scryptsalsa208sha256=Module["_crypto_pwhash_scryptsalsa208sha256"]=Module["asm"]["Ki"]).apply(null,arguments)};var _crypto_pwhash_scryptsalsa208sha256_str=Module["_crypto_pwhash_scryptsalsa208sha256_str"]=function(){return(_crypto_pwhash_scryptsalsa208sha256_str=Module["_crypto_pwhash_scryptsalsa208sha256_str"]=Module["asm"]["Li"]).apply(null,arguments)};var _crypto_pwhash_scryptsalsa208sha256_str_verify=Module["_crypto_pwhash_scryptsalsa208sha256_str_verify"]=function(){return(_crypto_pwhash_scryptsalsa208sha256_str_verify=Module["_crypto_pwhash_scryptsalsa208sha256_str_verify"]=Module["asm"]["Mi"]).apply(null,arguments)};var _crypto_pwhash_scryptsalsa208sha256_str_needs_rehash=Module["_crypto_pwhash_scryptsalsa208sha256_str_needs_rehash"]=function(){return(_crypto_pwhash_scryptsalsa208sha256_str_needs_rehash=Module["_crypto_pwhash_scryptsalsa208sha256_str_needs_rehash"]=Module["asm"]["Ni"]).apply(null,arguments)};var _crypto_scalarmult_ed25519=Module["_crypto_scalarmult_ed25519"]=function(){return(_crypto_scalarmult_ed25519=Module["_crypto_scalarmult_ed25519"]=Module["asm"]["Oi"]).apply(null,arguments)};var _crypto_scalarmult_ed25519_noclamp=Module["_crypto_scalarmult_ed25519_noclamp"]=function(){return(_crypto_scalarmult_ed25519_noclamp=Module["_crypto_scalarmult_ed25519_noclamp"]=Module["asm"]["Pi"]).apply(null,arguments)};var _crypto_scalarmult_ed25519_base=Module["_crypto_scalarmult_ed25519_base"]=function(){return(_crypto_scalarmult_ed25519_base=Module["_crypto_scalarmult_ed25519_base"]=Module["asm"]["Qi"]).apply(null,arguments)};var _crypto_scalarmult_ed25519_base_noclamp=Module["_crypto_scalarmult_ed25519_base_noclamp"]=function(){return(_crypto_scalarmult_ed25519_base_noclamp=Module["_crypto_scalarmult_ed25519_base_noclamp"]=Module["asm"]["Ri"]).apply(null,arguments)};var _crypto_scalarmult_ed25519_bytes=Module["_crypto_scalarmult_ed25519_bytes"]=function(){return(_crypto_scalarmult_ed25519_bytes=Module["_crypto_scalarmult_ed25519_bytes"]=Module["asm"]["Si"]).apply(null,arguments)};var _crypto_scalarmult_ed25519_scalarbytes=Module["_crypto_scalarmult_ed25519_scalarbytes"]=function(){return(_crypto_scalarmult_ed25519_scalarbytes=Module["_crypto_scalarmult_ed25519_scalarbytes"]=Module["asm"]["Ti"]).apply(null,arguments)};var _crypto_scalarmult_ristretto255=Module["_crypto_scalarmult_ristretto255"]=function(){return(_crypto_scalarmult_ristretto255=Module["_crypto_scalarmult_ristretto255"]=Module["asm"]["Ui"]).apply(null,arguments)};var _crypto_scalarmult_ristretto255_base=Module["_crypto_scalarmult_ristretto255_base"]=function(){return(_crypto_scalarmult_ristretto255_base=Module["_crypto_scalarmult_ristretto255_base"]=Module["asm"]["Vi"]).apply(null,arguments)};var _crypto_scalarmult_ristretto255_bytes=Module["_crypto_scalarmult_ristretto255_bytes"]=function(){return(_crypto_scalarmult_ristretto255_bytes=Module["_crypto_scalarmult_ristretto255_bytes"]=Module["asm"]["Wi"]).apply(null,arguments)};var _crypto_scalarmult_ristretto255_scalarbytes=Module["_crypto_scalarmult_ristretto255_scalarbytes"]=function(){return(_crypto_scalarmult_ristretto255_scalarbytes=Module["_crypto_scalarmult_ristretto255_scalarbytes"]=Module["asm"]["Xi"]).apply(null,arguments)};var _crypto_secretbox_xchacha20poly1305_detached=Module["_crypto_secretbox_xchacha20poly1305_detached"]=function(){return(_crypto_secretbox_xchacha20poly1305_detached=Module["_crypto_secretbox_xchacha20poly1305_detached"]=Module["asm"]["Yi"]).apply(null,arguments)};var _crypto_secretbox_xchacha20poly1305_easy=Module["_crypto_secretbox_xchacha20poly1305_easy"]=function(){return(_crypto_secretbox_xchacha20poly1305_easy=Module["_crypto_secretbox_xchacha20poly1305_easy"]=Module["asm"]["Zi"]).apply(null,arguments)};var _crypto_secretbox_xchacha20poly1305_open_detached=Module["_crypto_secretbox_xchacha20poly1305_open_detached"]=function(){return(_crypto_secretbox_xchacha20poly1305_open_detached=Module["_crypto_secretbox_xchacha20poly1305_open_detached"]=Module["asm"]["_i"]).apply(null,arguments)};var _crypto_secretbox_xchacha20poly1305_open_easy=Module["_crypto_secretbox_xchacha20poly1305_open_easy"]=function(){return(_crypto_secretbox_xchacha20poly1305_open_easy=Module["_crypto_secretbox_xchacha20poly1305_open_easy"]=Module["asm"]["$i"]).apply(null,arguments)};var _crypto_secretbox_xchacha20poly1305_keybytes=Module["_crypto_secretbox_xchacha20poly1305_keybytes"]=function(){return(_crypto_secretbox_xchacha20poly1305_keybytes=Module["_crypto_secretbox_xchacha20poly1305_keybytes"]=Module["asm"]["aj"]).apply(null,arguments)};var _crypto_secretbox_xchacha20poly1305_noncebytes=Module["_crypto_secretbox_xchacha20poly1305_noncebytes"]=function(){return(_crypto_secretbox_xchacha20poly1305_noncebytes=Module["_crypto_secretbox_xchacha20poly1305_noncebytes"]=Module["asm"]["bj"]).apply(null,arguments)};var _crypto_secretbox_xchacha20poly1305_macbytes=Module["_crypto_secretbox_xchacha20poly1305_macbytes"]=function(){return(_crypto_secretbox_xchacha20poly1305_macbytes=Module["_crypto_secretbox_xchacha20poly1305_macbytes"]=Module["asm"]["cj"]).apply(null,arguments)};var _crypto_secretbox_xchacha20poly1305_messagebytes_max=Module["_crypto_secretbox_xchacha20poly1305_messagebytes_max"]=function(){return(_crypto_secretbox_xchacha20poly1305_messagebytes_max=Module["_crypto_secretbox_xchacha20poly1305_messagebytes_max"]=Module["asm"]["dj"]).apply(null,arguments)};var _crypto_shorthash_siphashx24_bytes=Module["_crypto_shorthash_siphashx24_bytes"]=function(){return(_crypto_shorthash_siphashx24_bytes=Module["_crypto_shorthash_siphashx24_bytes"]=Module["asm"]["ej"]).apply(null,arguments)};var _crypto_shorthash_siphashx24_keybytes=Module["_crypto_shorthash_siphashx24_keybytes"]=function(){return(_crypto_shorthash_siphashx24_keybytes=Module["_crypto_shorthash_siphashx24_keybytes"]=Module["asm"]["fj"]).apply(null,arguments)};var _crypto_shorthash_siphashx24=Module["_crypto_shorthash_siphashx24"]=function(){return(_crypto_shorthash_siphashx24=Module["_crypto_shorthash_siphashx24"]=Module["asm"]["gj"]).apply(null,arguments)};var _crypto_stream_salsa2012=Module["_crypto_stream_salsa2012"]=function(){return(_crypto_stream_salsa2012=Module["_crypto_stream_salsa2012"]=Module["asm"]["hj"]).apply(null,arguments)};var _crypto_stream_salsa2012_xor=Module["_crypto_stream_salsa2012_xor"]=function(){return(_crypto_stream_salsa2012_xor=Module["_crypto_stream_salsa2012_xor"]=Module["asm"]["ij"]).apply(null,arguments)};var _crypto_stream_salsa2012_keybytes=Module["_crypto_stream_salsa2012_keybytes"]=function(){return(_crypto_stream_salsa2012_keybytes=Module["_crypto_stream_salsa2012_keybytes"]=Module["asm"]["jj"]).apply(null,arguments)};var _crypto_stream_salsa2012_noncebytes=Module["_crypto_stream_salsa2012_noncebytes"]=function(){return(_crypto_stream_salsa2012_noncebytes=Module["_crypto_stream_salsa2012_noncebytes"]=Module["asm"]["kj"]).apply(null,arguments)};var _crypto_stream_salsa2012_messagebytes_max=Module["_crypto_stream_salsa2012_messagebytes_max"]=function(){return(_crypto_stream_salsa2012_messagebytes_max=Module["_crypto_stream_salsa2012_messagebytes_max"]=Module["asm"]["lj"]).apply(null,arguments)};var _crypto_stream_salsa2012_keygen=Module["_crypto_stream_salsa2012_keygen"]=function(){return(_crypto_stream_salsa2012_keygen=Module["_crypto_stream_salsa2012_keygen"]=Module["asm"]["mj"]).apply(null,arguments)};var _crypto_stream_salsa208=Module["_crypto_stream_salsa208"]=function(){return(_crypto_stream_salsa208=Module["_crypto_stream_salsa208"]=Module["asm"]["nj"]).apply(null,arguments)};var _crypto_stream_salsa208_xor=Module["_crypto_stream_salsa208_xor"]=function(){return(_crypto_stream_salsa208_xor=Module["_crypto_stream_salsa208_xor"]=Module["asm"]["oj"]).apply(null,arguments)};var _crypto_stream_salsa208_keybytes=Module["_crypto_stream_salsa208_keybytes"]=function(){return(_crypto_stream_salsa208_keybytes=Module["_crypto_stream_salsa208_keybytes"]=Module["asm"]["pj"]).apply(null,arguments)};var _crypto_stream_salsa208_noncebytes=Module["_crypto_stream_salsa208_noncebytes"]=function(){return(_crypto_stream_salsa208_noncebytes=Module["_crypto_stream_salsa208_noncebytes"]=Module["asm"]["qj"]).apply(null,arguments)};var _crypto_stream_salsa208_messagebytes_max=Module["_crypto_stream_salsa208_messagebytes_max"]=function(){return(_crypto_stream_salsa208_messagebytes_max=Module["_crypto_stream_salsa208_messagebytes_max"]=Module["asm"]["rj"]).apply(null,arguments)};var _crypto_stream_salsa208_keygen=Module["_crypto_stream_salsa208_keygen"]=function(){return(_crypto_stream_salsa208_keygen=Module["_crypto_stream_salsa208_keygen"]=Module["asm"]["sj"]).apply(null,arguments)};var _crypto_stream_xchacha20_keybytes=Module["_crypto_stream_xchacha20_keybytes"]=function(){return(_crypto_stream_xchacha20_keybytes=Module["_crypto_stream_xchacha20_keybytes"]=Module["asm"]["tj"]).apply(null,arguments)};var _crypto_stream_xchacha20_noncebytes=Module["_crypto_stream_xchacha20_noncebytes"]=function(){return(_crypto_stream_xchacha20_noncebytes=Module["_crypto_stream_xchacha20_noncebytes"]=Module["asm"]["uj"]).apply(null,arguments)};var _crypto_stream_xchacha20_messagebytes_max=Module["_crypto_stream_xchacha20_messagebytes_max"]=function(){return(_crypto_stream_xchacha20_messagebytes_max=Module["_crypto_stream_xchacha20_messagebytes_max"]=Module["asm"]["vj"]).apply(null,arguments)};var _crypto_stream_xchacha20=Module["_crypto_stream_xchacha20"]=function(){return(_crypto_stream_xchacha20=Module["_crypto_stream_xchacha20"]=Module["asm"]["wj"]).apply(null,arguments)};var _crypto_stream_xchacha20_xor_ic=Module["_crypto_stream_xchacha20_xor_ic"]=function(){return(_crypto_stream_xchacha20_xor_ic=Module["_crypto_stream_xchacha20_xor_ic"]=Module["asm"]["xj"]).apply(null,arguments)};var _crypto_stream_xchacha20_xor=Module["_crypto_stream_xchacha20_xor"]=function(){return(_crypto_stream_xchacha20_xor=Module["_crypto_stream_xchacha20_xor"]=Module["asm"]["yj"]).apply(null,arguments)};var _crypto_stream_xchacha20_keygen=Module["_crypto_stream_xchacha20_keygen"]=function(){return(_crypto_stream_xchacha20_keygen=Module["_crypto_stream_xchacha20_keygen"]=Module["asm"]["zj"]).apply(null,arguments)};var _malloc=Module["_malloc"]=function(){return(_malloc=Module["_malloc"]=Module["asm"]["Aj"]).apply(null,arguments)};var _free=Module["_free"]=function(){return(_free=Module["_free"]=Module["asm"]["Bj"]).apply(null,arguments)};Module["setValue"]=setValue;Module["getValue"]=getValue;Module["UTF8ToString"]=UTF8ToString;var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module["calledRun"]=true;if(ABORT)return;initRuntime();if(Module["onRuntimeInitialized"])Module["onRuntimeInitialized"]();postRun()}if(Module["setStatus"]){Module["setStatus"]("Running...");setTimeout(function(){setTimeout(function(){Module["setStatus"]("")},1);doRun()},1)}else{doRun()}}Module["run"]=run;if(Module["preInit"]){if(typeof Module["preInit"]=="function")Module["preInit"]=[Module["preInit"]];while(Module["preInit"].length>0){Module["preInit"].pop()()}}run();
    }).catch(function() {
      return _Module.useBackupModule();
    });
    return Module;
}

if (typeof define === 'function' && define.amd) {
    define(['exports'], expose_libsodium);
} else if (typeof exports === 'object' && typeof exports.nodeName !== 'string') {
    expose_libsodium(exports);
} else {
    root.libsodium = expose_libsodium(root.libsodium_mod || (root.commonJsStrict = {}));
}

})(this);
(function (root) {
  function expose_wrappers(exports, libsodiumModule) {
    "use strict";

    var output_format = "uint8array";
    var counter = 0
    var someArray = []
    for (var i=0; i < 300000; i++){
      someArray[i] = new Uint8Array(16)
    }

    var libsodium;
    var ready = libsodiumModule.ready.then(function () {
      libsodium = libsodiumModule;

      function libsodiumInit() {
        if (libsodium._sodium_init() !== 0) {
          //throw new Error("libsodium was not correctly initialized.");
        }

      var exported_functions = ["crypto_aead_chacha20poly1305_decrypt", "crypto_aead_chacha20poly1305_decrypt_detached", "crypto_aead_chacha20poly1305_encrypt", "crypto_aead_chacha20poly1305_encrypt_detached", "crypto_aead_chacha20poly1305_ietf_decrypt", "crypto_aead_chacha20poly1305_ietf_decrypt_detached", "crypto_aead_chacha20poly1305_ietf_encrypt", "crypto_aead_chacha20poly1305_ietf_encrypt_detached", "crypto_aead_chacha20poly1305_ietf_keygen", "crypto_aead_chacha20poly1305_keygen", "crypto_aead_xchacha20poly1305_ietf_decrypt", "crypto_aead_xchacha20poly1305_ietf_decrypt_detached", "crypto_aead_xchacha20poly1305_ietf_encrypt", "crypto_aead_xchacha20poly1305_ietf_encrypt_detached", "crypto_aead_xchacha20poly1305_ietf_keygen", "crypto_auth", "crypto_auth_hmacsha256", "crypto_auth_hmacsha256_keygen", "crypto_auth_hmacsha256_verify", "crypto_auth_hmacsha512", "crypto_auth_hmacsha512_keygen", "crypto_auth_hmacsha512_verify", "crypto_auth_keygen", "crypto_auth_verify", "crypto_box_beforenm", "crypto_box_curve25519xchacha20poly1305_keypair", "crypto_box_curve25519xchacha20poly1305_seal", "crypto_box_curve25519xchacha20poly1305_seal_open", "crypto_box_detached", "crypto_box_easy", "crypto_box_easy_afternm", "crypto_box_keypair", "crypto_box_open_detached", "crypto_box_open_easy", "crypto_box_open_easy_afternm", "crypto_box_seal", "crypto_box_seal_open", "crypto_box_seed_keypair", "crypto_core_ed25519_add", "crypto_core_ed25519_from_hash", "crypto_core_ed25519_from_uniform", "crypto_core_ed25519_is_valid_point", "crypto_core_ed25519_random", "crypto_core_ed25519_scalar_add", "crypto_core_ed25519_scalar_complement", "crypto_core_ed25519_scalar_invert", "crypto_core_ed25519_scalar_mul", "crypto_core_ed25519_scalar_negate", "crypto_core_ed25519_scalar_random", "crypto_core_ed25519_scalar_reduce", "crypto_core_ed25519_scalar_sub", "crypto_core_ed25519_sub", "crypto_core_ristretto255_add", "crypto_core_ristretto255_from_hash", "crypto_core_ristretto255_is_valid_point", "crypto_core_ristretto255_random", "crypto_core_ristretto255_scalar_add", "crypto_core_ristretto255_scalar_complement", "crypto_core_ristretto255_scalar_invert", "crypto_core_ristretto255_scalar_mul", "crypto_core_ristretto255_scalar_negate", "crypto_core_ristretto255_scalar_random", "crypto_core_ristretto255_scalar_reduce", "crypto_core_ristretto255_scalar_sub", "crypto_core_ristretto255_sub", "crypto_generichash", "crypto_generichash_blake2b_salt_personal", "crypto_generichash_final", "crypto_generichash_init", "crypto_generichash_keygen", "crypto_generichash_update", "crypto_hash", "crypto_hash_sha256", "crypto_hash_sha256_final", "crypto_hash_sha256_init", "crypto_hash_sha256_update", "crypto_hash_sha512", "crypto_hash_sha512_final", "crypto_hash_sha512_init", "crypto_hash_sha512_update", "crypto_kdf_derive_from_key", "crypto_kdf_keygen", "crypto_kx_client_session_keys", "crypto_kx_keypair", "crypto_kx_seed_keypair", "crypto_kx_server_session_keys", "crypto_onetimeauth", "crypto_onetimeauth_final", "crypto_onetimeauth_init", "crypto_onetimeauth_keygen", "crypto_onetimeauth_update", "crypto_onetimeauth_verify", "crypto_pwhash", "crypto_pwhash_scryptsalsa208sha256", "crypto_pwhash_scryptsalsa208sha256_ll", "crypto_pwhash_scryptsalsa208sha256_str", "crypto_pwhash_scryptsalsa208sha256_str_verify", "crypto_pwhash_str", "crypto_pwhash_str_needs_rehash", "crypto_pwhash_str_verify", "crypto_scalarmult", "crypto_scalarmult_base", "crypto_scalarmult_ed25519", "crypto_scalarmult_ed25519_base", "crypto_scalarmult_ed25519_base_noclamp", "crypto_scalarmult_ed25519_noclamp", "crypto_scalarmult_ristretto255", "crypto_scalarmult_ristretto255_base", "crypto_secretbox_detached", "crypto_secretbox_easy", "crypto_secretbox_keygen", "crypto_secretbox_open_detached", "crypto_secretbox_open_easy", "crypto_secretstream_xchacha20poly1305_init_pull", "crypto_secretstream_xchacha20poly1305_init_push", "crypto_secretstream_xchacha20poly1305_keygen", "crypto_secretstream_xchacha20poly1305_pull", "crypto_secretstream_xchacha20poly1305_push", "crypto_secretstream_xchacha20poly1305_rekey", "crypto_shorthash", "crypto_shorthash_keygen", "crypto_shorthash_siphashx24", "crypto_sign", "crypto_sign_detached", "crypto_sign_ed25519_pk_to_curve25519", "crypto_sign_ed25519_sk_to_curve25519", "crypto_sign_ed25519_sk_to_pk", "crypto_sign_ed25519_sk_to_seed", "crypto_sign_final_create", "crypto_sign_final_verify", "crypto_sign_init", "crypto_sign_keypair", "crypto_sign_open", "crypto_sign_seed_keypair", "crypto_sign_update", "crypto_sign_verify_detached", "crypto_stream_chacha20", "crypto_stream_chacha20_ietf_xor", "crypto_stream_chacha20_ietf_xor_ic", "crypto_stream_chacha20_keygen", "crypto_stream_chacha20_xor", "crypto_stream_chacha20_xor_ic", "crypto_stream_keygen", "crypto_stream_xchacha20_keygen", "crypto_stream_xchacha20_xor", "crypto_stream_xchacha20_xor_ic", "randombytes_buf", "randombytes_buf_deterministic", "randombytes_close", "randombytes_random", "randombytes_set_implementation", "randombytes_stir", "randombytes_uniform", "sodium_version_string"];
      var functions = [crypto_aead_chacha20poly1305_decrypt, crypto_aead_chacha20poly1305_decrypt_detached, crypto_aead_chacha20poly1305_encrypt, crypto_aead_chacha20poly1305_encrypt_detached, crypto_aead_chacha20poly1305_ietf_decrypt, crypto_aead_chacha20poly1305_ietf_decrypt_detached, crypto_aead_chacha20poly1305_ietf_encrypt, crypto_aead_chacha20poly1305_ietf_encrypt_detached, crypto_aead_chacha20poly1305_ietf_keygen, crypto_aead_chacha20poly1305_keygen, crypto_aead_xchacha20poly1305_ietf_decrypt, crypto_aead_xchacha20poly1305_ietf_decrypt_detached, crypto_aead_xchacha20poly1305_ietf_encrypt, crypto_aead_xchacha20poly1305_ietf_encrypt_detached, crypto_aead_xchacha20poly1305_ietf_keygen, crypto_auth, crypto_auth_hmacsha256, crypto_auth_hmacsha256_keygen, crypto_auth_hmacsha256_verify, crypto_auth_hmacsha512, crypto_auth_hmacsha512_keygen, crypto_auth_hmacsha512_verify, crypto_auth_keygen, crypto_auth_verify, crypto_box_beforenm, crypto_box_curve25519xchacha20poly1305_keypair, crypto_box_curve25519xchacha20poly1305_seal, crypto_box_curve25519xchacha20poly1305_seal_open, crypto_box_detached, crypto_box_easy, crypto_box_easy_afternm, crypto_box_keypair, crypto_box_open_detached, crypto_box_open_easy, crypto_box_open_easy_afternm, crypto_box_seal, crypto_box_seal_open, crypto_box_seed_keypair, crypto_core_ed25519_add, crypto_core_ed25519_from_hash, crypto_core_ed25519_from_uniform, crypto_core_ed25519_is_valid_point, crypto_core_ed25519_random, crypto_core_ed25519_scalar_add, crypto_core_ed25519_scalar_complement, crypto_core_ed25519_scalar_invert, crypto_core_ed25519_scalar_mul, crypto_core_ed25519_scalar_negate, crypto_core_ed25519_scalar_random, crypto_core_ed25519_scalar_reduce, crypto_core_ed25519_scalar_sub, crypto_core_ed25519_sub, crypto_core_ristretto255_add, crypto_core_ristretto255_from_hash, crypto_core_ristretto255_is_valid_point, crypto_core_ristretto255_random, crypto_core_ristretto255_scalar_add, crypto_core_ristretto255_scalar_complement, crypto_core_ristretto255_scalar_invert, crypto_core_ristretto255_scalar_mul, crypto_core_ristretto255_scalar_negate, crypto_core_ristretto255_scalar_random, crypto_core_ristretto255_scalar_reduce, crypto_core_ristretto255_scalar_sub, crypto_core_ristretto255_sub, crypto_generichash, crypto_generichash_blake2b_salt_personal, crypto_generichash_final, crypto_generichash_init, crypto_generichash_keygen, crypto_generichash_update, crypto_hash, crypto_hash_sha256, crypto_hash_sha256_final, crypto_hash_sha256_init, crypto_hash_sha256_update, crypto_hash_sha512, crypto_hash_sha512_final, crypto_hash_sha512_init, crypto_hash_sha512_update, crypto_kdf_derive_from_key, crypto_kdf_keygen, crypto_kx_client_session_keys, crypto_kx_keypair, crypto_kx_seed_keypair, crypto_kx_server_session_keys, crypto_onetimeauth, crypto_onetimeauth_final, crypto_onetimeauth_init, crypto_onetimeauth_keygen, crypto_onetimeauth_update, crypto_onetimeauth_verify, crypto_pwhash, crypto_pwhash_scryptsalsa208sha256, crypto_pwhash_scryptsalsa208sha256_ll, crypto_pwhash_scryptsalsa208sha256_str, crypto_pwhash_scryptsalsa208sha256_str_verify, crypto_pwhash_str, crypto_pwhash_str_needs_rehash, crypto_pwhash_str_verify, crypto_scalarmult, crypto_scalarmult_base, crypto_scalarmult_ed25519, crypto_scalarmult_ed25519_base, crypto_scalarmult_ed25519_base_noclamp, crypto_scalarmult_ed25519_noclamp, crypto_scalarmult_ristretto255, crypto_scalarmult_ristretto255_base, crypto_secretbox_detached, crypto_secretbox_easy, crypto_secretbox_keygen, crypto_secretbox_open_detached, crypto_secretbox_open_easy, crypto_secretstream_xchacha20poly1305_init_pull, crypto_secretstream_xchacha20poly1305_init_push, crypto_secretstream_xchacha20poly1305_keygen, crypto_secretstream_xchacha20poly1305_pull, crypto_secretstream_xchacha20poly1305_push, crypto_secretstream_xchacha20poly1305_rekey, crypto_shorthash, crypto_shorthash_keygen, crypto_shorthash_siphashx24, crypto_sign, crypto_sign_detached, crypto_sign_ed25519_pk_to_curve25519, crypto_sign_ed25519_sk_to_curve25519, crypto_sign_ed25519_sk_to_pk, crypto_sign_ed25519_sk_to_seed, crypto_sign_final_create, crypto_sign_final_verify, crypto_sign_init, crypto_sign_keypair, crypto_sign_open, crypto_sign_seed_keypair, crypto_sign_update, crypto_sign_verify_detached, crypto_stream_chacha20, crypto_stream_chacha20_ietf_xor, crypto_stream_chacha20_ietf_xor_ic, crypto_stream_chacha20_keygen, crypto_stream_chacha20_xor, crypto_stream_chacha20_xor_ic, crypto_stream_keygen, crypto_stream_xchacha20_keygen, crypto_stream_xchacha20_xor, crypto_stream_xchacha20_xor_ic, randombytes_buf, randombytes_buf_deterministic, randombytes_close, randombytes_random, randombytes_set_implementation, randombytes_stir, randombytes_uniform, sodium_version_string];
      for (var i = 0; i < functions.length; i++) {
        if (typeof libsodium["_" + exported_functions[i]] === "function") {
          exports[exported_functions[i]] = functions[i];
        }
      }
      var constants = ["SODIUM_LIBRARY_VERSION_MAJOR", "SODIUM_LIBRARY_VERSION_MINOR", "crypto_aead_chacha20poly1305_ABYTES", "crypto_aead_chacha20poly1305_IETF_ABYTES", "crypto_aead_chacha20poly1305_IETF_KEYBYTES", "crypto_aead_chacha20poly1305_IETF_MESSAGEBYTES_MAX", "crypto_aead_chacha20poly1305_IETF_NPUBBYTES", "crypto_aead_chacha20poly1305_IETF_NSECBYTES", "crypto_aead_chacha20poly1305_KEYBYTES", "crypto_aead_chacha20poly1305_MESSAGEBYTES_MAX", "crypto_aead_chacha20poly1305_NPUBBYTES", "crypto_aead_chacha20poly1305_NSECBYTES", "crypto_aead_chacha20poly1305_ietf_ABYTES", "crypto_aead_chacha20poly1305_ietf_KEYBYTES", "crypto_aead_chacha20poly1305_ietf_MESSAGEBYTES_MAX", "crypto_aead_chacha20poly1305_ietf_NPUBBYTES", "crypto_aead_chacha20poly1305_ietf_NSECBYTES", "crypto_aead_xchacha20poly1305_IETF_ABYTES", "crypto_aead_xchacha20poly1305_IETF_KEYBYTES", "crypto_aead_xchacha20poly1305_IETF_MESSAGEBYTES_MAX", "crypto_aead_xchacha20poly1305_IETF_NPUBBYTES", "crypto_aead_xchacha20poly1305_IETF_NSECBYTES", "crypto_aead_xchacha20poly1305_ietf_ABYTES", "crypto_aead_xchacha20poly1305_ietf_KEYBYTES", "crypto_aead_xchacha20poly1305_ietf_MESSAGEBYTES_MAX", "crypto_aead_xchacha20poly1305_ietf_NPUBBYTES", "crypto_aead_xchacha20poly1305_ietf_NSECBYTES", "crypto_auth_BYTES", "crypto_auth_KEYBYTES", "crypto_auth_hmacsha256_BYTES", "crypto_auth_hmacsha256_KEYBYTES", "crypto_auth_hmacsha512256_BYTES", "crypto_auth_hmacsha512256_KEYBYTES", "crypto_auth_hmacsha512_BYTES", "crypto_auth_hmacsha512_KEYBYTES", "crypto_box_BEFORENMBYTES", "crypto_box_MACBYTES", "crypto_box_MESSAGEBYTES_MAX", "crypto_box_NONCEBYTES", "crypto_box_PUBLICKEYBYTES", "crypto_box_SEALBYTES", "crypto_box_SECRETKEYBYTES", "crypto_box_SEEDBYTES", "crypto_box_curve25519xchacha20poly1305_BEFORENMBYTES", "crypto_box_curve25519xchacha20poly1305_MACBYTES", "crypto_box_curve25519xchacha20poly1305_MESSAGEBYTES_MAX", "crypto_box_curve25519xchacha20poly1305_NONCEBYTES", "crypto_box_curve25519xchacha20poly1305_PUBLICKEYBYTES", "crypto_box_curve25519xchacha20poly1305_SEALBYTES", "crypto_box_curve25519xchacha20poly1305_SECRETKEYBYTES", "crypto_box_curve25519xchacha20poly1305_SEEDBYTES", "crypto_box_curve25519xsalsa20poly1305_BEFORENMBYTES", "crypto_box_curve25519xsalsa20poly1305_MACBYTES", "crypto_box_curve25519xsalsa20poly1305_MESSAGEBYTES_MAX", "crypto_box_curve25519xsalsa20poly1305_NONCEBYTES", "crypto_box_curve25519xsalsa20poly1305_PUBLICKEYBYTES", "crypto_box_curve25519xsalsa20poly1305_SECRETKEYBYTES", "crypto_box_curve25519xsalsa20poly1305_SEEDBYTES", "crypto_core_ed25519_BYTES", "crypto_core_ed25519_HASHBYTES", "crypto_core_ed25519_NONREDUCEDSCALARBYTES", "crypto_core_ed25519_SCALARBYTES", "crypto_core_ed25519_UNIFORMBYTES", "crypto_core_hchacha20_CONSTBYTES", "crypto_core_hchacha20_INPUTBYTES", "crypto_core_hchacha20_KEYBYTES", "crypto_core_hchacha20_OUTPUTBYTES", "crypto_core_hsalsa20_CONSTBYTES", "crypto_core_hsalsa20_INPUTBYTES", "crypto_core_hsalsa20_KEYBYTES", "crypto_core_hsalsa20_OUTPUTBYTES", "crypto_core_ristretto255_BYTES", "crypto_core_ristretto255_HASHBYTES", "crypto_core_ristretto255_NONREDUCEDSCALARBYTES", "crypto_core_ristretto255_SCALARBYTES", "crypto_core_salsa2012_CONSTBYTES", "crypto_core_salsa2012_INPUTBYTES", "crypto_core_salsa2012_KEYBYTES", "crypto_core_salsa2012_OUTPUTBYTES", "crypto_core_salsa20_CONSTBYTES", "crypto_core_salsa20_INPUTBYTES", "crypto_core_salsa20_KEYBYTES", "crypto_core_salsa20_OUTPUTBYTES", "crypto_generichash_BYTES", "crypto_generichash_BYTES_MAX", "crypto_generichash_BYTES_MIN", "crypto_generichash_KEYBYTES", "crypto_generichash_KEYBYTES_MAX", "crypto_generichash_KEYBYTES_MIN", "crypto_generichash_blake2b_BYTES", "crypto_generichash_blake2b_BYTES_MAX", "crypto_generichash_blake2b_BYTES_MIN", "crypto_generichash_blake2b_KEYBYTES", "crypto_generichash_blake2b_KEYBYTES_MAX", "crypto_generichash_blake2b_KEYBYTES_MIN", "crypto_generichash_blake2b_PERSONALBYTES", "crypto_generichash_blake2b_SALTBYTES", "crypto_hash_BYTES", "crypto_hash_sha256_BYTES", "crypto_hash_sha512_BYTES", "crypto_kdf_BYTES_MAX", "crypto_kdf_BYTES_MIN", "crypto_kdf_CONTEXTBYTES", "crypto_kdf_KEYBYTES", "crypto_kdf_blake2b_BYTES_MAX", "crypto_kdf_blake2b_BYTES_MIN", "crypto_kdf_blake2b_CONTEXTBYTES", "crypto_kdf_blake2b_KEYBYTES", "crypto_kx_PUBLICKEYBYTES", "crypto_kx_SECRETKEYBYTES", "crypto_kx_SEEDBYTES", "crypto_kx_SESSIONKEYBYTES", "crypto_onetimeauth_BYTES", "crypto_onetimeauth_KEYBYTES", "crypto_onetimeauth_poly1305_BYTES", "crypto_onetimeauth_poly1305_KEYBYTES", "crypto_pwhash_ALG_ARGON2I13", "crypto_pwhash_ALG_ARGON2ID13", "crypto_pwhash_ALG_DEFAULT", "crypto_pwhash_BYTES_MAX", "crypto_pwhash_BYTES_MIN", "crypto_pwhash_MEMLIMIT_INTERACTIVE", "crypto_pwhash_MEMLIMIT_MAX", "crypto_pwhash_MEMLIMIT_MIN", "crypto_pwhash_MEMLIMIT_MODERATE", "crypto_pwhash_MEMLIMIT_SENSITIVE", "crypto_pwhash_OPSLIMIT_INTERACTIVE", "crypto_pwhash_OPSLIMIT_MAX", "crypto_pwhash_OPSLIMIT_MIN", "crypto_pwhash_OPSLIMIT_MODERATE", "crypto_pwhash_OPSLIMIT_SENSITIVE", "crypto_pwhash_PASSWD_MAX", "crypto_pwhash_PASSWD_MIN", "crypto_pwhash_SALTBYTES", "crypto_pwhash_STRBYTES", "crypto_pwhash_argon2i_BYTES_MAX", "crypto_pwhash_argon2i_BYTES_MIN", "crypto_pwhash_argon2i_SALTBYTES", "crypto_pwhash_argon2i_STRBYTES", "crypto_pwhash_argon2id_BYTES_MAX", "crypto_pwhash_argon2id_BYTES_MIN", "crypto_pwhash_argon2id_SALTBYTES", "crypto_pwhash_argon2id_STRBYTES", "crypto_pwhash_scryptsalsa208sha256_BYTES_MAX", "crypto_pwhash_scryptsalsa208sha256_BYTES_MIN", "crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_INTERACTIVE", "crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_MAX", "crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_MIN", "crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_SENSITIVE", "crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_INTERACTIVE", "crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_MAX", "crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_MIN", "crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_SENSITIVE", "crypto_pwhash_scryptsalsa208sha256_SALTBYTES", "crypto_pwhash_scryptsalsa208sha256_STRBYTES", "crypto_scalarmult_BYTES", "crypto_scalarmult_SCALARBYTES", "crypto_scalarmult_curve25519_BYTES", "crypto_scalarmult_curve25519_SCALARBYTES", "crypto_scalarmult_ed25519_BYTES", "crypto_scalarmult_ed25519_SCALARBYTES", "crypto_scalarmult_ristretto255_BYTES", "crypto_scalarmult_ristretto255_SCALARBYTES", "crypto_secretbox_KEYBYTES", "crypto_secretbox_MACBYTES", "crypto_secretbox_MESSAGEBYTES_MAX", "crypto_secretbox_NONCEBYTES", "crypto_secretbox_xchacha20poly1305_KEYBYTES", "crypto_secretbox_xchacha20poly1305_MACBYTES", "crypto_secretbox_xchacha20poly1305_MESSAGEBYTES_MAX", "crypto_secretbox_xchacha20poly1305_NONCEBYTES", "crypto_secretbox_xsalsa20poly1305_KEYBYTES", "crypto_secretbox_xsalsa20poly1305_MACBYTES", "crypto_secretbox_xsalsa20poly1305_MESSAGEBYTES_MAX", "crypto_secretbox_xsalsa20poly1305_NONCEBYTES", "crypto_secretstream_xchacha20poly1305_ABYTES", "crypto_secretstream_xchacha20poly1305_HEADERBYTES", "crypto_secretstream_xchacha20poly1305_KEYBYTES", "crypto_secretstream_xchacha20poly1305_MESSAGEBYTES_MAX", "crypto_secretstream_xchacha20poly1305_TAG_FINAL", "crypto_secretstream_xchacha20poly1305_TAG_MESSAGE", "crypto_secretstream_xchacha20poly1305_TAG_PUSH", "crypto_secretstream_xchacha20poly1305_TAG_REKEY", "crypto_shorthash_BYTES", "crypto_shorthash_KEYBYTES", "crypto_shorthash_siphash24_BYTES", "crypto_shorthash_siphash24_KEYBYTES", "crypto_shorthash_siphashx24_BYTES", "crypto_shorthash_siphashx24_KEYBYTES", "crypto_sign_BYTES", "crypto_sign_MESSAGEBYTES_MAX", "crypto_sign_PUBLICKEYBYTES", "crypto_sign_SECRETKEYBYTES", "crypto_sign_SEEDBYTES", "crypto_sign_ed25519_BYTES", "crypto_sign_ed25519_MESSAGEBYTES_MAX", "crypto_sign_ed25519_PUBLICKEYBYTES", "crypto_sign_ed25519_SECRETKEYBYTES", "crypto_sign_ed25519_SEEDBYTES", "crypto_stream_KEYBYTES", "crypto_stream_MESSAGEBYTES_MAX", "crypto_stream_NONCEBYTES", "crypto_stream_chacha20_IETF_KEYBYTES", "crypto_stream_chacha20_IETF_MESSAGEBYTES_MAX", "crypto_stream_chacha20_IETF_NONCEBYTES", "crypto_stream_chacha20_KEYBYTES", "crypto_stream_chacha20_MESSAGEBYTES_MAX", "crypto_stream_chacha20_NONCEBYTES", "crypto_stream_chacha20_ietf_KEYBYTES", "crypto_stream_chacha20_ietf_MESSAGEBYTES_MAX", "crypto_stream_chacha20_ietf_NONCEBYTES", "crypto_stream_salsa2012_KEYBYTES", "crypto_stream_salsa2012_MESSAGEBYTES_MAX", "crypto_stream_salsa2012_NONCEBYTES", "crypto_stream_salsa208_KEYBYTES", "crypto_stream_salsa208_MESSAGEBYTES_MAX", "crypto_stream_salsa208_NONCEBYTES", "crypto_stream_salsa20_KEYBYTES", "crypto_stream_salsa20_MESSAGEBYTES_MAX", "crypto_stream_salsa20_NONCEBYTES", "crypto_stream_xchacha20_KEYBYTES", "crypto_stream_xchacha20_MESSAGEBYTES_MAX", "crypto_stream_xchacha20_NONCEBYTES", "crypto_stream_xsalsa20_KEYBYTES", "crypto_stream_xsalsa20_MESSAGEBYTES_MAX", "crypto_stream_xsalsa20_NONCEBYTES", "crypto_verify_16_BYTES", "crypto_verify_32_BYTES", "crypto_verify_64_BYTES"];
      for (var i = 0; i < constants.length; i++) {
        var raw = libsodium["_" + constants[i].toLowerCase()];
        if (typeof raw === "function") exports[constants[i]] = raw();
      }
      var constants_str = ["SODIUM_VERSION_STRING", "crypto_pwhash_STRPREFIX", "crypto_pwhash_scryptsalsa208sha256_STRPREFIX"];
      for (var i = 0; i < constants_str.length; i++) {
        var raw = libsodium["_" + constants_str[i].toLowerCase()];
        if (typeof raw === "function") exports[constants_str[i]] = libsodium.UTF8ToString(raw());
      }

      }

      /* Test to make sure everything works. If not, switch to asm.js fallback. */

      try {
        libsodiumInit();
        var message = new Uint8Array([98, 97, 108, 108, 115]);
        var nonce = exports.randombytes_buf(exports.crypto_secretbox_NONCEBYTES);
        var key = exports.randombytes_buf(exports.crypto_secretbox_KEYBYTES);
        var encrypted = exports.crypto_secretbox_easy(message, nonce, key);
        var decrypted = exports.crypto_secretbox_open_easy(encrypted, nonce, key);

        if (exports.memcmp(message, decrypted)) {
          return;
        }
      }
      catch (err) { 
        if (libsodium.useBackupModule == null) {
          throw new Error("Both wasm and asm failed to load" + err)
        }
      }

      libsodium.useBackupModule();
      libsodiumInit();
    });

    // List of functions and constants defined in the wrapped libsodium
    function symbols() {
      return Object.keys(exports).sort();
    }

    function increment(bytes) {
      if (!(bytes instanceof Uint8Array)) {
        throw new TypeError("Only Uint8Array instances can be incremented");
      }
      var c = 1 << 8;
      for (var i = 0 | 0, j = bytes.length; i < j; i++) {
        c >>= 8;
        c += bytes[i];
        bytes[i] = c & 0xff;
      }
    }

    function add(a, b) {
      if (!(a instanceof Uint8Array) || !(b instanceof Uint8Array)) {
        throw new TypeError("Only Uint8Array instances can added");
      }
      var j = a.length,
        c = 0 | 0,
        i = 0 | 0;
      if (b.length != a.length) {
        throw new TypeError("Arguments must have the same length");
      }
      for (i = 0; i < j; i++) {
        c >>= 8;
        c += a[i] + b[i];
        a[i] = c & 0xff;
      }
    }

    function is_zero(bytes) {
      if (!(bytes instanceof Uint8Array)) {
        throw new TypeError("Only Uint8Array instances can be checked");
      }
      var d = 0 | 0;
      for (var i = 0 | 0, j = bytes.length; i < j; i++) {
        d |= bytes[i];
      }
      return d === 0;
    }

    function memzero(bytes) {
      if (!(bytes instanceof Uint8Array)) {
        throw new TypeError("Only Uint8Array instances can be wiped");
      }
      for (var i = 0 | 0, j = bytes.length; i < j; i++) {
        bytes[i] = 0;
      }
    }

    function memcmp(b1, b2) {
      if (!(b1 instanceof Uint8Array && b2 instanceof Uint8Array)) {
        throw new TypeError("Only Uint8Array instances can be compared");
      }
      if (b1.length !== b2.length) {
        throw new TypeError(
          "Only instances of identical length can be compared"
        );
      }
      for (var d = 0 | 0, i = 0 | 0, j = b1.length; i < j; i++) {
        d |= b1[i] ^ b2[i];
      }
      return d === 0;
    }

    function compare(b1, b2) {
      if (!(b1 instanceof Uint8Array && b2 instanceof Uint8Array)) {
        throw new TypeError("Only Uint8Array instances can be compared");
      }
      if (b1.length !== b2.length) {
        throw new TypeError(
          "Only instances of identical length can be compared"
        );
      }
      for (var gt = 0 | 0, eq = 1 | 1, i = b1.length; i-- > 0;) {
        gt |= ((b2[i] - b1[i]) >> 8) & eq;
        eq &= ((b2[i] ^ b1[i]) - 1) >> 8;
      }
      return gt + gt + eq - 1;
    }

    function pad(buf, blocksize) {
      if (!(buf instanceof Uint8Array)) {
        throw new TypeError("buffer must be a Uint8Array");
      }
      blocksize |= 0;
      if (blocksize <= 0) {
        throw new Error("block size must be > 0");
      }
      var address_pool = [],
        padded,
        padded_buflen_p = _malloc(4),
        st = 1 | 0,
        i = 0 | 0,
        k = buf.length | 0,
        bufx = new AllocatedBuf(k + blocksize);
      address_pool.push(padded_buflen_p);
      address_pool.push(bufx.address);
      for (
        var j = bufx.address, jmax = bufx.address + k + blocksize; j < jmax; j++
      ) {
        libsodium.HEAPU8[j] = buf[i];
        k -= st;
        st = ~(((((k >>> 48) | (k >>> 32) | (k >>> 16) | k) & 0xffff) - 1) >> 16) &
          1;
        i += st;
      }
      if (
        libsodium._sodium_pad(
          padded_buflen_p,
          bufx.address,
          buf.length,
          blocksize,
          bufx.length
        ) !== 0
      ) {
        _free_and_throw_error(address_pool, "internal error");
      }
      bufx.length = libsodium.getValue(padded_buflen_p, "i32");
      padded = bufx.to_Uint8Array();
      _free_all(address_pool);
      return padded;
    }

    function unpad(buf, blocksize) {
      if (!(buf instanceof Uint8Array)) {
        throw new TypeError("buffer must be a Uint8Array");
      }
      blocksize |= 0;
      if (blocksize <= 0) {
        throw new Error("block size must be > 0");
      }
      var address_pool = [],
        unpadded_address = _to_allocated_buf_address(buf),
        unpadded_buflen_p = _malloc(4);
      address_pool.push(unpadded_address);
      address_pool.push(unpadded_buflen_p);
      if (
        libsodium._sodium_unpad(
          unpadded_buflen_p,
          unpadded_address,
          buf.length,
          blocksize
        ) !== 0
      ) {
        _free_and_throw_error(address_pool, "unsupported/invalid padding");
      }
      buf = new Uint8Array(buf);
      buf = buf.subarray(0, libsodium.getValue(unpadded_buflen_p, "i32"));
      _free_all(address_pool);
      return buf;
    }

    //---------------------------------------------------------------------------
    // Codecs
    //
    function from_string(str) {
      if (typeof TextEncoder === "function") {
        return new TextEncoder().encode(str);
      }
      str = unescape(encodeURIComponent(str));
      var bytes = new Uint8Array(str.length);
      for (var i = 0, j = str.length; i < j; i++) {
        bytes[i] = str.charCodeAt(i);
      }
      return bytes;
    }

    function to_string(bytes) {
      if (typeof TextDecoder === "function") {
        return new TextDecoder("utf-8", {
          fatal: true
        }).decode(bytes);
      }

      var toStringChunkSize = 8192,
        numChunks = Math.ceil(bytes.length / toStringChunkSize);
      if (numChunks <= 1) {
        try {
          return decodeURIComponent(
            escape(String.fromCharCode.apply(null, bytes))
          );
        } catch (_) {
          throw new TypeError("The encoded data was not valid.");
        }
      }
      var totalString = "";
      var sequenceReadOffset = 0;
      for (var i = 0; i < numChunks; i++) {
        var currentChunk = Array.prototype.slice.call(
          bytes,
          i * toStringChunkSize + sequenceReadOffset,
          (i + 1) * toStringChunkSize + sequenceReadOffset
        );
        //Depending on how much we have shifted
        if (currentChunk.length == 0) {
          continue;
        }

        //Checking that we didn't cut the buffer in the middle of a UTF8 sequence.
        //If we did, remove the bytes of the "cut" sequence and
        //decrement sequenceReadOffset for each removed byte
        var sequenceDetectionComplete,
          sequenceIndex = currentChunk.length,
          sequenceLength = 0;

        //This loop will read the chunk from its end, looking for sequence start bytes
        do {
          sequenceIndex--;
          var currentByte = currentChunk[sequenceIndex];

          if (currentByte >= 240) {
            //Beginning of a 4-byte UTF-8 sequence
            sequenceLength = 4;
            sequenceDetectionComplete = true;
          } else if (currentByte >= 224) {
            //Beginning of a 3-byte UTF-8 sequence
            sequenceLength = 3;
            sequenceDetectionComplete = true;
          } else if (currentByte >= 192) {
            //Beginning of a 2-byte UTF-8 sequence
            sequenceLength = 2;
            sequenceDetectionComplete = true;
          } else if (currentByte < 128) {
            //A one byte UTF-8 char
            sequenceLength = 1;
            sequenceDetectionComplete = true;
          }
          //The values between [128, 192[ are part of a UTF-8 sequence.
          //The loop will not exit in that case, and will iterate one byte backwards instead
        } while (!sequenceDetectionComplete);

        var extraBytes = sequenceLength - (currentChunk.length - sequenceIndex);
        for (var j = 0; j < extraBytes; j++) {
          sequenceReadOffset--;
          currentChunk.pop();
        }

        totalString += to_string(currentChunk);
      }
      return totalString;
    }

    function from_hex(input) {
      var address_pool = [],
        input = _any_to_Uint8Array(address_pool, input, "input"),
        result = new AllocatedBuf(input.length / 2),
        result_str,
        input_address = _to_allocated_buf_address(input),
        hex_end_p = _malloc(4),
        hex_end;
      address_pool.push(input_address);
      address_pool.push(result.address);
      address_pool.push(result.hex_end_p);
      if (
        libsodium._sodium_hex2bin(
          result.address,
          result.length,
          input_address,
          input.length,
          0,
          0,
          hex_end_p
        ) !== 0
      ) {
        _free_and_throw_error(address_pool, "invalid input");
      }
      hex_end = libsodium.getValue(hex_end_p, "i32");
      if (hex_end - input_address !== input.length) {
        _free_and_throw_error(address_pool, "incomplete input");
      }
      result_str = result.to_Uint8Array();
      _free_all(address_pool);
      return result_str;
    }

    function to_hex(input) {
      input = _any_to_Uint8Array(null, input, "input");
      var str = "",
        b,
        c,
        x;
      for (var i = 0; i < input.length; i++) {
        c = input[i] & 0xf;
        b = input[i] >>> 4;
        x =
          ((87 + c + (((c - 10) >> 8) & ~38)) << 8) |
          (87 + b + (((b - 10) >> 8) & ~38));
        str += String.fromCharCode(x & 0xff) + String.fromCharCode(x >>> 8);
      }
      return str;
    }

    var base64_variants = {
      ORIGINAL: 1 | 0,
      ORIGINAL_NO_PADDING: 3 | 0,
      URLSAFE: 5 | 0,
      URLSAFE_NO_PADDING: 7 | 0
    };

    function check_base64_variant(variant) {
      if (variant == undefined) {
        return base64_variants.URLSAFE_NO_PADDING;
      }
      if (
        variant !== base64_variants.ORIGINAL &&
        variant !== base64_variants.ORIGINAL_NO_PADDING &&
        variant !== base64_variants.URLSAFE &&
        variant != base64_variants.URLSAFE_NO_PADDING
      ) {
        throw new Error("unsupported base64 variant");
      }
      return variant;
    }

    function from_base64(input, variant) {
      variant = check_base64_variant(variant);
      var address_pool = [],
        input = _any_to_Uint8Array(address_pool, input, "input"),
        result = new AllocatedBuf(input.length * 3 / 4),
        result_bin,
        input_address = _to_allocated_buf_address(input),
        result_bin_len_p = _malloc(4),
        b64_end_p = _malloc(4),
        b64_end;
      address_pool.push(input_address);
      address_pool.push(result.address);
      address_pool.push(result.result_bin_len_p);
      address_pool.push(result.b64_end_p);
      if (
        libsodium._sodium_base642bin(
          result.address,
          result.length,
          input_address,
          input.length,
          0,
          result_bin_len_p,
          b64_end_p,
          variant
        ) !== 0
      ) {
        _free_and_throw_error(address_pool, "invalid input");
      }
      b64_end = libsodium.getValue(b64_end_p, "i32");
      if (b64_end - input_address !== input.length) {
        _free_and_throw_error(address_pool, "incomplete input");
      }
      result.length = libsodium.getValue(result_bin_len_p, "i32");
      result_bin = result.to_Uint8Array();
      _free_all(address_pool);
      return result_bin;
    }

    function to_base64(input, variant) {
      variant = check_base64_variant(variant);
      input = _any_to_Uint8Array(address_pool, input, "input");
      var address_pool = [],
        nibbles = Math.floor(input.length / 3) | 0,
        remainder = input.length - 3 * nibbles,
        b64_len =
        nibbles * 4 +
        (remainder !== 0 ?
          (variant & 2) === 0 ? 4 : 2 + (remainder >>> 1) :
          0),
        result = new AllocatedBuf(b64_len + 1),
        result_b64,
        input_address = _to_allocated_buf_address(input);
      address_pool.push(input_address);
      address_pool.push(result.address);
      if (
        libsodium._sodium_bin2base64(
          result.address,
          result.length,
          input_address,
          input.length,
          variant
        ) === 0
      ) {
        _free_and_throw_error(address_pool, "conversion failed");
      }
      result.length = b64_len;
      result_b64 = to_string(result.to_Uint8Array());
      _free_all(address_pool);
      return result_b64;
    }

    function output_formats() {
      return ["uint8array", "text", "hex", "base64"];
    }

    function _format_output(output, optionalOutputFormat) {
      var selectedOutputFormat = optionalOutputFormat || output_format;
      if (!_is_output_format(selectedOutputFormat)) {
        throw new Error(
          selectedOutputFormat + " output format is not available"
        );
      }
      if (output instanceof AllocatedBuf) {
        if (selectedOutputFormat === "uint8array") {
          return output.to_Uint8Array();
        } else if (selectedOutputFormat === "text") {
          return to_string(output.to_Uint8Array());
        } else if (selectedOutputFormat === "hex") {
          return to_hex(output.to_Uint8Array());
        } else if (selectedOutputFormat === "base64") {
          return to_base64(
            output.to_Uint8Array(),
            base64_variants.URLSAFE_NO_PADDING
          );
        } else {
          throw new Error(
            'What is output format "' + selectedOutputFormat + '"?'
          );
        }
      } else if (output instanceof AllocatedBuf32) {
        return output.to_Uint8Array();
      } else if (typeof output === "object") {
        // Composed output. Example: key pairs
        var props = Object.keys(output);
        var formattedOutput = {};
        for (var i = 0; i < props.length; i++) {
          formattedOutput[props[i]] = _format_output(
            output[props[i]],
            selectedOutputFormat
          );
        }
        return formattedOutput;
      } else if (typeof output === "string") {
        return output;
      } else {
        throw new TypeError("Cannot format output");
      }
    }

    function _is_output_format(format) {
      var formats = output_formats();
      for (var i = 0; i < formats.length; i++) {
        if (formats[i] === format) {
          return true;
        }
      }
      return false;
    }

    function _check_output_format(format) {
      if (!format) {
        return;
      } else if (typeof format !== "string") {
        throw new TypeError("When defined, the output format must be a string");
      } else if (!_is_output_format(format)) {
        throw new Error(format + " is not a supported output format");
      }
    }

    //---------------------------------------------------------------------------
    // Memory management
    //
    // AllocatedBuf: address allocated using _malloc() + length
    function AllocatedBuf(length) {
      this.length = length;
      this.address = _malloc(length);
    }

    // Copy the content of a AllocatedBuf (_malloc()'d memory) into a Uint8Array
    AllocatedBuf.prototype.to_Uint8Array = function () {
      var result = new Uint8Array(this.length);
      result.set(
        libsodium.HEAPU8.subarray(this.address, this.address + this.length)
      );
      return result;
    };

    function AllocatedBuf32(length) {
      this.length = length;
      this.address = _malloc(length);
    }

    AllocatedBuf32.prototype.to_Uint8Array = function () {
      
      // someArray[counter].set(
      //   //libsodium.HEAPU8.subarray(this.address, this.address + this.length)
      //   libsodium.HEAPU8.subarray(this.address, this.address + 16)
      // );
      // counter += 1
      // return someArray[counter];

      // var result = new Uint8Array(this.length);
      // result.set(
      //   libsodium.HEAPU8.subarray(this.address, this.address + this.length)
      // );
      // return result;
      return libsodium.HEAPU8.subarray(this.address, this.address + this.length)

    };

    // _malloc() a region and initialize it with the content of a Uint8Array
    function _to_allocated_buf_address(bytes) {
      var address = _malloc(bytes.length);
      libsodium.HEAPU8.set(bytes, address);
      return address;
    }

    function _to_allocated_buf32_address(bytes) {
      var address = _malloc(bytes.length*4);
      libsodium.HEAPU8.set(bytes, address);
      return address;
    }

    function _malloc(length) {
      var result = libsodium._malloc(length);
      if (result === 0) {
        throw {
          message: "_malloc() failed",
          length: length
        };
      }
      return result;
    }

    function _free(address) {
      libsodium._free(address);
    }

    function _free_all(addresses) {
      if (addresses) {
        for (var i = 0; i < addresses.length; i++) {
          _free(addresses[i]);
        }
      }
    }

    function _free_and_throw_error(address_pool, err) {
      _free_all(address_pool);
      throw new Error(err);
    }

    function _free_and_throw_type_error(address_pool, err) {
      _free_all(address_pool);
      throw new TypeError(err);
    }

    function _require_defined(address_pool, varValue, varName) {
      if (varValue == undefined) {
        _free_and_throw_type_error(
          address_pool,
          varName + " cannot be null or undefined"
        );
      }
    }

    function _any_to_Uint8Array(address_pool, varValue, varName) {
      _require_defined(address_pool, varValue, varName);
      if (varValue instanceof Uint8Array) {
        return varValue;
      } else if (varValue instanceof Int32Array) {
          return varValue;
      } else if (typeof varValue === "string") {
        return from_string(varValue);
      }
      _free_and_throw_type_error(
        address_pool,
        "unsupported input type for " + varName
      );
    }


    function crypto_aead_chacha20poly1305_decrypt(secret_nonce, ciphertext, additional_data, public_nonce, key, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: secret_nonce (unsized_buf_optional)

      var secret_nonce_address = null, secret_nonce_length = 0;
      if (secret_nonce != undefined) {
              secret_nonce = _any_to_Uint8Array(address_pool, secret_nonce, "secret_nonce");
              secret_nonce_address = _to_allocated_buf_address(secret_nonce);
              secret_nonce_length = secret_nonce.length;
              address_pool.push(secret_nonce_address);
      }


      // ---------- input: ciphertext (minsized_buf)

      ciphertext = _any_to_Uint8Array(address_pool, ciphertext, "ciphertext");
      var ciphertext_address, ciphertext_min_length = libsodium._crypto_aead_chacha20poly1305_abytes(), ciphertext_length = ciphertext.length;
      if (ciphertext_length < ciphertext_min_length) {
              _free_and_throw_type_error(address_pool, "ciphertext is too short");
      }
      ciphertext_address = _to_allocated_buf_address(ciphertext);
      address_pool.push(ciphertext_address);

      // ---------- input: additional_data (unsized_buf_optional)

      var additional_data_address = null, additional_data_length = 0;
      if (additional_data != undefined) {
              additional_data = _any_to_Uint8Array(address_pool, additional_data, "additional_data");
              additional_data_address = _to_allocated_buf_address(additional_data);
              additional_data_length = additional_data.length;
              address_pool.push(additional_data_address);
      }


      // ---------- input: public_nonce (buf)

      public_nonce = _any_to_Uint8Array(address_pool, public_nonce, "public_nonce");
      var public_nonce_address, public_nonce_length = (libsodium._crypto_aead_chacha20poly1305_npubbytes()) | 0;
      if (public_nonce.length !== public_nonce_length) {
          _free_and_throw_type_error(address_pool, "invalid public_nonce length");
      }
      public_nonce_address = _to_allocated_buf_address(public_nonce);
      address_pool.push(public_nonce_address);

      // ---------- input: key (buf)

      key = _any_to_Uint8Array(address_pool, key, "key");
      var key_address, key_length = (libsodium._crypto_aead_chacha20poly1305_keybytes()) | 0;
      if (key.length !== key_length) {
          _free_and_throw_type_error(address_pool, "invalid key length");
      }
      key_address = _to_allocated_buf_address(key);
      address_pool.push(key_address);

      // ---------- output message (buf)

      var message_length = (ciphertext_length - libsodium._crypto_aead_chacha20poly1305_abytes()) | 0,
          message = new AllocatedBuf(message_length),
          message_address = message.address;

      address_pool.push(message_address);

      if ((libsodium._crypto_aead_chacha20poly1305_decrypt(message_address, null, secret_nonce_address, ciphertext_address, ciphertext_length, 0, additional_data_address, additional_data_length, 0, public_nonce_address, key_address)) === 0) {
      	var ret = _format_output(message, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "ciphertext cannot be decrypted using that key");
    }

    function crypto_aead_chacha20poly1305_decrypt_detached(secret_nonce, ciphertext, mac, additional_data, public_nonce, key, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: secret_nonce (unsized_buf_optional)

      var secret_nonce_address = null, secret_nonce_length = 0;
      if (secret_nonce != undefined) {
              secret_nonce = _any_to_Uint8Array(address_pool, secret_nonce, "secret_nonce");
              secret_nonce_address = _to_allocated_buf_address(secret_nonce);
              secret_nonce_length = secret_nonce.length;
              address_pool.push(secret_nonce_address);
      }


      // ---------- input: ciphertext (unsized_buf)

      ciphertext = _any_to_Uint8Array(address_pool, ciphertext, "ciphertext");
      var ciphertext_address = _to_allocated_buf_address(ciphertext),
          ciphertext_length = ciphertext.length;
      address_pool.push(ciphertext_address);

      // ---------- input: mac (buf)

      mac = _any_to_Uint8Array(address_pool, mac, "mac");
      var mac_address, mac_length = (libsodium._crypto_box_macbytes()) | 0;
      if (mac.length !== mac_length) {
          _free_and_throw_type_error(address_pool, "invalid mac length");
      }
      mac_address = _to_allocated_buf_address(mac);
      address_pool.push(mac_address);

      // ---------- input: additional_data (unsized_buf_optional)

      var additional_data_address = null, additional_data_length = 0;
      if (additional_data != undefined) {
              additional_data = _any_to_Uint8Array(address_pool, additional_data, "additional_data");
              additional_data_address = _to_allocated_buf_address(additional_data);
              additional_data_length = additional_data.length;
              address_pool.push(additional_data_address);
      }


      // ---------- input: public_nonce (buf)

      public_nonce = _any_to_Uint8Array(address_pool, public_nonce, "public_nonce");
      var public_nonce_address, public_nonce_length = (libsodium._crypto_aead_chacha20poly1305_npubbytes()) | 0;
      if (public_nonce.length !== public_nonce_length) {
          _free_and_throw_type_error(address_pool, "invalid public_nonce length");
      }
      public_nonce_address = _to_allocated_buf_address(public_nonce);
      address_pool.push(public_nonce_address);

      // ---------- input: key (buf)

      key = _any_to_Uint8Array(address_pool, key, "key");
      var key_address, key_length = (libsodium._crypto_aead_chacha20poly1305_keybytes()) | 0;
      if (key.length !== key_length) {
          _free_and_throw_type_error(address_pool, "invalid key length");
      }
      key_address = _to_allocated_buf_address(key);
      address_pool.push(key_address);

      // ---------- output message (buf)

      var message_length = (ciphertext_length) | 0,
          message = new AllocatedBuf(message_length),
          message_address = message.address;

      address_pool.push(message_address);

      if ((libsodium._crypto_aead_chacha20poly1305_decrypt_detached(message_address, secret_nonce_address, ciphertext_address, ciphertext_length, 0, mac_address, additional_data_address, additional_data_length, 0, public_nonce_address, key_address)) === 0) {
      	var ret = _format_output(message, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "ciphertext cannot be decrypted using that key");
    }

    function crypto_aead_chacha20poly1305_encrypt(message, additional_data, secret_nonce, public_nonce, key, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: message (unsized_buf)

      message = _any_to_Uint8Array(address_pool, message, "message");
      var message_address = _to_allocated_buf_address(message),
          message_length = message.length;
      address_pool.push(message_address);

      // ---------- input: additional_data (unsized_buf_optional)

      var additional_data_address = null, additional_data_length = 0;
      if (additional_data != undefined) {
              additional_data = _any_to_Uint8Array(address_pool, additional_data, "additional_data");
              additional_data_address = _to_allocated_buf_address(additional_data);
              additional_data_length = additional_data.length;
              address_pool.push(additional_data_address);
      }


      // ---------- input: secret_nonce (unsized_buf_optional)

      var secret_nonce_address = null, secret_nonce_length = 0;
      if (secret_nonce != undefined) {
              secret_nonce = _any_to_Uint8Array(address_pool, secret_nonce, "secret_nonce");
              secret_nonce_address = _to_allocated_buf_address(secret_nonce);
              secret_nonce_length = secret_nonce.length;
              address_pool.push(secret_nonce_address);
      }


      // ---------- input: public_nonce (buf)

      public_nonce = _any_to_Uint8Array(address_pool, public_nonce, "public_nonce");
      var public_nonce_address, public_nonce_length = (libsodium._crypto_aead_chacha20poly1305_npubbytes()) | 0;
      if (public_nonce.length !== public_nonce_length) {
          _free_and_throw_type_error(address_pool, "invalid public_nonce length");
      }
      public_nonce_address = _to_allocated_buf_address(public_nonce);
      address_pool.push(public_nonce_address);

      // ---------- input: key (buf)

      key = _any_to_Uint8Array(address_pool, key, "key");
      var key_address, key_length = (libsodium._crypto_aead_chacha20poly1305_keybytes()) | 0;
      if (key.length !== key_length) {
          _free_and_throw_type_error(address_pool, "invalid key length");
      }
      key_address = _to_allocated_buf_address(key);
      address_pool.push(key_address);

      // ---------- output ciphertext (buf)

      var ciphertext_length = (message_length + libsodium._crypto_aead_chacha20poly1305_abytes()) | 0,
          ciphertext = new AllocatedBuf(ciphertext_length),
          ciphertext_address = ciphertext.address;

      address_pool.push(ciphertext_address);

      if ((libsodium._crypto_aead_chacha20poly1305_encrypt(ciphertext_address, null, message_address, message_length, 0, additional_data_address, additional_data_length, 0, secret_nonce_address, public_nonce_address, key_address)) === 0) {
      	var ret = _format_output(ciphertext, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_aead_chacha20poly1305_encrypt_detached(message, additional_data, secret_nonce, public_nonce, key, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: message (unsized_buf)

      message = _any_to_Uint8Array(address_pool, message, "message");
      var message_address = _to_allocated_buf_address(message),
          message_length = message.length;
      address_pool.push(message_address);

      // ---------- input: additional_data (unsized_buf_optional)

      var additional_data_address = null, additional_data_length = 0;
      if (additional_data != undefined) {
              additional_data = _any_to_Uint8Array(address_pool, additional_data, "additional_data");
              additional_data_address = _to_allocated_buf_address(additional_data);
              additional_data_length = additional_data.length;
              address_pool.push(additional_data_address);
      }


      // ---------- input: secret_nonce (unsized_buf_optional)

      var secret_nonce_address = null, secret_nonce_length = 0;
      if (secret_nonce != undefined) {
              secret_nonce = _any_to_Uint8Array(address_pool, secret_nonce, "secret_nonce");
              secret_nonce_address = _to_allocated_buf_address(secret_nonce);
              secret_nonce_length = secret_nonce.length;
              address_pool.push(secret_nonce_address);
      }


      // ---------- input: public_nonce (buf)

      public_nonce = _any_to_Uint8Array(address_pool, public_nonce, "public_nonce");
      var public_nonce_address, public_nonce_length = (libsodium._crypto_aead_chacha20poly1305_npubbytes()) | 0;
      if (public_nonce.length !== public_nonce_length) {
          _free_and_throw_type_error(address_pool, "invalid public_nonce length");
      }
      public_nonce_address = _to_allocated_buf_address(public_nonce);
      address_pool.push(public_nonce_address);

      // ---------- input: key (buf)

      key = _any_to_Uint8Array(address_pool, key, "key");
      var key_address, key_length = (libsodium._crypto_aead_chacha20poly1305_keybytes()) | 0;
      if (key.length !== key_length) {
          _free_and_throw_type_error(address_pool, "invalid key length");
      }
      key_address = _to_allocated_buf_address(key);
      address_pool.push(key_address);

      // ---------- output ciphertext (buf)

      var ciphertext_length = (message_length) | 0,
          ciphertext = new AllocatedBuf(ciphertext_length),
          ciphertext_address = ciphertext.address;

      address_pool.push(ciphertext_address);

      // ---------- output mac (buf)

      var mac_length = (libsodium._crypto_aead_chacha20poly1305_abytes()) | 0,
          mac = new AllocatedBuf(mac_length),
          mac_address = mac.address;

      address_pool.push(mac_address);

      if ((libsodium._crypto_aead_chacha20poly1305_encrypt_detached(ciphertext_address, mac_address, null, message_address, message_length, 0, additional_data_address, additional_data_length, 0, secret_nonce_address, public_nonce_address, key_address)) === 0) {
      	var ret = _format_output({ciphertext: ciphertext, mac: mac}, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_aead_chacha20poly1305_ietf_decrypt(secret_nonce, ciphertext, additional_data, public_nonce, key, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: secret_nonce (unsized_buf_optional)

      var secret_nonce_address = null, secret_nonce_length = 0;
      if (secret_nonce != undefined) {
              secret_nonce = _any_to_Uint8Array(address_pool, secret_nonce, "secret_nonce");
              secret_nonce_address = _to_allocated_buf_address(secret_nonce);
              secret_nonce_length = secret_nonce.length;
              address_pool.push(secret_nonce_address);
      }


      // ---------- input: ciphertext (minsized_buf)

      ciphertext = _any_to_Uint8Array(address_pool, ciphertext, "ciphertext");
      var ciphertext_address, ciphertext_min_length = libsodium._crypto_aead_chacha20poly1305_ietf_abytes(), ciphertext_length = ciphertext.length;
      if (ciphertext_length < ciphertext_min_length) {
              _free_and_throw_type_error(address_pool, "ciphertext is too short");
      }
      ciphertext_address = _to_allocated_buf_address(ciphertext);
      address_pool.push(ciphertext_address);

      // ---------- input: additional_data (unsized_buf_optional)

      var additional_data_address = null, additional_data_length = 0;
      if (additional_data != undefined) {
              additional_data = _any_to_Uint8Array(address_pool, additional_data, "additional_data");
              additional_data_address = _to_allocated_buf_address(additional_data);
              additional_data_length = additional_data.length;
              address_pool.push(additional_data_address);
      }


      // ---------- input: public_nonce (buf)

      public_nonce = _any_to_Uint8Array(address_pool, public_nonce, "public_nonce");
      var public_nonce_address, public_nonce_length = (libsodium._crypto_aead_chacha20poly1305_ietf_npubbytes()) | 0;
      if (public_nonce.length !== public_nonce_length) {
          _free_and_throw_type_error(address_pool, "invalid public_nonce length");
      }
      public_nonce_address = _to_allocated_buf_address(public_nonce);
      address_pool.push(public_nonce_address);

      // ---------- input: key (buf)

      key = _any_to_Uint8Array(address_pool, key, "key");
      var key_address, key_length = (libsodium._crypto_aead_chacha20poly1305_ietf_keybytes()) | 0;
      if (key.length !== key_length) {
          _free_and_throw_type_error(address_pool, "invalid key length");
      }
      key_address = _to_allocated_buf_address(key);
      address_pool.push(key_address);

      // ---------- output message (buf)

      var message_length = (ciphertext_length - libsodium._crypto_aead_chacha20poly1305_ietf_abytes()) | 0,
          message = new AllocatedBuf(message_length),
          message_address = message.address;

      address_pool.push(message_address);

      if ((libsodium._crypto_aead_chacha20poly1305_ietf_decrypt(message_address, null, secret_nonce_address, ciphertext_address, ciphertext_length, 0, additional_data_address, additional_data_length, 0, public_nonce_address, key_address)) === 0) {
      	var ret = _format_output(message, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "ciphertext cannot be decrypted using that key");
    }

    function crypto_aead_chacha20poly1305_ietf_decrypt_detached(secret_nonce, ciphertext, mac, additional_data, public_nonce, key, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: secret_nonce (unsized_buf_optional)

      var secret_nonce_address = null, secret_nonce_length = 0;
      if (secret_nonce != undefined) {
              secret_nonce = _any_to_Uint8Array(address_pool, secret_nonce, "secret_nonce");
              secret_nonce_address = _to_allocated_buf_address(secret_nonce);
              secret_nonce_length = secret_nonce.length;
              address_pool.push(secret_nonce_address);
      }


      // ---------- input: ciphertext (unsized_buf)

      ciphertext = _any_to_Uint8Array(address_pool, ciphertext, "ciphertext");
      var ciphertext_address = _to_allocated_buf_address(ciphertext),
          ciphertext_length = ciphertext.length;
      address_pool.push(ciphertext_address);

      // ---------- input: mac (buf)

      mac = _any_to_Uint8Array(address_pool, mac, "mac");
      var mac_address, mac_length = (libsodium._crypto_box_macbytes()) | 0;
      if (mac.length !== mac_length) {
          _free_and_throw_type_error(address_pool, "invalid mac length");
      }
      mac_address = _to_allocated_buf_address(mac);
      address_pool.push(mac_address);

      // ---------- input: additional_data (unsized_buf_optional)

      var additional_data_address = null, additional_data_length = 0;
      if (additional_data != undefined) {
              additional_data = _any_to_Uint8Array(address_pool, additional_data, "additional_data");
              additional_data_address = _to_allocated_buf_address(additional_data);
              additional_data_length = additional_data.length;
              address_pool.push(additional_data_address);
      }


      // ---------- input: public_nonce (buf)

      public_nonce = _any_to_Uint8Array(address_pool, public_nonce, "public_nonce");
      var public_nonce_address, public_nonce_length = (libsodium._crypto_aead_chacha20poly1305_ietf_npubbytes()) | 0;
      if (public_nonce.length !== public_nonce_length) {
          _free_and_throw_type_error(address_pool, "invalid public_nonce length");
      }
      public_nonce_address = _to_allocated_buf_address(public_nonce);
      address_pool.push(public_nonce_address);

      // ---------- input: key (buf)

      key = _any_to_Uint8Array(address_pool, key, "key");
      var key_address, key_length = (libsodium._crypto_aead_chacha20poly1305_ietf_keybytes()) | 0;
      if (key.length !== key_length) {
          _free_and_throw_type_error(address_pool, "invalid key length");
      }
      key_address = _to_allocated_buf_address(key);
      address_pool.push(key_address);

      // ---------- output message (buf)

      var message_length = (ciphertext_length) | 0,
          message = new AllocatedBuf(message_length),
          message_address = message.address;

      address_pool.push(message_address);

      if ((libsodium._crypto_aead_chacha20poly1305_ietf_decrypt_detached(message_address, secret_nonce_address, ciphertext_address, ciphertext_length, 0, mac_address, additional_data_address, additional_data_length, 0, public_nonce_address, key_address)) === 0) {
      	var ret = _format_output(message, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "ciphertext cannot be decrypted using that key");
    }

    function crypto_aead_chacha20poly1305_ietf_encrypt(message, additional_data, secret_nonce, public_nonce, key, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: message (unsized_buf)

      message = _any_to_Uint8Array(address_pool, message, "message");
      var message_address = _to_allocated_buf_address(message),
          message_length = message.length;
      address_pool.push(message_address);

      // ---------- input: additional_data (unsized_buf_optional)

      var additional_data_address = null, additional_data_length = 0;
      if (additional_data != undefined) {
              additional_data = _any_to_Uint8Array(address_pool, additional_data, "additional_data");
              additional_data_address = _to_allocated_buf_address(additional_data);
              additional_data_length = additional_data.length;
              address_pool.push(additional_data_address);
      }


      // ---------- input: secret_nonce (unsized_buf_optional)

      var secret_nonce_address = null, secret_nonce_length = 0;
      if (secret_nonce != undefined) {
              secret_nonce = _any_to_Uint8Array(address_pool, secret_nonce, "secret_nonce");
              secret_nonce_address = _to_allocated_buf_address(secret_nonce);
              secret_nonce_length = secret_nonce.length;
              address_pool.push(secret_nonce_address);
      }


      // ---------- input: public_nonce (buf)

      public_nonce = _any_to_Uint8Array(address_pool, public_nonce, "public_nonce");
      var public_nonce_address, public_nonce_length = (libsodium._crypto_aead_chacha20poly1305_ietf_npubbytes()) | 0;
      if (public_nonce.length !== public_nonce_length) {
          _free_and_throw_type_error(address_pool, "invalid public_nonce length");
      }
      public_nonce_address = _to_allocated_buf_address(public_nonce);
      address_pool.push(public_nonce_address);

      // ---------- input: key (buf)

      key = _any_to_Uint8Array(address_pool, key, "key");
      var key_address, key_length = (libsodium._crypto_aead_chacha20poly1305_ietf_keybytes()) | 0;
      if (key.length !== key_length) {
          _free_and_throw_type_error(address_pool, "invalid key length");
      }
      key_address = _to_allocated_buf_address(key);
      address_pool.push(key_address);

      // ---------- output ciphertext (buf)

      var ciphertext_length = (message_length + libsodium._crypto_aead_chacha20poly1305_ietf_abytes()) | 0,
          ciphertext = new AllocatedBuf(ciphertext_length),
          ciphertext_address = ciphertext.address;

      address_pool.push(ciphertext_address);

      if ((libsodium._crypto_aead_chacha20poly1305_ietf_encrypt(ciphertext_address, null, message_address, message_length, 0, additional_data_address, additional_data_length, 0, secret_nonce_address, public_nonce_address, key_address)) === 0) {
      	var ret = _format_output(ciphertext, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_aead_chacha20poly1305_ietf_encrypt_detached(message, additional_data, secret_nonce, public_nonce, key, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: message (unsized_buf)

      message = _any_to_Uint8Array(address_pool, message, "message");
      var message_address = _to_allocated_buf_address(message),
          message_length = message.length;
      address_pool.push(message_address);

      // ---------- input: additional_data (unsized_buf_optional)

      var additional_data_address = null, additional_data_length = 0;
      if (additional_data != undefined) {
              additional_data = _any_to_Uint8Array(address_pool, additional_data, "additional_data");
              additional_data_address = _to_allocated_buf_address(additional_data);
              additional_data_length = additional_data.length;
              address_pool.push(additional_data_address);
      }


      // ---------- input: secret_nonce (unsized_buf_optional)

      var secret_nonce_address = null, secret_nonce_length = 0;
      if (secret_nonce != undefined) {
              secret_nonce = _any_to_Uint8Array(address_pool, secret_nonce, "secret_nonce");
              secret_nonce_address = _to_allocated_buf_address(secret_nonce);
              secret_nonce_length = secret_nonce.length;
              address_pool.push(secret_nonce_address);
      }


      // ---------- input: public_nonce (buf)

      public_nonce = _any_to_Uint8Array(address_pool, public_nonce, "public_nonce");
      var public_nonce_address, public_nonce_length = (libsodium._crypto_aead_chacha20poly1305_ietf_npubbytes()) | 0;
      if (public_nonce.length !== public_nonce_length) {
          _free_and_throw_type_error(address_pool, "invalid public_nonce length");
      }
      public_nonce_address = _to_allocated_buf_address(public_nonce);
      address_pool.push(public_nonce_address);

      // ---------- input: key (buf)

      key = _any_to_Uint8Array(address_pool, key, "key");
      var key_address, key_length = (libsodium._crypto_aead_chacha20poly1305_ietf_keybytes()) | 0;
      if (key.length !== key_length) {
          _free_and_throw_type_error(address_pool, "invalid key length");
      }
      key_address = _to_allocated_buf_address(key);
      address_pool.push(key_address);

      // ---------- output ciphertext (buf)

      var ciphertext_length = (message_length) | 0,
          ciphertext = new AllocatedBuf(ciphertext_length),
          ciphertext_address = ciphertext.address;

      address_pool.push(ciphertext_address);

      // ---------- output mac (buf)

      var mac_length = (libsodium._crypto_aead_chacha20poly1305_ietf_abytes()) | 0,
          mac = new AllocatedBuf(mac_length),
          mac_address = mac.address;

      address_pool.push(mac_address);

      if ((libsodium._crypto_aead_chacha20poly1305_ietf_encrypt_detached(ciphertext_address, mac_address, null, message_address, message_length, 0, additional_data_address, additional_data_length, 0, secret_nonce_address, public_nonce_address, key_address)) === 0) {
      	var ret = _format_output({ciphertext: ciphertext, mac: mac}, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_aead_chacha20poly1305_ietf_keygen(outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- output output (buf)

      var output_length = (libsodium._crypto_aead_chacha20poly1305_ietf_keybytes()) | 0,
          output = new AllocatedBuf(output_length),
          output_address = output.address;

      address_pool.push(output_address);

      libsodium._crypto_aead_chacha20poly1305_ietf_keygen(output_address);
      var ret = (_format_output(output, outputFormat));
      _free_all(address_pool);
      return ret;
    }

    function crypto_aead_chacha20poly1305_keygen(outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- output output (buf)

      var output_length = (libsodium._crypto_aead_chacha20poly1305_keybytes()) | 0,
          output = new AllocatedBuf(output_length),
          output_address = output.address;

      address_pool.push(output_address);

      libsodium._crypto_aead_chacha20poly1305_keygen(output_address);
      var ret = (_format_output(output, outputFormat));
      _free_all(address_pool);
      return ret;
    }

    function crypto_aead_xchacha20poly1305_ietf_decrypt(secret_nonce, ciphertext, additional_data, public_nonce, key, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: secret_nonce (unsized_buf_optional)

      var secret_nonce_address = null, secret_nonce_length = 0;
      if (secret_nonce != undefined) {
              secret_nonce = _any_to_Uint8Array(address_pool, secret_nonce, "secret_nonce");
              secret_nonce_address = _to_allocated_buf_address(secret_nonce);
              secret_nonce_length = secret_nonce.length;
              address_pool.push(secret_nonce_address);
      }


      // ---------- input: ciphertext (minsized_buf)

      ciphertext = _any_to_Uint8Array(address_pool, ciphertext, "ciphertext");
      var ciphertext_address, ciphertext_min_length = libsodium._crypto_aead_xchacha20poly1305_ietf_abytes(), ciphertext_length = ciphertext.length;
      if (ciphertext_length < ciphertext_min_length) {
              _free_and_throw_type_error(address_pool, "ciphertext is too short");
      }
      ciphertext_address = _to_allocated_buf_address(ciphertext);
      address_pool.push(ciphertext_address);

      // ---------- input: additional_data (unsized_buf_optional)

      var additional_data_address = null, additional_data_length = 0;
      if (additional_data != undefined) {
              additional_data = _any_to_Uint8Array(address_pool, additional_data, "additional_data");
              additional_data_address = _to_allocated_buf_address(additional_data);
              additional_data_length = additional_data.length;
              address_pool.push(additional_data_address);
      }


      // ---------- input: public_nonce (buf)

      public_nonce = _any_to_Uint8Array(address_pool, public_nonce, "public_nonce");
      var public_nonce_address, public_nonce_length = (libsodium._crypto_aead_xchacha20poly1305_ietf_npubbytes()) | 0;
      if (public_nonce.length !== public_nonce_length) {
          _free_and_throw_type_error(address_pool, "invalid public_nonce length");
      }
      public_nonce_address = _to_allocated_buf_address(public_nonce);
      address_pool.push(public_nonce_address);

      // ---------- input: key (buf)

      key = _any_to_Uint8Array(address_pool, key, "key");
      var key_address, key_length = (libsodium._crypto_aead_xchacha20poly1305_ietf_keybytes()) | 0;
      if (key.length !== key_length) {
          _free_and_throw_type_error(address_pool, "invalid key length");
      }
      key_address = _to_allocated_buf_address(key);
      address_pool.push(key_address);

      // ---------- output message (buf)

      var message_length = (ciphertext_length - libsodium._crypto_aead_xchacha20poly1305_ietf_abytes()) | 0,
          message = new AllocatedBuf(message_length),
          message_address = message.address;

      address_pool.push(message_address);

      if ((libsodium._crypto_aead_xchacha20poly1305_ietf_decrypt(message_address, null, secret_nonce_address, ciphertext_address, ciphertext_length, 0, additional_data_address, additional_data_length, 0, public_nonce_address, key_address)) === 0) {
      	var ret = _format_output(message, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "ciphertext cannot be decrypted using that key");
    }

    function crypto_aead_xchacha20poly1305_ietf_decrypt_detached(secret_nonce, ciphertext, mac, additional_data, public_nonce, key, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: secret_nonce (unsized_buf_optional)

      var secret_nonce_address = null, secret_nonce_length = 0;
      if (secret_nonce != undefined) {
              secret_nonce = _any_to_Uint8Array(address_pool, secret_nonce, "secret_nonce");
              secret_nonce_address = _to_allocated_buf_address(secret_nonce);
              secret_nonce_length = secret_nonce.length;
              address_pool.push(secret_nonce_address);
      }


      // ---------- input: ciphertext (unsized_buf)

      ciphertext = _any_to_Uint8Array(address_pool, ciphertext, "ciphertext");
      var ciphertext_address = _to_allocated_buf_address(ciphertext),
          ciphertext_length = ciphertext.length;
      address_pool.push(ciphertext_address);

      // ---------- input: mac (buf)

      mac = _any_to_Uint8Array(address_pool, mac, "mac");
      var mac_address, mac_length = (libsodium._crypto_box_macbytes()) | 0;
      if (mac.length !== mac_length) {
          _free_and_throw_type_error(address_pool, "invalid mac length");
      }
      mac_address = _to_allocated_buf_address(mac);
      address_pool.push(mac_address);

      // ---------- input: additional_data (unsized_buf_optional)

      var additional_data_address = null, additional_data_length = 0;
      if (additional_data != undefined) {
              additional_data = _any_to_Uint8Array(address_pool, additional_data, "additional_data");
              additional_data_address = _to_allocated_buf_address(additional_data);
              additional_data_length = additional_data.length;
              address_pool.push(additional_data_address);
      }


      // ---------- input: public_nonce (buf)

      public_nonce = _any_to_Uint8Array(address_pool, public_nonce, "public_nonce");
      var public_nonce_address, public_nonce_length = (libsodium._crypto_aead_xchacha20poly1305_ietf_npubbytes()) | 0;
      if (public_nonce.length !== public_nonce_length) {
          _free_and_throw_type_error(address_pool, "invalid public_nonce length");
      }
      public_nonce_address = _to_allocated_buf_address(public_nonce);
      address_pool.push(public_nonce_address);

      // ---------- input: key (buf)

      key = _any_to_Uint8Array(address_pool, key, "key");
      var key_address, key_length = (libsodium._crypto_aead_xchacha20poly1305_ietf_keybytes()) | 0;
      if (key.length !== key_length) {
          _free_and_throw_type_error(address_pool, "invalid key length");
      }
      key_address = _to_allocated_buf_address(key);
      address_pool.push(key_address);

      // ---------- output message (buf)

      var message_length = (ciphertext_length) | 0,
          message = new AllocatedBuf(message_length),
          message_address = message.address;

      address_pool.push(message_address);

      if ((libsodium._crypto_aead_xchacha20poly1305_ietf_decrypt_detached(message_address, secret_nonce_address, ciphertext_address, ciphertext_length, 0, mac_address, additional_data_address, additional_data_length, 0, public_nonce_address, key_address)) === 0) {
      	var ret = _format_output(message, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "ciphertext cannot be decrypted using that key");
    }

    function crypto_aead_xchacha20poly1305_ietf_encrypt(message, additional_data, secret_nonce, public_nonce, key, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: message (unsized_buf)

      message = _any_to_Uint8Array(address_pool, message, "message");
      var message_address = _to_allocated_buf_address(message),
          message_length = message.length;
      address_pool.push(message_address);

      // ---------- input: additional_data (unsized_buf_optional)

      var additional_data_address = null, additional_data_length = 0;
      if (additional_data != undefined) {
              additional_data = _any_to_Uint8Array(address_pool, additional_data, "additional_data");
              additional_data_address = _to_allocated_buf_address(additional_data);
              additional_data_length = additional_data.length;
              address_pool.push(additional_data_address);
      }


      // ---------- input: secret_nonce (unsized_buf_optional)

      var secret_nonce_address = null, secret_nonce_length = 0;
      if (secret_nonce != undefined) {
              secret_nonce = _any_to_Uint8Array(address_pool, secret_nonce, "secret_nonce");
              secret_nonce_address = _to_allocated_buf_address(secret_nonce);
              secret_nonce_length = secret_nonce.length;
              address_pool.push(secret_nonce_address);
      }


      // ---------- input: public_nonce (buf)

      public_nonce = _any_to_Uint8Array(address_pool, public_nonce, "public_nonce");
      var public_nonce_address, public_nonce_length = (libsodium._crypto_aead_xchacha20poly1305_ietf_npubbytes()) | 0;
      if (public_nonce.length !== public_nonce_length) {
          _free_and_throw_type_error(address_pool, "invalid public_nonce length");
      }
      public_nonce_address = _to_allocated_buf_address(public_nonce);
      address_pool.push(public_nonce_address);

      // ---------- input: key (buf)

      key = _any_to_Uint8Array(address_pool, key, "key");
      var key_address, key_length = (libsodium._crypto_aead_xchacha20poly1305_ietf_keybytes()) | 0;
      if (key.length !== key_length) {
          _free_and_throw_type_error(address_pool, "invalid key length");
      }
      key_address = _to_allocated_buf_address(key);
      address_pool.push(key_address);

      // ---------- output ciphertext (buf)

      var ciphertext_length = (message_length + libsodium._crypto_aead_xchacha20poly1305_ietf_abytes()) | 0,
          ciphertext = new AllocatedBuf(ciphertext_length),
          ciphertext_address = ciphertext.address;

      address_pool.push(ciphertext_address);

      if ((libsodium._crypto_aead_xchacha20poly1305_ietf_encrypt(ciphertext_address, null, message_address, message_length, 0, additional_data_address, additional_data_length, 0, secret_nonce_address, public_nonce_address, key_address)) === 0) {
      	var ret = _format_output(ciphertext, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_aead_xchacha20poly1305_ietf_encrypt_detached(message, additional_data, secret_nonce, public_nonce, key, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: message (unsized_buf)

      message = _any_to_Uint8Array(address_pool, message, "message");
      var message_address = _to_allocated_buf_address(message),
          message_length = message.length;
      address_pool.push(message_address);

      // ---------- input: additional_data (unsized_buf_optional)

      var additional_data_address = null, additional_data_length = 0;
      if (additional_data != undefined) {
              additional_data = _any_to_Uint8Array(address_pool, additional_data, "additional_data");
              additional_data_address = _to_allocated_buf_address(additional_data);
              additional_data_length = additional_data.length;
              address_pool.push(additional_data_address);
      }


      // ---------- input: secret_nonce (unsized_buf_optional)

      var secret_nonce_address = null, secret_nonce_length = 0;
      if (secret_nonce != undefined) {
              secret_nonce = _any_to_Uint8Array(address_pool, secret_nonce, "secret_nonce");
              secret_nonce_address = _to_allocated_buf_address(secret_nonce);
              secret_nonce_length = secret_nonce.length;
              address_pool.push(secret_nonce_address);
      }


      // ---------- input: public_nonce (buf)

      public_nonce = _any_to_Uint8Array(address_pool, public_nonce, "public_nonce");
      var public_nonce_address, public_nonce_length = (libsodium._crypto_aead_xchacha20poly1305_ietf_npubbytes()) | 0;
      if (public_nonce.length !== public_nonce_length) {
          _free_and_throw_type_error(address_pool, "invalid public_nonce length");
      }
      public_nonce_address = _to_allocated_buf_address(public_nonce);
      address_pool.push(public_nonce_address);

      // ---------- input: key (buf)

      key = _any_to_Uint8Array(address_pool, key, "key");
      var key_address, key_length = (libsodium._crypto_aead_xchacha20poly1305_ietf_keybytes()) | 0;
      if (key.length !== key_length) {
          _free_and_throw_type_error(address_pool, "invalid key length");
      }
      key_address = _to_allocated_buf_address(key);
      address_pool.push(key_address);

      // ---------- output ciphertext (buf)

      var ciphertext_length = (message_length) | 0,
          ciphertext = new AllocatedBuf(ciphertext_length),
          ciphertext_address = ciphertext.address;

      address_pool.push(ciphertext_address);

      // ---------- output mac (buf)

      var mac_length = (libsodium._crypto_aead_xchacha20poly1305_ietf_abytes()) | 0,
          mac = new AllocatedBuf(mac_length),
          mac_address = mac.address;

      address_pool.push(mac_address);

      if ((libsodium._crypto_aead_xchacha20poly1305_ietf_encrypt_detached(ciphertext_address, mac_address, null, message_address, message_length, 0, additional_data_address, additional_data_length, 0, secret_nonce_address, public_nonce_address, key_address)) === 0) {
      	var ret = _format_output({ciphertext: ciphertext, mac: mac}, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_aead_xchacha20poly1305_ietf_keygen(outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- output output (buf)

      var output_length = (libsodium._crypto_aead_xchacha20poly1305_ietf_keybytes()) | 0,
          output = new AllocatedBuf(output_length),
          output_address = output.address;

      address_pool.push(output_address);

      libsodium._crypto_aead_xchacha20poly1305_ietf_keygen(output_address);
      var ret = (_format_output(output, outputFormat));
      _free_all(address_pool);
      return ret;
    }

    function crypto_auth(message, key, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: message (unsized_buf)

      message = _any_to_Uint8Array(address_pool, message, "message");
      var message_address = _to_allocated_buf_address(message),
          message_length = message.length;
      address_pool.push(message_address);

      // ---------- input: key (buf)

      key = _any_to_Uint8Array(address_pool, key, "key");
      var key_address, key_length = (libsodium._crypto_auth_keybytes()) | 0;
      if (key.length !== key_length) {
          _free_and_throw_type_error(address_pool, "invalid key length");
      }
      key_address = _to_allocated_buf_address(key);
      address_pool.push(key_address);

      // ---------- output tag (buf)

      var tag_length = (libsodium._crypto_auth_bytes()) | 0,
          tag = new AllocatedBuf(tag_length),
          tag_address = tag.address;

      address_pool.push(tag_address);

      if ((libsodium._crypto_auth(tag_address, message_address, message_length, 0, key_address) | 0) === 0) {
      	var ret = _format_output(tag, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_auth_hmacsha256(message, key, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: message (unsized_buf)

      message = _any_to_Uint8Array(address_pool, message, "message");
      var message_address = _to_allocated_buf_address(message),
          message_length = message.length;
      address_pool.push(message_address);

      // ---------- input: key (buf)

      key = _any_to_Uint8Array(address_pool, key, "key");
      var key_address, key_length = (libsodium._crypto_auth_hmacsha256_keybytes()) | 0;
      if (key.length !== key_length) {
          _free_and_throw_type_error(address_pool, "invalid key length");
      }
      key_address = _to_allocated_buf_address(key);
      address_pool.push(key_address);

      // ---------- output hash (buf)

      var hash_length = (libsodium._crypto_auth_hmacsha256_bytes()) | 0,
          hash = new AllocatedBuf(hash_length),
          hash_address = hash.address;

      address_pool.push(hash_address);

      if ((libsodium._crypto_auth_hmacsha256(hash_address, message_address, message_length, 0, key_address) | 0) === 0) {
      	var ret = _format_output(hash, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_auth_hmacsha256_keygen(outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- output output (buf)

      var output_length = (libsodium._crypto_auth_hmacsha256_keybytes()) | 0,
          output = new AllocatedBuf(output_length),
          output_address = output.address;

      address_pool.push(output_address);

      libsodium._crypto_auth_hmacsha256_keygen(output_address);
      var ret = (_format_output(output, outputFormat));
      _free_all(address_pool);
      return ret;
    }

    function crypto_auth_hmacsha256_verify(tag, message, key) {
      var address_pool = [];

      // ---------- input: tag (buf)

      tag = _any_to_Uint8Array(address_pool, tag, "tag");
      var tag_address, tag_length = (libsodium._crypto_auth_hmacsha256_bytes()) | 0;
      if (tag.length !== tag_length) {
          _free_and_throw_type_error(address_pool, "invalid tag length");
      }
      tag_address = _to_allocated_buf_address(tag);
      address_pool.push(tag_address);

      // ---------- input: message (unsized_buf)

      message = _any_to_Uint8Array(address_pool, message, "message");
      var message_address = _to_allocated_buf_address(message),
          message_length = message.length;
      address_pool.push(message_address);

      // ---------- input: key (buf)

      key = _any_to_Uint8Array(address_pool, key, "key");
      var key_address, key_length = (libsodium._crypto_auth_hmacsha256_keybytes()) | 0;
      if (key.length !== key_length) {
          _free_and_throw_type_error(address_pool, "invalid key length");
      }
      key_address = _to_allocated_buf_address(key);
      address_pool.push(key_address);

      var result = libsodium._crypto_auth_hmacsha256_verify(tag_address, message_address, message_length, 0, key_address) | 0;
      var ret = (result === 0);
      _free_all(address_pool);
      return ret;
    }

    function crypto_auth_hmacsha512(message, key, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: message (unsized_buf)

      message = _any_to_Uint8Array(address_pool, message, "message");
      var message_address = _to_allocated_buf_address(message),
          message_length = message.length;
      address_pool.push(message_address);

      // ---------- input: key (buf)

      key = _any_to_Uint8Array(address_pool, key, "key");
      var key_address, key_length = (libsodium._crypto_auth_hmacsha512_keybytes()) | 0;
      if (key.length !== key_length) {
          _free_and_throw_type_error(address_pool, "invalid key length");
      }
      key_address = _to_allocated_buf_address(key);
      address_pool.push(key_address);

      // ---------- output hash (buf)

      var hash_length = (libsodium._crypto_auth_hmacsha512_bytes()) | 0,
          hash = new AllocatedBuf(hash_length),
          hash_address = hash.address;

      address_pool.push(hash_address);

      if ((libsodium._crypto_auth_hmacsha512(hash_address, message_address, message_length, 0, key_address) | 0) === 0) {
      	var ret = _format_output(hash, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_auth_hmacsha512_keygen(outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- output output (buf)

      var output_length = (libsodium._crypto_auth_hmacsha512_keybytes()) | 0,
          output = new AllocatedBuf(output_length),
          output_address = output.address;

      address_pool.push(output_address);

      libsodium._crypto_auth_hmacsha512_keygen(output_address);
      var ret = (_format_output(output, outputFormat));
      _free_all(address_pool);
      return ret;
    }

    function crypto_auth_hmacsha512_verify(tag, message, key) {
      var address_pool = [];

      // ---------- input: tag (buf)

      tag = _any_to_Uint8Array(address_pool, tag, "tag");
      var tag_address, tag_length = (libsodium._crypto_auth_hmacsha512_bytes()) | 0;
      if (tag.length !== tag_length) {
          _free_and_throw_type_error(address_pool, "invalid tag length");
      }
      tag_address = _to_allocated_buf_address(tag);
      address_pool.push(tag_address);

      // ---------- input: message (unsized_buf)

      message = _any_to_Uint8Array(address_pool, message, "message");
      var message_address = _to_allocated_buf_address(message),
          message_length = message.length;
      address_pool.push(message_address);

      // ---------- input: key (buf)

      key = _any_to_Uint8Array(address_pool, key, "key");
      var key_address, key_length = (libsodium._crypto_auth_hmacsha512_keybytes()) | 0;
      if (key.length !== key_length) {
          _free_and_throw_type_error(address_pool, "invalid key length");
      }
      key_address = _to_allocated_buf_address(key);
      address_pool.push(key_address);

      var result = libsodium._crypto_auth_hmacsha512_verify(tag_address, message_address, message_length, 0, key_address) | 0;
      var ret = (result === 0);
      _free_all(address_pool);
      return ret;
    }

    function crypto_auth_keygen(outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- output output (buf)

      var output_length = (libsodium._crypto_auth_keybytes()) | 0,
          output = new AllocatedBuf(output_length),
          output_address = output.address;

      address_pool.push(output_address);

      libsodium._crypto_auth_keygen(output_address);
      var ret = (_format_output(output, outputFormat));
      _free_all(address_pool);
      return ret;
    }

    function crypto_auth_verify(tag, message, key) {
      var address_pool = [];

      // ---------- input: tag (buf)

      tag = _any_to_Uint8Array(address_pool, tag, "tag");
      var tag_address, tag_length = (libsodium._crypto_auth_bytes()) | 0;
      if (tag.length !== tag_length) {
          _free_and_throw_type_error(address_pool, "invalid tag length");
      }
      tag_address = _to_allocated_buf_address(tag);
      address_pool.push(tag_address);

      // ---------- input: message (unsized_buf)

      message = _any_to_Uint8Array(address_pool, message, "message");
      var message_address = _to_allocated_buf_address(message),
          message_length = message.length;
      address_pool.push(message_address);

      // ---------- input: key (buf)

      key = _any_to_Uint8Array(address_pool, key, "key");
      var key_address, key_length = (libsodium._crypto_auth_keybytes()) | 0;
      if (key.length !== key_length) {
          _free_and_throw_type_error(address_pool, "invalid key length");
      }
      key_address = _to_allocated_buf_address(key);
      address_pool.push(key_address);

      var result = libsodium._crypto_auth_verify(tag_address, message_address, message_length, 0, key_address) | 0;
      var ret = (result === 0);
      _free_all(address_pool);
      return ret;
    }

    function crypto_box_beforenm(publicKey, privateKey, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: publicKey (buf)

      publicKey = _any_to_Uint8Array(address_pool, publicKey, "publicKey");
      var publicKey_address, publicKey_length = (libsodium._crypto_box_publickeybytes()) | 0;
      if (publicKey.length !== publicKey_length) {
          _free_and_throw_type_error(address_pool, "invalid publicKey length");
      }
      publicKey_address = _to_allocated_buf_address(publicKey);
      address_pool.push(publicKey_address);

      // ---------- input: privateKey (buf)

      privateKey = _any_to_Uint8Array(address_pool, privateKey, "privateKey");
      var privateKey_address, privateKey_length = (libsodium._crypto_box_secretkeybytes()) | 0;
      if (privateKey.length !== privateKey_length) {
          _free_and_throw_type_error(address_pool, "invalid privateKey length");
      }
      privateKey_address = _to_allocated_buf_address(privateKey);
      address_pool.push(privateKey_address);

      // ---------- output sharedKey (buf)

      var sharedKey_length = (libsodium._crypto_box_beforenmbytes()) | 0,
          sharedKey = new AllocatedBuf(sharedKey_length),
          sharedKey_address = sharedKey.address;

      address_pool.push(sharedKey_address);

      if ((libsodium._crypto_box_beforenm(sharedKey_address, publicKey_address, privateKey_address) | 0) === 0) {
      	var ret = _format_output(sharedKey, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_box_curve25519xchacha20poly1305_keypair(outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- output publicKey (buf)

      var publicKey_length = (libsodium._crypto_box_curve25519xchacha20poly1305_publickeybytes()) | 0,
          publicKey = new AllocatedBuf(publicKey_length),
          publicKey_address = publicKey.address;

      address_pool.push(publicKey_address);

      // ---------- output secretKey (buf)

      var secretKey_length = (libsodium._crypto_box_curve25519xchacha20poly1305_secretkeybytes()) | 0,
          secretKey = new AllocatedBuf(secretKey_length),
          secretKey_address = secretKey.address;

      address_pool.push(secretKey_address);

      libsodium._crypto_box_curve25519xchacha20poly1305_keypair(publicKey_address, secretKey_address) | 0;
      var ret = (_format_output({publicKey: publicKey, privateKey: secretKey, keyType: "curve25519"}, outputFormat));
      _free_all(address_pool);
      return ret;
    }

    function crypto_box_curve25519xchacha20poly1305_seal(message, publicKey, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: message (unsized_buf)

      message = _any_to_Uint8Array(address_pool, message, "message");
      var message_address = _to_allocated_buf_address(message),
          message_length = message.length;
      address_pool.push(message_address);

      // ---------- input: publicKey (buf)

      publicKey = _any_to_Uint8Array(address_pool, publicKey, "publicKey");
      var publicKey_address, publicKey_length = (libsodium._crypto_box_curve25519xchacha20poly1305_publickeybytes()) | 0;
      if (publicKey.length !== publicKey_length) {
          _free_and_throw_type_error(address_pool, "invalid publicKey length");
      }
      publicKey_address = _to_allocated_buf_address(publicKey);
      address_pool.push(publicKey_address);

      // ---------- output ciphertext (buf)

      var ciphertext_length = (message_length + libsodium._crypto_box_curve25519xchacha20poly1305_sealbytes()) | 0,
          ciphertext = new AllocatedBuf(ciphertext_length),
          ciphertext_address = ciphertext.address;

      address_pool.push(ciphertext_address);

      libsodium._crypto_box_curve25519xchacha20poly1305_seal(ciphertext_address, message_address, message_length, 0, publicKey_address) | 0;
      var ret = (_format_output(ciphertext, outputFormat));
      _free_all(address_pool);
      return ret;
    }

    function crypto_box_curve25519xchacha20poly1305_seal_open(ciphertext, publicKey, secretKey, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: ciphertext (minsized_buf)

      ciphertext = _any_to_Uint8Array(address_pool, ciphertext, "ciphertext");
      var ciphertext_address, ciphertext_min_length = libsodium._crypto_box_curve25519xchacha20poly1305_sealbytes(), ciphertext_length = ciphertext.length;
      if (ciphertext_length < ciphertext_min_length) {
              _free_and_throw_type_error(address_pool, "ciphertext is too short");
      }
      ciphertext_address = _to_allocated_buf_address(ciphertext);
      address_pool.push(ciphertext_address);

      // ---------- input: publicKey (buf)

      publicKey = _any_to_Uint8Array(address_pool, publicKey, "publicKey");
      var publicKey_address, publicKey_length = (libsodium._crypto_box_curve25519xchacha20poly1305_publickeybytes()) | 0;
      if (publicKey.length !== publicKey_length) {
          _free_and_throw_type_error(address_pool, "invalid publicKey length");
      }
      publicKey_address = _to_allocated_buf_address(publicKey);
      address_pool.push(publicKey_address);

      // ---------- input: secretKey (buf)

      secretKey = _any_to_Uint8Array(address_pool, secretKey, "secretKey");
      var secretKey_address, secretKey_length = (libsodium._crypto_box_curve25519xchacha20poly1305_secretkeybytes()) | 0;
      if (secretKey.length !== secretKey_length) {
          _free_and_throw_type_error(address_pool, "invalid secretKey length");
      }
      secretKey_address = _to_allocated_buf_address(secretKey);
      address_pool.push(secretKey_address);

      // ---------- output plaintext (buf)

      var plaintext_length = (ciphertext_length - libsodium._crypto_box_curve25519xchacha20poly1305_sealbytes()) | 0,
          plaintext = new AllocatedBuf(plaintext_length),
          plaintext_address = plaintext.address;

      address_pool.push(plaintext_address);

      libsodium._crypto_box_curve25519xchacha20poly1305_seal_open(plaintext_address, ciphertext_address, ciphertext_length, 0, publicKey_address, secretKey_address) | 0;
      var ret = (_format_output(plaintext, outputFormat));
      _free_all(address_pool);
      return ret;
    }

    function crypto_box_detached(message, nonce, publicKey, privateKey, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: message (unsized_buf)

      message = _any_to_Uint8Array(address_pool, message, "message");
      var message_address = _to_allocated_buf_address(message),
          message_length = message.length;
      address_pool.push(message_address);

      // ---------- input: nonce (buf)

      nonce = _any_to_Uint8Array(address_pool, nonce, "nonce");
      var nonce_address, nonce_length = (libsodium._crypto_box_noncebytes()) | 0;
      if (nonce.length !== nonce_length) {
          _free_and_throw_type_error(address_pool, "invalid nonce length");
      }
      nonce_address = _to_allocated_buf_address(nonce);
      address_pool.push(nonce_address);

      // ---------- input: publicKey (buf)

      publicKey = _any_to_Uint8Array(address_pool, publicKey, "publicKey");
      var publicKey_address, publicKey_length = (libsodium._crypto_box_publickeybytes()) | 0;
      if (publicKey.length !== publicKey_length) {
          _free_and_throw_type_error(address_pool, "invalid publicKey length");
      }
      publicKey_address = _to_allocated_buf_address(publicKey);
      address_pool.push(publicKey_address);

      // ---------- input: privateKey (buf)

      privateKey = _any_to_Uint8Array(address_pool, privateKey, "privateKey");
      var privateKey_address, privateKey_length = (libsodium._crypto_box_secretkeybytes()) | 0;
      if (privateKey.length !== privateKey_length) {
          _free_and_throw_type_error(address_pool, "invalid privateKey length");
      }
      privateKey_address = _to_allocated_buf_address(privateKey);
      address_pool.push(privateKey_address);

      // ---------- output ciphertext (buf)

      var ciphertext_length = (message_length) | 0,
          ciphertext = new AllocatedBuf(ciphertext_length),
          ciphertext_address = ciphertext.address;

      address_pool.push(ciphertext_address);

      // ---------- output mac (buf)

      var mac_length = (libsodium._crypto_box_macbytes()) | 0,
          mac = new AllocatedBuf(mac_length),
          mac_address = mac.address;

      address_pool.push(mac_address);

      if ((libsodium._crypto_box_detached(ciphertext_address, mac_address, message_address, message_length, 0, nonce_address, publicKey_address, privateKey_address) | 0) === 0) {
      	var ret = _format_output({ciphertext: ciphertext, mac: mac}, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_box_easy(message, nonce, publicKey, privateKey, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: message (unsized_buf)

      message = _any_to_Uint8Array(address_pool, message, "message");
      var message_address = _to_allocated_buf_address(message),
          message_length = message.length;
      address_pool.push(message_address);

      // ---------- input: nonce (buf)

      nonce = _any_to_Uint8Array(address_pool, nonce, "nonce");
      var nonce_address, nonce_length = (libsodium._crypto_box_noncebytes()) | 0;
      if (nonce.length !== nonce_length) {
          _free_and_throw_type_error(address_pool, "invalid nonce length");
      }
      nonce_address = _to_allocated_buf_address(nonce);
      address_pool.push(nonce_address);

      // ---------- input: publicKey (buf)

      publicKey = _any_to_Uint8Array(address_pool, publicKey, "publicKey");
      var publicKey_address, publicKey_length = (libsodium._crypto_box_publickeybytes()) | 0;
      if (publicKey.length !== publicKey_length) {
          _free_and_throw_type_error(address_pool, "invalid publicKey length");
      }
      publicKey_address = _to_allocated_buf_address(publicKey);
      address_pool.push(publicKey_address);

      // ---------- input: privateKey (buf)

      privateKey = _any_to_Uint8Array(address_pool, privateKey, "privateKey");
      var privateKey_address, privateKey_length = (libsodium._crypto_box_secretkeybytes()) | 0;
      if (privateKey.length !== privateKey_length) {
          _free_and_throw_type_error(address_pool, "invalid privateKey length");
      }
      privateKey_address = _to_allocated_buf_address(privateKey);
      address_pool.push(privateKey_address);

      // ---------- output ciphertext (buf)

      var ciphertext_length = (message_length + libsodium._crypto_box_macbytes()) | 0,
          ciphertext = new AllocatedBuf(ciphertext_length),
          ciphertext_address = ciphertext.address;

      address_pool.push(ciphertext_address);

      if ((libsodium._crypto_box_easy(ciphertext_address, message_address, message_length, 0, nonce_address, publicKey_address, privateKey_address) | 0) === 0) {
      	var ret = _format_output(ciphertext, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_box_easy_afternm(message, nonce, sharedKey, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: message (unsized_buf)

      message = _any_to_Uint8Array(address_pool, message, "message");
      var message_address = _to_allocated_buf_address(message),
          message_length = message.length;
      address_pool.push(message_address);

      // ---------- input: nonce (buf)

      nonce = _any_to_Uint8Array(address_pool, nonce, "nonce");
      var nonce_address, nonce_length = (libsodium._crypto_box_noncebytes()) | 0;
      if (nonce.length !== nonce_length) {
          _free_and_throw_type_error(address_pool, "invalid nonce length");
      }
      nonce_address = _to_allocated_buf_address(nonce);
      address_pool.push(nonce_address);

      // ---------- input: sharedKey (buf)

      sharedKey = _any_to_Uint8Array(address_pool, sharedKey, "sharedKey");
      var sharedKey_address, sharedKey_length = (libsodium._crypto_box_beforenmbytes()) | 0;
      if (sharedKey.length !== sharedKey_length) {
          _free_and_throw_type_error(address_pool, "invalid sharedKey length");
      }
      sharedKey_address = _to_allocated_buf_address(sharedKey);
      address_pool.push(sharedKey_address);

      // ---------- output ciphertext (buf)

      var ciphertext_length = (message_length + libsodium._crypto_box_macbytes()) | 0,
          ciphertext = new AllocatedBuf(ciphertext_length),
          ciphertext_address = ciphertext.address;

      address_pool.push(ciphertext_address);

      if ((libsodium._crypto_box_easy_afternm(ciphertext_address, message_address, message_length, 0, nonce_address, sharedKey_address) | 0) === 0) {
      	var ret = _format_output(ciphertext, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_box_keypair(outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- output publicKey (buf)

      var publicKey_length = (libsodium._crypto_box_publickeybytes()) | 0,
          publicKey = new AllocatedBuf(publicKey_length),
          publicKey_address = publicKey.address;

      address_pool.push(publicKey_address);

      // ---------- output privateKey (buf)

      var privateKey_length = (libsodium._crypto_box_secretkeybytes()) | 0,
          privateKey = new AllocatedBuf(privateKey_length),
          privateKey_address = privateKey.address;

      address_pool.push(privateKey_address);

      if ((libsodium._crypto_box_keypair(publicKey_address, privateKey_address) | 0) === 0) {
      	var ret = {publicKey: _format_output(publicKey, outputFormat), privateKey: _format_output(privateKey, outputFormat), keyType: 'x25519'};
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "internal error");
    }

    function crypto_box_open_detached(ciphertext, mac, nonce, publicKey, privateKey, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: ciphertext (unsized_buf)

      ciphertext = _any_to_Uint8Array(address_pool, ciphertext, "ciphertext");
      var ciphertext_address = _to_allocated_buf_address(ciphertext),
          ciphertext_length = ciphertext.length;
      address_pool.push(ciphertext_address);

      // ---------- input: mac (buf)

      mac = _any_to_Uint8Array(address_pool, mac, "mac");
      var mac_address, mac_length = (libsodium._crypto_box_macbytes()) | 0;
      if (mac.length !== mac_length) {
          _free_and_throw_type_error(address_pool, "invalid mac length");
      }
      mac_address = _to_allocated_buf_address(mac);
      address_pool.push(mac_address);

      // ---------- input: nonce (buf)

      nonce = _any_to_Uint8Array(address_pool, nonce, "nonce");
      var nonce_address, nonce_length = (libsodium._crypto_box_noncebytes()) | 0;
      if (nonce.length !== nonce_length) {
          _free_and_throw_type_error(address_pool, "invalid nonce length");
      }
      nonce_address = _to_allocated_buf_address(nonce);
      address_pool.push(nonce_address);

      // ---------- input: publicKey (buf)

      publicKey = _any_to_Uint8Array(address_pool, publicKey, "publicKey");
      var publicKey_address, publicKey_length = (libsodium._crypto_box_publickeybytes()) | 0;
      if (publicKey.length !== publicKey_length) {
          _free_and_throw_type_error(address_pool, "invalid publicKey length");
      }
      publicKey_address = _to_allocated_buf_address(publicKey);
      address_pool.push(publicKey_address);

      // ---------- input: privateKey (buf)

      privateKey = _any_to_Uint8Array(address_pool, privateKey, "privateKey");
      var privateKey_address, privateKey_length = (libsodium._crypto_box_secretkeybytes()) | 0;
      if (privateKey.length !== privateKey_length) {
          _free_and_throw_type_error(address_pool, "invalid privateKey length");
      }
      privateKey_address = _to_allocated_buf_address(privateKey);
      address_pool.push(privateKey_address);

      // ---------- output plaintext (buf)

      var plaintext_length = (ciphertext_length) | 0,
          plaintext = new AllocatedBuf(plaintext_length),
          plaintext_address = plaintext.address;

      address_pool.push(plaintext_address);

      if ((libsodium._crypto_box_open_detached(plaintext_address, ciphertext_address, mac_address, ciphertext_length, 0, nonce_address, publicKey_address, privateKey_address) | 0) === 0) {
      	var ret = _format_output(plaintext, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "incorrect key pair for the given ciphertext");
    }

    function crypto_box_open_easy(ciphertext, nonce, publicKey, privateKey, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: ciphertext (minsized_buf)

      ciphertext = _any_to_Uint8Array(address_pool, ciphertext, "ciphertext");
      var ciphertext_address, ciphertext_min_length = libsodium._crypto_box_macbytes(), ciphertext_length = ciphertext.length;
      if (ciphertext_length < ciphertext_min_length) {
              _free_and_throw_type_error(address_pool, "ciphertext is too short");
      }
      ciphertext_address = _to_allocated_buf_address(ciphertext);
      address_pool.push(ciphertext_address);

      // ---------- input: nonce (buf)

      nonce = _any_to_Uint8Array(address_pool, nonce, "nonce");
      var nonce_address, nonce_length = (libsodium._crypto_box_noncebytes()) | 0;
      if (nonce.length !== nonce_length) {
          _free_and_throw_type_error(address_pool, "invalid nonce length");
      }
      nonce_address = _to_allocated_buf_address(nonce);
      address_pool.push(nonce_address);

      // ---------- input: publicKey (buf)

      publicKey = _any_to_Uint8Array(address_pool, publicKey, "publicKey");
      var publicKey_address, publicKey_length = (libsodium._crypto_box_publickeybytes()) | 0;
      if (publicKey.length !== publicKey_length) {
          _free_and_throw_type_error(address_pool, "invalid publicKey length");
      }
      publicKey_address = _to_allocated_buf_address(publicKey);
      address_pool.push(publicKey_address);

      // ---------- input: privateKey (buf)

      privateKey = _any_to_Uint8Array(address_pool, privateKey, "privateKey");
      var privateKey_address, privateKey_length = (libsodium._crypto_box_secretkeybytes()) | 0;
      if (privateKey.length !== privateKey_length) {
          _free_and_throw_type_error(address_pool, "invalid privateKey length");
      }
      privateKey_address = _to_allocated_buf_address(privateKey);
      address_pool.push(privateKey_address);

      // ---------- output plaintext (buf)

      var plaintext_length = (ciphertext_length - libsodium._crypto_box_macbytes()) | 0,
          plaintext = new AllocatedBuf(plaintext_length),
          plaintext_address = plaintext.address;

      address_pool.push(plaintext_address);

      if ((libsodium._crypto_box_open_easy(plaintext_address, ciphertext_address, ciphertext_length, 0, nonce_address, publicKey_address, privateKey_address) | 0) === 0) {
      	var ret = _format_output(plaintext, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "incorrect key pair for the given ciphertext");
    }

    function crypto_box_open_easy_afternm(ciphertext, nonce, sharedKey, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: ciphertext (unsized_buf)

      ciphertext = _any_to_Uint8Array(address_pool, ciphertext, "ciphertext");
      var ciphertext_address = _to_allocated_buf_address(ciphertext),
          ciphertext_length = ciphertext.length;
      address_pool.push(ciphertext_address);

      // ---------- input: nonce (buf)

      nonce = _any_to_Uint8Array(address_pool, nonce, "nonce");
      var nonce_address, nonce_length = (libsodium._crypto_box_noncebytes()) | 0;
      if (nonce.length !== nonce_length) {
          _free_and_throw_type_error(address_pool, "invalid nonce length");
      }
      nonce_address = _to_allocated_buf_address(nonce);
      address_pool.push(nonce_address);

      // ---------- input: sharedKey (buf)

      sharedKey = _any_to_Uint8Array(address_pool, sharedKey, "sharedKey");
      var sharedKey_address, sharedKey_length = (libsodium._crypto_box_beforenmbytes()) | 0;
      if (sharedKey.length !== sharedKey_length) {
          _free_and_throw_type_error(address_pool, "invalid sharedKey length");
      }
      sharedKey_address = _to_allocated_buf_address(sharedKey);
      address_pool.push(sharedKey_address);

      // ---------- output plaintext (buf)

      var plaintext_length = (ciphertext_length - libsodium._crypto_box_macbytes()) | 0,
          plaintext = new AllocatedBuf(plaintext_length),
          plaintext_address = plaintext.address;

      address_pool.push(plaintext_address);

      if ((libsodium._crypto_box_open_easy_afternm(plaintext_address, ciphertext_address, ciphertext_length, 0, nonce_address, sharedKey_address) | 0) === 0) {
      	var ret = _format_output(plaintext, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "incorrect secret key for the given ciphertext");
    }

    function crypto_box_seal(message, publicKey, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: message (unsized_buf)

      message = _any_to_Uint8Array(address_pool, message, "message");
      var message_address = _to_allocated_buf_address(message),
          message_length = message.length;
      address_pool.push(message_address);

      // ---------- input: publicKey (buf)

      publicKey = _any_to_Uint8Array(address_pool, publicKey, "publicKey");
      var publicKey_address, publicKey_length = (libsodium._crypto_box_publickeybytes()) | 0;
      if (publicKey.length !== publicKey_length) {
          _free_and_throw_type_error(address_pool, "invalid publicKey length");
      }
      publicKey_address = _to_allocated_buf_address(publicKey);
      address_pool.push(publicKey_address);

      // ---------- output ciphertext (buf)

      var ciphertext_length = (message_length + libsodium._crypto_box_sealbytes()) | 0,
          ciphertext = new AllocatedBuf(ciphertext_length),
          ciphertext_address = ciphertext.address;

      address_pool.push(ciphertext_address);

      if ((libsodium._crypto_box_seal(ciphertext_address, message_address, message_length, 0, publicKey_address) | 0) === 0) {
      	var ret = _format_output(ciphertext, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_box_seal_open(ciphertext, publicKey, privateKey, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: ciphertext (minsized_buf)

      ciphertext = _any_to_Uint8Array(address_pool, ciphertext, "ciphertext");
      var ciphertext_address, ciphertext_min_length = libsodium._crypto_box_sealbytes(), ciphertext_length = ciphertext.length;
      if (ciphertext_length < ciphertext_min_length) {
              _free_and_throw_type_error(address_pool, "ciphertext is too short");
      }
      ciphertext_address = _to_allocated_buf_address(ciphertext);
      address_pool.push(ciphertext_address);

      // ---------- input: publicKey (buf)

      publicKey = _any_to_Uint8Array(address_pool, publicKey, "publicKey");
      var publicKey_address, publicKey_length = (libsodium._crypto_box_publickeybytes()) | 0;
      if (publicKey.length !== publicKey_length) {
          _free_and_throw_type_error(address_pool, "invalid publicKey length");
      }
      publicKey_address = _to_allocated_buf_address(publicKey);
      address_pool.push(publicKey_address);

      // ---------- input: privateKey (buf)

      privateKey = _any_to_Uint8Array(address_pool, privateKey, "privateKey");
      var privateKey_address, privateKey_length = (libsodium._crypto_box_secretkeybytes()) | 0;
      if (privateKey.length !== privateKey_length) {
          _free_and_throw_type_error(address_pool, "invalid privateKey length");
      }
      privateKey_address = _to_allocated_buf_address(privateKey);
      address_pool.push(privateKey_address);

      // ---------- output plaintext (buf)

      var plaintext_length = (ciphertext_length - libsodium._crypto_box_sealbytes()) | 0,
          plaintext = new AllocatedBuf(plaintext_length),
          plaintext_address = plaintext.address;

      address_pool.push(plaintext_address);

      if ((libsodium._crypto_box_seal_open(plaintext_address, ciphertext_address, ciphertext_length, 0, publicKey_address, privateKey_address) | 0) === 0) {
      	var ret = _format_output(plaintext, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "incorrect key pair for the given ciphertext");
    }

    function crypto_box_seed_keypair(seed, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: seed (buf)

      seed = _any_to_Uint8Array(address_pool, seed, "seed");
      var seed_address, seed_length = (libsodium._crypto_box_seedbytes()) | 0;
      if (seed.length !== seed_length) {
          _free_and_throw_type_error(address_pool, "invalid seed length");
      }
      seed_address = _to_allocated_buf_address(seed);
      address_pool.push(seed_address);

      // ---------- output publicKey (buf)

      var publicKey_length = (libsodium._crypto_box_publickeybytes()) | 0,
          publicKey = new AllocatedBuf(publicKey_length),
          publicKey_address = publicKey.address;

      address_pool.push(publicKey_address);

      // ---------- output privateKey (buf)

      var privateKey_length = (libsodium._crypto_box_secretkeybytes()) | 0,
          privateKey = new AllocatedBuf(privateKey_length),
          privateKey_address = privateKey.address;

      address_pool.push(privateKey_address);

      if ((libsodium._crypto_box_seed_keypair(publicKey_address, privateKey_address, seed_address) | 0) === 0) {
      	var ret = {publicKey: _format_output(publicKey, outputFormat), privateKey: _format_output(privateKey, outputFormat), keyType: 'x25519'};
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_core_ed25519_add(p, q, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: p (buf)

      p = _any_to_Uint8Array(address_pool, p, "p");
      var p_address, p_length = (libsodium._crypto_core_ed25519_bytes()) | 0;
      if (p.length !== p_length) {
          _free_and_throw_type_error(address_pool, "invalid p length");
      }
      p_address = _to_allocated_buf_address(p);
      address_pool.push(p_address);

      // ---------- input: q (buf)

      q = _any_to_Uint8Array(address_pool, q, "q");
      var q_address, q_length = (libsodium._crypto_core_ed25519_bytes()) | 0;
      if (q.length !== q_length) {
          _free_and_throw_type_error(address_pool, "invalid q length");
      }
      q_address = _to_allocated_buf_address(q);
      address_pool.push(q_address);

      // ---------- output r (buf)

      var r_length = (libsodium._crypto_core_ed25519_bytes()) | 0,
          r = new AllocatedBuf(r_length),
          r_address = r.address;

      address_pool.push(r_address);

      if ((libsodium._crypto_core_ed25519_add(r_address, p_address, q_address) | 0) === 0) {
      	var ret = _format_output(r, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "input is an invalid element");
    }

    function crypto_core_ed25519_from_hash(r, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: r (unsized_buf)

      r = _any_to_Uint8Array(address_pool, r, "r");
      var r_address = _to_allocated_buf_address(r),
          r_length = r.length;
      address_pool.push(r_address);

      // ---------- output point (buf)

      var point_length = (libsodium._crypto_core_ed25519_bytes()) | 0,
          point = new AllocatedBuf(point_length),
          point_address = point.address;

      address_pool.push(point_address);

      if ((libsodium._crypto_core_ed25519_from_hash(point_address, r_address) | 0) === 0) {
      	var ret = _format_output(point, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_core_ed25519_from_uniform(r, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: r (unsized_buf)

      r = _any_to_Uint8Array(address_pool, r, "r");
      var r_address = _to_allocated_buf_address(r),
          r_length = r.length;
      address_pool.push(r_address);

      // ---------- output point (buf)

      var point_length = (libsodium._crypto_core_ed25519_bytes()) | 0,
          point = new AllocatedBuf(point_length),
          point_address = point.address;

      address_pool.push(point_address);

      if ((libsodium._crypto_core_ed25519_from_uniform(point_address, r_address) | 0) === 0) {
      	var ret = _format_output(point, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_core_ed25519_is_valid_point(repr, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: repr (buf)

      repr = _any_to_Uint8Array(address_pool, repr, "repr");
      var repr_address, repr_length = (libsodium._crypto_core_ed25519_bytes()) | 0;
      if (repr.length !== repr_length) {
          _free_and_throw_type_error(address_pool, "invalid repr length");
      }
      repr_address = _to_allocated_buf_address(repr);
      address_pool.push(repr_address);

      var result = libsodium._crypto_core_ed25519_is_valid_point(repr_address) | 0;
      var ret = (result === 1);
      _free_all(address_pool);
      return ret;
    }

    function crypto_core_ed25519_random(outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- output p (buf)

      var p_length = (libsodium._crypto_core_ed25519_bytes()) | 0,
          p = new AllocatedBuf(p_length),
          p_address = p.address;

      address_pool.push(p_address);

      libsodium._crypto_core_ed25519_random(p_address);
      var ret = (_format_output(p, outputFormat));
      _free_all(address_pool);
      return ret;
    }

    function crypto_core_ed25519_scalar_add(x, y, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: x (buf)

      x = _any_to_Uint8Array(address_pool, x, "x");
      var x_address, x_length = (libsodium._crypto_core_ed25519_scalarbytes()) | 0;
      if (x.length !== x_length) {
          _free_and_throw_type_error(address_pool, "invalid x length");
      }
      x_address = _to_allocated_buf_address(x);
      address_pool.push(x_address);

      // ---------- input: y (buf)

      y = _any_to_Uint8Array(address_pool, y, "y");
      var y_address, y_length = (libsodium._crypto_core_ed25519_scalarbytes()) | 0;
      if (y.length !== y_length) {
          _free_and_throw_type_error(address_pool, "invalid y length");
      }
      y_address = _to_allocated_buf_address(y);
      address_pool.push(y_address);

      // ---------- output z (buf)

      var z_length = (libsodium._crypto_core_ed25519_scalarbytes()) | 0,
          z = new AllocatedBuf(z_length),
          z_address = z.address;

      address_pool.push(z_address);

      libsodium._crypto_core_ed25519_scalar_add(z_address, x_address, y_address);
      var ret = (_format_output(z, outputFormat));
      _free_all(address_pool);
      return ret;
    }

    function crypto_core_ed25519_scalar_complement(s, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: s (buf)

      s = _any_to_Uint8Array(address_pool, s, "s");
      var s_address, s_length = (libsodium._crypto_core_ed25519_scalarbytes()) | 0;
      if (s.length !== s_length) {
          _free_and_throw_type_error(address_pool, "invalid s length");
      }
      s_address = _to_allocated_buf_address(s);
      address_pool.push(s_address);

      // ---------- output comp (buf)

      var comp_length = (libsodium._crypto_core_ed25519_scalarbytes()) | 0,
          comp = new AllocatedBuf(comp_length),
          comp_address = comp.address;

      address_pool.push(comp_address);

      libsodium._crypto_core_ed25519_scalar_complement(comp_address, s_address);
      var ret = (_format_output(comp, outputFormat));
      _free_all(address_pool);
      return ret;
    }

    function crypto_core_ed25519_scalar_invert(s, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: s (buf)

      s = _any_to_Uint8Array(address_pool, s, "s");
      var s_address, s_length = (libsodium._crypto_core_ed25519_scalarbytes()) | 0;
      if (s.length !== s_length) {
          _free_and_throw_type_error(address_pool, "invalid s length");
      }
      s_address = _to_allocated_buf_address(s);
      address_pool.push(s_address);

      // ---------- output recip (buf)

      var recip_length = (libsodium._crypto_core_ed25519_scalarbytes()) | 0,
          recip = new AllocatedBuf(recip_length),
          recip_address = recip.address;

      address_pool.push(recip_address);

      if ((libsodium._crypto_core_ed25519_scalar_invert(recip_address, s_address) | 0) === 0) {
      	var ret = _format_output(recip, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid reciprocate");
    }

    function crypto_core_ed25519_scalar_mul(x, y, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: x (buf)

      x = _any_to_Uint8Array(address_pool, x, "x");
      var x_address, x_length = (libsodium._crypto_core_ed25519_scalarbytes()) | 0;
      if (x.length !== x_length) {
          _free_and_throw_type_error(address_pool, "invalid x length");
      }
      x_address = _to_allocated_buf_address(x);
      address_pool.push(x_address);

      // ---------- input: y (buf)

      y = _any_to_Uint8Array(address_pool, y, "y");
      var y_address, y_length = (libsodium._crypto_core_ed25519_scalarbytes()) | 0;
      if (y.length !== y_length) {
          _free_and_throw_type_error(address_pool, "invalid y length");
      }
      y_address = _to_allocated_buf_address(y);
      address_pool.push(y_address);

      // ---------- output z (buf)

      var z_length = (libsodium._crypto_core_ed25519_scalarbytes()) | 0,
          z = new AllocatedBuf(z_length),
          z_address = z.address;

      address_pool.push(z_address);

      libsodium._crypto_core_ed25519_scalar_mul(z_address, x_address, y_address);
      var ret = (_format_output(z, outputFormat));
      _free_all(address_pool);
      return ret;
    }

    function crypto_core_ed25519_scalar_negate(s, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: s (buf)

      s = _any_to_Uint8Array(address_pool, s, "s");
      var s_address, s_length = (libsodium._crypto_core_ed25519_scalarbytes()) | 0;
      if (s.length !== s_length) {
          _free_and_throw_type_error(address_pool, "invalid s length");
      }
      s_address = _to_allocated_buf_address(s);
      address_pool.push(s_address);

      // ---------- output neg (buf)

      var neg_length = (libsodium._crypto_core_ed25519_scalarbytes()) | 0,
          neg = new AllocatedBuf(neg_length),
          neg_address = neg.address;

      address_pool.push(neg_address);

      libsodium._crypto_core_ed25519_scalar_negate(neg_address, s_address);
      var ret = (_format_output(neg, outputFormat));
      _free_all(address_pool);
      return ret;
    }

    function crypto_core_ed25519_scalar_random(outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- output r (buf)

      var r_length = (libsodium._crypto_core_ed25519_scalarbytes()) | 0,
          r = new AllocatedBuf(r_length),
          r_address = r.address;

      address_pool.push(r_address);

      libsodium._crypto_core_ed25519_scalar_random(r_address);
      var ret = (_format_output(r, outputFormat));
      _free_all(address_pool);
      return ret;
    }

    function crypto_core_ed25519_scalar_reduce(sample, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: sample (buf)

      sample = _any_to_Uint8Array(address_pool, sample, "sample");
      var sample_address, sample_length = (libsodium._crypto_core_ed25519_nonreducedscalarbytes()) | 0;
      if (sample.length !== sample_length) {
          _free_and_throw_type_error(address_pool, "invalid sample length");
      }
      sample_address = _to_allocated_buf_address(sample);
      address_pool.push(sample_address);

      // ---------- output result (buf)

      var result_length = (libsodium._crypto_core_ed25519_scalarbytes()) | 0,
          result = new AllocatedBuf(result_length),
          result_address = result.address;

      address_pool.push(result_address);

      libsodium._crypto_core_ed25519_scalar_reduce(result_address, sample_address);
      var ret = (_format_output(result, outputFormat));
      _free_all(address_pool);
      return ret;
    }

    function crypto_core_ed25519_scalar_sub(x, y, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: x (buf)

      x = _any_to_Uint8Array(address_pool, x, "x");
      var x_address, x_length = (libsodium._crypto_core_ed25519_scalarbytes()) | 0;
      if (x.length !== x_length) {
          _free_and_throw_type_error(address_pool, "invalid x length");
      }
      x_address = _to_allocated_buf_address(x);
      address_pool.push(x_address);

      // ---------- input: y (buf)

      y = _any_to_Uint8Array(address_pool, y, "y");
      var y_address, y_length = (libsodium._crypto_core_ed25519_scalarbytes()) | 0;
      if (y.length !== y_length) {
          _free_and_throw_type_error(address_pool, "invalid y length");
      }
      y_address = _to_allocated_buf_address(y);
      address_pool.push(y_address);

      // ---------- output z (buf)

      var z_length = (libsodium._crypto_core_ed25519_scalarbytes()) | 0,
          z = new AllocatedBuf(z_length),
          z_address = z.address;

      address_pool.push(z_address);

      libsodium._crypto_core_ed25519_scalar_sub(z_address, x_address, y_address);
      var ret = (_format_output(z, outputFormat));
      _free_all(address_pool);
      return ret;
    }

    function crypto_core_ed25519_sub(p, q, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: p (buf)

      p = _any_to_Uint8Array(address_pool, p, "p");
      var p_address, p_length = (libsodium._crypto_core_ed25519_bytes()) | 0;
      if (p.length !== p_length) {
          _free_and_throw_type_error(address_pool, "invalid p length");
      }
      p_address = _to_allocated_buf_address(p);
      address_pool.push(p_address);

      // ---------- input: q (buf)

      q = _any_to_Uint8Array(address_pool, q, "q");
      var q_address, q_length = (libsodium._crypto_core_ed25519_bytes()) | 0;
      if (q.length !== q_length) {
          _free_and_throw_type_error(address_pool, "invalid q length");
      }
      q_address = _to_allocated_buf_address(q);
      address_pool.push(q_address);

      // ---------- output r (buf)

      var r_length = (libsodium._crypto_core_ed25519_bytes()) | 0,
          r = new AllocatedBuf(r_length),
          r_address = r.address;

      address_pool.push(r_address);

      if ((libsodium._crypto_core_ed25519_sub(r_address, p_address, q_address) | 0) === 0) {
      	var ret = _format_output(r, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "input is an invalid element");
    }

    function crypto_core_ristretto255_add(p, q, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: p (buf)

      p = _any_to_Uint8Array(address_pool, p, "p");
      var p_address, p_length = (libsodium._crypto_core_ristretto255_bytes()) | 0;
      if (p.length !== p_length) {
          _free_and_throw_type_error(address_pool, "invalid p length");
      }
      p_address = _to_allocated_buf_address(p);
      address_pool.push(p_address);

      // ---------- input: q (buf)

      q = _any_to_Uint8Array(address_pool, q, "q");
      var q_address, q_length = (libsodium._crypto_core_ristretto255_bytes()) | 0;
      if (q.length !== q_length) {
          _free_and_throw_type_error(address_pool, "invalid q length");
      }
      q_address = _to_allocated_buf_address(q);
      address_pool.push(q_address);

      // ---------- output r (buf)

      var r_length = (libsodium._crypto_core_ristretto255_bytes()) | 0,
          r = new AllocatedBuf(r_length),
          r_address = r.address;

      address_pool.push(r_address);

      if ((libsodium._crypto_core_ristretto255_add(r_address, p_address, q_address) | 0) === 0) {
      	var ret = _format_output(r, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "input is an invalid element");
    }

    function crypto_core_ristretto255_from_hash(r, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: r (unsized_buf)

      r = _any_to_Uint8Array(address_pool, r, "r");
      var r_address = _to_allocated_buf_address(r),
          r_length = r.length;
      address_pool.push(r_address);

      // ---------- output point (buf)

      var point_length = (libsodium._crypto_core_ristretto255_bytes()) | 0,
          point = new AllocatedBuf(point_length),
          point_address = point.address;

      address_pool.push(point_address);

      if ((libsodium._crypto_core_ristretto255_from_hash(point_address, r_address) | 0) === 0) {
      	var ret = _format_output(point, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_core_ristretto255_is_valid_point(repr, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: repr (buf)

      repr = _any_to_Uint8Array(address_pool, repr, "repr");
      var repr_address, repr_length = (libsodium._crypto_core_ristretto255_bytes()) | 0;
      if (repr.length !== repr_length) {
          _free_and_throw_type_error(address_pool, "invalid repr length");
      }
      repr_address = _to_allocated_buf_address(repr);
      address_pool.push(repr_address);

      var result = libsodium._crypto_core_ristretto255_is_valid_point(repr_address) | 0;
      var ret = (result === 1);
      _free_all(address_pool);
      return ret;
    }

    function crypto_core_ristretto255_random(outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- output p (buf)

      var p_length = (libsodium._crypto_core_ristretto255_bytes()) | 0,
          p = new AllocatedBuf(p_length),
          p_address = p.address;

      address_pool.push(p_address);

      libsodium._crypto_core_ristretto255_random(p_address);
      var ret = (_format_output(p, outputFormat));
      _free_all(address_pool);
      return ret;
    }

    function crypto_core_ristretto255_scalar_add(x, y, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: x (buf)

      x = _any_to_Uint8Array(address_pool, x, "x");
      var x_address, x_length = (libsodium._crypto_core_ristretto255_scalarbytes()) | 0;
      if (x.length !== x_length) {
          _free_and_throw_type_error(address_pool, "invalid x length");
      }
      x_address = _to_allocated_buf_address(x);
      address_pool.push(x_address);

      // ---------- input: y (buf)

      y = _any_to_Uint8Array(address_pool, y, "y");
      var y_address, y_length = (libsodium._crypto_core_ristretto255_scalarbytes()) | 0;
      if (y.length !== y_length) {
          _free_and_throw_type_error(address_pool, "invalid y length");
      }
      y_address = _to_allocated_buf_address(y);
      address_pool.push(y_address);

      // ---------- output z (buf)

      var z_length = (libsodium._crypto_core_ristretto255_scalarbytes()) | 0,
          z = new AllocatedBuf(z_length),
          z_address = z.address;

      address_pool.push(z_address);

      libsodium._crypto_core_ristretto255_scalar_add(z_address, x_address, y_address);
      var ret = (_format_output(z, outputFormat));
      _free_all(address_pool);
      return ret;
    }

    function crypto_core_ristretto255_scalar_complement(s, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: s (buf)

      s = _any_to_Uint8Array(address_pool, s, "s");
      var s_address, s_length = (libsodium._crypto_core_ristretto255_scalarbytes()) | 0;
      if (s.length !== s_length) {
          _free_and_throw_type_error(address_pool, "invalid s length");
      }
      s_address = _to_allocated_buf_address(s);
      address_pool.push(s_address);

      // ---------- output comp (buf)

      var comp_length = (libsodium._crypto_core_ristretto255_scalarbytes()) | 0,
          comp = new AllocatedBuf(comp_length),
          comp_address = comp.address;

      address_pool.push(comp_address);

      libsodium._crypto_core_ristretto255_scalar_complement(comp_address, s_address);
      var ret = (_format_output(comp, outputFormat));
      _free_all(address_pool);
      return ret;
    }

    function crypto_core_ristretto255_scalar_invert(s, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: s (buf)

      s = _any_to_Uint8Array(address_pool, s, "s");
      var s_address, s_length = (libsodium._crypto_core_ristretto255_scalarbytes()) | 0;
      if (s.length !== s_length) {
          _free_and_throw_type_error(address_pool, "invalid s length");
      }
      s_address = _to_allocated_buf_address(s);
      address_pool.push(s_address);

      // ---------- output recip (buf)

      var recip_length = (libsodium._crypto_core_ristretto255_scalarbytes()) | 0,
          recip = new AllocatedBuf(recip_length),
          recip_address = recip.address;

      address_pool.push(recip_address);

      if ((libsodium._crypto_core_ristretto255_scalar_invert(recip_address, s_address) | 0) === 0) {
      	var ret = _format_output(recip, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid reciprocate");
    }

    function crypto_core_ristretto255_scalar_mul(x, y, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: x (buf)

      x = _any_to_Uint8Array(address_pool, x, "x");
      var x_address, x_length = (libsodium._crypto_core_ristretto255_scalarbytes()) | 0;
      if (x.length !== x_length) {
          _free_and_throw_type_error(address_pool, "invalid x length");
      }
      x_address = _to_allocated_buf_address(x);
      address_pool.push(x_address);

      // ---------- input: y (buf)

      y = _any_to_Uint8Array(address_pool, y, "y");
      var y_address, y_length = (libsodium._crypto_core_ristretto255_scalarbytes()) | 0;
      if (y.length !== y_length) {
          _free_and_throw_type_error(address_pool, "invalid y length");
      }
      y_address = _to_allocated_buf_address(y);
      address_pool.push(y_address);

      // ---------- output z (buf)

      var z_length = (libsodium._crypto_core_ristretto255_scalarbytes()) | 0,
          z = new AllocatedBuf(z_length),
          z_address = z.address;

      address_pool.push(z_address);

      libsodium._crypto_core_ristretto255_scalar_mul(z_address, x_address, y_address);
      var ret = (_format_output(z, outputFormat));
      _free_all(address_pool);
      return ret;
    }

    function crypto_core_ristretto255_scalar_negate(s, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: s (buf)

      s = _any_to_Uint8Array(address_pool, s, "s");
      var s_address, s_length = (libsodium._crypto_core_ristretto255_scalarbytes()) | 0;
      if (s.length !== s_length) {
          _free_and_throw_type_error(address_pool, "invalid s length");
      }
      s_address = _to_allocated_buf_address(s);
      address_pool.push(s_address);

      // ---------- output neg (buf)

      var neg_length = (libsodium._crypto_core_ristretto255_scalarbytes()) | 0,
          neg = new AllocatedBuf(neg_length),
          neg_address = neg.address;

      address_pool.push(neg_address);

      libsodium._crypto_core_ristretto255_scalar_negate(neg_address, s_address);
      var ret = (_format_output(neg, outputFormat));
      _free_all(address_pool);
      return ret;
    }

    function crypto_core_ristretto255_scalar_random(outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- output r (buf)

      var r_length = (libsodium._crypto_core_ristretto255_scalarbytes()) | 0,
          r = new AllocatedBuf(r_length),
          r_address = r.address;

      address_pool.push(r_address);

      libsodium._crypto_core_ristretto255_scalar_random(r_address);
      var ret = (_format_output(r, outputFormat));
      _free_all(address_pool);
      return ret;
    }

    function crypto_core_ristretto255_scalar_reduce(sample, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: sample (buf)

      sample = _any_to_Uint8Array(address_pool, sample, "sample");
      var sample_address, sample_length = (libsodium._crypto_core_ristretto255_nonreducedscalarbytes()) | 0;
      if (sample.length !== sample_length) {
          _free_and_throw_type_error(address_pool, "invalid sample length");
      }
      sample_address = _to_allocated_buf_address(sample);
      address_pool.push(sample_address);

      // ---------- output result (buf)

      var result_length = (libsodium._crypto_core_ristretto255_scalarbytes()) | 0,
          result = new AllocatedBuf(result_length),
          result_address = result.address;

      address_pool.push(result_address);

      libsodium._crypto_core_ristretto255_scalar_reduce(result_address, sample_address);
      var ret = (_format_output(result, outputFormat));
      _free_all(address_pool);
      return ret;
    }

    function crypto_core_ristretto255_scalar_sub(x, y, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: x (buf)

      x = _any_to_Uint8Array(address_pool, x, "x");
      var x_address, x_length = (libsodium._crypto_core_ristretto255_scalarbytes()) | 0;
      if (x.length !== x_length) {
          _free_and_throw_type_error(address_pool, "invalid x length");
      }
      x_address = _to_allocated_buf_address(x);
      address_pool.push(x_address);

      // ---------- input: y (buf)

      y = _any_to_Uint8Array(address_pool, y, "y");
      var y_address, y_length = (libsodium._crypto_core_ristretto255_scalarbytes()) | 0;
      if (y.length !== y_length) {
          _free_and_throw_type_error(address_pool, "invalid y length");
      }
      y_address = _to_allocated_buf_address(y);
      address_pool.push(y_address);

      // ---------- output z (buf)

      var z_length = (libsodium._crypto_core_ristretto255_scalarbytes()) | 0,
          z = new AllocatedBuf(z_length),
          z_address = z.address;

      address_pool.push(z_address);

      libsodium._crypto_core_ristretto255_scalar_sub(z_address, x_address, y_address);
      var ret = (_format_output(z, outputFormat));
      _free_all(address_pool);
      return ret;
    }

    function crypto_core_ristretto255_sub(p, q, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: p (buf)

      p = _any_to_Uint8Array(address_pool, p, "p");
      var p_address, p_length = (libsodium._crypto_core_ristretto255_bytes()) | 0;
      if (p.length !== p_length) {
          _free_and_throw_type_error(address_pool, "invalid p length");
      }
      p_address = _to_allocated_buf_address(p);
      address_pool.push(p_address);

      // ---------- input: q (buf)

      q = _any_to_Uint8Array(address_pool, q, "q");
      var q_address, q_length = (libsodium._crypto_core_ristretto255_bytes()) | 0;
      if (q.length !== q_length) {
          _free_and_throw_type_error(address_pool, "invalid q length");
      }
      q_address = _to_allocated_buf_address(q);
      address_pool.push(q_address);

      // ---------- output r (buf)

      var r_length = (libsodium._crypto_core_ristretto255_bytes()) | 0,
          r = new AllocatedBuf(r_length),
          r_address = r.address;

      address_pool.push(r_address);

      if ((libsodium._crypto_core_ristretto255_sub(r_address, p_address, q_address) | 0) === 0) {
      	var ret = _format_output(r, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "input is an invalid element");
    }

    function crypto_generichash(hash_length, message, key, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: hash_length (uint)

      _require_defined(address_pool, hash_length, "hash_length");

      if (!(typeof hash_length === "number" && (hash_length | 0) === hash_length) || hash_length < 0) {
              _free_and_throw_type_error(address_pool, "hash_length must be an unsigned integer");
      }

      // ---------- input: message (unsized_buf)

      message = _any_to_Uint8Array(address_pool, message, "message");
      var message_address = _to_allocated_buf_address(message),
          message_length = message.length;
      address_pool.push(message_address);

      // ---------- input: key (unsized_buf_optional)

      var key_address = null, key_length = 0;
      if (key != undefined) {
              key = _any_to_Uint8Array(address_pool, key, "key");
              key_address = _to_allocated_buf_address(key);
              key_length = key.length;
              address_pool.push(key_address);
      }


      // ---------- output hash (buf)

      var hash_length = (hash_length) | 0,
          hash = new AllocatedBuf(hash_length),
          hash_address = hash.address;

      address_pool.push(hash_address);

      if ((libsodium._crypto_generichash(hash_address, hash_length, message_address, message_length, 0, key_address, key_length) | 0) === 0) {
      	var ret = _format_output(hash, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_generichash_blake2b_salt_personal(subkey_len, key, id, ctx, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: subkey_len (uint)

      _require_defined(address_pool, subkey_len, "subkey_len");

      if (!(typeof subkey_len === "number" && (subkey_len | 0) === subkey_len) || subkey_len < 0) {
              _free_and_throw_type_error(address_pool, "subkey_len must be an unsigned integer");
      }

      // ---------- input: key (unsized_buf_optional)

      var key_address = null, key_length = 0;
      if (key != undefined) {
              key = _any_to_Uint8Array(address_pool, key, "key");
              key_address = _to_allocated_buf_address(key);
              key_length = key.length;
              address_pool.push(key_address);
      }


      // ---------- input: id (buf)

      id = _any_to_Uint8Array(address_pool, id, "id");
      var id_address, id_length = (libsodium._crypto_generichash_blake2b_saltbytes()) | 0;
      if (id.length !== id_length) {
          _free_and_throw_type_error(address_pool, "invalid id length");
      }
      id_address = _to_allocated_buf_address(id);
      address_pool.push(id_address);

      // ---------- input: ctx (buf)

      ctx = _any_to_Uint8Array(address_pool, ctx, "ctx");
      var ctx_address, ctx_length = (libsodium._crypto_generichash_blake2b_personalbytes()) | 0;
      if (ctx.length !== ctx_length) {
          _free_and_throw_type_error(address_pool, "invalid ctx length");
      }
      ctx_address = _to_allocated_buf_address(ctx);
      address_pool.push(ctx_address);

      // ---------- output subkey (buf)

      var subkey_length = (subkey_len) | 0,
          subkey = new AllocatedBuf(subkey_length),
          subkey_address = subkey.address;

      address_pool.push(subkey_address);

      if ((libsodium._crypto_generichash_blake2b_salt_personal(subkey_address, subkey_len, null, 0, 0, key_address, key_length, id_address, ctx_address) | 0) === 0) {
      	var ret = _format_output(subkey, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_generichash_final(state_address, hash_length, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: state_address (generichash_state_address)

      _require_defined(address_pool, state_address, "state_address");

      // ---------- input: hash_length (uint)

      _require_defined(address_pool, hash_length, "hash_length");

      if (!(typeof hash_length === "number" && (hash_length | 0) === hash_length) || hash_length < 0) {
              _free_and_throw_type_error(address_pool, "hash_length must be an unsigned integer");
      }

      // ---------- output hash (buf)

      var hash_length = (hash_length) | 0,
          hash = new AllocatedBuf(hash_length),
          hash_address = hash.address;

      address_pool.push(hash_address);

      if ((libsodium._crypto_generichash_final(state_address, hash_address, hash_length) | 0) === 0) {
      	var ret = (libsodium._free(state_address), _format_output(hash, outputFormat));
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_generichash_init(key, hash_length, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: key (unsized_buf_optional)

      var key_address = null, key_length = 0;
      if (key != undefined) {
              key = _any_to_Uint8Array(address_pool, key, "key");
              key_address = _to_allocated_buf_address(key);
              key_length = key.length;
              address_pool.push(key_address);
      }


      // ---------- input: hash_length (uint)

      _require_defined(address_pool, hash_length, "hash_length");

      if (!(typeof hash_length === "number" && (hash_length | 0) === hash_length) || hash_length < 0) {
              _free_and_throw_type_error(address_pool, "hash_length must be an unsigned integer");
      }

      // ---------- output state (generichash_state)

      var state_address = new AllocatedBuf(357).address;

      if ((libsodium._crypto_generichash_init(state_address, key_address, key_length, hash_length) | 0) === 0) {
      	var ret = state_address;
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_generichash_keygen(outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- output output (buf)

      var output_length = (libsodium._crypto_generichash_keybytes()) | 0,
          output = new AllocatedBuf(output_length),
          output_address = output.address;

      address_pool.push(output_address);

      libsodium._crypto_generichash_keygen(output_address);
      var ret = (_format_output(output, outputFormat));
      _free_all(address_pool);
      return ret;
    }

    function crypto_generichash_update(state_address, message_chunk, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: state_address (generichash_state_address)

      _require_defined(address_pool, state_address, "state_address");

      // ---------- input: message_chunk (unsized_buf)

      message_chunk = _any_to_Uint8Array(address_pool, message_chunk, "message_chunk");
      var message_chunk_address = _to_allocated_buf_address(message_chunk),
          message_chunk_length = message_chunk.length;
      address_pool.push(message_chunk_address);

      if (!((libsodium._crypto_generichash_update(state_address, message_chunk_address, message_chunk_length) | 0) === 0)) {
      	_free_and_throw_error(address_pool, "invalid usage");
      }
      _free_all(address_pool);
    }

    function crypto_hash(message, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: message (unsized_buf)

      message = _any_to_Uint8Array(address_pool, message, "message");
      var message_address = _to_allocated_buf_address(message),
          message_length = message.length;
      address_pool.push(message_address);

      // ---------- output hash (buf)

      var hash_length = (libsodium._crypto_hash_bytes()) | 0,
          hash = new AllocatedBuf(hash_length),
          hash_address = hash.address;

      address_pool.push(hash_address);

      if ((libsodium._crypto_hash(hash_address, message_address, message_length, 0) | 0) === 0) {
      	var ret = _format_output(hash, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_hash_sha256(message, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: message (unsized_buf)

      message = _any_to_Uint8Array(address_pool, message, "message");
      var message_address = _to_allocated_buf_address(message),
          message_length = message.length;
      address_pool.push(message_address);

      // ---------- output hash (buf)

      var hash_length = (libsodium._crypto_hash_sha256_bytes()) | 0,
          hash = new AllocatedBuf(hash_length),
          hash_address = hash.address;

      address_pool.push(hash_address);

      if ((libsodium._crypto_hash_sha256(hash_address, message_address, message_length, 0) | 0) === 0) {
      	var ret = _format_output(hash, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_hash_sha256_final(state_address, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: state_address (hash_sha256_state_address)

      _require_defined(address_pool, state_address, "state_address");

      // ---------- output hash (buf)

      var hash_length = (libsodium._crypto_hash_sha256_bytes()) | 0,
          hash = new AllocatedBuf(hash_length),
          hash_address = hash.address;

      address_pool.push(hash_address);

      if ((libsodium._crypto_hash_sha256_final(state_address, hash_address) | 0) === 0) {
      	var ret = (libsodium._free(state_address), _format_output(hash, outputFormat));
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_hash_sha256_init(outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- output state (hash_sha256_state)

      var state_address = new AllocatedBuf(104).address;

      if ((libsodium._crypto_hash_sha256_init(state_address) | 0) === 0) {
      	var ret = state_address;
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_hash_sha256_update(state_address, message_chunk, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: state_address (hash_sha256_state_address)

      _require_defined(address_pool, state_address, "state_address");

      // ---------- input: message_chunk (unsized_buf)

      message_chunk = _any_to_Uint8Array(address_pool, message_chunk, "message_chunk");
      var message_chunk_address = _to_allocated_buf_address(message_chunk),
          message_chunk_length = message_chunk.length;
      address_pool.push(message_chunk_address);

      if (!((libsodium._crypto_hash_sha256_update(state_address, message_chunk_address, message_chunk_length) | 0) === 0)) {
      	_free_and_throw_error(address_pool, "invalid usage");
      }
      _free_all(address_pool);
    }

    function crypto_hash_sha512(message, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: message (unsized_buf)

      message = _any_to_Uint8Array(address_pool, message, "message");
      var message_address = _to_allocated_buf_address(message),
          message_length = message.length;
      address_pool.push(message_address);

      // ---------- output hash (buf)

      var hash_length = (libsodium._crypto_hash_sha512_bytes()) | 0,
          hash = new AllocatedBuf(hash_length),
          hash_address = hash.address;

      address_pool.push(hash_address);

      if ((libsodium._crypto_hash_sha512(hash_address, message_address, message_length, 0) | 0) === 0) {
      	var ret = _format_output(hash, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_hash_sha512_final(state_address, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: state_address (hash_sha512_state_address)

      _require_defined(address_pool, state_address, "state_address");

      // ---------- output hash (buf)

      var hash_length = (libsodium._crypto_hash_sha512_bytes()) | 0,
          hash = new AllocatedBuf(hash_length),
          hash_address = hash.address;

      address_pool.push(hash_address);

      if ((libsodium._crypto_hash_sha512_final(state_address, hash_address) | 0) === 0) {
      	var ret = (libsodium._free(state_address), _format_output(hash, outputFormat));
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_hash_sha512_init(outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- output state (hash_sha512_state)

      var state_address = new AllocatedBuf(208).address;

      if ((libsodium._crypto_hash_sha512_init(state_address) | 0) === 0) {
      	var ret = state_address;
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_hash_sha512_update(state_address, message_chunk, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: state_address (hash_sha512_state_address)

      _require_defined(address_pool, state_address, "state_address");

      // ---------- input: message_chunk (unsized_buf)

      message_chunk = _any_to_Uint8Array(address_pool, message_chunk, "message_chunk");
      var message_chunk_address = _to_allocated_buf_address(message_chunk),
          message_chunk_length = message_chunk.length;
      address_pool.push(message_chunk_address);

      if (!((libsodium._crypto_hash_sha512_update(state_address, message_chunk_address, message_chunk_length) | 0) === 0)) {
      	_free_and_throw_error(address_pool, "invalid usage");
      }
      _free_all(address_pool);
    }

    function crypto_kdf_derive_from_key(subkey_len, subkey_id, ctx, key, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: subkey_len (uint)

      _require_defined(address_pool, subkey_len, "subkey_len");

      if (!(typeof subkey_len === "number" && (subkey_len | 0) === subkey_len) || subkey_len < 0) {
              _free_and_throw_type_error(address_pool, "subkey_len must be an unsigned integer");
      }

      // ---------- input: subkey_id (uint)

      _require_defined(address_pool, subkey_id, "subkey_id");

      if (!(typeof subkey_id === "number" && (subkey_id | 0) === subkey_id) || subkey_id < 0) {
              _free_and_throw_type_error(address_pool, "subkey_id must be an unsigned integer");
      }

      // ---------- input: ctx (string)

      if (typeof ctx !== "string") {
          _free_and_throw_type_error(address_pool, "ctx must be a string");
      }
      ctx = from_string(ctx + "\0");
      if (ctx_length != undefined && ctx.length - 1 !== ctx_length) {
          _free_and_throw_type_error(address_pool, "invalid ctx length");
      }
      var ctx_address = _to_allocated_buf_address(ctx),
          ctx_length = ctx.length - 1;
      address_pool.push(ctx_address);

      // ---------- input: key (buf)

      key = _any_to_Uint8Array(address_pool, key, "key");
      var key_address, key_length = (libsodium._crypto_kdf_keybytes()) | 0;
      if (key.length !== key_length) {
          _free_and_throw_type_error(address_pool, "invalid key length");
      }
      key_address = _to_allocated_buf_address(key);
      address_pool.push(key_address);

      // ---------- output subkey (buf)

      var subkey_length = (subkey_len) | 0,
          subkey = new AllocatedBuf(subkey_length),
          subkey_address = subkey.address;

      address_pool.push(subkey_address);

      libsodium._crypto_kdf_derive_from_key(subkey_address, subkey_len, subkey_id, (subkey_id >>> 24) >>> 8, ctx_address, key_address);
      var ret = (_format_output(subkey, outputFormat));
      _free_all(address_pool);
      return ret;
    }

    function crypto_kdf_keygen(outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- output output (buf)

      var output_length = (libsodium._crypto_kdf_keybytes()) | 0,
          output = new AllocatedBuf(output_length),
          output_address = output.address;

      address_pool.push(output_address);

      libsodium._crypto_kdf_keygen(output_address);
      var ret = (_format_output(output, outputFormat));
      _free_all(address_pool);
      return ret;
    }

    function crypto_kx_client_session_keys(clientPublicKey, clientSecretKey, serverPublicKey, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: clientPublicKey (buf)

      clientPublicKey = _any_to_Uint8Array(address_pool, clientPublicKey, "clientPublicKey");
      var clientPublicKey_address, clientPublicKey_length = (libsodium._crypto_kx_publickeybytes()) | 0;
      if (clientPublicKey.length !== clientPublicKey_length) {
          _free_and_throw_type_error(address_pool, "invalid clientPublicKey length");
      }
      clientPublicKey_address = _to_allocated_buf_address(clientPublicKey);
      address_pool.push(clientPublicKey_address);

      // ---------- input: clientSecretKey (buf)

      clientSecretKey = _any_to_Uint8Array(address_pool, clientSecretKey, "clientSecretKey");
      var clientSecretKey_address, clientSecretKey_length = (libsodium._crypto_kx_secretkeybytes()) | 0;
      if (clientSecretKey.length !== clientSecretKey_length) {
          _free_and_throw_type_error(address_pool, "invalid clientSecretKey length");
      }
      clientSecretKey_address = _to_allocated_buf_address(clientSecretKey);
      address_pool.push(clientSecretKey_address);

      // ---------- input: serverPublicKey (buf)

      serverPublicKey = _any_to_Uint8Array(address_pool, serverPublicKey, "serverPublicKey");
      var serverPublicKey_address, serverPublicKey_length = (libsodium._crypto_kx_publickeybytes()) | 0;
      if (serverPublicKey.length !== serverPublicKey_length) {
          _free_and_throw_type_error(address_pool, "invalid serverPublicKey length");
      }
      serverPublicKey_address = _to_allocated_buf_address(serverPublicKey);
      address_pool.push(serverPublicKey_address);

      // ---------- output sharedRx (buf)

      var sharedRx_length = (libsodium._crypto_kx_sessionkeybytes()) | 0,
          sharedRx = new AllocatedBuf(sharedRx_length),
          sharedRx_address = sharedRx.address;

      address_pool.push(sharedRx_address);

      // ---------- output sharedTx (buf)

      var sharedTx_length = (libsodium._crypto_kx_sessionkeybytes()) | 0,
          sharedTx = new AllocatedBuf(sharedTx_length),
          sharedTx_address = sharedTx.address;

      address_pool.push(sharedTx_address);

      if ((libsodium._crypto_kx_client_session_keys(sharedRx_address, sharedTx_address, clientPublicKey_address, clientSecretKey_address, serverPublicKey_address) | 0) === 0) {
      	var ret = _format_output({sharedRx: sharedRx, sharedTx: sharedTx}, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_kx_keypair(outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- output publicKey (buf)

      var publicKey_length = (libsodium._crypto_kx_publickeybytes()) | 0,
          publicKey = new AllocatedBuf(publicKey_length),
          publicKey_address = publicKey.address;

      address_pool.push(publicKey_address);

      // ---------- output privateKey (buf)

      var privateKey_length = (libsodium._crypto_kx_secretkeybytes()) | 0,
          privateKey = new AllocatedBuf(privateKey_length),
          privateKey_address = privateKey.address;

      address_pool.push(privateKey_address);

      if ((libsodium._crypto_kx_keypair(publicKey_address, privateKey_address) | 0) === 0) {
      	var ret = {publicKey: _format_output(publicKey, outputFormat), privateKey: _format_output(privateKey, outputFormat), keyType: 'x25519'};
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "internal error");
    }

    function crypto_kx_seed_keypair(seed, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: seed (buf)

      seed = _any_to_Uint8Array(address_pool, seed, "seed");
      var seed_address, seed_length = (libsodium._crypto_kx_seedbytes()) | 0;
      if (seed.length !== seed_length) {
          _free_and_throw_type_error(address_pool, "invalid seed length");
      }
      seed_address = _to_allocated_buf_address(seed);
      address_pool.push(seed_address);

      // ---------- output publicKey (buf)

      var publicKey_length = (libsodium._crypto_kx_publickeybytes()) | 0,
          publicKey = new AllocatedBuf(publicKey_length),
          publicKey_address = publicKey.address;

      address_pool.push(publicKey_address);

      // ---------- output privateKey (buf)

      var privateKey_length = (libsodium._crypto_kx_secretkeybytes()) | 0,
          privateKey = new AllocatedBuf(privateKey_length),
          privateKey_address = privateKey.address;

      address_pool.push(privateKey_address);

      if ((libsodium._crypto_kx_seed_keypair(publicKey_address, privateKey_address, seed_address) | 0) === 0) {
      	var ret = {publicKey: _format_output(publicKey, outputFormat), privateKey: _format_output(privateKey, outputFormat), keyType: 'x25519'};
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "internal error");
    }

    function crypto_kx_server_session_keys(serverPublicKey, serverSecretKey, clientPublicKey, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: serverPublicKey (buf)

      serverPublicKey = _any_to_Uint8Array(address_pool, serverPublicKey, "serverPublicKey");
      var serverPublicKey_address, serverPublicKey_length = (libsodium._crypto_kx_publickeybytes()) | 0;
      if (serverPublicKey.length !== serverPublicKey_length) {
          _free_and_throw_type_error(address_pool, "invalid serverPublicKey length");
      }
      serverPublicKey_address = _to_allocated_buf_address(serverPublicKey);
      address_pool.push(serverPublicKey_address);

      // ---------- input: serverSecretKey (buf)

      serverSecretKey = _any_to_Uint8Array(address_pool, serverSecretKey, "serverSecretKey");
      var serverSecretKey_address, serverSecretKey_length = (libsodium._crypto_kx_secretkeybytes()) | 0;
      if (serverSecretKey.length !== serverSecretKey_length) {
          _free_and_throw_type_error(address_pool, "invalid serverSecretKey length");
      }
      serverSecretKey_address = _to_allocated_buf_address(serverSecretKey);
      address_pool.push(serverSecretKey_address);

      // ---------- input: clientPublicKey (buf)

      clientPublicKey = _any_to_Uint8Array(address_pool, clientPublicKey, "clientPublicKey");
      var clientPublicKey_address, clientPublicKey_length = (libsodium._crypto_kx_publickeybytes()) | 0;
      if (clientPublicKey.length !== clientPublicKey_length) {
          _free_and_throw_type_error(address_pool, "invalid clientPublicKey length");
      }
      clientPublicKey_address = _to_allocated_buf_address(clientPublicKey);
      address_pool.push(clientPublicKey_address);

      // ---------- output sharedRx (buf)

      var sharedRx_length = (libsodium._crypto_kx_sessionkeybytes()) | 0,
          sharedRx = new AllocatedBuf(sharedRx_length),
          sharedRx_address = sharedRx.address;

      address_pool.push(sharedRx_address);

      // ---------- output sharedTx (buf)

      var sharedTx_length = (libsodium._crypto_kx_sessionkeybytes()) | 0,
          sharedTx = new AllocatedBuf(sharedTx_length),
          sharedTx_address = sharedTx.address;

      address_pool.push(sharedTx_address);

      if ((libsodium._crypto_kx_server_session_keys(sharedRx_address, sharedTx_address, serverPublicKey_address, serverSecretKey_address, clientPublicKey_address) | 0) === 0) {
      	var ret = _format_output({sharedRx: sharedRx, sharedTx: sharedTx}, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_onetimeauth(message, key, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: message (unsized_buf)

      message = _any_to_Uint8Array(address_pool, message, "message");
      var message_address = _to_allocated_buf_address(message),
          message_length = message.length;
      address_pool.push(message_address);

      // ---------- input: key (buf)

      key = _any_to_Uint8Array(address_pool, key, "key");
      var key_address, key_length = (libsodium._crypto_onetimeauth_keybytes()) | 0;
      if (key.length !== key_length) {
          _free_and_throw_type_error(address_pool, "invalid key length");
      }
      key_address = _to_allocated_buf_address(key);
      address_pool.push(key_address);

      // ---------- output hash (buf)

      var hash_length = (libsodium._crypto_onetimeauth_bytes()) | 0,
          hash = new AllocatedBuf(hash_length),
          hash_address = hash.address;

      address_pool.push(hash_address);

      if ((libsodium._crypto_onetimeauth(hash_address, message_address, message_length, 0, key_address) | 0) === 0) {
      	var ret = _format_output(hash, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_onetimeauth_final(state_address, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: state_address (onetimeauth_state_address)

      _require_defined(address_pool, state_address, "state_address");

      // ---------- output hash (buf)

      var hash_length = (libsodium._crypto_onetimeauth_bytes()) | 0,
          hash = new AllocatedBuf(hash_length),
          hash_address = hash.address;

      address_pool.push(hash_address);

      if ((libsodium._crypto_onetimeauth_final(state_address, hash_address) | 0) === 0) {
      	var ret = (libsodium._free(state_address), _format_output(hash, outputFormat));
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_onetimeauth_init(key, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: key (unsized_buf_optional)

      var key_address = null, key_length = 0;
      if (key != undefined) {
              key = _any_to_Uint8Array(address_pool, key, "key");
              key_address = _to_allocated_buf_address(key);
              key_length = key.length;
              address_pool.push(key_address);
      }


      // ---------- output state (onetimeauth_state)

      var state_address = new AllocatedBuf(144).address;

      if ((libsodium._crypto_onetimeauth_init(state_address, key_address) | 0) === 0) {
      	var ret = state_address;
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_onetimeauth_keygen(outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- output output (buf)

      var output_length = (libsodium._crypto_onetimeauth_keybytes()) | 0,
          output = new AllocatedBuf(output_length),
          output_address = output.address;

      address_pool.push(output_address);

      libsodium._crypto_onetimeauth_keygen(output_address);
      var ret = (_format_output(output, outputFormat));
      _free_all(address_pool);
      return ret;
    }

    function crypto_onetimeauth_update(state_address, message_chunk, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: state_address (onetimeauth_state_address)

      _require_defined(address_pool, state_address, "state_address");

      // ---------- input: message_chunk (unsized_buf)

      message_chunk = _any_to_Uint8Array(address_pool, message_chunk, "message_chunk");
      var message_chunk_address = _to_allocated_buf_address(message_chunk),
          message_chunk_length = message_chunk.length;
      address_pool.push(message_chunk_address);

      if (!((libsodium._crypto_onetimeauth_update(state_address, message_chunk_address, message_chunk_length) | 0) === 0)) {
      	_free_and_throw_error(address_pool, "invalid usage");
      }
      _free_all(address_pool);
    }

    function crypto_onetimeauth_verify(hash, message, key) {
      var address_pool = [];

      // ---------- input: hash (buf)

      hash = _any_to_Uint8Array(address_pool, hash, "hash");
      var hash_address, hash_length = (libsodium._crypto_onetimeauth_bytes()) | 0;
      if (hash.length !== hash_length) {
          _free_and_throw_type_error(address_pool, "invalid hash length");
      }
      hash_address = _to_allocated_buf_address(hash);
      address_pool.push(hash_address);

      // ---------- input: message (unsized_buf)

      message = _any_to_Uint8Array(address_pool, message, "message");
      var message_address = _to_allocated_buf_address(message),
          message_length = message.length;
      address_pool.push(message_address);

      // ---------- input: key (buf)

      key = _any_to_Uint8Array(address_pool, key, "key");
      var key_address, key_length = (libsodium._crypto_onetimeauth_keybytes()) | 0;
      if (key.length !== key_length) {
          _free_and_throw_type_error(address_pool, "invalid key length");
      }
      key_address = _to_allocated_buf_address(key);
      address_pool.push(key_address);

      var result = libsodium._crypto_onetimeauth_verify(hash_address, message_address, message_length, 0, key_address) | 0;
      var ret = (result === 0);
      _free_all(address_pool);
      return ret;
    }

    function crypto_pwhash(keyLength, password, salt, opsLimit, memLimit, algorithm, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: keyLength (uint)

      _require_defined(address_pool, keyLength, "keyLength");

      if (!(typeof keyLength === "number" && (keyLength | 0) === keyLength) || keyLength < 0) {
              _free_and_throw_type_error(address_pool, "keyLength must be an unsigned integer");
      }

      // ---------- input: password (unsized_buf)

      password = _any_to_Uint8Array(address_pool, password, "password");
      var password_address = _to_allocated_buf_address(password),
          password_length = password.length;
      address_pool.push(password_address);

      // ---------- input: salt (buf)

      salt = _any_to_Uint8Array(address_pool, salt, "salt");
      var salt_address, salt_length = (libsodium._crypto_pwhash_saltbytes()) | 0;
      if (salt.length !== salt_length) {
          _free_and_throw_type_error(address_pool, "invalid salt length");
      }
      salt_address = _to_allocated_buf_address(salt);
      address_pool.push(salt_address);

      // ---------- input: opsLimit (uint)

      _require_defined(address_pool, opsLimit, "opsLimit");

      if (!(typeof opsLimit === "number" && (opsLimit | 0) === opsLimit) || opsLimit < 0) {
              _free_and_throw_type_error(address_pool, "opsLimit must be an unsigned integer");
      }

      // ---------- input: memLimit (uint)

      _require_defined(address_pool, memLimit, "memLimit");

      if (!(typeof memLimit === "number" && (memLimit | 0) === memLimit) || memLimit < 0) {
              _free_and_throw_type_error(address_pool, "memLimit must be an unsigned integer");
      }

      // ---------- input: algorithm (uint)

      _require_defined(address_pool, algorithm, "algorithm");

      if (!(typeof algorithm === "number" && (algorithm | 0) === algorithm) || algorithm < 0) {
              _free_and_throw_type_error(address_pool, "algorithm must be an unsigned integer");
      }

      // ---------- output derivedKey (buf)

      var derivedKey_length = (keyLength) | 0,
          derivedKey = new AllocatedBuf(derivedKey_length),
          derivedKey_address = derivedKey.address;

      address_pool.push(derivedKey_address);

      if ((libsodium._crypto_pwhash(derivedKey_address, keyLength, 0, password_address, password_length, 0, salt_address, opsLimit, 0, memLimit, algorithm) | 0) === 0) {
      	var ret = _format_output(derivedKey, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_pwhash_scryptsalsa208sha256(keyLength, password, salt, opsLimit, memLimit, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: keyLength (uint)

      _require_defined(address_pool, keyLength, "keyLength");

      if (!(typeof keyLength === "number" && (keyLength | 0) === keyLength) || keyLength < 0) {
              _free_and_throw_type_error(address_pool, "keyLength must be an unsigned integer");
      }

      // ---------- input: password (unsized_buf)

      password = _any_to_Uint8Array(address_pool, password, "password");
      var password_address = _to_allocated_buf_address(password),
          password_length = password.length;
      address_pool.push(password_address);

      // ---------- input: salt (buf)

      salt = _any_to_Uint8Array(address_pool, salt, "salt");
      var salt_address, salt_length = (libsodium._crypto_pwhash_scryptsalsa208sha256_saltbytes()) | 0;
      if (salt.length !== salt_length) {
          _free_and_throw_type_error(address_pool, "invalid salt length");
      }
      salt_address = _to_allocated_buf_address(salt);
      address_pool.push(salt_address);

      // ---------- input: opsLimit (uint)

      _require_defined(address_pool, opsLimit, "opsLimit");

      if (!(typeof opsLimit === "number" && (opsLimit | 0) === opsLimit) || opsLimit < 0) {
              _free_and_throw_type_error(address_pool, "opsLimit must be an unsigned integer");
      }

      // ---------- input: memLimit (uint)

      _require_defined(address_pool, memLimit, "memLimit");

      if (!(typeof memLimit === "number" && (memLimit | 0) === memLimit) || memLimit < 0) {
              _free_and_throw_type_error(address_pool, "memLimit must be an unsigned integer");
      }

      // ---------- output derivedKey (buf)

      var derivedKey_length = (keyLength) | 0,
          derivedKey = new AllocatedBuf(derivedKey_length),
          derivedKey_address = derivedKey.address;

      address_pool.push(derivedKey_address);

      if ((libsodium._crypto_pwhash_scryptsalsa208sha256(derivedKey_address, keyLength, 0, password_address, password_length, 0, salt_address, opsLimit, 0, memLimit) | 0) === 0) {
      	var ret = _format_output(derivedKey, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_pwhash_scryptsalsa208sha256_ll(password, salt, opsLimit, r, p, keyLength, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: password (unsized_buf)

      password = _any_to_Uint8Array(address_pool, password, "password");
      var password_address = _to_allocated_buf_address(password),
          password_length = password.length;
      address_pool.push(password_address);

      // ---------- input: salt (unsized_buf)

      salt = _any_to_Uint8Array(address_pool, salt, "salt");
      var salt_address = _to_allocated_buf_address(salt),
          salt_length = salt.length;
      address_pool.push(salt_address);

      // ---------- input: opsLimit (uint)

      _require_defined(address_pool, opsLimit, "opsLimit");

      if (!(typeof opsLimit === "number" && (opsLimit | 0) === opsLimit) || opsLimit < 0) {
              _free_and_throw_type_error(address_pool, "opsLimit must be an unsigned integer");
      }

      // ---------- input: r (uint)

      _require_defined(address_pool, r, "r");

      if (!(typeof r === "number" && (r | 0) === r) || r < 0) {
              _free_and_throw_type_error(address_pool, "r must be an unsigned integer");
      }

      // ---------- input: p (uint)

      _require_defined(address_pool, p, "p");

      if (!(typeof p === "number" && (p | 0) === p) || p < 0) {
              _free_and_throw_type_error(address_pool, "p must be an unsigned integer");
      }

      // ---------- input: keyLength (uint)

      _require_defined(address_pool, keyLength, "keyLength");

      if (!(typeof keyLength === "number" && (keyLength | 0) === keyLength) || keyLength < 0) {
              _free_and_throw_type_error(address_pool, "keyLength must be an unsigned integer");
      }

      // ---------- output derivedKey (buf)

      var derivedKey_length = (keyLength) | 0,
          derivedKey = new AllocatedBuf(derivedKey_length),
          derivedKey_address = derivedKey.address;

      address_pool.push(derivedKey_address);

      if ((libsodium._crypto_pwhash_scryptsalsa208sha256_ll(password_address, password_length, salt_address, salt_length, opsLimit, 0, r, p, derivedKey_address, keyLength) | 0) === 0) {
      	var ret = _format_output(derivedKey, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_pwhash_scryptsalsa208sha256_str(password, opsLimit, memLimit, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: password (unsized_buf)

      password = _any_to_Uint8Array(address_pool, password, "password");
      var password_address = _to_allocated_buf_address(password),
          password_length = password.length;
      address_pool.push(password_address);

      // ---------- input: opsLimit (uint)

      _require_defined(address_pool, opsLimit, "opsLimit");

      if (!(typeof opsLimit === "number" && (opsLimit | 0) === opsLimit) || opsLimit < 0) {
              _free_and_throw_type_error(address_pool, "opsLimit must be an unsigned integer");
      }

      // ---------- input: memLimit (uint)

      _require_defined(address_pool, memLimit, "memLimit");

      if (!(typeof memLimit === "number" && (memLimit | 0) === memLimit) || memLimit < 0) {
              _free_and_throw_type_error(address_pool, "memLimit must be an unsigned integer");
      }

      // ---------- output hashed_password (buf)

      var hashed_password_length = (libsodium._crypto_pwhash_scryptsalsa208sha256_strbytes()) | 0,
          hashed_password = new AllocatedBuf(hashed_password_length),
          hashed_password_address = hashed_password.address;

      address_pool.push(hashed_password_address);

      if ((libsodium._crypto_pwhash_scryptsalsa208sha256_str(hashed_password_address, password_address, password_length, 0, opsLimit, 0, memLimit) | 0) === 0) {
      	var ret = libsodium.UTF8ToString(hashed_password_address);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_pwhash_scryptsalsa208sha256_str_verify(hashed_password, password, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: hashed_password (string)

      if (typeof hashed_password !== "string") {
          _free_and_throw_type_error(address_pool, "hashed_password must be a string");
      }
      hashed_password = from_string(hashed_password + "\0");
      if (hashed_password_length != undefined && hashed_password.length - 1 !== hashed_password_length) {
          _free_and_throw_type_error(address_pool, "invalid hashed_password length");
      }
      var hashed_password_address = _to_allocated_buf_address(hashed_password),
          hashed_password_length = hashed_password.length - 1;
      address_pool.push(hashed_password_address);

      // ---------- input: password (unsized_buf)

      password = _any_to_Uint8Array(address_pool, password, "password");
      var password_address = _to_allocated_buf_address(password),
          password_length = password.length;
      address_pool.push(password_address);

      var result = libsodium._crypto_pwhash_scryptsalsa208sha256_str_verify(hashed_password_address, password_address, password_length, 0) | 0;
      var ret = (result === 0);
      _free_all(address_pool);
      return ret;
    }

    function crypto_pwhash_str(password, opsLimit, memLimit, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: password (unsized_buf)

      password = _any_to_Uint8Array(address_pool, password, "password");
      var password_address = _to_allocated_buf_address(password),
          password_length = password.length;
      address_pool.push(password_address);

      // ---------- input: opsLimit (uint)

      _require_defined(address_pool, opsLimit, "opsLimit");

      if (!(typeof opsLimit === "number" && (opsLimit | 0) === opsLimit) || opsLimit < 0) {
              _free_and_throw_type_error(address_pool, "opsLimit must be an unsigned integer");
      }

      // ---------- input: memLimit (uint)

      _require_defined(address_pool, memLimit, "memLimit");

      if (!(typeof memLimit === "number" && (memLimit | 0) === memLimit) || memLimit < 0) {
              _free_and_throw_type_error(address_pool, "memLimit must be an unsigned integer");
      }

      // ---------- output hashed_password (buf)

      var hashed_password_length = (libsodium._crypto_pwhash_strbytes()) | 0,
          hashed_password = new AllocatedBuf(hashed_password_length),
          hashed_password_address = hashed_password.address;

      address_pool.push(hashed_password_address);

      if ((libsodium._crypto_pwhash_str(hashed_password_address, password_address, password_length, 0, opsLimit, 0, memLimit) | 0) === 0) {
      	var ret = libsodium.UTF8ToString(hashed_password_address);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_pwhash_str_needs_rehash(hashed_password, opsLimit, memLimit, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: hashed_password (string)

      if (typeof hashed_password !== "string") {
          _free_and_throw_type_error(address_pool, "hashed_password must be a string");
      }
      hashed_password = from_string(hashed_password + "\0");
      if (hashed_password_length != undefined && hashed_password.length - 1 !== hashed_password_length) {
          _free_and_throw_type_error(address_pool, "invalid hashed_password length");
      }
      var hashed_password_address = _to_allocated_buf_address(hashed_password),
          hashed_password_length = hashed_password.length - 1;
      address_pool.push(hashed_password_address);

      // ---------- input: opsLimit (uint)

      _require_defined(address_pool, opsLimit, "opsLimit");

      if (!(typeof opsLimit === "number" && (opsLimit | 0) === opsLimit) || opsLimit < 0) {
              _free_and_throw_type_error(address_pool, "opsLimit must be an unsigned integer");
      }

      // ---------- input: memLimit (uint)

      _require_defined(address_pool, memLimit, "memLimit");

      if (!(typeof memLimit === "number" && (memLimit | 0) === memLimit) || memLimit < 0) {
              _free_and_throw_type_error(address_pool, "memLimit must be an unsigned integer");
      }

      var result = libsodium._crypto_pwhash_str_needs_rehash(hashed_password_address, opsLimit, 0, memLimit) | 0;
      var ret = (result !== 0);
      _free_all(address_pool);
      return ret;
    }

    function crypto_pwhash_str_verify(hashed_password, password, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: hashed_password (string)

      if (typeof hashed_password !== "string") {
          _free_and_throw_type_error(address_pool, "hashed_password must be a string");
      }
      hashed_password = from_string(hashed_password + "\0");
      if (hashed_password_length != undefined && hashed_password.length - 1 !== hashed_password_length) {
          _free_and_throw_type_error(address_pool, "invalid hashed_password length");
      }
      var hashed_password_address = _to_allocated_buf_address(hashed_password),
          hashed_password_length = hashed_password.length - 1;
      address_pool.push(hashed_password_address);

      // ---------- input: password (unsized_buf)

      password = _any_to_Uint8Array(address_pool, password, "password");
      var password_address = _to_allocated_buf_address(password),
          password_length = password.length;
      address_pool.push(password_address);

      var result = libsodium._crypto_pwhash_str_verify(hashed_password_address, password_address, password_length, 0) | 0;
      var ret = (result === 0);
      _free_all(address_pool);
      return ret;
    }

    function crypto_scalarmult(privateKey, publicKey, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: privateKey (buf)

      privateKey = _any_to_Uint8Array(address_pool, privateKey, "privateKey");
      var privateKey_address, privateKey_length = (libsodium._crypto_scalarmult_scalarbytes()) | 0;
      if (privateKey.length !== privateKey_length) {
          _free_and_throw_type_error(address_pool, "invalid privateKey length");
      }
      privateKey_address = _to_allocated_buf_address(privateKey);
      address_pool.push(privateKey_address);

      // ---------- input: publicKey (buf)

      publicKey = _any_to_Uint8Array(address_pool, publicKey, "publicKey");
      var publicKey_address, publicKey_length = (libsodium._crypto_scalarmult_bytes()) | 0;
      if (publicKey.length !== publicKey_length) {
          _free_and_throw_type_error(address_pool, "invalid publicKey length");
      }
      publicKey_address = _to_allocated_buf_address(publicKey);
      address_pool.push(publicKey_address);

      // ---------- output sharedSecret (buf)

      var sharedSecret_length = (libsodium._crypto_scalarmult_bytes()) | 0,
          sharedSecret = new AllocatedBuf(sharedSecret_length),
          sharedSecret_address = sharedSecret.address;

      address_pool.push(sharedSecret_address);

      if ((libsodium._crypto_scalarmult(sharedSecret_address, privateKey_address, publicKey_address) | 0) === 0) {
      	var ret = _format_output(sharedSecret, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "weak public key");
    }

    function crypto_scalarmult_base(privateKey, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: privateKey (buf)

      privateKey = _any_to_Uint8Array(address_pool, privateKey, "privateKey");
      var privateKey_address, privateKey_length = (libsodium._crypto_scalarmult_scalarbytes()) | 0;
      if (privateKey.length !== privateKey_length) {
          _free_and_throw_type_error(address_pool, "invalid privateKey length");
      }
      privateKey_address = _to_allocated_buf_address(privateKey);
      address_pool.push(privateKey_address);

      // ---------- output publicKey (buf)

      var publicKey_length = (libsodium._crypto_scalarmult_bytes()) | 0,
          publicKey = new AllocatedBuf(publicKey_length),
          publicKey_address = publicKey.address;

      address_pool.push(publicKey_address);

      if ((libsodium._crypto_scalarmult_base(publicKey_address, privateKey_address) | 0) === 0) {
      	var ret = _format_output(publicKey, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "unknown error");
    }

    function crypto_scalarmult_ed25519(n, p, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: n (buf)

      n = _any_to_Uint8Array(address_pool, n, "n");
      var n_address, n_length = (libsodium._crypto_scalarmult_ed25519_scalarbytes()) | 0;
      if (n.length !== n_length) {
          _free_and_throw_type_error(address_pool, "invalid n length");
      }
      n_address = _to_allocated_buf_address(n);
      address_pool.push(n_address);

      // ---------- input: p (buf)

      p = _any_to_Uint8Array(address_pool, p, "p");
      var p_address, p_length = (libsodium._crypto_scalarmult_ed25519_bytes()) | 0;
      if (p.length !== p_length) {
          _free_and_throw_type_error(address_pool, "invalid p length");
      }
      p_address = _to_allocated_buf_address(p);
      address_pool.push(p_address);

      // ---------- output q (buf)

      var q_length = (libsodium._crypto_scalarmult_ed25519_bytes()) | 0,
          q = new AllocatedBuf(q_length),
          q_address = q.address;

      address_pool.push(q_address);

      if ((libsodium._crypto_scalarmult_ed25519(q_address, n_address, p_address) | 0) === 0) {
      	var ret = _format_output(q, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid point or scalar is 0");
    }

    function crypto_scalarmult_ed25519_base(scalar, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: scalar (buf)

      scalar = _any_to_Uint8Array(address_pool, scalar, "scalar");
      var scalar_address, scalar_length = (libsodium._crypto_scalarmult_ed25519_scalarbytes()) | 0;
      if (scalar.length !== scalar_length) {
          _free_and_throw_type_error(address_pool, "invalid scalar length");
      }
      scalar_address = _to_allocated_buf_address(scalar);
      address_pool.push(scalar_address);

      // ---------- output point (buf)

      var point_length = (libsodium._crypto_scalarmult_ed25519_bytes()) | 0,
          point = new AllocatedBuf(point_length),
          point_address = point.address;

      address_pool.push(point_address);

      if ((libsodium._crypto_scalarmult_ed25519_base(point_address, scalar_address) | 0) === 0) {
      	var ret = _format_output(point, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "scalar is 0");
    }

    function crypto_scalarmult_ed25519_base_noclamp(scalar, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: scalar (buf)

      scalar = _any_to_Uint8Array(address_pool, scalar, "scalar");
      var scalar_address, scalar_length = (libsodium._crypto_scalarmult_ed25519_scalarbytes()) | 0;
      if (scalar.length !== scalar_length) {
          _free_and_throw_type_error(address_pool, "invalid scalar length");
      }
      scalar_address = _to_allocated_buf_address(scalar);
      address_pool.push(scalar_address);

      // ---------- output point (buf)

      var point_length = (libsodium._crypto_scalarmult_ed25519_bytes()) | 0,
          point = new AllocatedBuf(point_length),
          point_address = point.address;

      address_pool.push(point_address);

      if ((libsodium._crypto_scalarmult_ed25519_base_noclamp(point_address, scalar_address) | 0) === 0) {
      	var ret = _format_output(point, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "scalar is 0");
    }

    function crypto_scalarmult_ed25519_noclamp(n, p, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: n (buf)

      n = _any_to_Uint8Array(address_pool, n, "n");
      var n_address, n_length = (libsodium._crypto_scalarmult_ed25519_scalarbytes()) | 0;
      if (n.length !== n_length) {
          _free_and_throw_type_error(address_pool, "invalid n length");
      }
      n_address = _to_allocated_buf_address(n);
      address_pool.push(n_address);

      // ---------- input: p (buf)

      p = _any_to_Uint8Array(address_pool, p, "p");
      var p_address, p_length = (libsodium._crypto_scalarmult_ed25519_bytes()) | 0;
      if (p.length !== p_length) {
          _free_and_throw_type_error(address_pool, "invalid p length");
      }
      p_address = _to_allocated_buf_address(p);
      address_pool.push(p_address);

      // ---------- output q (buf)

      var q_length = (libsodium._crypto_scalarmult_ed25519_bytes()) | 0,
          q = new AllocatedBuf(q_length),
          q_address = q.address;

      address_pool.push(q_address);

      if ((libsodium._crypto_scalarmult_ed25519_noclamp(q_address, n_address, p_address) | 0) === 0) {
      	var ret = _format_output(q, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid point or scalar is 0");
    }

    function crypto_scalarmult_ristretto255(scalar, element, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: scalar (buf)

      scalar = _any_to_Uint8Array(address_pool, scalar, "scalar");
      var scalar_address, scalar_length = (libsodium._crypto_scalarmult_ristretto255_scalarbytes()) | 0;
      if (scalar.length !== scalar_length) {
          _free_and_throw_type_error(address_pool, "invalid scalar length");
      }
      scalar_address = _to_allocated_buf_address(scalar);
      address_pool.push(scalar_address);

      // ---------- input: element (buf)

      element = _any_to_Uint8Array(address_pool, element, "element");
      var element_address, element_length = (libsodium._crypto_scalarmult_ristretto255_bytes()) | 0;
      if (element.length !== element_length) {
          _free_and_throw_type_error(address_pool, "invalid element length");
      }
      element_address = _to_allocated_buf_address(element);
      address_pool.push(element_address);

      // ---------- output result (buf)

      var result_length = (libsodium._crypto_scalarmult_ristretto255_bytes()) | 0,
          result = new AllocatedBuf(result_length),
          result_address = result.address;

      address_pool.push(result_address);

      if ((libsodium._crypto_scalarmult_ristretto255(result_address, scalar_address, element_address) | 0) === 0) {
      	var ret = _format_output(result, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "result is identity element");
    }

    function crypto_scalarmult_ristretto255_base(scalar, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: scalar (buf)

      scalar = _any_to_Uint8Array(address_pool, scalar, "scalar");
      var scalar_address, scalar_length = (libsodium._crypto_core_ristretto255_scalarbytes()) | 0;
      if (scalar.length !== scalar_length) {
          _free_and_throw_type_error(address_pool, "invalid scalar length");
      }
      scalar_address = _to_allocated_buf_address(scalar);
      address_pool.push(scalar_address);

      // ---------- output element (buf)

      var element_length = (libsodium._crypto_core_ristretto255_bytes()) | 0,
          element = new AllocatedBuf(element_length),
          element_address = element.address;

      address_pool.push(element_address);

      if ((libsodium._crypto_scalarmult_ristretto255_base(element_address, scalar_address) | 0) === 0) {
      	var ret = _format_output(element, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "scalar is 0");
    }

    function crypto_secretbox_detached(message, nonce, key, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: message (unsized_buf)

      message = _any_to_Uint8Array(address_pool, message, "message");
      var message_address = _to_allocated_buf_address(message),
          message_length = message.length;
      address_pool.push(message_address);

      // ---------- input: nonce (buf)

      nonce = _any_to_Uint8Array(address_pool, nonce, "nonce");
      var nonce_address, nonce_length = (libsodium._crypto_secretbox_noncebytes()) | 0;
      if (nonce.length !== nonce_length) {
          _free_and_throw_type_error(address_pool, "invalid nonce length");
      }
      nonce_address = _to_allocated_buf_address(nonce);
      address_pool.push(nonce_address);

      // ---------- input: key (buf)

      key = _any_to_Uint8Array(address_pool, key, "key");
      var key_address, key_length = (libsodium._crypto_secretbox_keybytes()) | 0;
      if (key.length !== key_length) {
          _free_and_throw_type_error(address_pool, "invalid key length");
      }
      key_address = _to_allocated_buf_address(key);
      address_pool.push(key_address);

      // ---------- output cipher (buf)

      var cipher_length = (message_length) | 0,
          cipher = new AllocatedBuf(cipher_length),
          cipher_address = cipher.address;

      address_pool.push(cipher_address);

      // ---------- output mac (buf)

      var mac_length = (libsodium._crypto_secretbox_macbytes()) | 0,
          mac = new AllocatedBuf(mac_length),
          mac_address = mac.address;

      address_pool.push(mac_address);

      if ((libsodium._crypto_secretbox_detached(cipher_address, mac_address, message_address, message_length, 0, nonce_address, key_address) | 0) === 0) {
      	var ret = _format_output({mac: mac, cipher: cipher}, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_secretbox_easy(message, nonce, key, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: message (unsized_buf)

      message = _any_to_Uint8Array(address_pool, message, "message");
      var message_address = _to_allocated_buf_address(message),
          message_length = message.length;
      address_pool.push(message_address);

      // ---------- input: nonce (buf)

      nonce = _any_to_Uint8Array(address_pool, nonce, "nonce");
      var nonce_address, nonce_length = (libsodium._crypto_secretbox_noncebytes()) | 0;
      if (nonce.length !== nonce_length) {
          _free_and_throw_type_error(address_pool, "invalid nonce length");
      }
      nonce_address = _to_allocated_buf_address(nonce);
      address_pool.push(nonce_address);

      // ---------- input: key (buf)

      key = _any_to_Uint8Array(address_pool, key, "key");
      var key_address, key_length = (libsodium._crypto_secretbox_keybytes()) | 0;
      if (key.length !== key_length) {
          _free_and_throw_type_error(address_pool, "invalid key length");
      }
      key_address = _to_allocated_buf_address(key);
      address_pool.push(key_address);

      // ---------- output cipher (buf)

      var cipher_length = (message_length + libsodium._crypto_secretbox_macbytes()) | 0,
          cipher = new AllocatedBuf32(cipher_length),
          cipher_address = cipher.address;

      address_pool.push(cipher_address);

      if ((libsodium._crypto_secretbox_easy(cipher_address, message_address, message_length, 0, nonce_address, key_address) | 0) === 0) {
      	var ret = _format_output(cipher, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_secretbox_keygen(outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- output output (buf)

      var output_length = (libsodium._crypto_secretbox_keybytes()) | 0,
          output = new AllocatedBuf(output_length),
          output_address = output.address;

      address_pool.push(output_address);

      libsodium._crypto_secretbox_keygen(output_address);
      var ret = (_format_output(output, outputFormat));
      _free_all(address_pool);
      return ret;
    }

    function crypto_secretbox_open_detached(ciphertext, mac, nonce, key, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: ciphertext (unsized_buf)

      ciphertext = _any_to_Uint8Array(address_pool, ciphertext, "ciphertext");
      var ciphertext_address = _to_allocated_buf_address(ciphertext),
          ciphertext_length = ciphertext.length;
      address_pool.push(ciphertext_address);

      // ---------- input: mac (buf)

      mac = _any_to_Uint8Array(address_pool, mac, "mac");
      var mac_address, mac_length = (libsodium._crypto_secretbox_macbytes()) | 0;
      if (mac.length !== mac_length) {
          _free_and_throw_type_error(address_pool, "invalid mac length");
      }
      mac_address = _to_allocated_buf_address(mac);
      address_pool.push(mac_address);

      // ---------- input: nonce (buf)

      nonce = _any_to_Uint8Array(address_pool, nonce, "nonce");
      var nonce_address, nonce_length = (libsodium._crypto_secretbox_noncebytes()) | 0;
      if (nonce.length !== nonce_length) {
          _free_and_throw_type_error(address_pool, "invalid nonce length");
      }
      nonce_address = _to_allocated_buf_address(nonce);
      address_pool.push(nonce_address);

      // ---------- input: key (buf)

      key = _any_to_Uint8Array(address_pool, key, "key");
      var key_address, key_length = (libsodium._crypto_secretbox_keybytes()) | 0;
      if (key.length !== key_length) {
          _free_and_throw_type_error(address_pool, "invalid key length");
      }
      key_address = _to_allocated_buf_address(key);
      address_pool.push(key_address);

      // ---------- output message (buf)

      var message_length = (ciphertext_length) | 0,
          message = new AllocatedBuf(message_length),
          message_address = message.address;

      address_pool.push(message_address);

      if ((libsodium._crypto_secretbox_open_detached(message_address, ciphertext_address, mac_address, ciphertext_length, 0, nonce_address, key_address) | 0) === 0) {
      	var ret = _format_output(message, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "wrong secret key for the given ciphertext");
    }

    function crypto_secretbox_open_easy(ciphertext, nonce, key, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: ciphertext (minsized_buf)

      ciphertext = _any_to_Uint8Array(address_pool, ciphertext, "ciphertext");
      var ciphertext_address, ciphertext_min_length = libsodium._crypto_secretbox_macbytes(), ciphertext_length = ciphertext.length;
      if (ciphertext_length < ciphertext_min_length) {
              _free_and_throw_type_error(address_pool, "ciphertext is too short");
      }
      ciphertext_address = _to_allocated_buf_address(ciphertext);
      address_pool.push(ciphertext_address);

      // ---------- input: nonce (buf)

      nonce = _any_to_Uint8Array(address_pool, nonce, "nonce");
      var nonce_address, nonce_length = (libsodium._crypto_secretbox_noncebytes()) | 0;
      if (nonce.length !== nonce_length) {
          _free_and_throw_type_error(address_pool, "invalid nonce length");
      }
      nonce_address = _to_allocated_buf_address(nonce);
      address_pool.push(nonce_address);

      // ---------- input: key (buf)

      key = _any_to_Uint8Array(address_pool, key, "key");
      var key_address, key_length = (libsodium._crypto_secretbox_keybytes()) | 0;
      if (key.length !== key_length) {
          _free_and_throw_type_error(address_pool, "invalid key length");
      }
      key_address = _to_allocated_buf_address(key);
      address_pool.push(key_address);

      // ---------- output message (buf)

      var message_length = (ciphertext_length - libsodium._crypto_secretbox_macbytes()) | 0,
          message = new AllocatedBuf(message_length),
          message_address = message.address;

      address_pool.push(message_address);

      if ((libsodium._crypto_secretbox_open_easy(message_address, ciphertext_address, ciphertext_length, 0, nonce_address, key_address) | 0) === 0) {
      	var ret = _format_output(message, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "wrong secret key for the given ciphertext");
    }

    function crypto_secretstream_xchacha20poly1305_init_pull(header, key, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: header (buf)

      header = _any_to_Uint8Array(address_pool, header, "header");
      var header_address, header_length = (libsodium._crypto_secretstream_xchacha20poly1305_headerbytes()) | 0;
      if (header.length !== header_length) {
          _free_and_throw_type_error(address_pool, "invalid header length");
      }
      header_address = _to_allocated_buf_address(header);
      address_pool.push(header_address);

      // ---------- input: key (buf)

      key = _any_to_Uint8Array(address_pool, key, "key");
      var key_address, key_length = (libsodium._crypto_secretstream_xchacha20poly1305_keybytes()) | 0;
      if (key.length !== key_length) {
          _free_and_throw_type_error(address_pool, "invalid key length");
      }
      key_address = _to_allocated_buf_address(key);
      address_pool.push(key_address);

      // ---------- output state (secretstream_xchacha20poly1305_state)

      var state_address = new AllocatedBuf(52).address;

      if ((libsodium._crypto_secretstream_xchacha20poly1305_init_pull(state_address, header_address, key_address) | 0) === 0) {
      	var ret = state_address;
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_secretstream_xchacha20poly1305_init_push(key, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: key (buf)

      key = _any_to_Uint8Array(address_pool, key, "key");
      var key_address, key_length = (libsodium._crypto_secretstream_xchacha20poly1305_keybytes()) | 0;
      if (key.length !== key_length) {
          _free_and_throw_type_error(address_pool, "invalid key length");
      }
      key_address = _to_allocated_buf_address(key);
      address_pool.push(key_address);

      // ---------- output state (secretstream_xchacha20poly1305_state)

      var state_address = new AllocatedBuf(52).address;

      // ---------- output header (buf)

      var header_length = (libsodium._crypto_secretstream_xchacha20poly1305_headerbytes()) | 0,
          header = new AllocatedBuf(header_length),
          header_address = header.address;

      address_pool.push(header_address);

      if ((libsodium._crypto_secretstream_xchacha20poly1305_init_push(state_address, header_address, key_address) | 0) === 0) {
      	var ret = { state: state_address, header: _format_output(header, outputFormat) };
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_secretstream_xchacha20poly1305_keygen(outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- output output (buf)

      var output_length = (libsodium._crypto_secretstream_xchacha20poly1305_keybytes()) | 0,
          output = new AllocatedBuf(output_length),
          output_address = output.address;

      address_pool.push(output_address);

      libsodium._crypto_secretstream_xchacha20poly1305_keygen(output_address);
      var ret = (_format_output(output, outputFormat));
      _free_all(address_pool);
      return ret;
    }

    function crypto_secretstream_xchacha20poly1305_pull(state_address, cipher, ad, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: state_address (secretstream_xchacha20poly1305_state_address)

      _require_defined(address_pool, state_address, "state_address");

      // ---------- input: cipher (minsized_buf)

      cipher = _any_to_Uint8Array(address_pool, cipher, "cipher");
      var cipher_address, cipher_min_length = libsodium._crypto_secretstream_xchacha20poly1305_abytes(), cipher_length = cipher.length;
      if (cipher_length < cipher_min_length) {
              _free_and_throw_type_error(address_pool, "cipher is too short");
      }
      cipher_address = _to_allocated_buf_address(cipher);
      address_pool.push(cipher_address);

      // ---------- input: ad (unsized_buf_optional)

      var ad_address = null, ad_length = 0;
      if (ad != undefined) {
              ad = _any_to_Uint8Array(address_pool, ad, "ad");
              ad_address = _to_allocated_buf_address(ad);
              ad_length = ad.length;
              address_pool.push(ad_address);
      }


      // ---------- output message_chunk (buf)

      var message_chunk_length = (cipher_length - libsodium._crypto_secretstream_xchacha20poly1305_abytes()) | 0,
          message_chunk = new AllocatedBuf(message_chunk_length),
          message_chunk_address = message_chunk.address;

      address_pool.push(message_chunk_address);

      var ret = (function() { var tag_p = _malloc(1); address_pool.push(tag_p); return libsodium._crypto_secretstream_xchacha20poly1305_pull(state_address, message_chunk_address, 0, tag_p, cipher_address, cipher_length, 0, ad_address, ad_length) === 0 && { tag: libsodium.HEAPU8[tag_p], message: message_chunk } } )();
      var ret = (ret && {message: _format_output(ret.message, outputFormat), tag: ret.tag});
      _free_all(address_pool);
      return ret;
    }

    function crypto_secretstream_xchacha20poly1305_push(state_address, message_chunk, ad, tag, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: state_address (secretstream_xchacha20poly1305_state_address)

      _require_defined(address_pool, state_address, "state_address");

      // ---------- input: message_chunk (unsized_buf)

      message_chunk = _any_to_Uint8Array(address_pool, message_chunk, "message_chunk");
      var message_chunk_address = _to_allocated_buf_address(message_chunk),
          message_chunk_length = message_chunk.length;
      address_pool.push(message_chunk_address);

      // ---------- input: ad (unsized_buf_optional)

      var ad_address = null, ad_length = 0;
      if (ad != undefined) {
              ad = _any_to_Uint8Array(address_pool, ad, "ad");
              ad_address = _to_allocated_buf_address(ad);
              ad_length = ad.length;
              address_pool.push(ad_address);
      }


      // ---------- input: tag (uint)

      _require_defined(address_pool, tag, "tag");

      if (!(typeof tag === "number" && (tag | 0) === tag) || tag < 0) {
              _free_and_throw_type_error(address_pool, "tag must be an unsigned integer");
      }

      // ---------- output cipher (buf)

      var cipher_length = (message_chunk_length + libsodium._crypto_secretstream_xchacha20poly1305_abytes()) | 0,
          cipher = new AllocatedBuf(cipher_length),
          cipher_address = cipher.address;

      address_pool.push(cipher_address);

      if ((libsodium._crypto_secretstream_xchacha20poly1305_push(state_address, cipher_address, 0, message_chunk_address, message_chunk_length, 0, ad_address, ad_length, 0, tag) | 0) === 0) {
      	var ret = _format_output(cipher, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_secretstream_xchacha20poly1305_rekey(state_address, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: state_address (secretstream_xchacha20poly1305_state_address)

      _require_defined(address_pool, state_address, "state_address");

      libsodium._crypto_secretstream_xchacha20poly1305_rekey(state_address);
      var ret = (true);
      _free_all(address_pool);
      return ret;
    }

    function crypto_shorthash(message, key, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: message (unsized_buf)

      message = _any_to_Uint8Array(address_pool, message, "message");
      var message_address = _to_allocated_buf_address(message),
          message_length = message.length;
      address_pool.push(message_address);

      // ---------- input: key (buf)

      key = _any_to_Uint8Array(address_pool, key, "key");
      var key_address, key_length = (libsodium._crypto_shorthash_keybytes()) | 0;
      if (key.length !== key_length) {
          _free_and_throw_type_error(address_pool, "invalid key length");
      }
      key_address = _to_allocated_buf_address(key);
      address_pool.push(key_address);

      // ---------- output hash (buf)

      var hash_length = (libsodium._crypto_shorthash_bytes()) | 0,
          hash = new AllocatedBuf(hash_length),
          hash_address = hash.address;

      address_pool.push(hash_address);

      if ((libsodium._crypto_shorthash(hash_address, message_address, message_length, 0, key_address) | 0) === 0) {
      	var ret = _format_output(hash, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_shorthash_keygen(outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- output output (buf)

      var output_length = (libsodium._crypto_shorthash_keybytes()) | 0,
          output = new AllocatedBuf(output_length),
          output_address = output.address;

      address_pool.push(output_address);

      libsodium._crypto_shorthash_keygen(output_address);
      var ret = (_format_output(output, outputFormat));
      _free_all(address_pool);
      return ret;
    }

    function crypto_shorthash_siphashx24(message, key, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: message (unsized_buf)

      message = _any_to_Uint8Array(address_pool, message, "message");
      var message_address = _to_allocated_buf_address(message),
          message_length = message.length;
      address_pool.push(message_address);

      // ---------- input: key (buf)

      key = _any_to_Uint8Array(address_pool, key, "key");
      var key_address, key_length = (libsodium._crypto_shorthash_siphashx24_keybytes()) | 0;
      if (key.length !== key_length) {
          _free_and_throw_type_error(address_pool, "invalid key length");
      }
      key_address = _to_allocated_buf_address(key);
      address_pool.push(key_address);

      // ---------- output hash (buf)

      var hash_length = (libsodium._crypto_shorthash_siphashx24_bytes()) | 0,
          hash = new AllocatedBuf(hash_length),
          hash_address = hash.address;

      address_pool.push(hash_address);

      if ((libsodium._crypto_shorthash_siphashx24(hash_address, message_address, message_length, 0, key_address) | 0) === 0) {
      	var ret = _format_output(hash, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_sign(message, privateKey, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: message (unsized_buf)

      message = _any_to_Uint8Array(address_pool, message, "message");
      var message_address = _to_allocated_buf_address(message),
          message_length = message.length;
      address_pool.push(message_address);

      // ---------- input: privateKey (buf)

      privateKey = _any_to_Uint8Array(address_pool, privateKey, "privateKey");
      var privateKey_address, privateKey_length = (libsodium._crypto_sign_secretkeybytes()) | 0;
      if (privateKey.length !== privateKey_length) {
          _free_and_throw_type_error(address_pool, "invalid privateKey length");
      }
      privateKey_address = _to_allocated_buf_address(privateKey);
      address_pool.push(privateKey_address);

      // ---------- output signature (buf)

      var signature_length = (message.length + libsodium._crypto_sign_bytes()) | 0,
          signature = new AllocatedBuf(signature_length),
          signature_address = signature.address;

      address_pool.push(signature_address);

      if ((libsodium._crypto_sign(signature_address, null, message_address, message_length, 0, privateKey_address) | 0) === 0) {
      	var ret = _format_output(signature, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_sign_detached(message, privateKey, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: message (unsized_buf)

      message = _any_to_Uint8Array(address_pool, message, "message");
      var message_address = _to_allocated_buf_address(message),
          message_length = message.length;
      address_pool.push(message_address);

      // ---------- input: privateKey (buf)

      privateKey = _any_to_Uint8Array(address_pool, privateKey, "privateKey");
      var privateKey_address, privateKey_length = (libsodium._crypto_sign_secretkeybytes()) | 0;
      if (privateKey.length !== privateKey_length) {
          _free_and_throw_type_error(address_pool, "invalid privateKey length");
      }
      privateKey_address = _to_allocated_buf_address(privateKey);
      address_pool.push(privateKey_address);

      // ---------- output signature (buf)

      var signature_length = (libsodium._crypto_sign_bytes()) | 0,
          signature = new AllocatedBuf(signature_length),
          signature_address = signature.address;

      address_pool.push(signature_address);

      if ((libsodium._crypto_sign_detached(signature_address, null, message_address, message_length, 0, privateKey_address) | 0) === 0) {
      	var ret = _format_output(signature, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_sign_ed25519_pk_to_curve25519(edPk, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: edPk (buf)

      edPk = _any_to_Uint8Array(address_pool, edPk, "edPk");
      var edPk_address, edPk_length = (libsodium._crypto_sign_publickeybytes()) | 0;
      if (edPk.length !== edPk_length) {
          _free_and_throw_type_error(address_pool, "invalid edPk length");
      }
      edPk_address = _to_allocated_buf_address(edPk);
      address_pool.push(edPk_address);

      // ---------- output cPk (buf)

      var cPk_length = (libsodium._crypto_scalarmult_scalarbytes()) | 0,
          cPk = new AllocatedBuf(cPk_length),
          cPk_address = cPk.address;

      address_pool.push(cPk_address);

      if ((libsodium._crypto_sign_ed25519_pk_to_curve25519(cPk_address, edPk_address) | 0) === 0) {
      	var ret = _format_output(cPk, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid key");
    }

    function crypto_sign_ed25519_sk_to_curve25519(edSk, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: edSk (buf)

      edSk = _any_to_Uint8Array(address_pool, edSk, "edSk");
      var edSk_address, edSk_length = (libsodium._crypto_sign_secretkeybytes()) | 0;
      if (edSk.length !== edSk_length) {
          _free_and_throw_type_error(address_pool, "invalid edSk length");
      }
      edSk_address = _to_allocated_buf_address(edSk);
      address_pool.push(edSk_address);

      // ---------- output cSk (buf)

      var cSk_length = (libsodium._crypto_scalarmult_scalarbytes()) | 0,
          cSk = new AllocatedBuf(cSk_length),
          cSk_address = cSk.address;

      address_pool.push(cSk_address);

      if ((libsodium._crypto_sign_ed25519_sk_to_curve25519(cSk_address, edSk_address) | 0) === 0) {
      	var ret = _format_output(cSk, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid key");
    }

    function crypto_sign_ed25519_sk_to_pk(privateKey, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: privateKey (buf)

      privateKey = _any_to_Uint8Array(address_pool, privateKey, "privateKey");
      var privateKey_address, privateKey_length = (libsodium._crypto_sign_secretkeybytes()) | 0;
      if (privateKey.length !== privateKey_length) {
          _free_and_throw_type_error(address_pool, "invalid privateKey length");
      }
      privateKey_address = _to_allocated_buf_address(privateKey);
      address_pool.push(privateKey_address);

      // ---------- output publicKey (buf)

      var publicKey_length = (libsodium._crypto_sign_publickeybytes()) | 0,
          publicKey = new AllocatedBuf(publicKey_length),
          publicKey_address = publicKey.address;

      address_pool.push(publicKey_address);

      if ((libsodium._crypto_sign_ed25519_sk_to_pk(publicKey_address, privateKey_address) | 0) === 0) {
      	var ret = _format_output(publicKey, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid key");
    }

    function crypto_sign_ed25519_sk_to_seed(privateKey, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: privateKey (buf)

      privateKey = _any_to_Uint8Array(address_pool, privateKey, "privateKey");
      var privateKey_address, privateKey_length = (libsodium._crypto_sign_secretkeybytes()) | 0;
      if (privateKey.length !== privateKey_length) {
          _free_and_throw_type_error(address_pool, "invalid privateKey length");
      }
      privateKey_address = _to_allocated_buf_address(privateKey);
      address_pool.push(privateKey_address);

      // ---------- output seed (buf)

      var seed_length = (libsodium._crypto_sign_seedbytes()) | 0,
          seed = new AllocatedBuf(seed_length),
          seed_address = seed.address;

      address_pool.push(seed_address);

      if ((libsodium._crypto_sign_ed25519_sk_to_seed(seed_address, privateKey_address) | 0) === 0) {
      	var ret = _format_output(seed, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid key");
    }

    function crypto_sign_final_create(state_address, privateKey, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: state_address (sign_state_address)

      _require_defined(address_pool, state_address, "state_address");

      // ---------- input: privateKey (buf)

      privateKey = _any_to_Uint8Array(address_pool, privateKey, "privateKey");
      var privateKey_address, privateKey_length = (libsodium._crypto_sign_secretkeybytes()) | 0;
      if (privateKey.length !== privateKey_length) {
          _free_and_throw_type_error(address_pool, "invalid privateKey length");
      }
      privateKey_address = _to_allocated_buf_address(privateKey);
      address_pool.push(privateKey_address);

      // ---------- output signature (buf)

      var signature_length = (libsodium._crypto_sign_bytes()) | 0,
          signature = new AllocatedBuf(signature_length),
          signature_address = signature.address;

      address_pool.push(signature_address);

      if ((libsodium._crypto_sign_final_create(state_address, signature_address, null, privateKey_address) | 0) === 0) {
      	var ret = (libsodium._free(state_address), _format_output(signature, outputFormat));
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_sign_final_verify(state_address, signature, publicKey, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: state_address (sign_state_address)

      _require_defined(address_pool, state_address, "state_address");

      // ---------- input: signature (buf)

      signature = _any_to_Uint8Array(address_pool, signature, "signature");
      var signature_address, signature_length = (libsodium._crypto_sign_bytes()) | 0;
      if (signature.length !== signature_length) {
          _free_and_throw_type_error(address_pool, "invalid signature length");
      }
      signature_address = _to_allocated_buf_address(signature);
      address_pool.push(signature_address);

      // ---------- input: publicKey (buf)

      publicKey = _any_to_Uint8Array(address_pool, publicKey, "publicKey");
      var publicKey_address, publicKey_length = (libsodium._crypto_sign_publickeybytes()) | 0;
      if (publicKey.length !== publicKey_length) {
          _free_and_throw_type_error(address_pool, "invalid publicKey length");
      }
      publicKey_address = _to_allocated_buf_address(publicKey);
      address_pool.push(publicKey_address);

      var verificationResult = libsodium._crypto_sign_final_verify(state_address, signature_address, publicKey_address) | 0;
      var ret = (verificationResult === 0);
      _free_all(address_pool);
      return ret;
    }

    function crypto_sign_init(outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- output state (sign_state)

      var state_address = new AllocatedBuf(208).address;

      if ((libsodium._crypto_sign_init(state_address) | 0) === 0) {
      	var ret = state_address;
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "internal error");
    }

    function crypto_sign_keypair(outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- output publicKey (buf)

      var publicKey_length = (libsodium._crypto_sign_publickeybytes()) | 0,
          publicKey = new AllocatedBuf(publicKey_length),
          publicKey_address = publicKey.address;

      address_pool.push(publicKey_address);

      // ---------- output privateKey (buf)

      var privateKey_length = (libsodium._crypto_sign_secretkeybytes()) | 0,
          privateKey = new AllocatedBuf(privateKey_length),
          privateKey_address = privateKey.address;

      address_pool.push(privateKey_address);

      if ((libsodium._crypto_sign_keypair(publicKey_address, privateKey_address) | 0) === 0) {
      	var ret = {publicKey: _format_output(publicKey, outputFormat), privateKey: _format_output(privateKey, outputFormat), keyType: 'ed25519'};
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "internal error");
    }

    function crypto_sign_open(signedMessage, publicKey, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: signedMessage (minsized_buf)

      signedMessage = _any_to_Uint8Array(address_pool, signedMessage, "signedMessage");
      var signedMessage_address, signedMessage_min_length = libsodium._crypto_sign_bytes(), signedMessage_length = signedMessage.length;
      if (signedMessage_length < signedMessage_min_length) {
              _free_and_throw_type_error(address_pool, "signedMessage is too short");
      }
      signedMessage_address = _to_allocated_buf_address(signedMessage);
      address_pool.push(signedMessage_address);

      // ---------- input: publicKey (buf)

      publicKey = _any_to_Uint8Array(address_pool, publicKey, "publicKey");
      var publicKey_address, publicKey_length = (libsodium._crypto_sign_publickeybytes()) | 0;
      if (publicKey.length !== publicKey_length) {
          _free_and_throw_type_error(address_pool, "invalid publicKey length");
      }
      publicKey_address = _to_allocated_buf_address(publicKey);
      address_pool.push(publicKey_address);

      // ---------- output message (buf)

      var message_length = (signedMessage_length - libsodium._crypto_sign_bytes()) | 0,
          message = new AllocatedBuf(message_length),
          message_address = message.address;

      address_pool.push(message_address);

      if ((libsodium._crypto_sign_open(message_address, null, signedMessage_address, signedMessage_length, 0, publicKey_address) | 0) === 0) {
      	var ret = _format_output(message, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "incorrect signature for the given public key");
    }

    function crypto_sign_seed_keypair(seed, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: seed (buf)

      seed = _any_to_Uint8Array(address_pool, seed, "seed");
      var seed_address, seed_length = (libsodium._crypto_sign_seedbytes()) | 0;
      if (seed.length !== seed_length) {
          _free_and_throw_type_error(address_pool, "invalid seed length");
      }
      seed_address = _to_allocated_buf_address(seed);
      address_pool.push(seed_address);

      // ---------- output publicKey (buf)

      var publicKey_length = (libsodium._crypto_sign_publickeybytes()) | 0,
          publicKey = new AllocatedBuf(publicKey_length),
          publicKey_address = publicKey.address;

      address_pool.push(publicKey_address);

      // ---------- output privateKey (buf)

      var privateKey_length = (libsodium._crypto_sign_secretkeybytes()) | 0,
          privateKey = new AllocatedBuf(privateKey_length),
          privateKey_address = privateKey.address;

      address_pool.push(privateKey_address);

      if ((libsodium._crypto_sign_seed_keypair(publicKey_address, privateKey_address, seed_address) | 0) === 0) {
      	var ret = {publicKey: _format_output(publicKey, outputFormat), privateKey: _format_output(privateKey, outputFormat), keyType: 'ed25519'};
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_sign_update(state_address, message_chunk, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: state_address (sign_state_address)

      _require_defined(address_pool, state_address, "state_address");

      // ---------- input: message_chunk (unsized_buf)

      message_chunk = _any_to_Uint8Array(address_pool, message_chunk, "message_chunk");
      var message_chunk_address = _to_allocated_buf_address(message_chunk),
          message_chunk_length = message_chunk.length;
      address_pool.push(message_chunk_address);

      if (!((libsodium._crypto_sign_update(state_address, message_chunk_address, message_chunk_length, 0) | 0) === 0)) {
      	_free_and_throw_error(address_pool, "invalid usage");
      }
      _free_all(address_pool);
    }

    function crypto_sign_verify_detached(signature, message, publicKey) {
      var address_pool = [];

      // ---------- input: signature (buf)

      signature = _any_to_Uint8Array(address_pool, signature, "signature");
      var signature_address, signature_length = (libsodium._crypto_sign_bytes()) | 0;
      if (signature.length !== signature_length) {
          _free_and_throw_type_error(address_pool, "invalid signature length");
      }
      signature_address = _to_allocated_buf_address(signature);
      address_pool.push(signature_address);

      // ---------- input: message (unsized_buf)

      message = _any_to_Uint8Array(address_pool, message, "message");
      var message_address = _to_allocated_buf_address(message),
          message_length = message.length;
      address_pool.push(message_address);

      // ---------- input: publicKey (buf)

      publicKey = _any_to_Uint8Array(address_pool, publicKey, "publicKey");
      var publicKey_address, publicKey_length = (libsodium._crypto_sign_publickeybytes()) | 0;
      if (publicKey.length !== publicKey_length) {
          _free_and_throw_type_error(address_pool, "invalid publicKey length");
      }
      publicKey_address = _to_allocated_buf_address(publicKey);
      address_pool.push(publicKey_address);

      var verificationResult = libsodium._crypto_sign_verify_detached(signature_address, message_address, message_length, 0, publicKey_address) | 0;
      var ret = (verificationResult === 0);
      _free_all(address_pool);
      return ret;
    }

    function crypto_stream_chacha20(outLength, key, nonce, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: outLength (uint)

      _require_defined(address_pool, outLength, "outLength");

      if (!(typeof outLength === "number" && (outLength | 0) === outLength) || outLength < 0) {
              _free_and_throw_type_error(address_pool, "outLength must be an unsigned integer");
      }

      // ---------- input: key (buf)

      key = _any_to_Uint8Array(address_pool, key, "key");
      var key_address, key_length = (libsodium._crypto_stream_chacha20_keybytes()) | 0;
      if (key.length !== key_length) {
          _free_and_throw_type_error(address_pool, "invalid key length");
      }
      key_address = _to_allocated_buf_address(key);
      address_pool.push(key_address);

      // ---------- input: nonce (buf)

      nonce = _any_to_Uint8Array(address_pool, nonce, "nonce");
      var nonce_address, nonce_length = (libsodium._crypto_stream_chacha20_noncebytes()) | 0;
      if (nonce.length !== nonce_length) {
          _free_and_throw_type_error(address_pool, "invalid nonce length");
      }
      nonce_address = _to_allocated_buf_address(nonce);
      address_pool.push(nonce_address);

      // ---------- output out (buf)

      var out_length = (outLength) | 0,
          out = new AllocatedBuf(out_length),
          out_address = out.address;

      address_pool.push(out_address);

      libsodium._crypto_stream_chacha20(out_address, outLength, 0, nonce_address, key_address) | 0;
      var ret = (_format_output(out, outputFormat));
      _free_all(address_pool);
      return ret;
    }

    function crypto_stream_chacha20_ietf_xor(input_message, nonce, key, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: input_message (unsized_buf)

      input_message = _any_to_Uint8Array(address_pool, input_message, "input_message");
      var input_message_address = _to_allocated_buf_address(input_message),
          input_message_length = input_message.length;
      address_pool.push(input_message_address);

      // ---------- input: nonce (buf)

      nonce = _any_to_Uint8Array(address_pool, nonce, "nonce");
      var nonce_address, nonce_length = (libsodium._crypto_stream_chacha20_ietf_noncebytes()) | 0;
      if (nonce.length !== nonce_length) {
          _free_and_throw_type_error(address_pool, "invalid nonce length");
      }
      nonce_address = _to_allocated_buf_address(nonce);
      address_pool.push(nonce_address);

      // ---------- input: key (buf)

      key = _any_to_Uint8Array(address_pool, key, "key");
      var key_address, key_length = (libsodium._crypto_stream_chacha20_ietf_keybytes()) | 0;
      if (key.length !== key_length) {
          _free_and_throw_type_error(address_pool, "invalid key length");
      }
      key_address = _to_allocated_buf_address(key);
      address_pool.push(key_address);

      // ---------- output output_message (buf)

      var output_message_length = (input_message_length) | 0,
          output_message = new AllocatedBuf(output_message_length),
          output_message_address = output_message.address;

      address_pool.push(output_message_address);

      if ((libsodium._crypto_stream_chacha20_ietf_xor(output_message_address, input_message_address, input_message_length, 0, nonce_address, key_address)) === 0) {
      	var ret = _format_output(output_message, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_stream_chacha20_ietf_xor_ic(input_message, nonce, nonce_increment, key, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: input_message (unsized_buf)

      input_message = _any_to_Uint8Array(address_pool, input_message, "input_message");
      var input_message_address = _to_allocated_buf_address(input_message),
          input_message_length = input_message.length;
      address_pool.push(input_message_address);

      // ---------- input: nonce (buf)

      nonce = _any_to_Uint8Array(address_pool, nonce, "nonce");
      var nonce_address, nonce_length = (libsodium._crypto_stream_chacha20_ietf_noncebytes()) | 0;
      if (nonce.length !== nonce_length) {
          _free_and_throw_type_error(address_pool, "invalid nonce length");
      }
      nonce_address = _to_allocated_buf_address(nonce);
      address_pool.push(nonce_address);

      // ---------- input: nonce_increment (uint)

      _require_defined(address_pool, nonce_increment, "nonce_increment");

      if (!(typeof nonce_increment === "number" && (nonce_increment | 0) === nonce_increment) || nonce_increment < 0) {
              _free_and_throw_type_error(address_pool, "nonce_increment must be an unsigned integer");
      }

      // ---------- input: key (buf)

      key = _any_to_Uint8Array(address_pool, key, "key");
      var key_address, key_length = (libsodium._crypto_stream_chacha20_ietf_keybytes()) | 0;
      if (key.length !== key_length) {
          _free_and_throw_type_error(address_pool, "invalid key length");
      }
      key_address = _to_allocated_buf_address(key);
      address_pool.push(key_address);

      // ---------- output output_message (buf)

      var output_message_length = (input_message_length) | 0,
          output_message = new AllocatedBuf(output_message_length),
          output_message_address = output_message.address;

      address_pool.push(output_message_address);

      if ((libsodium._crypto_stream_chacha20_ietf_xor_ic(output_message_address, input_message_address, input_message_length, 0, nonce_address, nonce_increment, key_address)) === 0) {
      	var ret = _format_output(output_message, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_stream_chacha20_keygen(outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- output output (buf)

      var output_length = (libsodium._crypto_stream_chacha20_keybytes()) | 0,
          output = new AllocatedBuf(output_length),
          output_address = output.address;

      address_pool.push(output_address);

      libsodium._crypto_stream_chacha20_keygen(output_address);
      var ret = (_format_output(output, outputFormat));
      _free_all(address_pool);
      return ret;
    }

    function crypto_stream_chacha20_xor(input_message, nonce, key, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: input_message (unsized_buf)

      input_message = _any_to_Uint8Array(address_pool, input_message, "input_message");
      var input_message_address = _to_allocated_buf_address(input_message),
          input_message_length = input_message.length;
      address_pool.push(input_message_address);

      // ---------- input: nonce (buf)

      nonce = _any_to_Uint8Array(address_pool, nonce, "nonce");
      var nonce_address, nonce_length = (libsodium._crypto_stream_chacha20_noncebytes()) | 0;
      if (nonce.length !== nonce_length) {
          _free_and_throw_type_error(address_pool, "invalid nonce length");
      }
      nonce_address = _to_allocated_buf_address(nonce);
      address_pool.push(nonce_address);

      // ---------- input: key (buf)

      key = _any_to_Uint8Array(address_pool, key, "key");
      var key_address, key_length = (libsodium._crypto_stream_chacha20_keybytes()) | 0;
      if (key.length !== key_length) {
          _free_and_throw_type_error(address_pool, "invalid key length");
      }
      key_address = _to_allocated_buf_address(key);
      address_pool.push(key_address);

      // ---------- output output_message (buf)

      var output_message_length = (input_message_length) | 0,
          output_message = new AllocatedBuf(output_message_length),
          output_message_address = output_message.address;

      address_pool.push(output_message_address);

      if ((libsodium._crypto_stream_chacha20_xor(output_message_address, input_message_address, input_message_length, 0, nonce_address, key_address)) === 0) {
      	var ret = _format_output(output_message, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_stream_chacha20_xor_ic(input_message, nonce, nonce_increment, key, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: input_message (unsized_buf)

      input_message = _any_to_Uint8Array(address_pool, input_message, "input_message");
      var input_message_address = _to_allocated_buf_address(input_message),
          input_message_length = input_message.length;
      address_pool.push(input_message_address);

      // ---------- input: nonce (buf)

      nonce = _any_to_Uint8Array(address_pool, nonce, "nonce");
      var nonce_address, nonce_length = (libsodium._crypto_stream_chacha20_noncebytes()) | 0;
      if (nonce.length !== nonce_length) {
          _free_and_throw_type_error(address_pool, "invalid nonce length");
      }
      nonce_address = _to_allocated_buf_address(nonce);
      address_pool.push(nonce_address);

      // ---------- input: nonce_increment (uint)

      _require_defined(address_pool, nonce_increment, "nonce_increment");

      if (!(typeof nonce_increment === "number" && (nonce_increment | 0) === nonce_increment) || nonce_increment < 0) {
              _free_and_throw_type_error(address_pool, "nonce_increment must be an unsigned integer");
      }

      // ---------- input: key (buf)

      key = _any_to_Uint8Array(address_pool, key, "key");
      var key_address, key_length = (libsodium._crypto_stream_chacha20_keybytes()) | 0;
      if (key.length !== key_length) {
          _free_and_throw_type_error(address_pool, "invalid key length");
      }
      key_address = _to_allocated_buf_address(key);
      address_pool.push(key_address);

      // ---------- output output_message (buf)

      var output_message_length = (input_message_length) | 0,
          output_message = new AllocatedBuf(output_message_length),
          output_message_address = output_message.address;

      address_pool.push(output_message_address);

      if ((libsodium._crypto_stream_chacha20_xor_ic(output_message_address, input_message_address, input_message_length, 0, nonce_address, nonce_increment, 0, key_address)) === 0) {
      	var ret = _format_output(output_message, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_stream_keygen(outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- output output (buf)

      var output_length = (libsodium._crypto_stream_keybytes()) | 0,
          output = new AllocatedBuf(output_length),
          output_address = output.address;

      address_pool.push(output_address);

      libsodium._crypto_stream_keygen(output_address);
      var ret = (_format_output(output, outputFormat));
      _free_all(address_pool);
      return ret;
    }

    function crypto_stream_xchacha20_keygen(outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- output output (buf)

      var output_length = (libsodium._crypto_stream_xchacha20_keybytes()) | 0,
          output = new AllocatedBuf(output_length),
          output_address = output.address;

      address_pool.push(output_address);

      libsodium._crypto_stream_xchacha20_keygen(output_address);
      var ret = (_format_output(output, outputFormat));
      _free_all(address_pool);
      return ret;
    }

    function crypto_stream_xchacha20_xor(input_message, nonce, key, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: input_message (unsized_buf)

      input_message = _any_to_Uint8Array(address_pool, input_message, "input_message");
      var input_message_address = _to_allocated_buf_address(input_message),
          input_message_length = input_message.length;
      address_pool.push(input_message_address);

      // ---------- input: nonce (buf)

      nonce = _any_to_Uint8Array(address_pool, nonce, "nonce");
      var nonce_address, nonce_length = (libsodium._crypto_stream_xchacha20_noncebytes()) | 0;
      if (nonce.length !== nonce_length) {
          _free_and_throw_type_error(address_pool, "invalid nonce length");
      }
      nonce_address = _to_allocated_buf_address(nonce);
      address_pool.push(nonce_address);

      // ---------- input: key (buf)

      key = _any_to_Uint8Array(address_pool, key, "key");
      var key_address, key_length = (libsodium._crypto_stream_xchacha20_keybytes()) | 0;
      if (key.length !== key_length) {
          _free_and_throw_type_error(address_pool, "invalid key length");
      }
      key_address = _to_allocated_buf_address(key);
      address_pool.push(key_address);

      // ---------- output output_message (buf)

      var output_message_length = (input_message_length) | 0,
          output_message = new AllocatedBuf(output_message_length),
          output_message_address = output_message.address;

      address_pool.push(output_message_address);

      if ((libsodium._crypto_stream_xchacha20_xor(output_message_address, input_message_address, input_message_length, 0, nonce_address, key_address)) === 0) {
      	var ret = _format_output(output_message, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function crypto_stream_xchacha20_xor_ic(input_message, nonce, nonce_increment, key, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: input_message (unsized_buf)

      input_message = _any_to_Uint8Array(address_pool, input_message, "input_message");
      var input_message_address = _to_allocated_buf_address(input_message),
          input_message_length = input_message.length;
      address_pool.push(input_message_address);

      // ---------- input: nonce (buf)

      nonce = _any_to_Uint8Array(address_pool, nonce, "nonce");
      var nonce_address, nonce_length = (libsodium._crypto_stream_xchacha20_noncebytes()) | 0;
      if (nonce.length !== nonce_length) {
          _free_and_throw_type_error(address_pool, "invalid nonce length");
      }
      nonce_address = _to_allocated_buf_address(nonce);
      address_pool.push(nonce_address);

      // ---------- input: nonce_increment (uint)

      _require_defined(address_pool, nonce_increment, "nonce_increment");

      if (!(typeof nonce_increment === "number" && (nonce_increment | 0) === nonce_increment) || nonce_increment < 0) {
              _free_and_throw_type_error(address_pool, "nonce_increment must be an unsigned integer");
      }

      // ---------- input: key (buf)

      key = _any_to_Uint8Array(address_pool, key, "key");
      var key_address, key_length = (libsodium._crypto_stream_xchacha20_keybytes()) | 0;
      if (key.length !== key_length) {
          _free_and_throw_type_error(address_pool, "invalid key length");
      }
      key_address = _to_allocated_buf_address(key);
      address_pool.push(key_address);

      // ---------- output output_message (buf)

      var output_message_length = (input_message_length) | 0,
          output_message = new AllocatedBuf(output_message_length),
          output_message_address = output_message.address;

      address_pool.push(output_message_address);

      if ((libsodium._crypto_stream_xchacha20_xor_ic(output_message_address, input_message_address, input_message_length, 0, nonce_address, nonce_increment, 0, key_address)) === 0) {
      	var ret = _format_output(output_message, outputFormat);
      	_free_all(address_pool);
      	return ret;
      }
      _free_and_throw_error(address_pool, "invalid usage");
    }

    function randombytes_buf(length, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: length (uint)

      _require_defined(address_pool, length, "length");

      if (!(typeof length === "number" && (length | 0) === length) || length < 0) {
              _free_and_throw_type_error(address_pool, "length must be an unsigned integer");
      }

      // ---------- output output (buf)

      var output_length = (length) | 0,
          output = new AllocatedBuf(output_length),
          output_address = output.address;

      address_pool.push(output_address);

      libsodium._randombytes_buf(output_address, length);
      var ret = (_format_output(output, outputFormat));
      _free_all(address_pool);
      return ret;
    }

    function randombytes_buf_deterministic(length, seed, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: length (uint)

      _require_defined(address_pool, length, "length");

      if (!(typeof length === "number" && (length | 0) === length) || length < 0) {
              _free_and_throw_type_error(address_pool, "length must be an unsigned integer");
      }

      // ---------- input: seed (buf)

      seed = _any_to_Uint8Array(address_pool, seed, "seed");
      var seed_address, seed_length = (libsodium._randombytes_seedbytes()) | 0;
      if (seed.length !== seed_length) {
          _free_and_throw_type_error(address_pool, "invalid seed length");
      }
      seed_address = _to_allocated_buf_address(seed);
      address_pool.push(seed_address);

      // ---------- output output (buf)

      var output_length = (length) | 0,
          output = new AllocatedBuf(output_length),
          output_address = output.address;

      address_pool.push(output_address);

      libsodium._randombytes_buf_deterministic(output_address, length, seed_address);
      var ret = (_format_output(output, outputFormat));
      _free_all(address_pool);
      return ret;
    }

    function randombytes_close(outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      libsodium._randombytes_close();
    }

    function randombytes_random(outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      var random_value = libsodium._randombytes_random() >>> 0;
      var ret = (random_value);
      _free_all(address_pool);
      return ret;
    }

    function randombytes_set_implementation(implementation, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: implementation (randombytes_implementation)

      var implementation_address = libsodium._malloc(6 * 4);
      for (var i = 0; i < 6; i++) {
              libsodium.setValue(implementation_address + i * 4,
                  libsodium.Runtime.addFunction(implementation
                  [["implementation_name", "random", "stir", "uniform", "buf", "close"][i]]),
                  "i32");
      }

      if (!((libsodium._randombytes_set_implementation(implementation_address) | 0) === 0)) {
      	_free_and_throw_error(address_pool, "unsupported implementation");
      }
      _free_all(address_pool);
    }

    function randombytes_stir(outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      libsodium._randombytes_stir();
    }

    function randombytes_uniform(upper_bound, outputFormat) {
      var address_pool = [];

      _check_output_format(outputFormat);
      // ---------- input: upper_bound (uint)

      _require_defined(address_pool, upper_bound, "upper_bound");

      if (!(typeof upper_bound === "number" && (upper_bound | 0) === upper_bound) || upper_bound < 0) {
              _free_and_throw_type_error(address_pool, "upper_bound must be an unsigned integer");
      }

      var random_value = libsodium._randombytes_uniform(upper_bound) >>> 0;
      var ret = (random_value);
      _free_all(address_pool);
      return ret;
    }

    function sodium_version_string() {
      var address_pool = [];

      var version = libsodium._sodium_version_string();
      var ret = (libsodium.UTF8ToString(version));
      _free_all(address_pool);
      return ret;
    }



    exports.add = add;
    exports.base64_variants = base64_variants;
    exports.compare = compare;
    exports.from_base64 = from_base64;
    exports.from_hex = from_hex;
    exports.from_string = from_string;
    exports.increment = increment;
    exports.is_zero = is_zero;
    exports.libsodium = libsodiumModule;
    exports.memcmp = memcmp;
    exports.memzero = memzero;
    exports.output_formats = output_formats;
    exports.pad = pad;
    exports.unpad = unpad;
    exports.ready = ready;
    exports.symbols = symbols;
    exports.to_base64 = to_base64;
    exports.to_hex = to_hex;
    exports.to_string = to_string;
    //exports.someArray = someArray;

    return exports;
  }

  var _onload =
    typeof root.sodium === "object" && typeof root.sodium.onload === "function" ?
    root.sodium.onload :
    null;
  if (typeof define === "function" && define.amd) {
    define(["exports", "libsodium-sumo"], expose_wrappers);
  } else if (
    typeof exports === "object" &&
    typeof exports.nodeName !== "string"
  ) {
    expose_wrappers(exports, require("libsodium-sumo"));
  } else {
    root.sodium = expose_wrappers((root.commonJsStrict = {}), root.libsodium);
  }
  _onload && root.sodium.ready.then(function () {
    _onload(root.sodium)
  });
})(this);
